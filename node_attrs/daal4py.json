{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/519144655.json"
   },
   "data": {
    "bot_rerun": 1605103710.4232109,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519173678.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535940131.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539465113.json"
   },
   "data": {
    "bot_rerun": 1608903432.4176497,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545594191.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "daal4py",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "<strong>LEGAL NOTICE: Use of this software package is subject to the\nsoftware license agreement (as set forth above, in the license section of\nthe installed Conda package and/or the README file) and all notices,\ndisclaimers or license terms for third party or open source software\nincluded in or with the software.</strong>\n<br/><br/>\nEULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0</a>\n<br/><br/>\n",
   "dev_url": "https://github.com/IntelPython/daal4py",
   "doc_url": "https://intelpython.github.io/daal4py",
   "home": "https://intelpython.github.io/daal4py/",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt"
   ],
   "summary": "A convenient Python API to Intel (R) oneAPI Data Analytics Library"
  },
  "build": {
   "include_recipe": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu"
   ]
  },
  "package": {
   "name": "daal4py",
   "version": "2020.3.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools"
   ],
   "run": [
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5007a706b40242f6f31d5a3bea5a2f38553f1325416df80e38e9c61ac974acf4",
   "url": "https://github.com/IntelPython/daal4py/archive/2020.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py"
   ],
   "requires": [
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich"
   ],
   "source_files": [
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang-tools",
    "cython",
    "daal-devel",
    "jinja2",
    "mpich",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "daal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "lightgbm",
    "mpich",
    "pandas",
    "pytest",
    "scikit-learn",
    "scipy",
    "xgboost"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "<strong>LEGAL NOTICE: Use of this software package is subject to the\nsoftware license agreement (as set forth above, in the license section of\nthe installed Conda package and/or the README file) and all notices,\ndisclaimers or license terms for third party or open source software\nincluded in or with the software.</strong>\n<br/><br/>\nEULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0</a>\n<br/><br/>\n",
   "dev_url": "https://github.com/IntelPython/daal4py",
   "doc_url": "https://intelpython.github.io/daal4py",
   "home": "https://intelpython.github.io/daal4py/",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt"
   ],
   "summary": "A convenient Python API to Intel (R) oneAPI Data Analytics Library"
  },
  "build": {
   "include_recipe": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu"
   ]
  },
  "package": {
   "name": "daal4py",
   "version": "2020.3.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools"
   ],
   "run": [
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5007a706b40242f6f31d5a3bea5a2f38553f1325416df80e38e9c61ac974acf4",
   "url": "https://github.com/IntelPython/daal4py/archive/2020.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py"
   ],
   "requires": [
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "xgboost",
    "lightgbm",
    "pytest",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest"
   ],
   "source_files": [
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py"
   ]
  }
 },
 "name": "daal4py",
 "new_version": "2021.1",
 "new_version_attempts": {
  "2020.3": 1,
  "2021.1": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "daal4py"
  ]
 },
 "pinning_version": "2020.12.23.19.30.24",
 "raw_meta_yaml": "{% set version = \"2020.3.1\" %}\n{% set buildnumber = 0 %}\n\npackage:\n  name: daal4py\n  version: {{ version }}\n\nsource:\n  url: https://github.com/IntelPython/daal4py/archive/{{ version }}.tar.gz\n  sha256: 5007a706b40242f6f31d5a3bea5a2f38553f1325416df80e38e9c61ac974acf4\nbuild:\n  skip: true  # [osx]\n  number: {{ buildnumber }}\n  include_recipe: false\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n  host:\n    - python\n    - setuptools\n    - numpy\n    - daal-devel >=2020.3\n    - cython\n    - jinja2\n    - mpich      # [not win]\n    - clang-tools\n  run:\n    - python\n    - daal >=2020.3\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  requires:\n    - pandas\n    - scipy\n    - scikit-learn\n    - xgboost      # [not win and py<=38]\n    - lightgbm      # [not win]\n    - pytest\n    - mpich      # [not win]\n  source_files:\n    - examples\n    - tests\n    - daal4py\n  commands:\n    - python -c \"import daal4py\"\n    - mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py      # [not win]\n    - python -m unittest discover -v -s tests -p test*.py\n    - pytest --pyargs daal4py/sklearn/\n    - python examples/run_examples.py\n    - python -m daal4py examples/sycl/sklearn_sycl.py\n\nabout:\n  home: https://intelpython.github.io/daal4py/\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - doc/third-party-programs.txt\n  summary: A convenient Python API to Intel (R) oneAPI Data Analytics Library\n  description: |\n    <strong>LEGAL NOTICE: Use of this software package is subject to the\n    software license agreement (as set forth above, in the license section of\n    the installed Conda package and/or the README file) and all notices,\n    disclaimers or license terms for third party or open source software\n    included in or with the software.</strong>\n    <br/><br/>\n    EULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0</a>\n    <br/><br/>\n  dev_url: https://github.com/IntelPython/daal4py\n  doc_url: https://intelpython.github.io/daal4py\n\nextra:\n  recipe-maintainers:\n        # GitHub IDs for maintainers of the recipe.\n    - napetrov\n    - PetrovKP\n    - SmirnovEgorRu\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "clang-tools",
   "cxx_compiler_stub",
   "cython",
   "daal",
   "daal-devel",
   "jinja2",
   "mpich",
   "numpy",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang-tools",
    "cxx_compiler_stub",
    "cython",
    "daal-devel",
    "jinja2",
    "mpich",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "daal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "lightgbm",
    "mpich",
    "pandas",
    "pytest",
    "scikit-learn",
    "scipy",
    "xgboost"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang-tools",
    "cython",
    "daal-devel >=2020.3",
    "jinja2",
    "mpich",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "daal >=2020.3",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "lightgbm",
    "mpich",
    "pandas",
    "pytest",
    "scikit-learn",
    "scipy",
    "xgboost"
   ]
  }
 },
 "url": "https://github.com/IntelPython/daal4py/archive/2020.3.1.tar.gz",
 "version": "2020.3.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "<strong>LEGAL NOTICE: Use of this software package is subject to the\nsoftware license agreement (as set forth above, in the license section of\nthe installed Conda package and/or the README file) and all notices,\ndisclaimers or license terms for third party or open source software\nincluded in or with the software.</strong>\n<br/><br/>\nEULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0</a>\n<br/><br/>\n",
   "dev_url": "https://github.com/IntelPython/daal4py",
   "doc_url": "https://intelpython.github.io/daal4py",
   "home": "https://intelpython.github.io/daal4py/",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt",
    "LICENSE",
    "doc/third-party-programs.txt"
   ],
   "summary": "A convenient Python API to Intel (R) oneAPI Data Analytics Library"
  },
  "build": {
   "include_recipe": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu"
   ]
  },
  "package": {
   "name": "daal4py",
   "version": "2020.3.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.3",
    "cython",
    "jinja2",
    "clang-tools"
   ],
   "run": [
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy",
    "python",
    "daal >=2020.3",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5007a706b40242f6f31d5a3bea5a2f38553f1325416df80e38e9c61ac974acf4",
   "url": "https://github.com/IntelPython/daal4py/archive/2020.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "pytest --pyargs daal4py/sklearn/",
    "python examples/run_examples.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py"
   ],
   "requires": [
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest",
    "pandas",
    "scipy",
    "scikit-learn",
    "pytest"
   ],
   "source_files": [
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py",
    "examples",
    "tests",
    "daal4py"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang-tools",
    "cython",
    "daal-devel",
    "jinja2",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "daal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pandas",
    "pytest",
    "scikit-learn",
    "scipy"
   ]
  }
 }
}