{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/374341785.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl26"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/834d85a4-553e-4821-8b4b-6e9ecb39e0f2.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/568667199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574529242.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/592177259.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/720044903.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl27"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/887113559.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gstreamer120"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1125629208.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gstlal-calibration",
 "hash_type": "sha256",
 "name": "gstlal-calibration",
 "new_version": "1.4.0",
 "new_version_attempts": {
  "1.3.0": 1,
  "1.3.1": 1,
  "1.4.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gstlal-calibration"
  ]
 },
 "pinning_version": "2022.11.17.07.48.06",
 "pre_pr_migrator_attempts": {
  "glib2646": 1
 },
 "pre_pr_migrator_status": {
  "glib2646": "not solvable: master: ['No `.ci_support/*.yaml` files found! This can happen when a rerender results in no builds for a recipe (e.g., a recipe is python 2.7 only). This attempted migration is being reported as not solvable.']"
 },
 "raw_meta_yaml": "{% set name = \"gstlal-calibration\" %}\n{% set version = \"1.4.0\" %}\n\n# dependencies\n{% set gstlal_version = \"1.10.0\" %}\n{% set gstlal_ugly_version = \"1.10.0\" %}\n{% set lal_version = \"7.2.4\" %}\n{% set lalmetaio_version = \"3.0.2\" %}\n{% set ligo_segments_version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: http://software.ligo.org/lscsoft/source/{{ name }}-{{ version }}.tar.gz\n  sha256: e24a9a0eca90dc7f08ca6918358229d6a46ddec8d42aea8b7bae384ebbb1a25b\n  patches:\n    # patch fix for https://git.ligo.org/Calibration/gstlal-calibration/-/issues/18\n    - missing-links.patch\n    # hack around https://git.ligo.org/Calibration/gstlal-calibration/-/issues/13\n    - firtools-int_max_str_digits.patch\n\nbuild:\n  error_overlinking: true\n  ignore_run_exports:\n    - numpy\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make  # [unix]\n    - pkg-config  # [unix]\n  host:\n    - fftw\n    - gsl\n    - gst-plugins-base\n    - gstreamer\n    - gstlal >={{ gstlal_version }}\n    - libglib\n    - liblal >={{ lal_version }}\n    - numpy\n    - python\n  run:\n    - fftw\n    - gsl\n    - gst-plugins-base\n    - gstreamer\n    - gstlal >={{ gstlal_version }}\n    - gstlal-ugly >={{ gstlal_ugly_version }}\n    - kafka-python\n    - libglib\n    - liblal >={{ lal_version }}\n    - ligo-scald\n    - ligo-segments >={{ ligo_segments_version }}\n    - matplotlib-base\n    - {{ pin_compatible('numpy') }}\n    - python\n    - python-lal\n    - scipy\n  run_constrained:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\ntest:\n  imports:\n    - gstlal.calibhandler\n    - gstlal.calibration_parts\n  commands:\n    # check plugins\n    - gst-inspect-1.0 cmath\n    - gst-inspect-1.0 gstlalcalibration\n    - gst-inspect-1.0 splitcounter\n    # check executables\n    - gstlal_calibration_aggregator --help\n    - gstlal_compute_strain --help\n\nabout:\n  home: https://lscsoft.docs.ligo.org/gstlal/\n  dev_url: https://git.ligo.org/lscsoft/gstlal/\n  doc_url: https://lscsoft.docs.ligo.org/gstlal/\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: GStreamer for GW data analysis (calibration parts)\n  description: |\n    This package contains the plugins and shared libraries required to\n    run the gstlal calibration software.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - myNameIsPatrick\n",
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "url": "http://software.ligo.org/lscsoft/source/gstlal-calibration-1.4.0.tar.gz",
 "version": "1.4.0"
}