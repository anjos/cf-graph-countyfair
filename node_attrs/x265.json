{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/764546002.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764565251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "x265",
 "hash_type": "sha256",
 "name": "x265",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "x265"
  ]
 },
 "pinning_version": "2021.10.22.20.56.07",
 "raw_meta_yaml": "{% set version = \"3.5\" %}\n\npackage:\n  name: x265\n  version: {{ version }}\n\nsource:\n  url: https://bitbucket.org/multicoreware/x265_git/downloads/x265_{{ version }}.tar.gz\n  sha256: e70a3335cacacbba0b3a20ec6fecd6783932288ebc8163ad74bcc9606477cae8\n\nbuild:\n  number: 3\n  run_exports:\n    # 2022/03/01 hmaarrfk\n    # Seems like the SO name changes every minor version\n    # https://abi-laboratory.pro/index.php?view=timeline&l=x265\n    - {{ pin_subpackage('x265', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - nasm\n    - make  # [not win]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libx265${SHLIB_EXT}  # [unix]\n    - test ! -f ${PREFIX}/lib/libx265.a          # [unix]\n    - test -f ${PREFIX}/lib/pkgconfig/x265.pc    # [unix]\n    - test -f ${PREFIX}/include/x265.h           # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\x265.h exit 1         # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\pkgconfig\\x265.pc exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\libx265.lib exit 1        # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\libx265.dll exit 1        # [win]\n    # Make sure not to install static libraries\n    - if not exist %LIBRARY_PREFIX%\\lib\\x265-static.lib exit 1        # [win]\n    - x265 --version                                 # [build_platform == target_platform]\n    - x265 --version 2>&1 | grep \"8bit\"              # [build_platform == target_platform and unix]\n    - x265 --version 2>&1 | grep \"8bit+10bit+12bit\"  # [build_platform == target_platform and (x86_64 or arm64) and unix]\n\nabout:\n  home: https://www.x265.org/\n  license: GPL-2.0-or-later\n  license_file: COPYING\n  summary: 'Open Source H.265/HEVC video encoder'\n  description: |\n    x265 is a H.265 / HEVC video encoder application library, designed to encode\n    video or images into an H.265 / HEVC encoded bitstream.\n  dev_url: https://bitbucket.org/multicoreware/x265_git\n  doc_url: https://x265.readthedocs.io/\n\nextra:\n  recipe-maintainers:\n    - matthiasdiener\n",
 "smithy_version": "3.14.0",
 "strong_exports": false,
 "url": "https://bitbucket.org/multicoreware/x265_git/downloads/x265_3.5.tar.gz",
 "version": "3.5"
}