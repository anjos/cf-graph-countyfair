{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/968706939.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000310836.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1174120954.json"
   },
   "data": {
    "bot_rerun": 1671892928.53522,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/76cae44c-2d96-4fd2-a32f-569a1055823a.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch113"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "openmmtorchplugin",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is a plugin for OpenMM that allows neural networks to\naccess force and energy. It is implemented with PyTorch.\n",
   "dev_url": "https://github.com/SCMusson/openmmtorchplugin",
   "doc_url": "https://github.com/SCMusson/openmmtorchplugin",
   "home": "https://github.com/SCMusson/openmmtorchplugin",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE",
   "summary": "OpenMM plugin to get forces for neural networks"
  },
  "build": {
   "number": "2",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.10/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib"
   ],
   "run_exports": [
    "openmmtorchplugin",
    "openmmtorchplugin",
    "openmmtorchplugin"
   ],
   "string": "cuda112py39h1234567_2"
  },
  "extra": {
   "recipe-maintainers": [
    "SCMusson",
    "SCMusson",
    "SCMusson"
   ]
  },
  "package": {
   "name": "openmmtorchplugin",
   "version": "1.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "swig 4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "swig 4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "swig 4.0.2"
   ],
   "host": [
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*"
   ],
   "run": [
    "openmm",
    "python",
    "openmm",
    "python",
    "openmm",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*"
   ]
  },
  "source": {
   "sha256": "b51f8dda0b4b6f25dd8584b771bc1251c07779f61a31ee897b8a9f5dc0a690e2",
   "url": "https://github.com/SCMusson/openmmtorchplugin/archive/v1.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "torchexposedintegratorplugin",
    "torchexposedintegratorplugin",
    "torchexposedintegratorplugin"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openmm",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "openmm",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is a plugin for OpenMM that allows neural networks to\naccess force and energy. It is implemented with PyTorch.\n",
   "dev_url": "https://github.com/SCMusson/openmmtorchplugin",
   "doc_url": "https://github.com/SCMusson/openmmtorchplugin",
   "home": "https://github.com/SCMusson/openmmtorchplugin",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE",
   "summary": "OpenMM plugin to get forces for neural networks"
  },
  "build": {
   "number": "2",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.10/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib"
   ],
   "run_exports": [
    "openmmtorchplugin",
    "openmmtorchplugin",
    "openmmtorchplugin"
   ],
   "string": "cuda112py39h1234567_2"
  },
  "extra": {
   "recipe-maintainers": [
    "SCMusson",
    "SCMusson",
    "SCMusson"
   ]
  },
  "package": {
   "name": "openmmtorchplugin",
   "version": "1.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "swig 4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "swig 4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "swig 4.0.2"
   ],
   "host": [
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*"
   ],
   "run": [
    "openmm",
    "python",
    "openmm",
    "python",
    "openmm",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*"
   ]
  },
  "source": {
   "sha256": "b51f8dda0b4b6f25dd8584b771bc1251c07779f61a31ee897b8a9f5dc0a690e2",
   "url": "https://github.com/SCMusson/openmmtorchplugin/archive/v1.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "torchexposedintegratorplugin",
    "torchexposedintegratorplugin",
    "torchexposedintegratorplugin"
   ]
  }
 },
 "name": "openmmtorchplugin",
 "new_version": "1.1.0",
 "new_version_attempts": {
  "1.1.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmmtorchplugin"
  ]
 },
 "pinning_version": "2022.12.27.19.59.10",
 "pre_pr_migrator_attempts": {
  "python311": 1
 },
 "pre_pr_migrator_status": {
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3670077399\">bot CI job</a>): main: ['linux_64_c_compiler_version10cuda_compiler_version11.1cxx_compiler_version10python3.11.____cpython: Encountered problems while solving:\\n  - package openmm-7.5.0-py36ha20423d_4 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.2cxx_compiler_version10python3.11.____cpython: Encountered problems while solving:\\n  - package openmm-7.5.0-py36ha20423d_4 requires cudatoolkit 9.2|9.2.*, but none of the providers can be installed\\n', 'linux_64_c_compiler_version9cuda_compiler_version11.0cxx_compiler_version9python3.11.____cpython: Encountered problems while solving:\\n  - package openmm-7.5.0-py36ha20423d_4 requires cudatoolkit 9.2|9.2.*, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.1.0\" %}\n\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: openmmtorchplugin\n  version: {{ version }}\n\nsource:\n  url: https://github.com/SCMusson/openmmtorchplugin/archive/v{{ version }}.tar.gz\n  sha256: b51f8dda0b4b6f25dd8584b771bc1251c07779f61a31ee897b8a9f5dc0a690e2\n\nbuild:\n  number: 2\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}   # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                                 # [cuda_compiler_version == \"None\"]\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [cuda_compiler_version in (undefined, \"None\", \"10.2\", \"11.0\", \"11.1\")]\n  skip: true  # [not unix]\n  # Set rpaths we need to link against libtorch.so, but it is located in site-packages\n  rpaths:\n    - lib/\n    - {{ SP_DIR }}/torch/lib\n  run_exports:\n    - {{ pin_subpackage( \"openmmtorchplugin\" ) }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - cmake\n    - make\n    - swig 4.0.2\n  host:\n    - openmm\n    - pip\n    - python\n    # First for global version pin, second for build variant\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n  run:\n    - {{ pin_compatible('openmm', max_pin='x.x') }}\n    - python\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchexposedintegratorplugin\n#  commands:\n#    - test -f $PREFIX/include/TorchIntegratorKernels.h  # [unix]\nabout:\n  home: https://github.com/SCMusson/openmmtorchplugin\n  license: GPL-3.0-only\n  license_file: LICENSE\n  summary: OpenMM plugin to get forces for neural networks\n  description: |\n    This is a plugin for OpenMM that allows neural networks to \n    access force and energy. It is implemented with PyTorch.\n  doc_url: https://github.com/SCMusson/openmmtorchplugin\n  dev_url: https://github.com/SCMusson/openmmtorchplugin\n\nextra:\n  recipe-maintainers:\n    - SCMusson\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "make",
   "openmm",
   "pip",
   "python",
   "pytorch",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "openmm",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "openmm",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "swig 4.0.2"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openmm",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "openmm",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/SCMusson/openmmtorchplugin/archive/v1.1.0.tar.gz",
 "version": "1.1.0"
}