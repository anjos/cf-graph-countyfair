{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/215385744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602902175.json"
   },
   "data": {
    "bot_rerun": 1617961862.4356713,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/612327263.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613999379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645366744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/696540416.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785278158.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "fltk",
 "hash_type": "md5",
 "name": "fltk",
 "new_version": "1.3.8",
 "new_version_attempts": {
  "1.3.6": 1,
  "1.3.7": 1,
  "1.3.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fltk"
  ]
 },
 "pinning_version": "2021.11.20.19.20.32",
 "raw_meta_yaml": "# Jinja variables help maintain the recipe as you'll update the version only here.\n{% set name = \"fltk\" %}\n{% set version = \"1.3.8\" %}\n{% set md5 = \"ed08b7985779213dc6190dc7b75d01a2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}-source.tar.gz\n  url: http://fltk.org/pub/{{ name }}/{{ version }}/{{ name }}-{{ version }}-source.tar.bz2\n  md5: {{ md5 }}\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(\"fltk\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake  # [win]\n    - make   # [unix]\n    - {{ cdt('mesa-libGL-devel') }}  # [linux]\n    - {{ cdt('libselinux') }}        # [linux]\n    - {{ cdt('libxcb') }}            # [linux]\n    - {{ cdt('libxdamage') }}        # [linux]\n    - {{ cdt('libxfixes') }}         # [linux]\n    - {{ cdt('libxxf86vm') }}        # [linux]\n    - {{ cdt('libxext') }}           # [linux]\n    - {{ cdt('libxau') }}            # [linux]\n    - {{ cdt('mesa-libGL-devel') }}  # [linux]\n    - {{ cdt('expat') }}             # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - freetype                       # [linux]\n    - gnuconfig                      # [unix]\n\n  host:\n    - zlib\n    - jpeg\n    - libpng\n    - xorg-libxext\n    - xorg-libxdmcp\n    - xorg-libxau\n    - libxcb\n    - xorg-libxfixes\n    - xorg-libxrender\n    - xorg-libx11\n    - xorg-libice\n    - xorg-libsm\n    - libglu    # [linux]\n    - freetype  # [linux]\n\n  run:\n    - zlib\n    - jpeg\n    - libpng\n    - xorg-libxext\n    - xorg-libxdmcp\n    - xorg-libxau\n    - libxcb\n    - xorg-libxfixes\n    - xorg-libxrender\n    - xorg-libx11\n    - xorg-libice\n    - xorg-libsm\n    - libglu    # [linux]\n    - freetype  # [linux]\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libfltk.a  # [unix]\n    - test -f $PREFIX/lib/libfltk${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/lib/libfltk_gl.a  # [unix]\n    - if not exist %LIBRARY_LIB%\\\\fltk.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\fltk_forms.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\fltk_images.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\fltk_gl.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\libfltk.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\libfltk.dll exit 1  # [win]\n\nabout:\n  home: http://www.fltk.org/\n  license: LGPL-2.0\n  license_family: LGPL\n  license_file: COPYING\n  summary: The Fast Light Tool Kit (\"FLTK\", pronounced \"fulltick\") is a cross-platform C++ GUI toolkit\n\n  description: |\n    FLTK (pronounced \"fulltick\") is a cross-platform C++ GUI toolkit for\n    UNIX/Linux (X11), Microsoft Windows, and MacOS X. FLTK provides\n    modern GUI functionality without the bloat and supports 3D graphics via\n    OpenGL and its built-in GLUT emulation.\n\n    FLTK is designed to be small and modular enough to be statically\n    linked, but works fine as a shared library. FLTK also includes an\n    excellent UI builder called FLUID that can be used to create\n    applications in minutes.\n  doc_url: http://www.fltk.org/documentation.php\n  dev_url: http://www.fltk.org/roadmap.php\n\nextra:\n  recipe-maintainers:\n    - guyer\n    - matthiasdiener\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "http://fltk.org/pub/fltk/1.3.8/fltk-1.3.8-source.tar.bz2",
 "version": "1.3.8"
}