{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "atomicfile",
 "hash_type": "sha256",
 "name": "atomicfile",
 "new_version": "1.0.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "atomicfile"
  ]
 },
 "raw_meta_yaml": "{% set name = \"atomicfile\" %}\n{% set version = \"1.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 190502c5c0b1145f5c294e0be07a9f029d8ea728a0d0806e0ca466467208763e\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - atomicfile\n\nabout:\n  home: https://github.com/sashka/atomicfile-py\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.rst\n  summary: 'Writeable file object that atomically updates a file.'\n\n  description: |\n    Writeable file object that atomically updates a file. All writes will \n    go to a temporary file. Call close() explicitly when you are done \n    writing, and AtomicFile will rename the temporary copy to the original \n    name, making the changes visible. If the object is destroyed without \n    being closed, all your writes are discarded. AtomicFile is friendly \n    to with statement.\n  doc_url: https://github.com/sashka/atomicfile-py\n  dev_url: https://github.com/sashka/atomicfile-py\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/atomicfile/atomicfile-1.0.1.tar.gz",
 "version": "1.0.1"
}