{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222670731.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/303852071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/301769808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336102818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345494434.json"
   },
   "data": {
    "bot_rerun": 1603216844.7145147,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/353338207.json"
   },
   "data": {
    "bot_rerun": 1603216844.715195,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/359194327.json"
   },
   "data": {
    "bot_rerun": 1603223671.0785754,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/360509278.json"
   },
   "data": {
    "bot_rerun": 1603223671.0793693,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404811962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503096753.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506997273.json"
   },
   "data": {
    "bot_rerun": 1620940544.6438134,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554803157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705573934.json"
   },
   "data": {
    "bot_rerun": 1637013411.7268677,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/715785279.json"
   },
   "data": {
    "bot_rerun": 1637013411.7271376,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779045272.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/781469684.json"
   },
   "data": {
    "bot_rerun": 1655399034.9146662,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909562831.json"
   },
   "data": {
    "bot_rerun": 1655399034.9149244,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/949875858.json"
   },
   "data": {
    "bot_rerun": 1655399034.9150825,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964870854.json"
   },
   "data": {
    "bot_rerun": 1655399034.9152846,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/969602041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/969651310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/970327218.json"
   },
   "data": {
    "bot_rerun": 1655671984.3289824,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/976690260.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1025373548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "tabula-py",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "tabula-py is a simple Python wrapper of tabula-java, which can read\ntable of PDF. You can read tables from PDF and convert into pandas's\nDataFrame. tabula-py also enables you to convert a PDF file into\nCSV/TSV/JSON file.\n",
   "dev_url": "https://github.com/chezou/tabula-py",
   "doc_url": "https://tabula.technology/",
   "home": "https://github.com/chezou/tabula-py",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame"
  },
  "build": {
   "number": "3",
   "script": [
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak"
   ]
  },
  "package": {
   "name": "tabula-py",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "source": {
   "sha256": "bb4b8bb37616b4baf74deed7114e75bfcf0faa41bc55d2aa04834f56a98ab838",
   "url": "https://pypi.io/packages/source/t/tabula-py/tabula-py-2.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flake8",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "distro",
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "tabula-py is a simple Python wrapper of tabula-java, which can read\ntable of PDF. You can read tables from PDF and convert into pandas's\nDataFrame. tabula-py also enables you to convert a PDF file into\nCSV/TSV/JSON file.\n",
   "dev_url": "https://github.com/chezou/tabula-py",
   "doc_url": "https://tabula.technology/",
   "home": "https://github.com/chezou/tabula-py",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame"
  },
  "build": {
   "number": "3",
   "script": [
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak"
   ]
  },
  "package": {
   "name": "tabula-py",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "source": {
   "sha256": "bb4b8bb37616b4baf74deed7114e75bfcf0faa41bc55d2aa04834f56a98ab838",
   "url": "https://pypi.io/packages/source/t/tabula-py/tabula-py-2.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula"
   ]
  }
 },
 "name": "tabula-py",
 "new_version": "2.5.0",
 "new_version_attempts": {
  "2.2.0": 1,
  "2.3.0": 3,
  "2.4.0": 3,
  "2.5.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "tabula-py is a simple Python wrapper of tabula-java, which can read\ntable of PDF. You can read tables from PDF and convert into pandas's\nDataFrame. tabula-py also enables you to convert a PDF file into\nCSV/TSV/JSON file.\n",
   "dev_url": "https://github.com/chezou/tabula-py",
   "doc_url": "https://tabula.technology/",
   "home": "https://github.com/chezou/tabula-py",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame"
  },
  "build": {
   "number": "3",
   "script": [
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak"
   ]
  },
  "package": {
   "name": "tabula-py",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "source": {
   "sha256": "bb4b8bb37616b4baf74deed7114e75bfcf0faa41bc55d2aa04834f56a98ab838",
   "url": "https://pypi.io/packages/source/t/tabula-py/tabula-py-2.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flake8",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "tabula-py is a simple Python wrapper of tabula-java, which can read\ntable of PDF. You can read tables from PDF and convert into pandas's\nDataFrame. tabula-py also enables you to convert a PDF file into\nCSV/TSV/JSON file.\n",
   "dev_url": "https://github.com/chezou/tabula-py",
   "doc_url": "https://tabula.technology/",
   "home": "https://github.com/chezou/tabula-py",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame"
  },
  "build": {
   "number": "3",
   "script": [
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak"
   ]
  },
  "package": {
   "name": "tabula-py",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "source": {
   "sha256": "bb4b8bb37616b4baf74deed7114e75bfcf0faa41bc55d2aa04834f56a98ab838",
   "url": "https://pypi.io/packages/source/t/tabula-py/tabula-py-2.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "tabula",
    "tabula",
    "tabula"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flake8",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tabula-py"
  ]
 },
 "pinning_version": "2022.08.11.23.35.06",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"tabula-py\" %}\n{% set version = \"2.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: bb4b8bb37616b4baf74deed7114e75bfcf0faa41bc55d2aa04834f56a98ab838\n\nbuild:\n  number: 3\n  skip: True  # [py2k]\n  script:\n    - python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n    - flake8\n    - setuptools\n    - setuptools_scm\n  run:\n    - python\n    - pandas\n    - numpy\n    - requests\n    - distro  # [linux]\n    - openjdk\n    - setuptools\n    - setuptools_scm\n\ntest:\n  imports:\n    - tabula\n\nabout:\n  home: https://github.com/chezou/tabula-py\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame'\n  description: |\n    tabula-py is a simple Python wrapper of tabula-java, which can read \n    table of PDF. You can read tables from PDF and convert into pandas's \n    DataFrame. tabula-py also enables you to convert a PDF file into \n    CSV/TSV/JSON file.\n  doc_url: https://tabula.technology/\n  dev_url: https://github.com/chezou/tabula-py\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n    - sodre\n    - tpmusielak\n",
 "req": {
  "__set__": true,
  "elements": [
   "distro",
   "flake8",
   "numpy",
   "openjdk",
   "pandas",
   "pip",
   "python",
   "requests",
   "setuptools",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flake8",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "distro",
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flake8",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "distro",
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/tabula-py/tabula-py-2.2.0.tar.gz",
 "version": "2.2.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "tabula-py is a simple Python wrapper of tabula-java, which can read\ntable of PDF. You can read tables from PDF and convert into pandas's\nDataFrame. tabula-py also enables you to convert a PDF file into\nCSV/TSV/JSON file.\n",
   "dev_url": "https://github.com/chezou/tabula-py",
   "doc_url": "https://tabula.technology/",
   "home": "https://github.com/chezou/tabula-py",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame"
  },
  "build": {
   "number": "3",
   "script": [
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak",
    "CurtLH",
    "sodre",
    "tpmusielak"
   ]
  },
  "package": {
   "name": "tabula-py",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "flake8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "source": {
   "sha256": "bb4b8bb37616b4baf74deed7114e75bfcf0faa41bc55d2aa04834f56a98ab838",
   "url": "https://pypi.io/packages/source/t/tabula-py/tabula-py-2.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula",
    "tabula"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flake8",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}