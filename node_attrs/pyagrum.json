{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198445744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/227600054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229400851.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/239929688.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/240470483.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/243429327.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/267124821.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/277500029.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/297329428.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/311313659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/257092116.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/319768951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/329763152.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336970202.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/353284057.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/366090548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/373887938.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.17.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375366711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/409618940.json"
   },
   "data": {
    "bot_rerun": 1588884944.2567976,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.17.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/432939545.json"
   },
   "data": {
    "bot_rerun": 1591870858.6480994,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/432985617.json"
   },
   "data": {
    "bot_rerun": 1591876086.3425322,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/445102911.json"
   },
   "data": {
    "bot_rerun": 1595342520.6211028,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454560214.json"
   },
   "data": {
    "bot_rerun": 1603803040.7569697,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503523420.json"
   },
   "data": {
    "bot_rerun": 1603494360.5613782,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/510082318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513520089.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.18.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549387698.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555683061.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559710638.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572971887.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/577090648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/584063545.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/611384246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615953251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/628598103.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/663812930.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/696335928.json"
   },
   "data": {
    "bot_rerun": 1627308788.1222556,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.21.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/697076590.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.21.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705380268.json"
   },
   "data": {
    "bot_rerun": 1628286740.581038,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705768528.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/729991129.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/781275348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784566687.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784770386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797797499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/959562331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/987760307.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1013083192.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/dad813f6-5cd0-40aa-99fe-2ab920ade3ef.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1141163334.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pyagrum",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://agrum.gitlab.io/",
   "license": "LGPL-3.0-only",
   "license_file": "COPYRIGHT.txt",
   "summary": "pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard"
   ]
  },
  "package": {
   "name": "pyagrum",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ],
   "run": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "fn": "pyagrum-1.5.2.tar.bz2",
   "sha256": "4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6",
   "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2"
  },
  "test": {
   "imports": [
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook"
   ],
   "requires": [
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://agrum.gitlab.io/",
   "license": "LGPL-3.0-only",
   "license_file": "COPYRIGHT.txt",
   "summary": "pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard"
   ]
  },
  "package": {
   "name": "pyagrum",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ],
   "run": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "fn": "pyagrum-1.5.2.tar.bz2",
   "sha256": "4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6",
   "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2"
  },
  "test": {
   "imports": [
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook"
   ],
   "requires": [
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://agrum.gitlab.io/",
   "license": "LGPL-3.0-only",
   "license_file": "COPYRIGHT.txt",
   "summary": "pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard"
   ]
  },
  "package": {
   "name": "pyagrum",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "curl",
    "7za",
    "cmake",
    "curl",
    "7za",
    "cmake",
    "curl",
    "7za",
    "cmake",
    "curl",
    "7za"
   ],
   "host": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ],
   "run": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "fn": "pyagrum-1.5.2.tar.bz2",
   "sha256": "4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6",
   "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2"
  },
  "test": {
   "imports": [
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook"
   ],
   "requires": [
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel"
   ]
  }
 },
 "name": "pyagrum",
 "new_version": "1.5.2",
 "new_version_attempts": {
  "0.17.3": 2,
  "0.18.0": 2,
  "0.18.2": 1,
  "0.19.0": 1,
  "0.19.1": 1,
  "0.19.2": 1,
  "0.19.3": 1,
  "0.20.0": 1,
  "0.20.1": 1,
  "0.20.2": 1,
  "0.20.3": 1,
  "0.21.0": 2,
  "0.22.0": 2,
  "0.22.1": 1,
  "0.22.4": 1,
  "0.22.5": 1,
  "1.1.1": 1,
  "1.2.0": 1,
  "1.3.0": 1,
  "1.5.0": 1
 },
 "new_version_errors": {
  "0.17.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.17.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://gitlab.com/agrumery/aGrUM/-/archive/{{ version }}/aGrUM-{{ version }}.tar.bz2'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://agrum.gitlab.io/",
   "license": "LGPL-3.0-only",
   "license_file": "COPYRIGHT.txt",
   "summary": "pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard"
   ]
  },
  "package": {
   "name": "pyagrum",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ],
   "run": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "fn": "pyagrum-1.5.2.tar.bz2",
   "sha256": "4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6",
   "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2"
  },
  "test": {
   "imports": [
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook"
   ],
   "requires": [
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://agrum.gitlab.io/",
   "license": "LGPL-3.0-only",
   "license_file": "COPYRIGHT.txt",
   "summary": "pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard"
   ]
  },
  "package": {
   "name": "pyagrum",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ],
   "run": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "fn": "pyagrum-1.5.2.tar.bz2",
   "sha256": "4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6",
   "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2"
  },
  "test": {
   "imports": [
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook"
   ],
   "requires": [
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyagrum"
  ]
 },
 "pinning_version": "2022.11.30.10.38.55",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"1.5.2\" %} \n\npackage:\n  name: pyagrum\n  version: {{ version }}\n\nsource:\n  fn: pyagrum-{{ version }}.tar.bz2\n  url: https://gitlab.com/agrumery/aGrUM/-/archive/{{ version }}/aGrUM-{{ version }}.tar.bz2\n  sha256: 4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6\n\nbuild:\n  number: 0\n  skip: true  # [py<38]\n  run_exports:\n    - {{ pin_subpackage('pyagrum', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - cmake\n    - make  # [unix]\n    - {{ compiler('c') }}  # [unix]\n    - {{ compiler('cxx') }}  # [unix] \n    - curl  # [win]\n    - 7za  # [win]\n  host:\n    - python\n    - numpy\n    - pydot\n    - six\n    - matplotlib-base\n    - IPython\n    - ipykernel\n    - pandas\n    - matplotlib-inline\n    - scikit-learn\n    - scipy\n  run:\n    - python\n    - numpy\n    - pydot\n    - six\n    - matplotlib-base\n    - IPython\n    - ipykernel\n    - pandas\n    - matplotlib-inline\n    - scikit-learn\n    - scipy\n\ntest:\n  requires:\n    - ipykernel\n  imports:\n    - pyAgrum\n    - pyAgrum.lib.bn2roc\n    - pyAgrum.lib.bn2scores\n    - pyAgrum.lib.bn_vs_bn\n    - pyAgrum.lib.dynamicBN\n    - pyAgrum.lib.notebook\n\nabout:\n  home: http://agrum.gitlab.io/\n  license: LGPL-3.0-only\n  license_file: COPYRIGHT.txt\n  summary: pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API.\n\nextra:\n  recipe-maintainers:\n    - jschueller\n    - ltorti\n    - aspard\n",
 "req": {
  "__set__": true,
  "elements": [
   "7za",
   "c_compiler_stub",
   "cmake",
   "curl",
   "cxx_compiler_stub",
   "ipykernel",
   "ipython",
   "make",
   "matplotlib-base",
   "matplotlib-inline",
   "numpy",
   "pandas",
   "pydot",
   "python",
   "scikit-learn",
   "scipy",
   "six"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "7za",
    "c_compiler_stub",
    "cmake",
    "curl",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 },
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "7za",
    "c_compiler_stub",
    "cmake",
    "curl",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "IPython",
    "ipykernel",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "IPython",
    "ipykernel",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 },
 "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2",
 "version": "1.5.2",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://agrum.gitlab.io/",
   "license": "LGPL-3.0-only",
   "license_file": "COPYRIGHT.txt",
   "summary": "pyAgrum is a Python wrapper for the C++ aGrUM library. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian networks and other graphical models. Some specific (Python and C++) codes are added in order to simplify and extend the aGrUM API."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "pyagrum",
    "pyagrum",
    "pyagrum",
    "pyagrum"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard",
    "jschueller",
    "ltorti",
    "aspard"
   ]
  },
  "package": {
   "name": "pyagrum",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "curl",
    "7za",
    "cmake",
    "curl",
    "7za",
    "cmake",
    "curl",
    "7za",
    "cmake",
    "curl",
    "7za"
   ],
   "host": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ],
   "run": [
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy",
    "python",
    "numpy",
    "pydot",
    "six",
    "matplotlib-base",
    "IPython",
    "ipykernel",
    "pandas",
    "matplotlib-inline",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "fn": "pyagrum-1.5.2.tar.bz2",
   "sha256": "4275c1e9ef02f7c2b5c5d0ef6680aaa2f3a9676d1f3a4c97207acbbc926a0ed6",
   "url": "https://gitlab.com/agrumery/aGrUM/-/archive/1.5.2/aGrUM-1.5.2.tar.bz2"
  },
  "test": {
   "imports": [
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook",
    "pyAgrum",
    "pyAgrum.lib.bn2roc",
    "pyAgrum.lib.bn2scores",
    "pyAgrum.lib.bn_vs_bn",
    "pyAgrum.lib.dynamicBN",
    "pyAgrum.lib.notebook"
   ],
   "requires": [
    "ipykernel",
    "ipykernel",
    "ipykernel",
    "ipykernel"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "7za",
    "cmake",
    "curl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "ipython",
    "matplotlib-base",
    "matplotlib-inline",
    "numpy",
    "pandas",
    "pydot",
    "python",
    "scikit-learn",
    "scipy",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ipykernel"
   ]
  }
 }
}