{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/337796553.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20170207"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "clinfo",
 "hash_type": "sha256",
 "name": "clinfo",
 "new_version": "20170207",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "clinfo"
  ]
 },
 "pinning_version": "2019.11.01",
 "raw_meta_yaml": "{% set name = \"clinfo\" %}\n{% set version = \"3.0.21.02.21\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Oblomov/clinfo/archive/{{ version }}.tar.gz\n  sha256: e52f5c374a10364999d57a1be30219b47fb0b4f090e418f2ca19a0c037c1e694\n\nbuild:\n  number: 0\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make\n  host:\n    - ocl-icd  # [linux]\n    - khronos-opencl-icd-loader  # [osx or win]\n  run:\n    - {{ pin_compatible(\"ocl-icd\") }}  # [linux]\n    - {{ pin_compatible(\"khronos-opencl-icd-loader\", max_pin=None) }}  # [osx or win]\ntest:\n  requires:\n    - pocl\n  commands:\n    - clinfo -l\n\nabout:\n  home: https://github.com/Oblomov/clinfo\n  license: CC0-1.0\n  license_family: CC\n  license_file: legalcode.txt\n  summary: 'Print all known information about all available OpenCL platforms and devices in the system'\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "smithy_version": "3.6.2",
 "strong_exports": false,
 "url": "https://github.com/Oblomov/clinfo/archive/3.0.21.02.21.tar.gz",
 "version": "3.0.21.02.21"
}