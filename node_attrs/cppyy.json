{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/295312224.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308404522.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/311243342.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315169310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/317695000.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321496580.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/328893666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336049916.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336101410.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/338530606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356508962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/359255358.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402459987.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/409784989.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/429751947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/447978570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/477531300.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/481744369.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492165052.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501082240.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501095752.json"
   },
   "data": {
    "bot_rerun": 1603161770.863959,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506504707.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513496573.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/518872384.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525462772.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525846886.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549586395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573804340.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/579649409.json"
   },
   "data": {
    "bot_rerun": 1617707848.493942,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/595333401.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/598639828.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/bf078f4c-cdc4-4c83-a288-4537105d6aec.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/625765231.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645352904.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/691999656.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/692837187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/780463499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/874648060.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898355488.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/983762791.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "cppyy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "An automatic Python-C++ bindings generator, for calling C++ from Python and\nPython from C++, designed for large scale programs in high performance\ncomputing that use modern C++.\n",
   "dev_url": "https://bitbucket.org/wlav/cppyy/src",
   "doc_url": "http://cppyy.readthedocs.io/",
   "home": "https://pypi.org/project/cppyy/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python-C++ bindings interface based on Cling/LLVM"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf"
   ]
  },
  "package": {
   "name": "cppyy",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9"
   ],
   "run": [
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9"
   ]
  },
  "source": {
   "patches": [
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch"
   ],
   "sha256": "03bc66b0938c832507b4e76f55b64a542f981531f53955f70f1c595fc3333f2c",
   "url": "https://pypi.io/packages/source/c/cppyy/cppyy-2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'"
   ],
   "imports": [
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy"
   ],
   "requires": [
    "gmp",
    "gmp",
    "gmp",
    "gmp"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "cpycppyy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "gmp"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "An automatic Python-C++ bindings generator, for calling C++ from Python and\nPython from C++, designed for large scale programs in high performance\ncomputing that use modern C++.\n",
   "dev_url": "https://bitbucket.org/wlav/cppyy/src",
   "doc_url": "http://cppyy.readthedocs.io/",
   "home": "https://pypi.org/project/cppyy/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python-C++ bindings interface based on Cling/LLVM"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf"
   ]
  },
  "package": {
   "name": "cppyy",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9"
   ],
   "run": [
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9"
   ]
  },
  "source": {
   "patches": [
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch"
   ],
   "sha256": "03bc66b0938c832507b4e76f55b64a542f981531f53955f70f1c595fc3333f2c",
   "url": "https://pypi.io/packages/source/c/cppyy/cppyy-2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'"
   ],
   "imports": [
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy"
   ],
   "requires": [
    "gmp",
    "gmp",
    "gmp",
    "gmp"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "cpycppyy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "gmp"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "An automatic Python-C++ bindings generator, for calling C++ from Python and\nPython from C++, designed for large scale programs in high performance\ncomputing that use modern C++.\n",
   "dev_url": "https://bitbucket.org/wlav/cppyy/src",
   "doc_url": "http://cppyy.readthedocs.io/",
   "home": "https://pypi.org/project/cppyy/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python-C++ bindings interface based on Cling/LLVM"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf"
   ]
  },
  "package": {
   "name": "cppyy",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9"
   ],
   "run": [
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9"
   ]
  },
  "source": {
   "patches": [
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch"
   ],
   "sha256": "03bc66b0938c832507b4e76f55b64a542f981531f53955f70f1c595fc3333f2c",
   "url": "https://pypi.io/packages/source/c/cppyy/cppyy-2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'"
   ],
   "imports": [
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy"
   ],
   "requires": [
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp",
    "gmp"
   ]
  }
 },
 "name": "cppyy",
 "new_version": "2.4.1",
 "new_version_attempts": {
  "1.7.0": 1,
  "1.7.1": 1,
  "1.8.0": 1,
  "1.8.1": 1,
  "1.8.2": 1,
  "1.8.3": 1,
  "1.8.4": 1,
  "1.8.5": 1,
  "1.8.6": 1,
  "1.9.0": 1,
  "1.9.1": 1,
  "1.9.2": 1,
  "1.9.3": 1,
  "1.9.4": 1,
  "1.9.5": 1,
  "1.9.6": 1,
  "2.0.0": 1,
  "2.1.0": 1,
  "2.2.0": 1,
  "2.3.0": 1,
  "2.3.1": 1,
  "2.4.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "An automatic Python-C++ bindings generator, for calling C++ from Python and\nPython from C++, designed for large scale programs in high performance\ncomputing that use modern C++.\n",
   "dev_url": "https://bitbucket.org/wlav/cppyy/src",
   "doc_url": "http://cppyy.readthedocs.io/",
   "home": "https://pypi.org/project/cppyy/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python-C++ bindings interface based on Cling/LLVM"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf"
   ]
  },
  "package": {
   "name": "cppyy",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9"
   ],
   "run": [
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9"
   ]
  },
  "source": {
   "patches": [
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch"
   ],
   "sha256": "03bc66b0938c832507b4e76f55b64a542f981531f53955f70f1c595fc3333f2c",
   "url": "https://pypi.io/packages/source/c/cppyy/cppyy-2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'"
   ],
   "imports": [
    "cppyy",
    "cppyy",
    "cppyy",
    "cppyy"
   ],
   "requires": [
    "gmp",
    "gmp",
    "gmp",
    "gmp"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "cpycppyy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "gmp"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "An automatic Python-C++ bindings generator, for calling C++ from Python and\nPython from C++, designed for large scale programs in high performance\ncomputing that use modern C++.\n",
   "dev_url": "https://bitbucket.org/wlav/cppyy/src",
   "doc_url": "http://cppyy.readthedocs.io/",
   "home": "https://pypi.org/project/cppyy/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python-C++ bindings interface based on Cling/LLVM"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf"
   ]
  },
  "package": {
   "name": "cppyy",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9",
    "python",
    "pip",
    "cppyy-backend ==1.14.9"
   ],
   "run": [
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9",
    "python",
    "cpycppyy ==1.12.11",
    "cppyy-backend ==1.14.9"
   ]
  },
  "source": {
   "patches": [
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch",
    "add_default_paths_on_pypy.patch",
    "alldict.patch"
   ],
   "sha256": "03bc66b0938c832507b4e76f55b64a542f981531f53955f70f1c595fc3333f2c",
   "url": "https://pypi.io/packages/source/c/cppyy/cppyy-2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'",
    "$PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'",
    "$PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'",
    "$PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'"
   ],
   "imports": [
    "cppyy",
    "cppyy",
    "cppyy"
   ],
   "requires": [
    "gmp",
    "gmp",
    "gmp"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "cpycppyy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "gmp"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cppyy"
  ]
 },
 "pinning_version": "2022.06.29.18.34.42",
 "raw_meta_yaml": "{% set name = \"cppyy\" %}\n{% set version = \"2.4.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/c/cppyy/cppyy-{{ version }}.tar.gz\n  sha256: 03bc66b0938c832507b4e76f55b64a542f981531f53955f70f1c595fc3333f2c\n  patches:\n    - add_default_paths_on_pypy.patch\n    - alldict.patch\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  # cppyy is broken on ppc: https://github.com/conda-forge/cppyy-feedstock/issues/55\n  skip: true  # [ppc64le]\n  # compiler flags set by cppyy-cling do not work on aarch64, https://github.com/conda-forge/cppyy-cling-feedstock/pull/52\n  skip: true  # [aarch64]\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  detect_binary_files_with_prefix: false\n\nrequirements:\n  build:\n    - python  # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.\n    - cppyy-backend ==1.14.9\n  run:\n    - python\n    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.\n    - cpycppyy ==1.12.11  # [python_impl==\"cpython\"]\n    # cppyy-cling, cppyy-backend, cpycppyy and cppyy are essentially a single package, so we always pin exactly between these.\n    - cppyy-backend ==1.14.9\n\ntest:\n  requires:\n    - gmp\n  imports:\n    - cppyy\n  commands:\n    - $PYTHON -c 'import cppyy;V = cppyy.gbl.std.vector[int]();V.push_back(1)'\n    - $PYTHON -c 'import cppyy;cppyy.load_library(\"gmp\")'\n    - $PYTHON -c 'import cppyy;cppyy.include(\"gmp.h\")'\n\nabout:\n  home: https://pypi.org/project/cppyy/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: Python-C++ bindings interface based on Cling/LLVM\n  description: |\n    An automatic Python-C++ bindings generator, for calling C++ from Python and\n    Python from C++, designed for large scale programs in high performance\n    computing that use modern C++. \n  doc_url: http://cppyy.readthedocs.io/\n  dev_url: https://bitbucket.org/wlav/cppyy/src\n\nextra:\n  recipe-maintainers:\n    - saraedum\n    - isuruf\n",
 "req": {
  "__set__": true,
  "elements": [
   "cppyy-backend",
   "cpycppyy",
   "cxx_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cppyy-backend",
    "cpycppyy",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "gmp"
   ]
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cppyy-backend ==1.14.9",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cppyy-backend ==1.14.9",
    "cpycppyy ==1.12.11",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "gmp"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/cppyy/cppyy-2.4.0.tar.gz",
 "version": "2.4.0"
}