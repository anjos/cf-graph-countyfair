{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1006215146.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006215807.json"
   },
   "data": {
    "bot_rerun": 1658578252.3055053,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006368217.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "dav1d",
 "hash_type": "sha256",
 "name": "dav1d",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dav1d"
  ]
 },
 "pinning_version": "2022.07.22.23.35.10",
 "raw_meta_yaml": "{% set name = \"dav1d\" %}\n{% set version = \"1.0.0\" %}\n# library version is different from project version\n# Check 'meson.build' upstream in every release!\n{% set so_name = \"6.6.0\" %}\n{% set so_name_major = \"6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://code.videolan.org/videolan/dav1d/-/archive/{{ version }}/dav1d-{{ version }}.tar.gz\n  sha256: 047b8229511a82b5718a1d34c86c067b078efd02f602986d2ed09b23182ec136\n\nbuild:\n  number: 1\n  script:\n    - set -ex\n    - >\n        meson setup _build\n        ${MESON_ARGS:---prefix=${PREFIX} --libdir=lib}  # [unix]\n        --prefix=%LIBRARY_PREFIX%  # [win]\n        --buildtype=release -Denable_tests=false\n    - meson compile -C _build\n    - meson install -C _build --no-rebuild\n  run_exports:\n    - {{ pin_subpackage( name|lower, max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - meson >=0.49\n    - ninja\n    - nasm >=2.14\n\ntest:\n  commands:\n    - dav1d -v\n    - test -f ${PREFIX}/lib/libdav1d{{ SHLIB_EXT }}                       # [unix]\n    - test -f ${PREFIX}/lib/libdav1d.{{ so_name_major }}{{ SHLIB_EXT }}   # [osx]\n    - test -f ${PREFIX}/lib/libdav1d{{ SHLIB_EXT }}.{{ so_name_major }}   # [linux]\n    - test -f ${PREFIX}/lib/libdav1d{{ SHLIB_EXT }}.{{ so_name }}         # [linux]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\dav1d.dll exit 1               # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\dav1d.lib exit 1               # [win]\n    - test -f ${PREFIX}/include/dav1d/dav1d.h                             # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\dav1d\\\\dav1d.h exit 1      # [win]\n    - test -f ${PREFIX}/lib/pkgconfig/dav1d.pc                         # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\dav1d.pc exit 1  # [win]\n\nabout:\n  home: https://code.videolan.org/videolan/dav1d\n  summary: dav1d is the fastest AV1 decoder on all platforms\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: COPYING\n\nextra:\n  recipe-maintainers:\n    - jaimergp\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://code.videolan.org/videolan/dav1d/-/archive/1.0.0/dav1d-1.0.0.tar.gz",
 "version": "1.0.0"
}