{
 "archived": false,
 "bad": "make_graph: render error 'load_file_regex' is undefined\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 265, in _parse_meta_yaml_impl\n    content = render_meta_yaml(text, **cfg_as_dict)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 121, in render_meta_yaml\n    return env.from_string(text).render(**cfg)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/jinja2/environment.py\", line 1301, in render\n    self.environment.handle_exception()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/jinja2/environment.py\", line 936, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 2, in top-level template code\njinja2.exceptions.UndefinedError: 'load_file_regex' is undefined\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "quarto",
 "raw_meta_yaml": "{% set version = \"1.1.145\" %}\n{% set deno_version = load_file_regex(load_file='./configuration', regex_pattern='export\\sDENO=v(\\S+)') %}\n{% set deno_dom_version = load_file_regex(load_file='configuration', regex_pattern='export DENO_DOM=v([^-]+)') %}\n{% set pandoc_version = load_file_regex(load_file='configuration', regex_pattern='export PANDOC=(\\S+)') %}\n\npackage:\n  name: quarto\n  version: {{ version }}\n\nsource:\n  url: https://github.com/quarto-dev/quarto-cli/releases/download/v{{ version }}/quarto-{{ version }}.tar.gz\n  sha256: 31b7c6ba2f4b9030587b1df5779c10eca2e6a5f9cd72612cc8c9215d2dda5b8a\n  patches:\n    # TODO: I gave up on path override stuff for windows. You have to do setlocal enabledelayedexpansion and then endlocal after,\n    #    passing the variables out from the setlocal section. That was a headache, so I punted and just patch the hard-coded values\n    #    in the quarto setup script. The right way to do this is to figure out how to allow the variables to be overridden in the\n    #    generated win_configuration.bat file.\n    - 0001-win-conda-path-overrides.patch\n    - 0002-conda-install-path-for-tinytex.patch\n\nbuild:\n  number: 0\n  # Windows should work, but it currently hangs during the test phase. I'm disabling it until I can debug that issue.\n  skip: True  # [win]\n\nrequirements:\n  host:\n    - deno      {{ deno_version.group(1) if deno_version else \"\" }}\n    - deno-dom  {{ deno_dom_version.group(1) if deno_dom_version else \"\" }}\n    - pandoc    {{ pandoc_version.group(1) if deno_dom_version else \"\" }}\n    - esbuild\n  run:\n    # Deno, deno-dom and pandoc have proven to be fickle\n    #    regarding Quarto's source code. The pinning here\n    #    is not so much that there are binary compatibility\n    #    issues, but just that these dependencies are only\n    #    known to work in a pretty narrow range.\n    - {{ pin_compatible(\"deno\", max_pin=\"x.x.x\") }}\n    - {{ pin_compatible(\"pandoc\", max_pin=\"x.x.x\") }}\n    # we vendor deno-dom JS dependencies, so it is important\n    #  that the version at runtime matches the one at build time\n    - {{ pin_compatible(\"deno-dom\", max_pin=\"x.x.x\") }}\n    - esbuild\n    - dart-sass\n\ntest:\n  commands:\n    - quarto check\n  requires:\n    - python >=3\n    - jupyter\n    - r-base\n\nabout:\n  home: https://quarto.org/\n  license: GPL-2.0-or-later\n  license_file:\n    - COPYRIGHT\n    - COPYING.md\n  summary: An open-source scientific and technical publishing system built on Pandoc\n\nextra:\n  recipe-maintainers:\n    - msarahan\n"
}