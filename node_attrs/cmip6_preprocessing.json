{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/381956416.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/399230540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400429673.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/612700032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/666426154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677216539.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/687021466.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cmip6_preprocessing",
 "hash_type": "sha256",
 "name": "xmip",
 "new_version": "0.6.1rc0",
 "new_version_attempts": {
  "0.1.3": 1,
  "0.1.4": 1,
  "0.2.0": 1,
  "0.3.2": 1,
  "0.4.0": 1,
  "0.5.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "xmip"
  ]
 },
 "pinning_version": "2021.07.09.13.37.12",
 "raw_meta_yaml": "{% set name = \"xmip\" %}\n{% set version = \"0.6.1rc0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 614c10c9ced1584f911b23bbf02b333c470d7c9a9cf597c105d09ee6446f0695\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - pytest-runner\n    - setuptools_scm\n  run:\n    - python >=3.7\n    - xarray\n    - pandas\n    - numpy\n    - pint-xarray\n    - importlib-metadata  # Only need for Python < 3.8 (but doesn't hurt on other versions) I think so could be removed in future\n\ntest:\n  imports:\n    - xmip\n    \n  commands: python -c \"import xmip; assert xmip.__version__ == '{{ version }}', xmip.__version__\"\n\nabout:\n  home: https://github.com/jbusecke/xMIP\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Some code to homogenize naming and parse variables in an xgcm compatible xarray dataset\n\n  description: |\n    Frustrated with how 'dirty' CMIP6 data still is? Do you just want to run a\n    simple (or complicated) analysis on various models and end up having to\n    write logic for each seperate case? Then this package is for you.\n\n    Developed during the cmip6-hackathon this package provides utility\n    functions that play nicely with intake-esm.\n  dev_url: https://github.com/jbusecke/cmip6_preprocessing\n\nextra:\n  recipe-maintainers:\n    - jbusecke\n",
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/x/xmip/xmip-0.6.1rc0.tar.gz",
 "version": "0.6.1rc0"
}