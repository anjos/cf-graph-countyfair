{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/214292163.json"
   },
   "data": {
    "bot_rerun": 1597087682.444957,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/232476773.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/254077500.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/286678812.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299522453.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413268715.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/538674684.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/651723303.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-tractor.base",
 "hash_type": "sha256",
 "name": "r-tractor.base",
 "new_version": "3.3.3.1",
 "new_version_attempts": {
  "3.3.3.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-tractor.base"
  ]
 },
 "pinning_version": "2021.05.24.19.39.56",
 "raw_meta_yaml": "{% set version = '3.3.3.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-tractor.base\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/tractor.base_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/tractor.base/tractor.base_{{ version }}.tar.gz\n  sha256: b72427d44b8050842a1e06b316a66b64f37567f4c798f3e29bd79ee3eee1b270\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rnifti\n    - r-ore >=1.3.0\n    - r-reportr\n    - r-shades\n  run:\n    - r-base\n    - r-rnifti\n    - r-ore >=1.3.0\n    - r-reportr\n    - r-shades\n\ntest:\n  commands:\n    - $R -e \"library('tractor.base')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('tractor.base')\\\"\"  # [win]\n\nabout:\n  home: http://www.tractor-mri.org.uk, https://github.com/tractor/tractor\n  license: GPL-2.0-only\n  summary: Functions for working with magnetic resonance images. Reading and writing of popular\n    file formats (DICOM, Analyze, NIfTI-1, NIfTI-2, MGH); interactive and non-interactive\n    visualisation; flexible image manipulation; metadata and sparse image handling.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - FrodePedersen\n    - ArneKr\n    - MathiasHaudgaard\n\n# Package: tractor.base\n# Version: 3.3.3.1\n# Date: 2020-12-12\n# Title: Read, Manipulate and Visualise Magnetic Resonance Images\n# Author: Jon Clayden\n# Maintainer: Jon Clayden <code@clayden.org>\n# Imports: methods, ore (>= 1.3.0), reportr, shades, RNifti\n# Suggests: mmand, loder, divest, jsonlite, yaml, testthat\n# Enhances: oro.nifti\n# Description: Functions for working with magnetic resonance images. Reading and writing of popular file formats (DICOM, Analyze, NIfTI-1, NIfTI-2, MGH); interactive and non-interactive visualisation; flexible image manipulation; metadata and sparse image handling.\n# Encoding: UTF-8\n# LazyLoad: yes\n# LazyData: yes\n# License: GPL-2\n# URL: http://www.tractor-mri.org.uk, https://github.com/tractor/tractor\n# BugReports: https://github.com/tractor/tractor/issues\n# RoxygenNote: 7.1.1\n# NeedsCompilation: no\n# Packaged: 2020-12-12 23:10:37 UTC; jon\n# Repository: CRAN\n# Date/Publication: 2020-12-13 01:00:02 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/tractor.base_3.3.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tractor.base/tractor.base_3.3.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/tractor.base_3.3.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tractor.base/tractor.base_3.3.3.1.tar.gz"
 ],
 "version": "3.3.3.1"
}