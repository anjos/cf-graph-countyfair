{
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "clang-win-activation",
 "name": "clang-win-activation",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "clang_win-64",
   "msvc-headers-libs",
   "winsdk"
  ]
 },
 "raw_meta_yaml": "{% set version = \"15.0.5\" %}\n\npackage:\n  name: clang-win-activation\n  version: {{ version }}\n\nbuild:\n  number: 0\n\noutputs:\n  - name: winsdk\n    build:\n      skip: True  # [win]\n    script: install-pkg.sh\n    version: {{ WINSDK_VERSION }}\n    requirements:\n      - p7zip\n      - msitools\n      - curl\n    about:\n      license: LicenseRef-MICROSOFT_SDK\n      license_file: LICENSE_SDK.txt\n      license_family: Proprietary\n      summary: \"Scripts to download Windows SDK headers\"\n\n  - name: msvc-headers-libs\n    build:\n      skip: True  # [win]\n    script: install-pkg.sh\n    version: {{ MSVC_HEADERS_VERSION }}\n    requirements:\n      - unzip\n      - curl\n    about:\n      license: LicenseRef-MSVC_HEADERS\n      license_file: LICENSE_MSVC_HEADERS.txt\n      license_family: Proprietary\n      summary: \"Scripts to download MSVC headers and libraries\"\n\n  - name: clang_win-64\n    script: install-pkg.sh   # [not win]\n    script: install-pkg.bat  # [win]\n    build:\n      run_exports:\n        strong:\n          - vc >=14.1\n          - vs2015_runtime >={{ MSVC_HEADERS_VERSION }}\n    requirements:\n      build:\n        - m2-sed  # [win]\n      host:\n        # Needed to create the symlinks\n        - clangxx     {{ version }}\n        - llvm-tools  {{ version }}\n      run:\n        - {{ pin_subpackage(\"msvc-headers-libs\", max_pin=\"x.x.x\") }}  # [not win]\n        - {{ pin_subpackage(\"winsdk\", max_pin=\"x.x.x\") }}             # [not win]\n        - vs2017_win-64 19.16.27033                                   # [win]\n        - vswhere                                                     # [win]\n        - clangxx             {{ version }}\n        - llvm-tools          {{ version }}\n        - lld                 {{ version }}\n        - compiler-rt         {{ version }}\n        - compiler-rt_win-64  {{ version }}\n    test:\n      files:\n        - test.c\n        - test.cpp\n        - run_test_clang.sh   # [not win]\n        - run_test_clang.bat  # [win]\n      commands:\n        - run_test_clang.bat      # [win]\n        - bash run_test_clang.sh  # [not win]\n\nabout:\n  home: https://github.com/conda-forge/clang-win-activation-feedstock\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: 'clang (cross) compiler for windows with MSVC ABI compatbility'\n  description: |\n    To use this package in a normal conda environment, do the following\n\n       export CONDA_BUILD_WINSDK=/opt\n\n    To use this package in a conda-build environment, add the following\n\n       CONDA_BUILD_WINSDK:\n         - \"/opt\"\n\n    in $HOME/conda_build_config.yaml and use `clang_win-64` as the compiler.\n\n    By setting this variable, you are agreeing to the terms and conditions\n    of the Windows SDK and the MSVC headers. If the Windows SDK and MSVC\n    headers are not inside CONDA_BUILD_WINSDK, they would be automatically\n    downloaded.\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - xhochy\n",
 "strong_exports": true,
 "version": "15.0.5"
}