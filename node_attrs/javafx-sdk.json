{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/600413243.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango148"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812639992.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/825420638.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango150"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "javafx-sdk",
 "hash_type": "sha256",
 "name": "javafx-sdk",
 "new_version": "13.0.2",
 "new_version_attempts": {
  "13.0.2": 0
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "javafx-sdk"
  ]
 },
 "pinning_version": "2022.01.17.22.01.08",
 "raw_meta_yaml": "{% set name = \"javafx-sdk\" %}\n{% set version = \"12.0.2\" %}\n{% set number = \"1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/javafxports/openjdk-jfx/archive/{{ version }}+{{ number }}.tar.gz\n  sha256: 19a537129d9b2a66a9b7c2013297d8ef264f6106497c6d874db7782de1b65c8e\n  patches:\n    - linux.gradle.patch  # [linux]\n    - mac.gradle.patch  # [osx]\n\nbuild:\n  number: 2\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - bison\n    - flex\n    - gperf\n    - pkgconfig\n    - ant\n    - {{ cdt('libx11-devel') }}  # [linux]\n    - {{ cdt('libxxf86vm-devel') }}  # [linux]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('libpng-devel') }}  # [linux]\n  host:\n    - coreutils >=8\n    - gtk2\n    - pango\n    - freetype\n    - openjdk >=11\n  run:\n    - atk  # [linux]\n    - cairo  # [linux]\n    - fontconfig  # [linux]\n    - gdk-pixbuf  # [linux]\n    - glib  # [linux]\n    - gtk2  # [linux]\n    - pango  # [linux]\n    - xorg-libx11  # [linux]\n    - xorg-libxtst  # [linux]\n    - font-ttf-dejavu-sans-mono # [linux]\n  run_constrained:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\ntest: \n  commands:\n    - test -f \"${PREFIX}/lib/${PKG_NAME}-${PKG_VERSION%}/lib/javafx.base.jar\"\n\nabout:\n  home: https://gluonhq.com/products/javafx/\n  license: GPL-2.0 + Classpath\n  license_file: LICENSE\n  summary: 'JavaFX library for Java'\n  description: |\n    OpenJFX is an open source, next generation client application platform for desktop, mobile and embedded systems based on JavaSE. It is a collaborative effort by many individuals and companies with the goal of producing a modern, efficient, and fully featured toolkit for developing rich client applications.\n  doc_url: https://openjfx.io/\n  dev_url: https://github.com/javafxports/openjdk-jfx\n\nextra:\n  recipe-maintainers:\n    - klugem\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://github.com/javafxports/openjdk-jfx/archive/12.0.2+1.tar.gz",
 "version": "12.0.2"
}