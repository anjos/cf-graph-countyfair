{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/367072026.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.7-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394864347.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.4-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/438263516.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.3-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440809195.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.5-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440932322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.6-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/457469808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.8-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499502331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/522742589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.3-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/ba58a310-e3a2-49de-98e4-b53707eff534.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542193006.json"
   },
   "data": {
    "bot_rerun": 1613535701.5854485,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542239902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570739377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.4-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574579365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574634070.json"
   },
   "data": {
    "bot_rerun": 1613557351.7591453,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574811152.json"
   },
   "data": {
    "bot_rerun": 1623428992.7202604,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617051649.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.6-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643437121.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.8-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652747579.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.9-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/668337631.json"
   },
   "data": {
    "bot_rerun": 1623562455.7313294,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/668996814.json"
   },
   "data": {
    "bot_rerun": 1623738131.0308123,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/670101826.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/686394277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.3-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/730147257.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.4-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/873950491.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.7-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/5c1e6019-23d9-4a72-b8a8-435e89b2e82d.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda_112_ppc64le_aarch64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/903905332.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.10-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/935684352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.12-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1004894425.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.4-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1029890988.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.3-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1080854390.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.1-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1099420598.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.5-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: ValueError(\"variant config in /tmp/tmpspw1yx31/conda_build_config.yaml is ambiguous because it\\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\\nor specifies a subspace that is not fully implemented (To be clear:\\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpspw1yx31/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpspw1yx31/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: ValueError(\"variant config in /tmp/tmpspw1yx31/conda_build_config.yaml is ambiguous because it\\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\\nor specifies a subspace that is not fully implemented (To be clear:\\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpspw1yx31/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "nccl",
 "hash_type": "sha256",
 "name": "nccl",
 "new_version": "2.15.5-1",
 "new_version_attempts": {
  "2.10.3-1": 1,
  "2.11.4-1": 1,
  "2.12.10-1": 1,
  "2.12.12-1": 1,
  "2.12.7-1": 1,
  "2.13.4-1": 1,
  "2.14.3-1": 0,
  "2.15.1-1": 1,
  "2.15.5-1": 1,
  "2.7.3-1": 1,
  "2.7.5-1": 1,
  "2.7.6-1": 1,
  "2.7.8-1": 1,
  "2.8.3-1": 1,
  "2.8.4-1": 1,
  "2.9.6-1": 1,
  "2.9.8-1": 1,
  "2.9.9-1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nccl"
  ]
 },
 "pinning_version": "2022.10.25.19.19.59",
 "raw_meta_yaml": "{% set name = \"nccl\" %}\n{% set version = \"2.14.3-1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version|replace(\"-\", \".\") }}\n\nsource:\n  url: https://github.com/NVIDIA/nccl/archive/v{{ version }}.tar.gz\n  sha256: 0fffb6f91e029ea4d95efabd7bddc6eecf8bf136e4f46bf812bff7d8eee53c79\n\nbuild:\n  number: 0\n  skip: true  # [(not linux) or cuda_compiler_version in (undefined, \"None\")]\n  run_exports:\n    # xref: https://github.com/NVIDIA/nccl/issues/218\n    - {{ pin_subpackage(name, max_pin=\"x\") }}\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ compiler(\"cuda\") }}\n    - make\n\ntest:\n  commands:\n    - test -f \"${PREFIX}/include/nccl.h\"\n    - test -f \"${PREFIX}/lib/libnccl.so\"\n    - test ! -f \"${PREFIX}/lib/libnccl_static.a\"\n\nabout:\n  home: https://developer.nvidia.com/nccl\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: Optimized primitives for collective multi-GPU communication\n\n  description: |\n    The NVIDIA Collective Communications Library (NCCL) implements multi-GPU\n    and multi-node collective communication primitives that are performance\n    optimized for NVIDIA GPUs. NCCL provides routines such as all-gather,\n    all-reduce, broadcast, reduce, reduce-scatter, that are optimized to\n    achieve high bandwidth over PCIe and NVLink high-speed interconnect.\n\n  doc_url: https://docs.nvidia.com/deeplearning/sdk/nccl-developer-guide/docs/index.html\n  dev_url: https://github.com/NVIDIA/nccl\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - leofang\n",
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "url": "https://github.com/NVIDIA/nccl/archive/v2.14.3-1.tar.gz",
 "version": "2.14.3.1"
}