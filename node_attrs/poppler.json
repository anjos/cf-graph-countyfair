{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.65.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/196597548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.66.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198459235.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/202689482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.67.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/204291681.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Pinning",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209382634.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.68.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217414208.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.69.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221549057.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224556410.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.70.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224795354.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.70.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/227458430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.71.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/236624589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.72.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242800161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.73.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.74.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263073224.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.75.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/272207207.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.76.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274920736.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.76.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/282184887.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.77.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/292210150.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.78.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/298239137.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.79.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/310166591.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.80.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/314625421.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/320084098.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.81.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/332698525.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.82.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335985268.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345979885.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libtiff-4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/346458783.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.83.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/357574947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.84.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/368813239.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.85.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400065741.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.87.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/409784753.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.88.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/424143550.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.89.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/443756618.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.90.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454917794.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.90.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496567329.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513697435.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/530765853.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533246594.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544366696.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547067513.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openjpeg24"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554144911.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555176595.json"
   },
   "data": {
    "bot_rerun": 1610662700.483331,
    "branch": "v0.65",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555177406.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v0.65",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555181953.json"
   },
   "data": {
    "bot_rerun": 1610662700.4835737,
    "branch": "v0.65",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openjpeg24"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555182182.json"
   },
   "data": {
    "bot_rerun": 1610662700.4836884,
    "branch": "v0.65",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555263162.json"
   },
   "data": {
    "bot_rerun": 1610694087.5513701,
    "branch": "v0.65",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555266401.json"
   },
   "data": {
    "bot_rerun": 1610703178.7465725,
    "branch": "v0.65",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openjpeg24"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555266704.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v0.65",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555506512.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v0.65",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555584156.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v0.65",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openjpeg24"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557257535.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.89.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557257757.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.89.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557260989.json"
   },
   "data": {
    "bot_rerun": 1611054689.3059864,
    "branch": "0.89.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openjpeg24"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557261633.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.89.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557360662.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.89.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openjpeg24"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747613688.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770431994.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/793061683.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957267847.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "qt515"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957268408.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v0.65",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "qt515"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957268962.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.89.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "qt515"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "v0.65",
    "0.89.x"
   ]
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "poppler",
 "hash_type": "sha256",
 "name": "poppler-split",
 "new_version": "21.12.0",
 "new_version_attempts": {
  "0.87.0": 1,
  "0.88.0": 1,
  "0.89.0": 1,
  "0.90.0": 1,
  "0.90.1": 1,
  "20.10.0": 1,
  "20.11.0": 1,
  "20.12.0": 1,
  "20.12.1": 1,
  "21.10.0": 1,
  "21.11.0": 1,
  "21.12.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "poppler",
   "poppler-qt"
  ]
 },
 "pinning_version": "2022.06.02.23.44.30",
 "raw_meta_yaml": "{% set version = \"22.04.0\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n{% set prefix = 'Library/' if win else '' %}\n\npackage:\n  name: poppler-split\n  version: {{ version }}\n\nsource:\n  url: https://poppler.freedesktop.org/poppler-{{ version }}.tar.xz\n  sha256: 813fb4b90e7bda63df53205c548602bae728887a60f4048aae4dbd9b1927deff\n  patches:\n    - exportsymbols.patch  # [win]\n    - windows-data.patch  # [win]\n    # libtiff uses Unix I/O even on Windows\n    # https://github.com/conda-forge/libtiff-feedstock/pull/51\n    - disable-libtiff-win32-io.patch  # [win]\n    - includesystembeforejpeg.patch  # [win]\n\nbuild:\n  number: 1\n  detect_binary_files_with_prefix: true\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    # Need these CDTs for Qt on Linux. Please keep them alphabetized!\n    - {{ cdt('libselinux-devel') }}     # [linux]\n    - {{ cdt('libxdamage') }}           # [linux]\n    - {{ cdt('libxfixes') }}            # [linux]\n    - {{ cdt('libxscrnsaver-devel') }}  # [linux]\n    - {{ cdt('libxtst-devel') }}        # [linux]\n    - {{ cdt('libxxf86vm') }}           # [linux]\n    - {{ cdt('mesa-libgl-devel') }}     # [linux]\n    - {{ cdt('mesa-libegl-devel') }}    # [linux]\n    - m2-msys2-runtime  # [win]\n    - {{ native }}pkg-config\n    - cmake\n    - make\n    - ninja\n    - {{ posix }}patch\n    - perl 5\n    - gobject-introspection 1.*  # [not win]\n    - boost-cpp {{ boost_cpp }}  # [build_platform != target_platform]\n    - cairo       # [build_platform != target_platform]\n    - curl        # [build_platform != target_platform]\n    - fontconfig  # [build_platform != target_platform]\n    - freetype    # [build_platform != target_platform]\n    - gettext     # [build_platform != target_platform]\n    - glib        # [build_platform != target_platform]\n    - jpeg        # [build_platform != target_platform]\n    - lcms2       # [build_platform != target_platform]\n    - libcurl     # [build_platform != target_platform]\n    - libiconv    # [build_platform != target_platform]\n    - libpng      # [build_platform != target_platform]\n    - libtiff     # [build_platform != target_platform]\n    - nss         # [not win and build_platform != target_platform]\n    - openjpeg    # [build_platform != target_platform]\n    - zlib        # [build_platform != target_platform]\n  host:\n    - boost-cpp {{ boost_cpp }}\n    - cairo\n    - curl\n    - fontconfig\n    - freetype\n    - gettext\n    - glib\n    - jpeg\n    - lcms2\n    - libcurl\n    - libiconv\n    - libpng\n    - libtiff\n    - nss  # [not win]\n    - openjpeg\n    - qt-main  # [not (ppc64le or arm64)]\n    - zlib\n\noutputs:\n  - name: poppler\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # Need these CDTs for Qt on Linux. Please keep them alphabetized!\n        - {{ cdt('libselinux-devel') }}     # [linux]\n        - {{ cdt('libxdamage') }}           # [linux]\n        - {{ cdt('libxfixes') }}            # [linux]\n        - {{ cdt('libxscrnsaver-devel') }}  # [linux]\n        - {{ cdt('libxtst-devel') }}        # [linux]\n        - {{ cdt('libxxf86vm') }}           # [linux]\n        - {{ cdt('mesa-libgl-devel') }}     # [linux]\n        - {{ cdt('mesa-libegl-devel') }}    # [linux]\n        - m2-msys2-runtime  # [win]\n        - {{ native }}pkg-config\n        - cmake\n        - make\n        - ninja\n        - {{ posix }}patch\n        - perl 5\n        - gobject-introspection 1.*  # [not win]\n        - boost-cpp {{ boost_cpp }}  # [build_platform != target_platform]\n        - cairo       # [build_platform != target_platform]\n        - curl        # [build_platform != target_platform]\n        - fontconfig  # [build_platform != target_platform]\n        - freetype    # [build_platform != target_platform]\n        - gettext     # [build_platform != target_platform]\n        - glib        # [build_platform != target_platform]\n        - jpeg        # [build_platform != target_platform]\n        - lcms2       # [build_platform != target_platform]\n        - libcurl     # [build_platform != target_platform]\n        - libiconv    # [build_platform != target_platform]\n        - libpng      # [build_platform != target_platform]\n        - libtiff     # [build_platform != target_platform]\n        - nss         # [not win and build_platform != target_platform]\n        - openjpeg    # [build_platform != target_platform]\n        - zlib        # [build_platform != target_platform]\n      host:\n        - boost-cpp {{ boost_cpp }}\n        - cairo\n        - curl\n        - fontconfig\n        - freetype\n        - gettext\n        - glib\n        - jpeg\n        - lcms2\n        - libcurl\n        - libiconv\n        - libpng\n        - libtiff\n        - nss  # [not win]\n        - openjpeg\n        - zlib\n      run:\n        - {{ pin_compatible('boost-cpp') }}\n        - poppler-data\n    test:\n      commands:\n        - pdfinfo -listenc\n        - pdfunite --help\n        - pdftocairo --help\n\n  - name: poppler-qt\n    build:\n      skip: true  # [ppc64le or arm64]\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # Need these CDTs for Qt on Linux. Please keep them alphabetized!\n        - {{ cdt('libselinux-devel') }}     # [linux]\n        - {{ cdt('libxdamage') }}           # [linux]\n        - {{ cdt('libxfixes') }}            # [linux]\n        - {{ cdt('libxscrnsaver-devel') }}  # [linux]\n        - {{ cdt('libxtst-devel') }}        # [linux]\n        - {{ cdt('libxxf86vm') }}           # [linux]\n        - {{ cdt('mesa-libgl-devel') }}     # [linux]\n        - {{ cdt('mesa-libegl-devel') }}    # [linux]\n        - m2-msys2-runtime  # [win]\n        - {{ native }}pkg-config\n        - cmake\n        - make\n        - ninja\n        - {{ posix }}patch\n        - perl 5\n        - gobject-introspection 1.*  # [not win]\n        - boost-cpp {{ boost_cpp }}  # [build_platform != target_platform]\n        - cairo       # [build_platform != target_platform]\n        - curl        # [build_platform != target_platform]\n        - fontconfig  # [build_platform != target_platform]\n        - freetype    # [build_platform != target_platform]\n        - gettext     # [build_platform != target_platform]\n        - glib        # [build_platform != target_platform]\n        - jpeg        # [build_platform != target_platform]\n        - lcms2       # [build_platform != target_platform]\n        - libcurl     # [build_platform != target_platform]\n        - libiconv    # [build_platform != target_platform]\n        - libpng      # [build_platform != target_platform]\n        - libtiff     # [build_platform != target_platform]\n        - nss         # [not win and build_platform != target_platform]\n        - openjpeg    # [build_platform != target_platform]\n        - zlib        # [build_platform != target_platform]\n      host:\n        - boost-cpp {{ boost_cpp }}\n        - cairo\n        - curl\n        - fontconfig\n        - freetype\n        - gettext\n        - glib\n        - jpeg\n        - lcms2\n        - libcurl\n        - libiconv\n        - libpng\n        - libtiff\n        - nss  # [not win]\n        - openjpeg\n        - qt-main\n        - zlib\n        - {{ pin_subpackage('poppler', exact=True) }}\n      run:\n        - {{ pin_subpackage('poppler', exact=True) }}\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/pkgconfig/poppler-qt5.pc  # [not win]\n        - if not exist %LIBRARY_BIN%\\\\poppler.dll exit 1  # [win]\n\nabout:\n  home: https://poppler.freedesktop.org/\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: The Poppler PDF manipulation library.\n\nextra:\n  feedstock-name: poppler\n  recipe-maintainers:\n    - pkgw\n    - ocefpaf\n    - xhochy\n    - xylar\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://poppler.freedesktop.org/poppler-22.04.0.tar.xz",
 "version": "22.04.0"
}