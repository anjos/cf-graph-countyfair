{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/272587779.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405592502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyjks",
 "hash_type": "sha256",
 "name": "pyjks",
 "new_version": "20.0.0",
 "new_version_attempts": {
  "20.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyjks"
  ]
 },
 "pinning_version": "2020.04.18.00.00.57",
 "raw_meta_yaml": "{% set name = \"pyjks\" %}\n{% set version = \"18.0.0\" %}\n{% set file_ext = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"72e478c59c3fd19c869b5c6f2822be5756c38771f148c315bb71b76cf93482ed\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.{{ file_ext }}'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n  noarch: python\n\nrequirements:\n  host:\n    - python\n    - pip\n    - pyasn1\n    - pyasn1-modules\n    - javaobj-py3\n    - pycryptodome\n    - twofish\n  run:\n    - python\n    - pyasn1\n    - pyasn1-modules\n    - javaobj-py3\n    - pycryptodome\n    - twofish\n\ntest:\n  imports:\n    - jks\n\nabout:\n  home: http://github.com/kurtbrose/pyjks\n  license: MIT\n  license_family: MIT\n  summary: Pure-Python Java Keystore (JKS) library\n  description: \"PyJKS enables Python projects to load and manipulate Java KeyStore\\n(JKS) data without a JVM dependency. PyJKS supports JKS, JCEKS, BKS\\nand UBER (BouncyCastle) keystores. Simply::\\n\\n \\\n    \\ pip install pyjks\\n\\nOr::\\n\\n  easy_install pyjks\\n\\nThen::\\n\\n  import jks\\n\\n  keystore = jks.KeyStore.load('keystore.jks', 'passphrase')\\n\\n  print(ks.private_keys)\\n  print(ks.certs)\\n  print(ks.secret_keys)\\n\\\n    \\nAnd that's barely scratching the surface. Check out `the usage examples on\\nGitHub <https://github.com/kurtbrose/pyjks#usage-examples>`_ for\\nmore!\\n\\n\"\n\nextra:\n  recipe-maintainers:\n    - msarahan\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pyjks/pyjks-18.0.0.tar.gz",
 "version": "18.0.0"
}