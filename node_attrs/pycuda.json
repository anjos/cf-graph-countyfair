{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/600235707.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600238159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600275124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600303075.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600303857.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600348560.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/608467951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683747688.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774771919.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888160650.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda_112_ppc64le_aarch64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898121409.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906838374.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/978914570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052446264.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1104189047.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1130698667.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1173050506.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1173232655.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "pycuda",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
   "dev_url": "http://github.com/inducer/pycuda",
   "doc_url": "https://documen.tician.de/pycuda",
   "home": "http://pypi.python.org/pypi/pycuda",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python wrapper for CUDA"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer"
   ]
  },
  "package": {
   "name": "pycuda",
   "version": "2022.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy"
   ],
   "run": [
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako"
   ]
  },
  "source": {
   "sha256": "cd92e7246bb45ac3452955a110714112674cdf3b4a9e2f4ff25a4159c684e6bb",
   "url": "https://pypi.io/packages/source/p/pycuda/pycuda-2022.2.2.tar.gz"
  },
  "test": {
   "requires": [
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "boost",
    "mako",
    "numpy",
    "python",
    "pytools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
   "dev_url": "http://github.com/inducer/pycuda",
   "doc_url": "https://documen.tician.de/pycuda",
   "home": "http://pypi.python.org/pypi/pycuda",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python wrapper for CUDA"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer"
   ]
  },
  "package": {
   "name": "pycuda",
   "version": "2022.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy"
   ],
   "run": [
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako"
   ]
  },
  "source": {
   "sha256": "cd92e7246bb45ac3452955a110714112674cdf3b4a9e2f4ff25a4159c684e6bb",
   "url": "https://pypi.io/packages/source/p/pycuda/pycuda-2022.2.2.tar.gz"
  },
  "test": {
   "requires": [
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "boost",
    "mako",
    "numpy",
    "python",
    "pytools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
   "dev_url": "http://github.com/inducer/pycuda",
   "doc_url": "https://documen.tician.de/pycuda",
   "home": "http://pypi.python.org/pypi/pycuda",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python wrapper for CUDA"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer"
   ]
  },
  "package": {
   "name": "pycuda",
   "version": "2022.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy"
   ],
   "run": [
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako"
   ]
  },
  "source": {
   "sha256": "cd92e7246bb45ac3452955a110714112674cdf3b4a9e2f4ff25a4159c684e6bb",
   "url": "https://pypi.io/packages/source/p/pycuda/pycuda-2022.2.2.tar.gz"
  },
  "test": {
   "requires": [
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "boost",
    "mako",
    "numpy",
    "python",
    "pytools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
   "dev_url": "http://github.com/inducer/pycuda",
   "doc_url": "https://documen.tician.de/pycuda",
   "home": "http://pypi.python.org/pypi/pycuda",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python wrapper for CUDA"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer"
   ]
  },
  "package": {
   "name": "pycuda",
   "version": "2022.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy"
   ],
   "run": [
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako"
   ]
  },
  "source": {
   "sha256": "cd92e7246bb45ac3452955a110714112674cdf3b4a9e2f4ff25a4159c684e6bb",
   "url": "https://pypi.io/packages/source/p/pycuda/pycuda-2022.2.2.tar.gz"
  },
  "test": {
   "requires": [
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "name": "pycuda",
 "new_version": "2022.2.2",
 "new_version_attempts": {
  "2021.1": 1,
  "2022.1": 1,
  "2022.2": 1,
  "2022.2.1": 1,
  "2022.2.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pycuda"
  ]
 },
 "pinning_version": "2022.12.21.05.25.31",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"pycuda\" %}\n{% set version = \"2022.2.2\" %}\n{% set sha256 = \"cd92e7246bb45ac3452955a110714112674cdf3b4a9e2f4ff25a4159c684e6bb\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  # symlink not implemented in pypy\n  skip: true  # [win and python_impl == \"pypy\"]\n  skip: true  # [cuda_compiler_version in (undefined, \"None\")]\n  missing_dso_whitelist:\n    - '*/libcuda.*'\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n\n  host:\n    - python\n    - pip\n    - boost\n    - numpy\n\n  run:\n    - python\n    - boost\n    - {{ pin_compatible('numpy') }}\n    - pytools >=2011.2\n    - appdirs >=1.4.0\n    - mako\n\ntest:\n  requires:\n    - pytest >=2\n  source_files:\n    - test\n\nabout:\n  home: http://pypi.python.org/pypi/pycuda\n  doc_url: https://documen.tician.de/pycuda\n  dev_url: http://github.com/inducer/pycuda\n  license: MIT\n  license_file: LICENSE\n  summary: Python wrapper for CUDA\n  description: |\n    PyCUDA lets you access GPUs from Python, through the CUDA parallel\n    compute interface.\n      \nextra:\n  recipe-maintainers:\n    - inducer\n",
 "req": {
  "__set__": true,
  "elements": [
   "appdirs",
   "boost",
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "mako",
   "numpy",
   "pip",
   "python",
   "pytools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "boost",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mako",
    "numpy",
    "python",
    "pytools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs >=1.4.0",
    "boost",
    "mako",
    "numpy",
    "python",
    "pytools >=2011.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest >=2"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pycuda/pycuda-2022.2.2.tar.gz",
 "version": "2022.2.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
   "dev_url": "http://github.com/inducer/pycuda",
   "doc_url": "https://documen.tician.de/pycuda",
   "home": "http://pypi.python.org/pypi/pycuda",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python wrapper for CUDA"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer",
    "inducer"
   ]
  },
  "package": {
   "name": "pycuda",
   "version": "2022.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy",
    "python",
    "pip",
    "boost",
    "numpy"
   ],
   "run": [
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako",
    "python",
    "boost",
    "numpy",
    "pytools >=2011.2",
    "appdirs >=1.4.0",
    "mako"
   ]
  },
  "source": {
   "sha256": "cd92e7246bb45ac3452955a110714112674cdf3b4a9e2f4ff25a4159c684e6bb",
   "url": "https://pypi.io/packages/source/p/pycuda/pycuda-2022.2.2.tar.gz"
  },
  "test": {
   "requires": [
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2",
    "pytest >=2"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "boost",
    "mako",
    "numpy",
    "python",
    "pytools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}