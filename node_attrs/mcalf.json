{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/519402700.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552749186.json"
   },
   "data": {
    "bot_rerun": 1618448318.8157613,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560157734.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615479412.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615643593.json"
   },
   "data": {
    "bot_rerun": 1636992688.4590173,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646060663.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779944376.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/809815385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mcalf",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ConorMacBride/mcalf/",
   "license": "BSD-2-Clause",
   "license_file": "LICENSE.rst",
   "summary": "MCALF: Multi-Component Atmospheric Line Fitting"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride"
   ]
  },
  "package": {
   "name": "mcalf",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm"
   ],
   "run": [
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4"
   ]
  },
  "source": {
   "sha256": "16cdf068a469e1c6edc743cce5dabbce694cd0bc36f480f7252850ca9fc5fb7b",
   "url": "https://pypi.io/packages/source/m/mcalf/mcalf-0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf"
   ],
   "imports": [
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "matplotlib-base",
    "numpy",
    "pathos",
    "python",
    "pyyaml",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/ConorMacBride/mcalf/",
   "license": "BSD-2-Clause",
   "license_file": "LICENSE.rst",
   "summary": "MCALF: Multi-Component Atmospheric Line Fitting"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride"
   ]
  },
  "package": {
   "name": "mcalf",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm"
   ],
   "run": [
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4"
   ]
  },
  "source": {
   "sha256": "16cdf068a469e1c6edc743cce5dabbce694cd0bc36f480f7252850ca9fc5fb7b",
   "url": "https://pypi.io/packages/source/m/mcalf/mcalf-0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf"
   ],
   "imports": [
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "name": "mcalf",
 "new_version": "0.3.0",
 "new_version_attempts": {
  "0.2.0": 1,
  "0.2.1": 1,
  "0.3.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ConorMacBride/mcalf/",
   "license": "BSD-2-Clause",
   "license_file": "LICENSE.rst",
   "summary": "MCALF: Multi-Component Atmospheric Line Fitting"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride"
   ]
  },
  "package": {
   "name": "mcalf",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm"
   ],
   "run": [
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4"
   ]
  },
  "source": {
   "sha256": "16cdf068a469e1c6edc743cce5dabbce694cd0bc36f480f7252850ca9fc5fb7b",
   "url": "https://pypi.io/packages/source/m/mcalf/mcalf-0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf"
   ],
   "imports": [
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "matplotlib-base",
    "numpy",
    "pathos",
    "python",
    "pyyaml",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mcalf"
  ]
 },
 "pinning_version": "2021.12.24.10.42.22",
 "raw_meta_yaml": "{% set name = \"mcalf\" %}\n{% set version = \"0.3.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/mcalf-{{ version }}.tar.gz\n  sha256: 16cdf068a469e1c6edc743cce5dabbce694cd0bc36f480f7252850ca9fc5fb7b\n\nbuild:\n  number: 0\n  skip: true  # [py<36]\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n    - setuptools_scm\n  run:\n    - astropy >=4.2\n    - matplotlib-base >=3.1\n    - numpy >=1.18\n    - pathos >=0.2.5\n    - python\n    - pyyaml >=5.1\n    - scikit-learn >=0.22\n    - scipy >=1.4\n\ntest:\n  imports:\n    - mcalf\n    - mcalf.models\n    - mcalf.profiles\n    - mcalf.profiles.voigt\n    - mcalf.profiles.gaussian\n    - mcalf.utils\n    - mcalf.utils.spec\n    - mcalf.utils.smooth\n    - mcalf.utils.mask\n    - mcalf.utils.plot\n    - mcalf.utils.misc\n    - mcalf.visualisation\n  commands:\n    - pip check\n    - python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf\n  requires:\n    - pip\n    - pytest\n\nabout:\n  home: https://github.com/ConorMacBride/mcalf/\n  summary: 'MCALF: Multi-Component Atmospheric Line Fitting'\n  license: BSD-2-Clause\n  license_file: LICENSE.rst\n\nextra:\n  recipe-maintainers:\n    - ConorMacBride\n",
 "req": {
  "__set__": true,
  "elements": [
   "astropy",
   "c_compiler_stub",
   "matplotlib-base",
   "numpy",
   "pathos",
   "pip",
   "python",
   "pyyaml",
   "scikit-learn",
   "scipy",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "c_compiler_stub",
    "matplotlib-base",
    "numpy",
    "pathos",
    "python",
    "pyyaml",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.16.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/m/mcalf/mcalf-0.3.0.tar.gz",
 "version": "0.3.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ConorMacBride/mcalf/",
   "license": "BSD-2-Clause",
   "license_file": "LICENSE.rst",
   "summary": "MCALF: Multi-Component Atmospheric Line Fitting"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride",
    "ConorMacBride"
   ]
  },
  "package": {
   "name": "mcalf",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm",
    "pip",
    "python",
    "setuptools_scm"
   ],
   "run": [
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4",
    "astropy >=4.2",
    "matplotlib-base >=3.1",
    "numpy >=1.18",
    "pathos >=0.2.5",
    "python",
    "pyyaml >=5.1",
    "scikit-learn >=0.22",
    "scipy >=1.4"
   ]
  },
  "source": {
   "sha256": "16cdf068a469e1c6edc743cce5dabbce694cd0bc36f480f7252850ca9fc5fb7b",
   "url": "https://pypi.io/packages/source/m/mcalf/mcalf-0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf",
    "pip check",
    "python -c 'import platform;exit(0 if platform.python_implementation() == \"PyPy\" else 1)' || pytest --pyargs mcalf"
   ],
   "imports": [
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation",
    "mcalf",
    "mcalf.models",
    "mcalf.profiles",
    "mcalf.profiles.voigt",
    "mcalf.profiles.gaussian",
    "mcalf.utils",
    "mcalf.utils.spec",
    "mcalf.utils.smooth",
    "mcalf.utils.mask",
    "mcalf.utils.plot",
    "mcalf.utils.misc",
    "mcalf.visualisation"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "matplotlib-base",
    "numpy",
    "pathos",
    "python",
    "pyyaml",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 }
}