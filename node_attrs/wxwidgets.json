{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/509533639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544966189.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615411927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616507752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango148"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/641760373.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/825124076.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango150"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838809236.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898485803.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/959389192.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/989790262.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "wxwidgets",
 "hash_type": "sha256",
 "name": "wxwidgets",
 "new_version": "3.2.0",
 "new_version_attempts": {
  "3.1.4": 991,
  "3.1.5": 1,
  "3.1.6": 1,
  "3.1.7": 1,
  "3.2.0": 3
 },
 "new_version_errors": {
  "3.1.4": "We found a problem parsing the recipe: \n\n\n",
  "3.2.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.2.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/wxWidgets/wxWidgets/releases/download/v{{ version }}/wxWidgets-{{ version }}.tar.bz2'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "wxwidgets"
  ]
 },
 "pinning_version": "2022.07.06.01.52.02",
 "raw_meta_yaml": "{% set version = \"3.2.0\" %}\n{% set major_minor_version = '.'.join(version.split('.')[:2]) %}\n{% set version_no_dot = version | replace(\".\", \"\") %}\n\npackage:\n  name: wxwidgets\n  version: {{ version }}\n\nsource:\n  url: https://github.com/wxWidgets/wxWidgets/releases/download/v{{ version }}/wxWidgets-{{ version }}.tar.bz2\n  sha256: 356e9b55f1ae3d58ae1fed61478e9b754d46b820913e3bfbc971c50377c1903a\n  patches:\n    # https://github.com/wxWidgets/wxWidgets/pull/22620\n    - 22620-Ensure-that-wxrc-gets-added-to-the-change_install_na.patch\n    # Without this patch, the cross compiled libraries get a host_suffix\n    # which we do not want for conda-forge packages\n    - no_host_suffix_libs.patch\n\nbuild:\n  number: 1\n  run_exports:\n    # ABI seems to be stable between minor versions\n    - {{ pin_subpackage('wxwidgets', max_pin='x.x') }}\n\nrequirements:\n  build:\n    # hmaarrfk\n    # I'm not sure why, without this, I get\n    #\n    # compiling .pyc files...\n    #    File \"/Users/runner/miniforge3/lib/python3.9/site-packages/conda_build/post.py\", line 296, in post_process\n    #      compile_missing_pyc(files, cwd=prefix, python_exe=python_exe,\n    #    File \"/Users/runner/miniforge3/lib/python3.9/site-packages/conda_build/post.py\", line 272, in compile_missing_pyc\n    #      call(args + group, cwd=cwd)\n    #    File \"/Users/runner/miniforge3/lib/python3.9/subprocess.py\", line 349, in call\n    #      with Popen(*popenargs, **kwargs) as p:\n    #    File \"/Users/runner/miniforge3/lib/python3.9/subprocess.py\", line 951, in __init__\n    #      self._execute_child(args, executable, preexec_fn, close_fds,\n    #    File \"/Users/runner/miniforge3/lib/python3.9/subprocess.py\", line 1821, in _execute_child\n    #      raise child_exception_type(errno_num, err_msg, err_filename)\n    # OSError: [Errno 86] Bad CPU type in executable: '/Users/runner/miniforge3/conda-bld/wxwidgets_1657415279542\n    # https://github.com/conda/conda-build/issues/686\n    # https://github.com/conda/conda-build/pull/1146\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - gnuconfig  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake        # [win]\n    - ninja        # [win]\n    - make         # [unix]\n    - pkg-config   # [unix]\n\n    # Necessary CDTs\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('libxcursor-devel') }}      # [linux]\n    - {{ cdt('libxcomposite-devel') }}   # [linux]\n    - {{ cdt('libxtst-devel') }}         # [linux]\n    - {{ cdt('libxdamage-devel') }}      # [linux]\n    - {{ cdt('libxinerama-devel') }}     # [linux]\n    - {{ cdt('libxrandr-devel') }}       # [linux]\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libxxf86vm-devel') }}      # [linux]\n\n  host:\n    - zlib\n    - libpng\n    - libtiff\n    - expat\n    # hmaarrfk 2020/05/25\n    # Even after we specify that we want to use sys jpeg\n    # conda claims we are still overlinking on windows\n    # not too sure why\n    - jpeg\n    - pcre2\n    - xz\n    - libiconv     # [unix]\n    - libcurl      # [unix]\n    - glib         # [linux]\n    - pango        # [linux]\n    - cairo        # [linux]\n    - fontconfig   # [linux]\n    - gdk-pixbuf   # [linux]\n    - gtk3         # [linux]\n    - libglu       # [linux]\n    - mesalib      # [unix]\n    - gst-plugins-base  # [linux]\n    - gstreamer    # [linux]\n    - xorg-libx11  # [linux]\n    - xorg-libsm   # [linux]\n    - xorg-libxi   # [linux]\n  run:\n    - xorg-libx11  # [linux]\n    - xorg-libsm   # [linux]\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libwx_baseu-{{ major_minor_version }}${SHLIB_EXT}  # [linux]\n    # Not sure why OSX is adding these extra modifiers to SHLIB\n    # This is the reason why we aren't including the OSX package in conda-forge just yet.\n    # - test -f ${PREFIX}/lib/libwx_baseu-{{ version }}.0.0${SHLIB_EXT}          # [osx]\n    - test -f ${PREFIX}/include/wx-{{ major_minor_version }}/wx/wx.h           # [unix]\n    - wx-config --prefix  # [unix]\n    - wxrc --help  # [unix]\n    - where wxrc   # [win]\n    - if not exist %LIBRARY_BIN%\\\\wxrc.exe exit 1  # [win]\n    # - if not exist %LIBRARY_BIN%\\\\wxmsw{{ version_no_dot }}u_xrc_vc_x64_custom.dll exit 1  # [win]\n    # They keep changing the name of the dll, but I guess that is ok...\n    - if not exist %LIBRARY_BIN%\\\\wxmsw32u_core_vc.dll exit 1  # [win]\n\nabout:\n  home: https://www.wxwidgets.org/\n  license: LicenseRef-wxWindows\n  license_family: LGPL\n  license_file:\n    - docs/licence.txt\n    - docs/lgpl.txt\n    - docs/gpl.txt\n  summary: Cross-Platform GUI Library\n\n  description: |\n    wxWidgets is a C++ library that lets developers create applications for\n    Windows, macOS, Linux and other platforms with a single code base. It has\n    popular language bindings for Python, Perl, Ruby and many other languages,\n    and unlike other cross-platform toolkits, wxWidgets gives applications a\n    truly native look and feel because it uses the platform's native API rather\n    than emulating the GUI. It's also extensive, free, open-source and mature.\n  doc_url: https://docs.wxwidgets.org/\n  dev_url: https://github.com/wxWidgets/wxWidgets/\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.0/wxWidgets-3.2.0.tar.bz2",
 "version": "3.2.0"
}