{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/257628542.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262261040.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/265910215.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266797118.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/318264561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/344784803.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/353366124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/360009585.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/372682125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378415341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378481071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/381421695.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/384630061.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/391604925.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427537623.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/582498426.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/828807543.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/931917016.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1088023403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gwcelery",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "GWCelery is a simple and reliable package for annotating and orchestrating\nLIGO/Virgo alerts, built from widely used open source components.\n",
   "dev_url": "https://git.ligo.org/emfollow/gwcelery",
   "doc_url": "https://gwcelery.readthedocs.io/",
   "home": "https://git.ligo.org/emfollow/gwcelery",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.rst",
   "summary": "Hipster pipeline for annotating LIGO events"
  },
  "build": {
   "entry_points": [
    "gwcelery = gwcelery:main",
    "gwcelery-condor-submit-helper = gwcelery.tools.condor_submit_helper:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "gwcelery",
   "version": "2.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.8,<3.11",
    "poetry-core >=1.0.0",
    "poetry-dynamic-versioning"
   ],
   "run": [
    "adc-streaming >=2.2.0",
    "astropy >=4.3.1",
    "bilby_pipe >=1.0.6",
    "celery >=5.1",
    "click >=7",
    "comet",
    "dnspython",
    "flask >=2.2",
    "flask-caching",
    "gracedb-sdk >=0.1.5",
    "gwdatafind >=1.1.1",
    "gwpy >=2.0.1",
    "healpy",
    "hop-client >=0.7.0",
    "igwn-alert >=0.2.2",
    "imapclient",
    "jinja2 >=2.11.2",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.7.5",
    "ligo-raven >=2.0",
    "ligo-segments",
    "ligo.em-bright >=1.0",
    "ligo.skymap >=0.4.0",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro >=1.0.1",
    "pesummary",
    "pygcn >=1.0.1",
    "python >=3.8,<3.11",
    "python-confluent-kafka >=1.9.2,<2.0.0",
    "python-lal >=7.1.2",
    "python-ligo-lw >=1.8.3,<2.0.0",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0",
    "zstandard",
    "redis-py",
    "blinker >=1.1",
    "tornado >=5"
   ]
  },
  "source": {
   "patches": [
    "0001-pyproject.toml-update-requirements-for-conda.patch"
   ],
   "sha256": "abb7e0bf3c6cd6e650ccdfe64d705e9da767c177f3dc7de81e18d25395a1c526",
   "url": "https://pypi.io/packages/source/g/gwcelery/gwcelery-2.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -m pytest -ra --pyargs gwcelery.tests",
    "gwcelery report"
   ],
   "requires": [
    "openblas",
    "openssh",
    "pip",
    "fastavro >=1.6.1,<2.0.0",
    "pytest >=3.0",
    "pytest-celery",
    "pytest-flask",
    "pytest-socket",
    "redis-server"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "poetry-dynamic-versioning",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "adc-streaming",
    "astropy",
    "bilby_pipe",
    "blinker",
    "celery",
    "click",
    "comet",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk",
    "gwdatafind",
    "gwpy",
    "healpy",
    "hop-client",
    "igwn-alert",
    "imapclient",
    "jinja2",
    "ligo-followup-advocate",
    "ligo-gracedb",
    "ligo-raven",
    "ligo-segments",
    "ligo.em-bright",
    "ligo.skymap",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro",
    "pesummary",
    "pygcn",
    "python",
    "python-confluent-kafka",
    "python-lal",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "tornado",
    "voeventlib",
    "werkzeug",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "fastavro",
    "openblas",
    "openssh",
    "pip",
    "pytest",
    "pytest-celery",
    "pytest-flask",
    "pytest-socket",
    "redis-server"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "GWCelery is a simple and reliable package for annotating and orchestrating\nLIGO/Virgo alerts, built from widely used open source components.\n",
   "dev_url": "https://git.ligo.org/emfollow/gwcelery",
   "doc_url": "https://gwcelery.readthedocs.io/",
   "home": "https://git.ligo.org/emfollow/gwcelery",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.rst",
   "summary": "Hipster pipeline for annotating LIGO events"
  },
  "build": {
   "entry_points": [
    "gwcelery = gwcelery:main",
    "gwcelery-condor-submit-helper = gwcelery.tools.condor_submit_helper:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "gwcelery",
   "version": "2.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.8,<3.11",
    "poetry-core >=1.0.0",
    "poetry-dynamic-versioning"
   ],
   "run": [
    "adc-streaming >=2.2.0",
    "astropy >=4.3.1",
    "bilby_pipe >=1.0.6",
    "celery >=5.1",
    "click >=7",
    "comet",
    "dnspython",
    "flask >=2.2",
    "flask-caching",
    "gracedb-sdk >=0.1.5",
    "gwdatafind >=1.1.1",
    "gwpy >=2.0.1",
    "healpy",
    "hop-client >=0.7.0",
    "igwn-alert >=0.2.2",
    "imapclient",
    "jinja2 >=2.11.2",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.7.5",
    "ligo-raven >=2.0",
    "ligo-segments",
    "ligo.em-bright >=1.0",
    "ligo.skymap >=0.4.0",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro >=1.0.1",
    "pesummary",
    "pygcn >=1.0.1",
    "python >=3.8,<3.11",
    "python-confluent-kafka >=1.9.2,<2.0.0",
    "python-lal >=7.1.2",
    "python-ligo-lw >=1.8.3,<2.0.0",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0",
    "zstandard",
    "redis-py",
    "blinker >=1.1",
    "tornado >=5"
   ]
  },
  "source": {
   "patches": [
    "0001-pyproject.toml-update-requirements-for-conda.patch"
   ],
   "sha256": "abb7e0bf3c6cd6e650ccdfe64d705e9da767c177f3dc7de81e18d25395a1c526",
   "url": "https://pypi.io/packages/source/g/gwcelery/gwcelery-2.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -m pytest -ra --pyargs gwcelery.tests",
    "gwcelery report"
   ],
   "requires": [
    "openblas",
    "openssh",
    "pip",
    "fastavro >=1.6.1,<2.0.0",
    "pytest >=3.0",
    "pytest-celery",
    "pytest-flask",
    "pytest-socket",
    "redis-server"
   ]
  }
 },
 "name": "gwcelery",
 "new_version": "2.0.0",
 "new_version_attempts": {
  "0.13.0": 1,
  "0.13.1": 1,
  "1.0.0": 1,
  "1.0.1": 1,
  "2.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gwcelery"
  ]
 },
 "pinning_version": "2022.10.14.15.41.33",
 "raw_meta_yaml": "{% set name = \"gwcelery\" %}\n{% set version = \"2.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: abb7e0bf3c6cd6e650ccdfe64d705e9da767c177f3dc7de81e18d25395a1c526\n  patches:\n    - 0001-pyproject.toml-update-requirements-for-conda.patch\n\nbuild:\n  entry_points:\n    - gwcelery = gwcelery:main\n    - gwcelery-condor-submit-helper = gwcelery.tools.condor_submit_helper:main\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.8,<3.11\n    - poetry-core >=1.0.0\n    - poetry-dynamic-versioning\n  run:\n    - adc-streaming >=2.2.0\n    - astropy >=4.3.1\n    - bilby_pipe >=1.0.6\n    - celery >=5.1\n    - click >=7\n    - comet\n    - dnspython\n    - flask >=2.2\n    - flask-caching\n    - gracedb-sdk >=0.1.5\n    - gwdatafind >=1.1.1\n    - gwpy >=2.0.1\n    - healpy\n    - hop-client >=0.7.0\n    - igwn-alert >=0.2.2\n    - imapclient\n    - jinja2 >=2.11.2\n    - ligo-followup-advocate >=1.1.6\n    - ligo-gracedb >=2.7.5\n    - ligo-raven >=2.0\n    - ligo-segments\n    - ligo.em-bright >=1.0\n    - ligo.skymap >=0.4.0\n    - lscsoft-glue\n    - lxml\n    - numpy\n    - p_astro >=1.0.1\n    - pesummary\n    - pygcn >=1.0.1\n    - python >=3.8,<3.11\n    - python-confluent-kafka >=1.9.2,<2.0.0\n    - python-lal >=7.1.2\n    - python-ligo-lw >=1.8.3,<2.0.0\n    - safe-netrc\n    - sentry-sdk\n    - service_identity\n    - voeventlib >=1.2\n    - werkzeug >=0.15.0\n    - zstandard\n    # extras for celery[redis]\n    - redis-py\n    # extras for sentry-sdk[flask]\n    - blinker >=1.1\n    # extras for sentry-sdk[tornado]\n    - tornado >=5\n\ntest:\n  requires:\n    # for scikit-learn\n    - openblas\n    # for mpi\n    - openssh\n    # for pip check\n    - pip\n    # for gwcelery's test suite\n    - fastavro >=1.6.1,<2.0.0\n    - pytest >=3.0\n    - pytest-celery\n    - pytest-flask\n    - pytest-socket\n    - redis-server\n  commands:\n    # check requirements\n    - python -m pip check\n    # run test suite\n    - python -m pytest -ra --pyargs gwcelery.tests\n    # check entry points\n    - gwcelery report\n\nabout:\n  home: https://git.ligo.org/emfollow/gwcelery\n  dev_url: https://git.ligo.org/emfollow/gwcelery\n  doc_url: https://gwcelery.readthedocs.io/\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE.rst\n  summary: Hipster pipeline for annotating LIGO events\n  description: |\n    GWCelery is a simple and reliable package for annotating and orchestrating\n    LIGO/Virgo alerts, built from widely used open source components.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req": {
  "__set__": true,
  "elements": [
   "adc-streaming",
   "astropy",
   "bilby_pipe",
   "blinker",
   "celery",
   "click",
   "comet",
   "dnspython",
   "flask",
   "flask-caching",
   "gracedb-sdk",
   "gwdatafind",
   "gwpy",
   "healpy",
   "hop-client",
   "igwn-alert",
   "imapclient",
   "jinja2",
   "ligo-followup-advocate",
   "ligo-gracedb",
   "ligo-raven",
   "ligo-segments",
   "ligo.em-bright",
   "ligo.skymap",
   "lscsoft-glue",
   "lxml",
   "numpy",
   "p_astro",
   "pesummary",
   "pip",
   "poetry-core",
   "poetry-dynamic-versioning",
   "pygcn",
   "python",
   "python-confluent-kafka",
   "python-lal",
   "python-ligo-lw",
   "redis-py",
   "safe-netrc",
   "sentry-sdk",
   "service_identity",
   "tornado",
   "voeventlib",
   "werkzeug",
   "zstandard"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "poetry-dynamic-versioning",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "adc-streaming",
    "astropy",
    "bilby_pipe",
    "blinker",
    "celery",
    "click",
    "comet",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk",
    "gwdatafind",
    "gwpy",
    "healpy",
    "hop-client",
    "igwn-alert",
    "imapclient",
    "jinja2",
    "ligo-followup-advocate",
    "ligo-gracedb",
    "ligo-raven",
    "ligo-segments",
    "ligo.em-bright",
    "ligo.skymap",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro",
    "pesummary",
    "pygcn",
    "python",
    "python-confluent-kafka",
    "python-lal",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "tornado",
    "voeventlib",
    "werkzeug",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "fastavro",
    "openblas",
    "openssh",
    "pip",
    "pytest",
    "pytest-celery",
    "pytest-flask",
    "pytest-socket",
    "redis-server"
   ]
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core >=1.0.0",
    "poetry-dynamic-versioning",
    "python >=3.8,<3.11"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "adc-streaming >=2.2.0",
    "astropy >=4.3.1",
    "bilby_pipe >=1.0.6",
    "blinker >=1.1",
    "celery >=5.1",
    "click >=7",
    "comet",
    "dnspython",
    "flask >=2.2",
    "flask-caching",
    "gracedb-sdk >=0.1.5",
    "gwdatafind >=1.1.1",
    "gwpy >=2.0.1",
    "healpy",
    "hop-client >=0.7.0",
    "igwn-alert >=0.2.2",
    "imapclient",
    "jinja2 >=2.11.2",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.7.5",
    "ligo-raven >=2.0",
    "ligo-segments",
    "ligo.em-bright >=1.0",
    "ligo.skymap >=0.4.0",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro >=1.0.1",
    "pesummary",
    "pygcn >=1.0.1",
    "python >=3.8,<3.11",
    "python-confluent-kafka >=1.9.2,<2.0.0",
    "python-lal >=7.1.2",
    "python-ligo-lw >=1.8.3,<2.0.0",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "tornado >=5",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "fastavro >=1.6.1,<2.0.0",
    "openblas",
    "openssh",
    "pip",
    "pytest >=3.0",
    "pytest-celery",
    "pytest-flask",
    "pytest-socket",
    "redis-server"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/g/gwcelery/gwcelery-2.0.0.tar.gz",
 "version": "2.0.0"
}