{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/204003626.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/211770115.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.18.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222632820.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/241488331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.18.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/282098508.json"
   },
   "data": {
    "bot_rerun": 1579272528.2005212,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/332855005.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339390860.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472176106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513593012.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559928241.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601139486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/608142535.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/614637029.json"
   },
   "data": {
    "bot_rerun": 1620832402.9453857,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/629157420.json"
   },
   "data": {
    "bot_rerun": 1620832402.945574,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/630632453.json"
   },
   "data": {
    "bot_rerun": 1620832402.945672,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643258264.json"
   },
   "data": {
    "bot_rerun": 1632194139.3340569,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/660830618.json"
   },
   "data": {
    "bot_rerun": 1632194139.3343282,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/724033545.json"
   },
   "data": {
    "bot_rerun": 1632194139.3344767,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/736895477.json"
   },
   "data": {
    "bot_rerun": 1632194139.3346345,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750743858.json"
   },
   "data": {
    "bot_rerun": 1643890831.481135,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802595117.json"
   },
   "data": {
    "bot_rerun": 1647977862.2558835,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/819445795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/839253628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/853926811.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pystan",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyStan provides a Python interface to Stan, a package for Bayesian\ninference using the No-U-Turn sampler, a variant of Hamiltonian Monte\nCarlo.\n",
   "dev_url": "https://github.com/stan-dev/pystan",
   "doc_url": "https://pystan.readthedocs.org/",
   "home": "http://mc-stan.org/interfaces/pystan.html",
   "license": "ISC",
   "license_file": "LICENSE",
   "summary": "Python interface to Stan, a package for Bayesian inference"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda"
   ]
  },
  "package": {
   "name": "pystan",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry"
   ],
   "run": [
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6"
   ]
  },
  "source": {
   "sha256": "aab87b5d1443ff41d786bd8770d1ce03c3c695adcb309c2cfa2c4ea95bd332ab",
   "url": "https://pypi.io/packages/source/p/pystan/pystan-3.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "poetry",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "clikit",
    "cxx_compiler_stub",
    "httpstan",
    "numpy",
    "pysimdjson",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyStan provides a Python interface to Stan, a package for Bayesian\ninference using the No-U-Turn sampler, a variant of Hamiltonian Monte\nCarlo.\n",
   "dev_url": "https://github.com/stan-dev/pystan",
   "doc_url": "https://pystan.readthedocs.org/",
   "home": "http://mc-stan.org/interfaces/pystan.html",
   "license": "ISC",
   "license_file": "LICENSE",
   "summary": "Python interface to Stan, a package for Bayesian inference"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda"
   ]
  },
  "package": {
   "name": "pystan",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry"
   ],
   "run": [
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6"
   ]
  },
  "source": {
   "sha256": "aab87b5d1443ff41d786bd8770d1ce03c3c695adcb309c2cfa2c4ea95bd332ab",
   "url": "https://pypi.io/packages/source/p/pystan/pystan-3.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins"
   ]
  }
 },
 "name": "pystan",
 "new_version": "3.4.0",
 "new_version_attempts": {
  "3.0.0": 1,
  "3.0.1": 1,
  "3.0.2": 1,
  "3.1.0": 1,
  "3.1.1": 2,
  "3.2.0": 1,
  "3.3.0": 2,
  "3.4.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "PyStan provides a Python interface to Stan, a package for Bayesian\ninference using the No-U-Turn sampler, a variant of Hamiltonian Monte\nCarlo.\n",
   "dev_url": "https://github.com/stan-dev/pystan",
   "doc_url": "https://pystan.readthedocs.org/",
   "home": "http://mc-stan.org/interfaces/pystan.html",
   "license": "ISC",
   "license_file": "LICENSE",
   "summary": "Python interface to Stan, a package for Bayesian inference"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda"
   ]
  },
  "package": {
   "name": "pystan",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry"
   ],
   "run": [
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6"
   ]
  },
  "source": {
   "sha256": "aab87b5d1443ff41d786bd8770d1ce03c3c695adcb309c2cfa2c4ea95bd332ab",
   "url": "https://pypi.io/packages/source/p/pystan/pystan-3.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "poetry",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "clikit",
    "cxx_compiler_stub",
    "httpstan",
    "numpy",
    "pysimdjson",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "PyStan provides a Python interface to Stan, a package for Bayesian\ninference using the No-U-Turn sampler, a variant of Hamiltonian Monte\nCarlo.\n",
   "dev_url": "https://github.com/stan-dev/pystan",
   "doc_url": "https://pystan.readthedocs.org/",
   "home": "http://mc-stan.org/interfaces/pystan.html",
   "license": "ISC",
   "license_file": "LICENSE",
   "summary": "Python interface to Stan, a package for Bayesian inference"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "rmax",
    "dhirschfeld",
    "mxr-conda",
    "rmax",
    "dhirschfeld",
    "mxr-conda"
   ]
  },
  "package": {
   "name": "pystan",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry",
    "python",
    "pip",
    "numpy",
    "scipy",
    "setuptools",
    "poetry"
   ],
   "run": [
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6",
    "python",
    "cxx_compiler_stub",
    "numpy",
    "setuptools",
    "clikit >=0.6,<0.7",
    "httpstan >=4.5,<4.6",
    "pysimdjson >=3.2",
    "aiohttp >=3.6"
   ]
  },
  "source": {
   "sha256": "aab87b5d1443ff41d786bd8770d1ce03c3c695adcb309c2cfa2c4ea95bd332ab",
   "url": "https://pypi.io/packages/source/p/pystan/pystan-3.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins",
    "stan",
    "stan.common",
    "stan.fit",
    "stan.model",
    "stan.plugins"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "poetry",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "clikit",
    "cxx_compiler_stub",
    "httpstan",
    "numpy",
    "pysimdjson",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pystan"
  ]
 },
 "pinning_version": "2022.02.15.20.00.46",
 "pre_pr_migrator_attempts": {
  "python310": 121,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python310": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2209394246\">bot CI job</a>): main: ['linux_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package httpstan-4.5.0-py37h2527ec5_0 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'osx_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package httpstan-4.5.0-py37h737db71_0 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'osx_arm64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested httpstan >=4.5,<4.6\\n', 'osx_arm64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested httpstan >=4.5,<4.6\\n', 'osx_arm64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested httpstan >=4.5,<4.6\\n']",
  "python39": "not solvable: ['win_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pystan\" %}\n{% set version = \"3.2.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: aab87b5d1443ff41d786bd8770d1ce03c3c695adcb309c2cfa2c4ea95bd332ab\n\nbuild:\n  number: 0\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('cxx') }} \n  host:\n    - python\n    - pip\n    - numpy\n    - scipy\n    - setuptools\n    - poetry \n  run:\n    - python\n    - {{ compiler('cxx') }}\n    - {{ pin_compatible('numpy') }}\n    - setuptools\n    - clikit >=0.6,<0.7\n    - httpstan >=4.5,<4.6\n    - pysimdjson >=3.2\n    - aiohttp >=3.6\n\ntest:\n  imports:\n    - stan\n    - stan.common\n    - stan.fit\n    - stan.model\n    - stan.plugins\n\nabout:\n  home: http://mc-stan.org/interfaces/pystan.html\n  license: ISC\n  license_file: LICENSE\n  summary: Python interface to Stan, a package for Bayesian inference\n  description: |\n    PyStan provides a Python interface to Stan, a package for Bayesian\n    inference using the No-U-Turn sampler, a variant of Hamiltonian Monte\n    Carlo.\n  doc_url: https://pystan.readthedocs.org/\n  dev_url: https://github.com/stan-dev/pystan\n\nextra:\n  recipe-maintainers:\n    - rmax\n    - dhirschfeld\n    - mxr-conda\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiohttp",
   "clikit",
   "cxx_compiler_stub",
   "httpstan",
   "numpy",
   "pip",
   "poetry",
   "pysimdjson",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "poetry",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "clikit",
    "cxx_compiler_stub",
    "httpstan",
    "numpy",
    "pysimdjson",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "poetry",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp >=3.6",
    "clikit >=0.6,<0.7",
    "cxx_compiler_stub",
    "httpstan >=4.5,<4.6",
    "numpy",
    "pysimdjson >=3.2",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pystan/pystan-3.2.0.tar.gz",
 "version": "3.2.0"
}