{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/753530158.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753629423.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/759500211.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/772815207.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774782746.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776206666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779193100.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "tabmat",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "tabmat provides efficient tools for representing tabular data as a mix of\ndense, sparse and categorical subcomponents, resulting in 100x faster\nperformance on some machine learning problems!\n",
   "dev_url": "https://github.com/Quantco/tabmat",
   "doc_url": "https://tabmat.readthedocs.io/",
   "home": "https://github.com/Quantco/tabmat",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Efficient matrix representations for working with tabular data "
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
   "script_env": [
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly"
   ]
  },
  "package": {
   "name": "tabmat",
   "version": "3.0.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp"
   ],
   "host": [
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d760f2e6d7ee12841b899e72e4ab4509861dd18df057aecd2342c0fb2be71054",
   "url": "https://pypi.io/packages/source/t/tabmat/tabmat-3.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "python",
    "setuptools_scm",
    "xsimd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "tabmat provides efficient tools for representing tabular data as a mix of\ndense, sparse and categorical subcomponents, resulting in 100x faster\nperformance on some machine learning problems!\n",
   "dev_url": "https://github.com/Quantco/tabmat",
   "doc_url": "https://tabmat.readthedocs.io/",
   "home": "https://github.com/Quantco/tabmat",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Efficient matrix representations for working with tabular data "
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
   "script_env": [
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly"
   ]
  },
  "package": {
   "name": "tabmat",
   "version": "3.0.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d760f2e6d7ee12841b899e72e4ab4509861dd18df057aecd2342c0fb2be71054",
   "url": "https://pypi.io/packages/source/t/tabmat/tabmat-3.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "tabmat",
 "new_version": "3.0.7",
 "new_version_attempts": {
  "3.0.3": 1,
  "3.0.4": 1,
  "3.0.5": 1,
  "3.0.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "tabmat provides efficient tools for representing tabular data as a mix of\ndense, sparse and categorical subcomponents, resulting in 100x faster\nperformance on some machine learning problems!\n",
   "dev_url": "https://github.com/Quantco/tabmat",
   "doc_url": "https://tabmat.readthedocs.io/",
   "home": "https://github.com/Quantco/tabmat",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Efficient matrix representations for working with tabular data "
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
   "script_env": [
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly"
   ]
  },
  "package": {
   "name": "tabmat",
   "version": "3.0.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d760f2e6d7ee12841b899e72e4ab4509861dd18df057aecd2342c0fb2be71054",
   "url": "https://pypi.io/packages/source/t/tabmat/tabmat-3.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "python",
    "setuptools_scm",
    "xsimd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "tabmat provides efficient tools for representing tabular data as a mix of\ndense, sparse and categorical subcomponents, resulting in 100x faster\nperformance on some machine learning problems!\n",
   "dev_url": "https://github.com/Quantco/tabmat",
   "doc_url": "https://tabmat.readthedocs.io/",
   "home": "https://github.com/Quantco/tabmat",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Efficient matrix representations for working with tabular data "
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
   "script_env": [
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly"
   ]
  },
  "package": {
   "name": "tabmat",
   "version": "3.0.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d760f2e6d7ee12841b899e72e4ab4509861dd18df057aecd2342c0fb2be71054",
   "url": "https://pypi.io/packages/source/t/tabmat/tabmat-3.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "tabmat",
    "tabmat",
    "tabmat"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "python",
    "setuptools_scm",
    "xsimd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tabmat"
  ]
 },
 "pinning_version": "2021.11.12.06.15.55",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"tabmat\" %}\n{% set version = \"3.0.6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d760f2e6d7ee12841b899e72e4ab4509861dd18df057aecd2342c0fb2be71054\n\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  script_env:\n    - GLM_ARCHITECTURE=default\n\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n  host:\n    - python\n    - cython\n    - jemalloc-local  # [not win]\n    - llvm-openmp     # [osx]\n    - mako\n    - numpy\n    - pip\n    - setuptools_scm\n    - xsimd\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - pandas\n    - scipy\n\ntest:\n  requires:\n    - pip\n  commands:\n    - pip check\n  imports:\n    - tabmat\n\nabout:\n  home: https://github.com/Quantco/tabmat\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Efficient matrix representations for working with tabular data '\n  description: |\n    tabmat provides efficient tools for representing tabular data as a mix of\n    dense, sparse and categorical subcomponents, resulting in 100x faster \n    performance on some machine learning problems!\n  doc_url: https://tabmat.readthedocs.io/\n  dev_url: https://github.com/Quantco/tabmat\n\nextra:\n  recipe-maintainers:\n    - MarcAntoineSchmidtQC\n    - xhochy\n    - tbenthompson\n    - jtilly\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "jemalloc-local",
   "libgomp",
   "llvm-openmp",
   "mako",
   "numpy",
   "pandas",
   "pip",
   "python",
   "scipy",
   "setuptools_scm",
   "xsimd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools_scm",
    "xsimd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "numpy",
    "openmp",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "jemalloc-local",
    "llvm-openmp",
    "mako",
    "numpy",
    "pip",
    "python",
    "setuptools_scm",
    "xsimd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/t/tabmat/tabmat-3.0.6.tar.gz",
 "version": "3.0.6",
 "win_64_meta_yaml": {
  "about": {
   "description": "tabmat provides efficient tools for representing tabular data as a mix of\ndense, sparse and categorical subcomponents, resulting in 100x faster\nperformance on some machine learning problems!\n",
   "dev_url": "https://github.com/Quantco/tabmat",
   "doc_url": "https://tabmat.readthedocs.io/",
   "home": "https://github.com/Quantco/tabmat",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Efficient matrix representations for working with tabular data "
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
   "script_env": [
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default",
    "GLM_ARCHITECTURE=default"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly",
    "MarcAntoineSchmidtQC",
    "xhochy",
    "tbenthompson",
    "jtilly"
   ]
  },
  "package": {
   "name": "tabmat",
   "version": "3.0.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd",
    "python",
    "cython",
    "mako",
    "numpy",
    "pip",
    "setuptools_scm",
    "xsimd"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy",
    "python",
    "numpy",
    "pandas",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d760f2e6d7ee12841b899e72e4ab4509861dd18df057aecd2342c0fb2be71054",
   "url": "https://pypi.io/packages/source/t/tabmat/tabmat-3.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat",
    "tabmat"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mako",
    "numpy",
    "pip",
    "python",
    "setuptools_scm",
    "xsimd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}