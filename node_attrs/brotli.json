{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198230600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215214597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216633818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224950967.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/287648398.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/476879693.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482161274.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/497424609.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500651630.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551573613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679813735.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771054053.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896928057.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "brotli",
 "hash_type": "sha256",
 "name": "brotli-split",
 "new_version": "1.0.9",
 "new_version_attempts": {
  "1.0.9": 50
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "brotli",
   "brotli-bin",
   "brotli-python",
   "libbrotlicommon",
   "libbrotlidec",
   "libbrotlienc"
  ]
 },
 "pinning_version": "2022.04.01.00.07.17",
 "pre_pr_migrator_attempts": {
  "pypy37": 1
 },
 "pre_pr_migrator_status": {
  "pypy37": "not solvable: master: ['linux_aarch64_: Encountered problems while solving.\\nProblem: nothing provides openssl >=1.0.2p,<1.0.3a needed by python-2.7.15-h938d71a_1006\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.0.9\" %}\n\npackage:\n  name: brotli-split\n  version: {{ version }}\n\nsource:\n  fn: brotli-{{ version }}.tar.gz\n  url: https://github.com/google/brotli/archive/v{{ version }}.tar.gz\n  sha256: f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46\n  patches:\n    - 0001-Add-separate-options-to-disable-shared-static-librar.patch\n    # remove this patch when next release comes out\n    - 0002-Fix-pkgconfig-rpath.patch\n\nbuild:\n  number: 7\n  run_exports:\n    # https://abi-laboratory.pro/index.php?view=timeline&l=brotli\n    # No minor versions to ensure ABI compatibility history\n    - {{ pin_subpackage('brotli', max_pin='x.x') }}\n\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - ninja\n  host:\n\n\noutputs:\n  - name: libbrotlicommon\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libbrotlicommon\", max_pin=\"x.x\") }}\n    script: install_library.sh  # [unix]\n    script: install_library.bat  # [win]\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - ninja\n    test:\n      commands:\n        - test -f $PREFIX/lib/libbrotlicommon$SHLIB_EXT  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\brotlicommon.dll exit 1         # [win]\n        - if not exist %LIBRARY_LIB%\\\\brotlicommon.lib exit 1         # [win]\n        # CFEP-18: Static libs shouldn't be part of the main package\n        - test ! -f $PREFIX/lib/libbrotlicommon-static.a   # [unix]\n        - if exist %LIBRARY_LIB%\\\\brotlicommon-static.lib exit 1  # [win]\n  - name: libbrotlienc\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libbrotlienc\", max_pin=\"x.x\") }}\n    script: install_library.sh  # [unix]\n    script: install_library.bat  # [win]\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libbrotlicommon\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libbrotlicommon\", exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libbrotlienc$SHLIB_EXT     # [unix]\n        - if not exist %LIBRARY_BIN%\\\\brotlienc.dll exit 1            # [win]\n        - if not exist %LIBRARY_LIB%\\\\brotlienc.lib exit 1            # [win]\n        # CFEP-18: Static libs shouldn't be part of the main package\n        - test ! -f $PREFIX/lib/libbrotlienc-static.a      # [unix]\n        - if exist %LIBRARY_LIB%\\\\brotlienc-static.lib exit 1     # [win]\n  - name: libbrotlidec\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libbrotlidec\", max_pin=\"x.x\") }}\n    script: install_library.sh  # [unix]\n    script: install_library.bat  # [win]\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libbrotlicommon\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libbrotlicommon\", exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libbrotlidec$SHLIB_EXT     # [unix]\n        - if not exist %LIBRARY_BIN%\\\\brotlidec.dll exit 1            # [win]\n        - if not exist %LIBRARY_LIB%\\\\brotlidec.lib exit 1            # [win]\n        # CFEP-18: Static libs shouldn't be part of the main package\n        - test ! -f $PREFIX/lib/libbrotlidec-static.a      # [unix]\n        - if exist %LIBRARY_LIB%\\\\brotlidec-static.lib exit 1     # [win]\n  - name: brotli-bin\n    script: install_library.sh  # [unix]\n    script: install_library.bat  # [win]\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libbrotlienc\", exact=True) }}\n        - {{ pin_subpackage(\"libbrotlidec\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libbrotlienc\", exact=True) }}\n        - {{ pin_subpackage(\"libbrotlidec\", exact=True) }}\n    test:\n      commands:\n        - brotli --help\n  - name: brotli\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libbrotlicommon\", max_pin=\"x.x\") }}\n        - {{ pin_subpackage(\"libbrotlienc\", max_pin=\"x.x\") }}\n        - {{ pin_subpackage(\"libbrotlidec\", max_pin=\"x.x\") }}\n    script: install_library.sh  # [unix]\n    script: install_library.bat  # [win]\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libbrotlienc\", exact=True) }}\n        - {{ pin_subpackage(\"libbrotlidec\", exact=True) }}\n        - {{ pin_subpackage(\"brotli-bin\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libbrotlienc\", exact=True) }}\n        - {{ pin_subpackage(\"libbrotlidec\", exact=True) }}\n        - {{ pin_subpackage(\"brotli-bin\", exact=True) }}\n    test:\n      commands:\n        - brotli --help\n        - test -f $PREFIX/lib/libbrotlienc$SHLIB_EXT     # [unix]\n        - test -f $PREFIX/lib/libbrotlidec$SHLIB_EXT     # [unix]\n        - test -f $PREFIX/lib/libbrotlicommon$SHLIB_EXT  # [unix]\n        - test -f $PREFIX/include/brotli/encode.h        # [unix]\n        - if not exist %LIBRARY_BIN%\\\\brotli.exe exit 1               # [win]\n        - if not exist %LIBRARY_BIN%\\\\brotlicommon.dll exit 1         # [win]\n        - if not exist %LIBRARY_BIN%\\\\brotlidec.dll exit 1            # [win]\n        - if not exist %LIBRARY_BIN%\\\\brotlienc.dll exit 1            # [win]\n        - if not exist %LIBRARY_LIB%\\\\brotlicommon.lib exit 1         # [win]\n        - if not exist %LIBRARY_LIB%\\\\brotlidec.lib exit 1            # [win]\n        - if not exist %LIBRARY_LIB%\\\\brotlienc.lib exit 1            # [win]\n        - if not exist %LIBRARY_INC%\\\\brotli\\\\encode.h exit 1         # [win]\n\n        # CFEP-18: Static libs shouldn't be part of the main package\n        - test ! -f $PREFIX/lib/libbrotlienc-static.a      # [unix]\n        - test ! -f $PREFIX/lib/libbrotlidec-static.a      # [unix]\n        - test ! -f $PREFIX/lib/libbrotlicommon-static.a   # [unix]\n        - if exist %LIBRARY_LIB%\\\\brotlicommon-static.lib exit 1  # [win]\n        - if exist %LIBRARY_LIB%\\\\brotlidec-static.lib exit 1     # [win]\n        - if exist %LIBRARY_LIB%\\\\brotlienc-static.lib exit 1     # [win]\n\n  - name: brotli-python\n    build:\n      run_exports:\n        - {{ pin_subpackage('brotli') }}\n    script: install_python.sh  # [unix]\n    script: install_python.bat  # [win]\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - ninja\n      host:\n        - python\n        - pip\n        - {{ pin_subpackage('brotli', exact=True) }}\n      run:\n        - python \n    test:\n      imports:\n        - brotli\n\nabout:\n  home: http://github.com/google/brotli\n  license: MIT\n  license_file: LICENSE\n  summary: Brotli compression format\n\nextra:\n  recipe-maintainers:\n    - wesm\n    - xhochy\n    - CJ-Wright\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/google/brotli/archive/v1.0.9.tar.gz",
 "version": "1.0.9"
}