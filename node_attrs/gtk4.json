{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1733f98d-652d-40dc-ad02-363c789ff7d3.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango148"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601514041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/604191244.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/629499474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/666391534.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/696437749.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/717971690.json"
   },
   "data": {
    "bot_rerun": 1636884723.524609,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750045848.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/769592856.json"
   },
   "data": {
    "bot_rerun": 1636884723.524932,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/780058843.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/805079997.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812089172.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/823426577.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango150"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/848566888.json"
   },
   "data": {
    "bot_rerun": 1647618958.6692889,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/882753377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/883592299.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/883895795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/922219034.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/930336291.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995275761.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1009748429.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1024327223.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gtk4",
 "hash_type": "sha256",
 "name": "gtk4",
 "new_version": "4.7.2",
 "new_version_attempts": {
  "4.1.2": 1,
  "4.2.0": 1,
  "4.3.0": 1,
  "4.3.1": 1,
  "4.3.2": 1,
  "4.4.0": 1,
  "4.5.0": 2,
  "4.5.1": 1,
  "4.6.0": 1,
  "4.6.1": 2,
  "4.6.2": 1,
  "4.6.3": 1,
  "4.7.0": 1,
  "4.7.1": 1,
  "4.7.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gtk4"
  ]
 },
 "pinning_version": "2022.08.11.15.16.27",
 "raw_meta_yaml": "{% set name = \"gtk\" %}\n{% set version = \"4.6.3\" %}\n{% set version_majmin = '.'.join(version.split('.', 2)[:2]) %}\n\npackage:\n  name: gtk4  # note customization\n  version: {{ version }}\n\nsource:\n  url: https://download.gnome.org/sources/{{ name }}/{{ version_majmin }}/{{ name }}-{{ version }}.tar.xz\n  sha256: a57acd0e4482981700fdf86596c7413cb61ef47f75e4747fda809e8231b8d96c\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage('gtk4', max_pin='x') }}\n    # gtk apps need at least a default icon set for fallback\n    - adwaita-icon-theme\n  missing_dso_whitelist:\n    - /usr/lib/libcups.2.dylib    # [osx]\n\nrequirements:\n  build:\n    - meson\n    - ninja\n    - gobject-introspection\n    - pkg-config\n    - {{ compiler('c') }}\n    - {{ cdt('mesa-libegl-devel') }}  # [linux]\n  host:\n    - cairo\n    - epoxy\n    - freetype\n    - gdk-pixbuf\n    - gettext  # [osx]\n    - glib\n    - harfbuzz\n    - libjpeg-turbo  # [win]\n    - libgraphene\n    - libcups  # [linux]\n    - libiconv  # [win]\n    - pango\n    - xorg-libice  # [linux]\n    - xorg-libsm  # [linux]\n    - xorg-libx11  # [linux]\n    - xorg-libxcomposite  # [linux]\n    - xorg-libxcursor  # [linux]\n    - xorg-libxdamage  # [linux]\n    - xorg-libxext  # [linux]\n    - xorg-libxi  # [linux]\n    - xorg-libxinerama  # [linux]\n    - xorg-libxfixes  # [linux]\n    - xorg-libxrandr  # [linux]\n    - xorg-libxrender  # [linux]\n    - xorg-libxtst  # [linux]\n    - xorg-xineramaproto  # [linux]\n    - xorg-xproto  # [linux]\n  run:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.12\") }}  # [osx and x86_64]\n    - hicolor-icon-theme\n    - pango\n    - libgraphene\n    - fribidi\n    - fontconfig\n    - {{ pin_compatible('libcups') }}  # [linux]\n    # The post-links scripts uses gio-querymodules from glib-tools\n    - glib-tools\n    - xorg-libx11  # [linux]\n    - xorg-libxcomposite  # [linux]\n    - xorg-libxcursor  # [linux]\n    - xorg-libxdamage  # [linux]\n    - xorg-libxext  # [linux]\n    - xorg-libxi  # [linux]\n    - xorg-libxinerama  # [linux]\n    - xorg-libxfixes  # [linux]\n    - xorg-libxrandr  # [linux]\n    - xorg-xineramaproto  # [linux]\n    - xorg-xproto  # [linux]\n\ntest:\n  requires:\n    - pygobject\n  commands:\n    # check that the binaries can run\n    - gtk4-encode-symbolic-svg --help\n    - gtk4-launch --help  # [unix]\n    - gtk4-update-icon-cache --help\n    # other binaries require a display, check that they get installed\n    {% set cmds = [\"gtk4-builder-tool\", \"gtk4-query-settings\"] %}\n    {% for cmd in cmds %}\n    - command -v {{ cmd }}  # [unix]\n    - where {{ cmd }}  # [win]\n    {% endfor %}\n\n    # verify that (some) headers get installed\n    - test -f $PREFIX/include/gtk-4.0/gdk/gdk.h  # [unix]\n    - test -f $PREFIX/include/gtk-4.0/gsk/gsk.h  # [unix]\n    - test -f $PREFIX/include/gtk-4.0/gtk/gtk.h  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\gtk-4.0\\\\gdk\\\\gdk.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\gtk-4.0\\\\gsk\\\\gsk.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\gtk-4.0\\\\gtk\\\\gtk.h exit 1  # [win]\n\n    # verify that pkgconfig files get installed\n    {% set pcs = [\"gtk4\"] %}\n    {% set pcs = pcs + [\"gtk4-unix-print\"] %}  # [unix]\n    {% set pcs = pcs + [\"gtk4-x11\"] %}  # [linux]\n    {% set pcs = pcs + [\"gtk4-macos\"] %}  # [osx]\n    {% set pcs = pcs + [\"gtk4-win32\"] %}  # [win]\n    {% for pc in pcs %}\n    - test -f $PREFIX/lib/pkgconfig/{{ pc }}.pc  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\{{ pc }}.pc exit 1  # [win]\n    {% endfor %}\n    # check gi typelibs\n    {% set gis = [\"Gdk-4.0\", \"Gsk-4.0\", \"Gtk-4.0\"] %}\n    {% for gi in gis %}\n    - test -f $PREFIX/lib/girepository-1.0/{{ gi }}.typelib    # [unix]\n    - if not exist %PREFIX%\\Library\\lib\\girepository-1.0\\{{ gi }}.typelib exit 1         # [win]\n    {% endfor %}\n\n\nabout:\n  home: http://www.gtk.org/\n  license: LGPL-2.0-or-later\n  license_family: LGPL\n  license_file: COPYING\n  summary: Version 4 of the Gtk+ graphical toolkit\n  description: |\n    GTK is a multi-platform toolkit for creating graphical user interfaces.\n    Offering a complete set of widgets, GTK is suitable for projects ranging\n    from small one-off projects to complete application suites.\n  doc_url: https://developer.gnome.org/gtk4/\n  dev_url: https://gitlab.gnome.org/GNOME/gtk\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n    - pkgw\n    - tschoonj\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://download.gnome.org/sources/gtk/4.6/gtk-4.6.3.tar.xz",
 "version": "4.6.3"
}