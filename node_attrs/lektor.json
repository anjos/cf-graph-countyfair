{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200146531.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/214050897.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248421502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/471305124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "lektor",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A flexible and powerful static content management system for building\ncomplex and beautiful websites out of flat files for people who do not\nwant to make a compromise between a CMS and a static blog engine.\n",
   "dev_url": "https://github.com/lektor/lektor",
   "doc_url": "https://www.getlektor.com/docs",
   "home": "https://getlektor.com",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "The lektor static file content management system."
  },
  "build": {
   "entry_points": [
    "lektor = lektor.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "goanpeca",
    "nixjdm"
   ]
  },
  "package": {
   "name": "lektor",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "pip",
    "python"
   ],
   "run": [
    "babel",
    "click >=6.0",
    "exifread",
    "filetype >=1.0.7",
    "flask",
    "inifile",
    "jinja2 >=2.11",
    "mistune >=0.7.0,<2",
    "ndg-httpsclient",
    "nodejs",
    "pip",
    "pyasn1",
    "pyopenssl >=0.13",
    "python",
    "python-slugify",
    "requests",
    "setuptools",
    "watchdog",
    "werkzeug <1"
   ]
  },
  "source": {
   "sha256": "5ab0c55aaea3cb98efdbf33b44adfd8291d0724e8849892eb13767d5cdb1fe40",
   "url": "https://pypi.io/packages/source/L/Lektor/Lektor-3.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "lektor --help"
   ],
   "imports": [
    "lektor"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "babel",
    "click",
    "exifread",
    "filetype",
    "flask",
    "inifile",
    "jinja2",
    "mistune",
    "ndg-httpsclient",
    "nodejs",
    "pip",
    "pyasn1",
    "pyopenssl",
    "python",
    "python-slugify",
    "requests",
    "setuptools",
    "watchdog",
    "werkzeug"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A flexible and powerful static content management system for building\ncomplex and beautiful websites out of flat files for people who do not\nwant to make a compromise between a CMS and a static blog engine.\n",
   "dev_url": "https://github.com/lektor/lektor",
   "doc_url": "https://www.getlektor.com/docs",
   "home": "https://getlektor.com",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "The lektor static file content management system."
  },
  "build": {
   "entry_points": [
    "lektor = lektor.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "goanpeca",
    "nixjdm"
   ]
  },
  "package": {
   "name": "lektor",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "pip",
    "python"
   ],
   "run": [
    "babel",
    "click >=6.0",
    "exifread",
    "filetype >=1.0.7",
    "flask",
    "inifile",
    "jinja2 >=2.11",
    "mistune >=0.7.0,<2",
    "ndg-httpsclient",
    "nodejs",
    "pip",
    "pyasn1",
    "pyopenssl >=0.13",
    "python",
    "python-slugify",
    "requests",
    "setuptools",
    "watchdog",
    "werkzeug <1"
   ]
  },
  "source": {
   "sha256": "5ab0c55aaea3cb98efdbf33b44adfd8291d0724e8849892eb13767d5cdb1fe40",
   "url": "https://pypi.io/packages/source/L/Lektor/Lektor-3.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "lektor --help"
   ],
   "imports": [
    "lektor"
   ]
  }
 },
 "name": "lektor",
 "new_version": "3.2.0",
 "new_version_attempts": {
  "3.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lektor"
  ]
 },
 "pinning_version": "2020.08.17.20.01.55",
 "raw_meta_yaml": "{% set version = \"3.2.0\" %}\n\npackage:\n  name: lektor\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/L/Lektor/Lektor-{{ version }}.tar.gz\n  sha256: 5ab0c55aaea3cb98efdbf33b44adfd8291d0724e8849892eb13767d5cdb1fe40\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - lektor = lektor.cli:main\n\nrequirements:\n  build:\n    - pip\n    - python\n  run:\n    - babel\n    - click >=6.0\n    - exifread\n    - filetype >=1.0.7\n    - flask\n    - inifile\n    - jinja2 >=2.11\n    - mistune >=0.7.0,<2\n    - ndg-httpsclient\n    - nodejs\n    - pip\n    - pyasn1\n    - pyopenssl >=0.13\n    - python\n    - python-slugify\n    - requests\n    - setuptools\n    - watchdog\n    - werkzeug <1\n\ntest:\n  imports:\n    - lektor\n\n  commands:\n    - lektor --help\n\nabout:\n  home: https://getlektor.com\n  license: BSD-3-Clause\n  license_file: LICENSE\n  license_family: BSD\n  summary: The lektor static file content management system.\n  description: |\n    A flexible and powerful static content management system for building\n    complex and beautiful websites out of flat files for people who do not\n    want to make a compromise between a CMS and a static blog engine.\n  dev_url: https://github.com/lektor/lektor\n  doc_url: https://www.getlektor.com/docs\n\nextra:\n  recipe-maintainers:\n    - goanpeca\n    - nixjdm\n",
 "req": {
  "__set__": true,
  "elements": [
   "babel",
   "click",
   "exifread",
   "filetype",
   "flask",
   "inifile",
   "jinja2",
   "mistune",
   "ndg-httpsclient",
   "nodejs",
   "pip",
   "pyasn1",
   "pyopenssl",
   "python",
   "python-slugify",
   "requests",
   "setuptools",
   "watchdog",
   "werkzeug"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "babel",
    "click",
    "exifread",
    "filetype",
    "flask",
    "inifile",
    "jinja2",
    "mistune",
    "ndg-httpsclient",
    "nodejs",
    "pip",
    "pyasn1",
    "pyopenssl",
    "python",
    "python-slugify",
    "requests",
    "setuptools",
    "watchdog",
    "werkzeug"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "babel",
    "click >=6.0",
    "exifread",
    "filetype >=1.0.7",
    "flask",
    "inifile",
    "jinja2 >=2.11",
    "mistune >=0.7.0,<2",
    "ndg-httpsclient",
    "nodejs",
    "pip",
    "pyasn1",
    "pyopenssl >=0.13",
    "python",
    "python-slugify",
    "requests",
    "setuptools",
    "watchdog",
    "werkzeug <1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/L/Lektor/Lektor-3.2.0.tar.gz",
 "version": "3.2.0"
}