{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/387381482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395373428.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501997643.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521001537.json"
   },
   "data": {
    "bot_rerun": 1611344467.6008203,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560074969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705704359.json"
   },
   "data": {
    "bot_rerun": 1632013296.009425,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/736709377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/736997091.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776277018.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pfapack",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Computing the Pfaffian of a skew-symmetric matrix is a problem that arises in various fields of physics.\nBoth computing the Pfaffian and a related problem, computing the canonical form of a skew-symmetric matrix\nunder unitary congruence, can be solved easily once the skew-symmetric matrix has been reduced to\nskew-symmetric tridiagonal form. We develop efficient numerical methods for computing this tridiagonal\nform based on Gauss transformations, using a skew-symmetric, blocked form of the Parlett-Reid algorithm,\nor based on unitary transformations, using block Householder transformations and Givens rotations,\nthat are applicable to dense and banded matrices, respectively. We also give a complete and fully\noptimized implementation of these algorithms in Python.\n",
   "dev_url": "https://github.com/basnijholt/pfapack",
   "doc_url": "https://pfapack.readthedocs.io/",
   "home": "https://github.com/basnijholt/pfapack",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "python/LICENSE",
   "summary": "Efficient numerical computation of the Pfaffian for dense and banded skew-symmetric matrices"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "pfapack",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip"
   ],
   "run": [
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy"
   ]
  },
  "source": [
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   }
  ],
  "test": {
   "imports": [
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "libopenblas",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Computing the Pfaffian of a skew-symmetric matrix is a problem that arises in various fields of physics.\nBoth computing the Pfaffian and a related problem, computing the canonical form of a skew-symmetric matrix\nunder unitary congruence, can be solved easily once the skew-symmetric matrix has been reduced to\nskew-symmetric tridiagonal form. We develop efficient numerical methods for computing this tridiagonal\nform based on Gauss transformations, using a skew-symmetric, blocked form of the Parlett-Reid algorithm,\nor based on unitary transformations, using block Householder transformations and Givens rotations,\nthat are applicable to dense and banded matrices, respectively. We also give a complete and fully\noptimized implementation of these algorithms in Python.\n",
   "dev_url": "https://github.com/basnijholt/pfapack",
   "doc_url": "https://pfapack.readthedocs.io/",
   "home": "https://github.com/basnijholt/pfapack",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "python/LICENSE",
   "summary": "Efficient numerical computation of the Pfaffian for dense and banded skew-symmetric matrices"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "pfapack",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy"
   ]
  },
  "source": [
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   }
  ],
  "test": {
   "imports": [
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack"
   ]
  }
 },
 "name": "pfapack",
 "new_version": "0.3.1",
 "new_version_attempts": {
  "0.3.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Computing the Pfaffian of a skew-symmetric matrix is a problem that arises in various fields of physics.\nBoth computing the Pfaffian and a related problem, computing the canonical form of a skew-symmetric matrix\nunder unitary congruence, can be solved easily once the skew-symmetric matrix has been reduced to\nskew-symmetric tridiagonal form. We develop efficient numerical methods for computing this tridiagonal\nform based on Gauss transformations, using a skew-symmetric, blocked form of the Parlett-Reid algorithm,\nor based on unitary transformations, using block Householder transformations and Givens rotations,\nthat are applicable to dense and banded matrices, respectively. We also give a complete and fully\noptimized implementation of these algorithms in Python.\n",
   "dev_url": "https://github.com/basnijholt/pfapack",
   "doc_url": "https://pfapack.readthedocs.io/",
   "home": "https://github.com/basnijholt/pfapack",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "python/LICENSE",
   "summary": "Efficient numerical computation of the Pfaffian for dense and banded skew-symmetric matrices"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "pfapack",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip",
    "python",
    "liblapack",
    "libopenblas",
    "libblas",
    "pip"
   ],
   "run": [
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy"
   ]
  },
  "source": [
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   }
  ],
  "test": {
   "imports": [
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "libopenblas",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pfapack"
  ]
 },
 "pinning_version": "2021.11.09.00.35.45",
 "raw_meta_yaml": "{% set name = \"pfapack\" %}\n{% set version = \"0.3.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: 7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51\n    folder: python\n  - url: https://michaelwimmer.org/pfapack.tgz\n    sha256: b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07\n    folder: pfapack\n\nbuild:\n  number: 0\n  skip: true  # [py<37]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n  host:\n    - python\n    - liblapack  # [not win]\n    - libopenblas  # [not win]\n    - libblas  # [not win]\n    - pip\n  run:\n    - python\n    - setuptools\n    - scipy\n    - numpy\n\ntest:\n  imports:\n    - pfapack\n\nabout:\n  home: https://github.com/basnijholt/pfapack\n  license: MIT\n  license_family: MIT\n  license_file: python/LICENSE\n  summary: Efficient numerical computation of the Pfaffian for dense and banded skew-symmetric matrices\n  description: |\n    Computing the Pfaffian of a skew-symmetric matrix is a problem that arises in various fields of physics.\n    Both computing the Pfaffian and a related problem, computing the canonical form of a skew-symmetric matrix\n    under unitary congruence, can be solved easily once the skew-symmetric matrix has been reduced to\n    skew-symmetric tridiagonal form. We develop efficient numerical methods for computing this tridiagonal\n    form based on Gauss transformations, using a skew-symmetric, blocked form of the Parlett-Reid algorithm,\n    or based on unitary transformations, using block Householder transformations and Givens rotations,\n    that are applicable to dense and banded matrices, respectively. We also give a complete and fully\n    optimized implementation of these algorithms in Python.\n\n  doc_url: https://pfapack.readthedocs.io/\n  dev_url: https://github.com/basnijholt/pfapack\n\nextra:\n  recipe-maintainers:\n    - basnijholt\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fortran_compiler_stub",
   "libblas",
   "liblapack",
   "libopenblas",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libblas",
    "liblapack",
    "libopenblas",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "numpy",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "libopenblas",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz",
 "version": "0.3.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "Computing the Pfaffian of a skew-symmetric matrix is a problem that arises in various fields of physics.\nBoth computing the Pfaffian and a related problem, computing the canonical form of a skew-symmetric matrix\nunder unitary congruence, can be solved easily once the skew-symmetric matrix has been reduced to\nskew-symmetric tridiagonal form. We develop efficient numerical methods for computing this tridiagonal\nform based on Gauss transformations, using a skew-symmetric, blocked form of the Parlett-Reid algorithm,\nor based on unitary transformations, using block Householder transformations and Givens rotations,\nthat are applicable to dense and banded matrices, respectively. We also give a complete and fully\noptimized implementation of these algorithms in Python.\n",
   "dev_url": "https://github.com/basnijholt/pfapack",
   "doc_url": "https://pfapack.readthedocs.io/",
   "home": "https://github.com/basnijholt/pfapack",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "python/LICENSE",
   "summary": "Efficient numerical computation of the Pfaffian for dense and banded skew-symmetric matrices"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "pfapack",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy",
    "python",
    "setuptools",
    "scipy",
    "numpy"
   ]
  },
  "source": [
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   },
   {
    "folder": "python",
    "sha256": "7f2efe474f35f5c51e9c00789c0f0aeaa0d4495e75a3a23fc023914df4f95a51",
    "url": "https://pypi.io/packages/source/p/pfapack/pfapack-0.3.1.tar.gz"
   },
   {
    "folder": "pfapack",
    "sha256": "b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07",
    "url": "https://michaelwimmer.org/pfapack.tgz"
   }
  ],
  "test": {
   "imports": [
    "pfapack",
    "pfapack",
    "pfapack",
    "pfapack"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}