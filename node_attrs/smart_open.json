{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/200128009.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216502098.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216714384.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268739611.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/271284731.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/273806470.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/284332272.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336002978.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/389203846.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400763899.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400883711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/409839883.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442426224.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/474971696.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492956010.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496254923.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499801483.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526129179.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528446379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546862566.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/556615047.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573364715.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/603695520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/651842463.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/714992843.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/721789573.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/917396026.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1032089955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1032890207.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1032891241.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1055521336.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1160447562.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "smart_open",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "smart_open is a Python 3 library\nfor efficient streaming of very large files\nfrom/to S3, HDFS, WebHDFS or local (compressed) files.\n",
   "dev_url": "https://github.com/RaRe-Technologies/smart_open",
   "home": "https://github.com/RaRe-Technologies/smart_open",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "dist/LICENSE",
   "summary": "Python library for efficient streaming of large files"
  },
  "build": {
   "noarch": "python",
   "number": "1"
  },
  "extra": {
   "feedstock-name": "smart_open",
   "recipe-maintainers": [
    "timkpaine",
    "souravsingh",
    "mpenkov",
    "bollwyvl"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "cd dist && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
     ]
    },
    "name": "smart_open",
    "requirements": {
     "host": [
      "python >=3.6",
      "pip"
     ],
     "run": [
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "python >=3.6",
      "smart_open"
     ]
    },
    "test": {
     "imports": [
      "smart_open"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-all",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "smart-open-with-azure",
      "smart-open-with-gcs",
      "smart-open-with-http",
      "smart-open-with-s3",
      "smart-open-with-ssh",
      "smart-open-with-webhdfs"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "python hotfix_tests.py",
      "pytest -vv src/smart_open/tests --cov=smart_open --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=36"
     ],
     "files": [
      "hotfix_tests.py"
     ],
     "requires": [
      "moto",
      "pip",
      "pytest-cov",
      "pytest-rerunfailures",
      "responses"
     ],
     "source_files": [
      "src/smart_open/tests"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-azure",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "azure-common",
      "azure-core",
      "azure-storage-blob",
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.azure"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-gcs",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "google-cloud-storage",
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.gcs"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-http",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "python >=3.6",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.http"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-s3",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "python >=3.6",
      "boto3"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.s3"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-ssh",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "paramiko",
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.ssh"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-webhdfs",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "python >=3.6",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.webhdfs"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "smart_open_split",
   "version": "6.3.0"
  },
  "requirements": {
   "host": [
    "python >=3.6"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "d5238825fe9a9340645fac3d75b287c08fbb99fb2b422477de781c9f5f09e019",
    "url": "https://pypi.io/packages/source/s/smart_open/smart_open-6.3.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "ffd70349ad46eca048d7dd1cce23ac1db179c9787b5fb53d0c4c37bf78b96f0d",
    "url": "https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v6.3.0.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "azure-common",
    "azure-core",
    "azure-storage-blob",
    "boto3",
    "google-cloud-storage",
    "paramiko",
    "python",
    "requests",
    "smart-open-with-azure",
    "smart-open-with-gcs",
    "smart-open-with-http",
    "smart-open-with-s3",
    "smart-open-with-ssh",
    "smart-open-with-webhdfs",
    "smart_open"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "moto",
    "pip",
    "pytest-cov",
    "pytest-rerunfailures",
    "responses"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "smart_open is a Python 3 library\nfor efficient streaming of very large files\nfrom/to S3, HDFS, WebHDFS or local (compressed) files.\n",
   "dev_url": "https://github.com/RaRe-Technologies/smart_open",
   "home": "https://github.com/RaRe-Technologies/smart_open",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "dist/LICENSE",
   "summary": "Python library for efficient streaming of large files"
  },
  "build": {
   "noarch": "python",
   "number": "1"
  },
  "extra": {
   "feedstock-name": "smart_open",
   "recipe-maintainers": [
    "timkpaine",
    "souravsingh",
    "mpenkov",
    "bollwyvl"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "cd dist && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
     ]
    },
    "name": "smart_open",
    "requirements": {
     "host": [
      "python >=3.6",
      "pip"
     ],
     "run": [
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "python >=3.6",
      "smart_open"
     ]
    },
    "test": {
     "imports": [
      "smart_open"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-all",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "smart-open-with-azure",
      "smart-open-with-gcs",
      "smart-open-with-http",
      "smart-open-with-s3",
      "smart-open-with-ssh",
      "smart-open-with-webhdfs"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "python hotfix_tests.py",
      "pytest -vv src/smart_open/tests --cov=smart_open --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=36"
     ],
     "files": [
      "hotfix_tests.py"
     ],
     "requires": [
      "moto",
      "pip",
      "pytest-cov",
      "pytest-rerunfailures",
      "responses"
     ],
     "source_files": [
      "src/smart_open/tests"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-azure",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "azure-common",
      "azure-core",
      "azure-storage-blob",
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.azure"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-gcs",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "google-cloud-storage",
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.gcs"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-http",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "python >=3.6",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.http"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-s3",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "python >=3.6",
      "boto3"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.s3"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-ssh",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "paramiko",
      "python >=3.6"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.ssh"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "smart-open-with-webhdfs",
    "requirements": {
     "host": [
      "python >=3.6"
     ],
     "run": [
      "smart_open",
      "python >=3.6",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.webhdfs"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "smart_open_split",
   "version": "6.3.0"
  },
  "requirements": {
   "host": [
    "python >=3.6"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "d5238825fe9a9340645fac3d75b287c08fbb99fb2b422477de781c9f5f09e019",
    "url": "https://pypi.io/packages/source/s/smart_open/smart_open-6.3.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "ffd70349ad46eca048d7dd1cce23ac1db179c9787b5fb53d0c4c37bf78b96f0d",
    "url": "https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v6.3.0.tar.gz"
   }
  ]
 },
 "name": "smart_open_split",
 "new_version": "6.3.0",
 "new_version_attempts": {
  "1.11.0": 1,
  "1.11.1": 1,
  "2.0.0": 1,
  "2.1.0": 1,
  "2.1.1": 1,
  "2.2.0": 1,
  "2.2.1": 1,
  "3.0.0": 1,
  "4.0.0": 1,
  "4.0.1": 1,
  "4.1.0": 1,
  "4.1.2": 1,
  "4.2.0": 1,
  "5.0.0": 1,
  "5.1.0": 1,
  "5.2.0": 1,
  "5.2.1": 1,
  "6.0.0": 1,
  "6.1.0": 1,
  "6.2.0": 1,
  "6.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "smart-open",
   "smart-open-with-all",
   "smart-open-with-azure",
   "smart-open-with-gcs",
   "smart-open-with-http",
   "smart-open-with-s3",
   "smart-open-with-ssh",
   "smart-open-with-webhdfs",
   "smart_open",
   "smart_open_split"
  ]
 },
 "pinning_version": "2022.12.11.21.21.05",
 "raw_meta_yaml": "{% set version = \"6.3.0\" %}\n{% set all_pytest_args = \"--cov-fail-under=36\" %}\n\npackage:\n  name: smart_open_split\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/s/smart_open/smart_open-{{ version }}.tar.gz\n    sha256: d5238825fe9a9340645fac3d75b287c08fbb99fb2b422477de781c9f5f09e019\n  - folder: src\n    url: https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: ffd70349ad46eca048d7dd1cce23ac1db179c9787b5fb53d0c4c37bf78b96f0d\n\nbuild:\n  noarch: python\n  number: 1\n\nrequirements:\n  host:\n    - python >=3.6\n  run:\n    - python >=3.6\n\noutputs:\n  # the actual package\n  - name: smart_open\n    build:\n      noarch: python\n      script:\n        - cd dist && {{ PYTHON }} -m pip install . --no-deps -vv\n    requirements:\n      host:\n        - python >=3.6\n        - pip\n      run:\n        - python >=3.6\n    test:\n      imports:\n        - smart_open\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  # the normalized hyphen-convention package\n  - name: smart-open\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - python >=3.6\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n    test:\n      imports:\n        - smart_open\n\n  # the kitchen sink with tests\n  - name: smart-open-with-all\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-azure\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-gcs\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-http\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-s3\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-ssh\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-webhdfs\", exact=True) }}\n    test:\n      source_files:\n        - src/smart_open/tests\n      files:\n        - hotfix_tests.py\n      requires:\n        - moto\n        - pip\n        - pytest-cov\n        - pytest-rerunfailures\n        - responses\n      commands:\n        - pip check\n        # tests reference `smart_open.tests`, but not included in distributions\n        - python hotfix_tests.py\n        - pytest -vv src/smart_open/tests --cov=smart_open --cov-report=term-missing:skip-covered --no-cov-on-fail {{ all_pytest_args }}\n\n  # extras from here on out\n  - name: smart-open-with-azure\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - azure-common\n        - azure-core\n        - azure-storage-blob\n        - python >=3.6\n    test:\n      imports:\n        - smart_open.azure\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-gcs\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - google-cloud-storage\n        - python >=3.6\n    test:\n      imports:\n        - smart_open.gcs\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-http\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - python >=3.6\n        - requests\n    test:\n      imports:\n        - smart_open.http\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-s3\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - python >=3.6\n        - boto3\n    test:\n      imports:\n        - smart_open.s3\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-ssh\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - paramiko\n        - python >=3.6\n    test:\n      imports:\n        - smart_open.ssh\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-webhdfs\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.6\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - python >=3.6\n        - requests\n    test:\n      imports:\n        - smart_open.webhdfs\n      requires:\n        - pip\n      commands:\n        - pip check\n\nabout:\n  home: https://github.com/RaRe-Technologies/smart_open\n  license: MIT\n  license_family: MIT\n  license_file: dist/LICENSE\n  summary: Python library for efficient streaming of large files\n\n  description: |\n    smart_open is a Python 3 library\n    for efficient streaming of very large files\n    from/to S3, HDFS, WebHDFS or local (compressed) files.\n  dev_url: https://github.com/RaRe-Technologies/smart_open\n\nextra:\n  feedstock-name: smart_open\n  recipe-maintainers:\n    - timkpaine\n    - souravsingh\n    - mpenkov\n    - bollwyvl\n",
 "req": {
  "__set__": true,
  "elements": [
   "azure-common",
   "azure-core",
   "azure-storage-blob",
   "boto3",
   "google-cloud-storage",
   "paramiko",
   "pip",
   "python",
   "requests",
   "smart-open-with-azure",
   "smart-open-with-gcs",
   "smart-open-with-http",
   "smart-open-with-s3",
   "smart-open-with-ssh",
   "smart-open-with-webhdfs",
   "smart_open"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "azure-common",
    "azure-core",
    "azure-storage-blob",
    "boto3",
    "google-cloud-storage",
    "paramiko",
    "python",
    "requests",
    "smart-open-with-azure",
    "smart-open-with-gcs",
    "smart-open-with-http",
    "smart-open-with-s3",
    "smart-open-with-ssh",
    "smart-open-with-webhdfs",
    "smart_open"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "moto",
    "pip",
    "pytest-cov",
    "pytest-rerunfailures",
    "responses"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "azure-common",
    "azure-core",
    "azure-storage-blob",
    "boto3",
    "google-cloud-storage",
    "paramiko",
    "python >=3.6",
    "requests",
    "smart-open-with-azure",
    "smart-open-with-gcs",
    "smart-open-with-http",
    "smart-open-with-s3",
    "smart-open-with-ssh",
    "smart-open-with-webhdfs",
    "smart_open"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "moto",
    "pip",
    "pytest-cov",
    "pytest-rerunfailures",
    "responses"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/smart_open/smart_open-6.3.0.tar.gz",
 "version": "6.3.0"
}