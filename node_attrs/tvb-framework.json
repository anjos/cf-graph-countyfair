{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/234124930.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/291161084.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/366683744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/455257913.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/484284941.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519548558.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "tvb-framework",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Virtual Brain Project (TVB Project) has the purpose of offering some |\nmodern tools to the Neurosciences community, for computing, simulating |\nand analyzing functional and structural data of human brains. |\nThe Virtual Brain framework is a complete framework including: |\n-  a plugable workflow manager; |\n-  a data persistence layer (with a relational DB and File Storage); |\n-  an HTML5 based user interface; |\n-  visualizers for neuro-science related entities.\n",
   "dev_url": "https://github.com/the-virtual-brain/tvb-framework",
   "doc_url": "http://docs.thevirtualbrain.org/",
   "home": "http://www.thevirtualbrain.com/",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A package for performing whole brain simulations"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "liadomide",
    "popaula937"
   ]
  },
  "package": {
   "name": "tvb-framework",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "Jinja2",
    "Networkx",
    "nibabel",
    "pillow",
    "psutil",
    "pyAesCrypt",
    "python-keycloak",
    "pyunicore",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy-migrate",
    "sqlalchemy",
    "tvb-library",
    "tvb-data",
    "tvb-gdist",
    "psycopg2"
   ]
  },
  "source": {
   "sha256": "95a8585b3095eecbdc8ca389269471a350b6876e732f62c260d75b615d10a237",
   "url": "https://pypi.io/packages/source/t/tvb-framework/tvb-framework-2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "jinja2",
    "networkx",
    "nibabel",
    "pillow",
    "psutil",
    "psycopg2",
    "pyaescrypt",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "python",
    "python-keycloak",
    "pyunicore",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy",
    "sqlalchemy-migrate",
    "tvb-data",
    "tvb-gdist",
    "tvb-library"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Virtual Brain Project (TVB Project) has the purpose of offering some |\nmodern tools to the Neurosciences community, for computing, simulating |\nand analyzing functional and structural data of human brains. |\nThe Virtual Brain framework is a complete framework including: |\n-  a plugable workflow manager; |\n-  a data persistence layer (with a relational DB and File Storage); |\n-  an HTML5 based user interface; |\n-  visualizers for neuro-science related entities.\n",
   "dev_url": "https://github.com/the-virtual-brain/tvb-framework",
   "doc_url": "http://docs.thevirtualbrain.org/",
   "home": "http://www.thevirtualbrain.com/",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A package for performing whole brain simulations"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "liadomide",
    "popaula937",
    "liadomide",
    "popaula937",
    "liadomide",
    "popaula937"
   ]
  },
  "package": {
   "name": "tvb-framework",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "Jinja2",
    "Networkx",
    "nibabel",
    "pillow",
    "psutil",
    "pyAesCrypt",
    "python-keycloak",
    "pyunicore",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy-migrate",
    "sqlalchemy",
    "tvb-library",
    "tvb-data",
    "tvb-gdist",
    "psycopg2",
    "python",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "Jinja2",
    "Networkx",
    "nibabel",
    "pillow",
    "psutil",
    "pyAesCrypt",
    "python-keycloak",
    "pyunicore",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy-migrate",
    "sqlalchemy",
    "tvb-library",
    "tvb-data",
    "tvb-gdist",
    "psycopg2",
    "python",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "Jinja2",
    "Networkx",
    "nibabel",
    "pillow",
    "psutil",
    "pyAesCrypt",
    "python-keycloak",
    "pyunicore",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy-migrate",
    "sqlalchemy",
    "tvb-library",
    "tvb-data",
    "tvb-gdist",
    "psycopg2"
   ]
  },
  "source": {
   "sha256": "95a8585b3095eecbdc8ca389269471a350b6876e732f62c260d75b615d10a237",
   "url": "https://pypi.io/packages/source/t/tvb-framework/tvb-framework-2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test",
    "pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test",
    "pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name": "tvb-framework",
 "new_version": "2.0.10",
 "new_version_attempts": {
  "2.0.10": 1,
  "2.0.8": 1,
  "2.0.9": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "The Virtual Brain Project (TVB Project) has the purpose of offering some |\nmodern tools to the Neurosciences community, for computing, simulating |\nand analyzing functional and structural data of human brains. |\nThe Virtual Brain framework is a complete framework including: |\n-  a plugable workflow manager; |\n-  a data persistence layer (with a relational DB and File Storage); |\n-  an HTML5 based user interface; |\n-  visualizers for neuro-science related entities.\n",
   "dev_url": "https://github.com/the-virtual-brain/tvb-framework",
   "doc_url": "http://docs.thevirtualbrain.org/",
   "home": "http://www.thevirtualbrain.com/",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A package for performing whole brain simulations"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "liadomide",
    "popaula937"
   ]
  },
  "package": {
   "name": "tvb-framework",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "Jinja2",
    "Networkx",
    "nibabel",
    "pillow",
    "psutil",
    "pyAesCrypt",
    "python-keycloak",
    "pyunicore",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy-migrate",
    "sqlalchemy",
    "tvb-library",
    "tvb-data",
    "tvb-gdist",
    "psycopg2"
   ]
  },
  "source": {
   "sha256": "95a8585b3095eecbdc8ca389269471a350b6876e732f62c260d75b615d10a237",
   "url": "https://pypi.io/packages/source/t/tvb-framework/tvb-framework-2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "jinja2",
    "networkx",
    "nibabel",
    "pillow",
    "psutil",
    "psycopg2",
    "pyaescrypt",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "python",
    "python-keycloak",
    "pyunicore",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy",
    "sqlalchemy-migrate",
    "tvb-data",
    "tvb-gdist",
    "tvb-library"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tvb-framework"
  ]
 },
 "pinning_version": "2020.11.11.15.57.25",
 "raw_meta_yaml": "{% set name = \"tvb-framework\" %}\n{% set version = \"2.0.8\" %}\n{% set sha256 = \"95a8585b3095eecbdc8ca389269471a350b6876e732f62c260d75b615d10a237\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - python\n    - pip\n    - setuptools\n\n  run:\n    - python\n    - beautifulsoup4\n    - cherrypy\n    - flask\n    - flask-restplus\n    - formencode\n    - getevent\n    - h5py\n    - Jinja2\n    - Networkx\n    - nibabel\n    - pillow\n    - psutil\n    - pyAesCrypt\n    - python-keycloak\n    - pyunicore\n    - pytest\n    - pytest-benchmark\n    - pytest-mock\n    - scikit-learn\n    - scipy\n    - simplejson\n    - sqlalchemy-migrate\n    - sqlalchemy\n    - tvb-library\n    - tvb-data\n    - tvb-gdist\n    - psycopg2\n\ntest:\n  requires:\n    - pytest\n  commands:\n    - pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test\n\nabout:\n  home: http://www.thevirtualbrain.com/\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: A package for performing whole brain simulations\n  description: |\n    The Virtual Brain Project (TVB Project) has the purpose of offering some |\n    modern tools to the Neurosciences community, for computing, simulating |\n    and analyzing functional and structural data of human brains. |\n    The Virtual Brain framework is a complete framework including: |\n    -  a plugable workflow manager; |\n    -  a data persistence layer (with a relational DB and File Storage); |\n    -  an HTML5 based user interface; |\n    -  visualizers for neuro-science related entities.\n  doc_url: http://docs.thevirtualbrain.org/\n  dev_url: https://github.com/the-virtual-brain/tvb-framework\n\nextra:\n  recipe-maintainers:\n    - liadomide\n    - popaula937\n",
 "req": {
  "__set__": true,
  "elements": [
   "beautifulsoup4",
   "cherrypy",
   "flask",
   "flask-restplus",
   "formencode",
   "getevent",
   "h5py",
   "jinja2",
   "networkx",
   "nibabel",
   "pillow",
   "pip",
   "psutil",
   "psycopg2",
   "pyaescrypt",
   "pytest",
   "pytest-benchmark",
   "pytest-mock",
   "python",
   "python-keycloak",
   "pyunicore",
   "scikit-learn",
   "scipy",
   "setuptools",
   "simplejson",
   "sqlalchemy",
   "sqlalchemy-migrate",
   "tvb-data",
   "tvb-gdist",
   "tvb-library"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "jinja2",
    "networkx",
    "nibabel",
    "pillow",
    "psutil",
    "psycopg2",
    "pyaescrypt",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "python",
    "python-keycloak",
    "pyunicore",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy",
    "sqlalchemy-migrate",
    "tvb-data",
    "tvb-gdist",
    "tvb-library"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "Jinja2",
    "Networkx",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "nibabel",
    "pillow",
    "psutil",
    "psycopg2",
    "pyAesCrypt",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "python",
    "python-keycloak",
    "pyunicore",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy",
    "sqlalchemy-migrate",
    "tvb-data",
    "tvb-gdist",
    "tvb-library"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/t/tvb-framework/tvb-framework-2.0.8.tar.gz",
 "version": "2.0.8",
 "win_64_meta_yaml": {
  "about": {
   "description": "The Virtual Brain Project (TVB Project) has the purpose of offering some |\nmodern tools to the Neurosciences community, for computing, simulating |\nand analyzing functional and structural data of human brains. |\nThe Virtual Brain framework is a complete framework including: |\n-  a plugable workflow manager; |\n-  a data persistence layer (with a relational DB and File Storage); |\n-  an HTML5 based user interface; |\n-  visualizers for neuro-science related entities.\n",
   "dev_url": "https://github.com/the-virtual-brain/tvb-framework",
   "doc_url": "http://docs.thevirtualbrain.org/",
   "home": "http://www.thevirtualbrain.com/",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A package for performing whole brain simulations"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "liadomide",
    "popaula937"
   ]
  },
  "package": {
   "name": "tvb-framework",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python",
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "Jinja2",
    "Networkx",
    "nibabel",
    "pillow",
    "psutil",
    "pyAesCrypt",
    "python-keycloak",
    "pyunicore",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy-migrate",
    "sqlalchemy",
    "tvb-library",
    "tvb-data",
    "tvb-gdist",
    "psycopg2"
   ]
  },
  "source": {
   "sha256": "95a8585b3095eecbdc8ca389269471a350b6876e732f62c260d75b615d10a237",
   "url": "https://pypi.io/packages/source/t/tvb-framework/tvb-framework-2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs tvb.tests.framework.interfaces.web.controllers.burst_controller_test"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "beautifulsoup4",
    "cherrypy",
    "flask",
    "flask-restplus",
    "formencode",
    "getevent",
    "h5py",
    "jinja2",
    "networkx",
    "nibabel",
    "pillow",
    "psutil",
    "psycopg2",
    "pyaescrypt",
    "pytest",
    "pytest-benchmark",
    "pytest-mock",
    "python",
    "python-keycloak",
    "pyunicore",
    "scikit-learn",
    "scipy",
    "simplejson",
    "sqlalchemy",
    "sqlalchemy-migrate",
    "tvb-data",
    "tvb-gdist",
    "tvb-library"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}