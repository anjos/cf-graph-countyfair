{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ipydrawio",
 "hash_type": "sha256",
 "name": "ipydrawio-build",
 "new_version": "1.2.0",
 "new_version_attempts": {
  "1.1.0": 1
 },
 "new_version_errors": {
  "1.1.0": "We found a problem parsing the recipe for version '1.1.0': \n\nAssertionError('\\n        # TODO: investigate potential docker/locale issues upstream to restore coverage\\n        ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 437, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 112, in _parse_jinja2_variables\n    assert False, jinja2_data\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ipydrawio",
   "ipydrawio-build",
   "ipydrawio-export",
   "ipydrawio-widgets"
  ]
 },
 "raw_meta_yaml": "{% set version = \"1.2.0\" %}\n{% set build_number = 0 %}\n\npackage:\n  name: ipydrawio-build\n  version: {{ version }}\n\nsource:\n  - folder: ipydrawio\n    url: https://pypi.io/packages/source/i/ipydrawio/ipydrawio-{{ version }}.tar.gz\n    sha256: 67f3a4aff1a9a983d7ceec5e645962e29b76ddeddd052a1e53772f56866d00fe\n\n  - folder: ipydrawio-export\n    url: https://pypi.io/packages/source/i/ipydrawio-export/ipydrawio-export-{{ version }}.tar.gz\n    sha256: 1335101ab99db20e0d888d9daf3a2c2e0f6be1d29412892bb0d26755c5b85005\n\n  - folder: ipydrawio-widgets\n    url: https://pypi.io/packages/source/i/ipydrawio-widgets/ipydrawio-widgets-{{ version }}.tar.gz\n    sha256: e5d63d1b15a9f5521c1966a2144652babf9ebe0753f212c008c640cb80db3f0b\n\nbuild:\n  number: {{ build_number }}\n  noarch: python\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - python >=3.7\n\ntest:\n  commands:\n    - echo \"tests in outputs\"\n\noutputs:\n  - name: ipydrawio-widgets\n    version: {{ version }}\n    build:\n      number: {{ build_number }}\n      noarch: python\n      script:\n        - cd ipydrawio-widgets && {{ PYTHON }} -m pip install . -vv --no-deps\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n      run:\n        - ipywidgets >=7.6,<8\n        - python >=3.7\n    test:\n      imports:\n        - ipydrawio_widgets\n      requires:\n        - pip\n        - pytest-console-scripts\n        - pytest-cov\n      commands:\n        - pip check\n        - pytest -vv --pyargs ipydrawio_widgets --cov=ipydrawio_widgets --cov-report=term-missing:skip-covered\n    about:\n      home: https://github.com/deathbeds/ipydrawio\n      summary: Draw.io Diagrams as Jupyter Widgets (kernel only)\n      license: Apache-2.0\n      license_file: ipydrawio-widgets/LICENSE.txt\n\n  - name: ipydrawio\n    version: {{ version }}\n    build:\n      number: {{ build_number }}\n      noarch: python\n      script:\n        - cd ipydrawio && {{ PYTHON }} -m pip install . -vv --no-deps\n      entry_points:\n        - jupyter-ipydrawio = ipydrawio.app:main\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n      run:\n        - {{ pin_subpackage(\"ipydrawio-widgets\", exact=True) }}\n        - jupyterlab ==3.*\n        - jupyterlab_widgets >=1\n        - lxml\n        - python >=3.7\n    test:\n      imports:\n        - ipydrawio\n      requires:\n        - pip\n        - pytest-console-scripts\n        - pytest-cov\n      commands:\n        - pip check\n        - jupyter ipydrawio --version\n        - jupyter ipydrawio --help\n        - jupyter labextension list\n        - jupyter labextension list 1>labextensions 2>&1\n        - cat labextensions | grep \"@deathbeds/ipydrawio.*OK\"  # [unix]\n        - cat labextensions | grep -ie \"@deathbeds/ipydrawio-webpack .*OK\"  # [unix]\n        - cat labextensions | grep -ie \"@deathbeds/ipydrawio-notebook .*OK\"  # [unix]\n        - cat labextensions | grep -ie \"@deathbeds/ipydrawio-jupyter-templates .*OK\"  # [unix]\n        - pytest -vv --pyargs ipydrawio --cov=ipydrawio --cov-fail-under=100 --cov-report=term-missing:skip-covered\n    about:\n      home: https://github.com/deathbeds/ipydrawio\n      summary: Draw.io Diagrams as Jupyter Widgets\n      license: Apache-2.0\n      doc_url: https://ipydrawio.rtfd.io\n      doc_source_url: https://github.com/deathbeds/ipydrawio/tree/v{{ version }}/docs\n      license_file:\n        - ipydrawio/LICENSE.txt\n        - ipydrawio/src/ipydrawio/ext/ipd/static/third-party-licenses.json\n        - ipydrawio/src/ipydrawio/ext/ipdnb/static/third-party-licenses.json\n        - ipydrawio/src/ipydrawio/ext/ipdwp/static/third-party-licenses.json\n        - ipydrawio/src/ipydrawio/ext/ipjt/static/third-party-licenses.json\n\n\n  - name: ipydrawio-export\n    version: {{ version }}\n    build:\n      number: {{ build_number }}\n      noarch: python\n      script:\n        - cd ipydrawio-export && {{ PYTHON }} -m pip install . -vv --no-deps\n      entry_points:\n      - jupyter-ipydrawio-export = ipydrawio_export.app:main\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n      run:\n        - {{ pin_subpackage(\"ipydrawio\", exact=True) }}\n        - lxml\n        - nodejs >=12,!=13,!=15,!=17\n        - pillow\n        - pypdf2\n        - python >=3.7\n        - requests_cache\n    test:\n      imports:\n        - ipydrawio_export\n      requires:\n        - pip\n        - pytest-cov\n        - pytest-tornasync\n        - pytest-console-scripts\n      commands:\n        - pip check\n        - jupyter ipydrawio-export --version\n        - jupyter ipydrawio-export --help\n        - jupyter labextension list\n        - jupyter labextension list 1>labextensions 2>&1\n        - cat labextensions | grep \"@deathbeds/ipydrawio-pdf.*OK\"  # [unix]\n        - jupyter serverextension list\n        - jupyter serverextension list 1>serverextensions 2>&1\n        - cat serverextensions | grep \"ipydrawio_export.*OK\"  # [unix]\n        {% set pytest_args = \"--cov-fail-under=96\" %}\n        # TODO: investigate potential docker/locale issues upstream to restore coverage\n        {% set pytest_args = \"--cov-fail-under=54 -k 'not (export_empty or export_merged or serverextension_export)'\" %}  # [linux]\n        - pytest -vv {{ pytest_args }} --pyargs ipydrawio_export --script-launch-mode=subprocess --cov=ipydrawio_export --cov-report=term-missing:skip-covered\n    about:\n      home: https://github.com/deathbeds/ipydrawio\n      summary: PDF export for IPyDrawio\n      license: Apache-2.0\n      doc_url: https://ipydrawio.rtfd.io\n      doc_source_url: https://github.com/deathbeds/ipydrawio/tree/v{{ version }}/\n      license_file:\n      - ipydrawio-export/LICENSE.txt\n      - ipydrawio-export/src/ipydrawio_export/ext/ipdpdf/static/third-party-licenses.json\n\nabout:\n  home: https://github.com/deathbeds/ipydrawio\n  summary: Draw.io Diagrams as Jupyter Widgets\n  license: Apache-2.0\n  license_file: ipydrawio/LICENSE.txt\n  doc_url: https://ipydrawio.rtfd.io\n  doc_source_url: https://github.com/deathbeds/ipydrawio/tree/v{{ version }}/docs\n\nextra:\n  feedstock-name: ipydrawio\n  recipe-maintainers:\n    - bollwyvl\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/ipydrawio/ipydrawio-1.2.0.tar.gz",
 "version": "1.2.0"
}