{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/220487722.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335849246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/390981455.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501946658.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552220189.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pyfim",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyFIM is an extension module that makes several frequent item set mining\nimplementations available as functions in Python 2.7.x & 3.5.x. Currently\napriori, eclat, fpgrowth, sam, relim, carpenter, ista, accretion and\napriacc are available as functions, although the interfaces do not offer\nall of the options of the command line program. (Note that lcm is available\nas an algorithm mode of eclat.) There is also a \"generic\" function fim,\nwhich is essentially the same function as fpgrowth, only with a simplified\ninterface (fewer options). Finally, there is a function arules for\ngenerating association rules (simplified interface compared to apriori,\neclat and fpgrowth, which can also be used to generate association rules.\n",
   "dev_url": "http://www.borgelt.net/pyfim.html",
   "doc_url": "http://www.borgelt.net/pyfim.html",
   "home": "http://www.borgelt.net/pyfim.html",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/License",
   "summary": "Frequent item set mining"
  },
  "build": {
   "number": "1002",
   "script": [
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package": {
   "name": "pyfim",
   "version": "6.28"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "f92acbb08d183ffc241b45716c693d04b7ae626a1c7723af0704accf7f884246",
   "url": "http://www.borgelt.net/src/pyfim.tar.gz"
  },
  "test": {
   "imports": [
    "fim",
    "fim",
    "fim",
    "fim",
    "fim"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyFIM is an extension module that makes several frequent item set mining\nimplementations available as functions in Python 2.7.x & 3.5.x. Currently\napriori, eclat, fpgrowth, sam, relim, carpenter, ista, accretion and\napriacc are available as functions, although the interfaces do not offer\nall of the options of the command line program. (Note that lcm is available\nas an algorithm mode of eclat.) There is also a \"generic\" function fim,\nwhich is essentially the same function as fpgrowth, only with a simplified\ninterface (fewer options). Finally, there is a function arules for\ngenerating association rules (simplified interface compared to apriori,\neclat and fpgrowth, which can also be used to generate association rules.\n",
   "dev_url": "http://www.borgelt.net/pyfim.html",
   "doc_url": "http://www.borgelt.net/pyfim.html",
   "home": "http://www.borgelt.net/pyfim.html",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/License",
   "summary": "Frequent item set mining"
  },
  "build": {
   "number": "1002",
   "script": [
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package": {
   "name": "pyfim",
   "version": "6.28"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "f92acbb08d183ffc241b45716c693d04b7ae626a1c7723af0704accf7f884246",
   "url": "http://www.borgelt.net/src/pyfim.tar.gz"
  },
  "test": {
   "imports": [
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim",
    "fim"
   ]
  }
 },
 "name": "pyfim",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "PyFIM is an extension module that makes several frequent item set mining\nimplementations available as functions in Python 2.7.x & 3.5.x. Currently\napriori, eclat, fpgrowth, sam, relim, carpenter, ista, accretion and\napriacc are available as functions, although the interfaces do not offer\nall of the options of the command line program. (Note that lcm is available\nas an algorithm mode of eclat.) There is also a \"generic\" function fim,\nwhich is essentially the same function as fpgrowth, only with a simplified\ninterface (fewer options). Finally, there is a function arules for\ngenerating association rules (simplified interface compared to apriori,\neclat and fpgrowth, which can also be used to generate association rules.\n",
   "dev_url": "http://www.borgelt.net/pyfim.html",
   "doc_url": "http://www.borgelt.net/pyfim.html",
   "home": "http://www.borgelt.net/pyfim.html",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/License",
   "summary": "Frequent item set mining"
  },
  "build": {
   "number": "1002",
   "script": [
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package": {
   "name": "pyfim",
   "version": "6.28"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "f92acbb08d183ffc241b45716c693d04b7ae626a1c7723af0704accf7f884246",
   "url": "http://www.borgelt.net/src/pyfim.tar.gz"
  },
  "test": {
   "imports": [
    "fim",
    "fim",
    "fim",
    "fim",
    "fim"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyfim"
  ]
 },
 "pinning_version": "2021.01.10.01.07.36",
 "pre_pr_migrator_status": {
  "pypy37": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1042, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 222, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 216, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"6.28\" %}\n\npackage:\n  name: pyfim\n  version: {{ version }}\n\nsource:\n  url: http://www.borgelt.net/src/pyfim.tar.gz\n  sha256: f92acbb08d183ffc241b45716c693d04b7ae626a1c7723af0704accf7f884246\n\nbuild:\n  number: 1002\n  script:\n    - python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib  # [win]\n    - python setup.py build_ext --include-dirs=$PREFIX/include --library-dirs=$PREFIX/lib  # [not win]\n    - python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - msinttypes  # [win and py27]\n  run:\n    - python\n\ntest:\n  imports:\n    - fim\n\nabout:\n  home: http://www.borgelt.net/pyfim.html\n  license: MIT\n  license_family: MIT\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/License'\n  summary: 'Frequent item set mining'\n\n  description: |\n    PyFIM is an extension module that makes several frequent item set mining\n    implementations available as functions in Python 2.7.x & 3.5.x. Currently\n    apriori, eclat, fpgrowth, sam, relim, carpenter, ista, accretion and\n    apriacc are available as functions, although the interfaces do not offer\n    all of the options of the command line program. (Note that lcm is available\n    as an algorithm mode of eclat.) There is also a \"generic\" function fim,\n    which is essentially the same function as fpgrowth, only with a simplified\n    interface (fewer options). Finally, there is a function arules for\n    generating association rules (simplified interface compared to apriori,\n    eclat and fpgrowth, which can also be used to generate association rules.\n  doc_url: http://www.borgelt.net/pyfim.html\n  dev_url: http://www.borgelt.net/pyfim.html\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "http://www.borgelt.net/src/pyfim.tar.gz",
 "version": "6.28",
 "win_64_meta_yaml": {
  "about": {
   "description": "PyFIM is an extension module that makes several frequent item set mining\nimplementations available as functions in Python 2.7.x & 3.5.x. Currently\napriori, eclat, fpgrowth, sam, relim, carpenter, ista, accretion and\napriacc are available as functions, although the interfaces do not offer\nall of the options of the command line program. (Note that lcm is available\nas an algorithm mode of eclat.) There is also a \"generic\" function fim,\nwhich is essentially the same function as fpgrowth, only with a simplified\ninterface (fewer options). Finally, there is a function arules for\ngenerating association rules (simplified interface compared to apriori,\neclat and fpgrowth, which can also be used to generate association rules.\n",
   "dev_url": "http://www.borgelt.net/pyfim.html",
   "doc_url": "http://www.borgelt.net/pyfim.html",
   "home": "http://www.borgelt.net/pyfim.html",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/License",
   "summary": "Frequent item set mining"
  },
  "build": {
   "number": "1002",
   "script": [
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed .",
    "python setup.py build_ext --include-dirs=%PREFIX%\\include --library-dirs=%PREFIX%\\lib",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package": {
   "name": "pyfim",
   "version": "6.28"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "f92acbb08d183ffc241b45716c693d04b7ae626a1c7723af0704accf7f884246",
   "url": "http://www.borgelt.net/src/pyfim.tar.gz"
  },
  "test": {
   "imports": [
    "fim",
    "fim",
    "fim",
    "fim"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}