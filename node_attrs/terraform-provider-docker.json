{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199869471.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/206413587.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/213416998.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/218759590.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222667190.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/246033415.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/259385707.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/283238378.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/291753567.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299402726.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/305715302.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/309988981.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/320440089.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/325534028.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/328096171.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345376176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/373334752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428645430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/462472543.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "terraform-provider-docker",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/terraform-providers/terraform-provider-docker",
   "doc_url": "https://www.terraform.io/docs/providers/docker/index.html",
   "home": "https://www.terraform.io",
   "license": "MPL-2.0",
   "license_file": "LICENSE",
   "summary": "The Terraform Docker provider"
  },
  "build": {
   "number": "1",
   "script": [
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/docker/2.21.0/linux_amd64/terraform-provider-docker_v2.21.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform",
    "agcopenhaver",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "terraform-provider-docker",
   "version": "2.21.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "5c3dcdc25a340acef9006bf67c0792cb8b7da67a4a3a06a1572b91adece9559c",
   "url": "https://github.com/kreuzwerker/terraform-provider-docker/archive/v2.21.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo 'provider \"docker\" { version=\"2.21.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/docker/2.21.0/linux_amd64/README.md"
   ],
   "requires": [
    "terraform 1"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/terraform-providers/terraform-provider-docker",
   "doc_url": "https://www.terraform.io/docs/providers/docker/index.html",
   "home": "https://www.terraform.io",
   "license": "MPL-2.0",
   "license_file": "LICENSE",
   "summary": "The Terraform Docker provider"
  },
  "build": {
   "number": "1",
   "script": [
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/docker/2.21.0/linux_amd64/terraform-provider-docker_v2.21.0",
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/docker/2.21.0/darwin_amd64/terraform-provider-docker_v2.21.0",
    "go build -v -o %PREFIX%\\bin\\../plugins/registry.terraform.io/hashicorp/docker/2.21.0/windows_amd64/terraform-provider-docker_v2.21.0.exe"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform",
    "agcopenhaver",
    "oblute",
    "rluria14",
    "conda-forge/terraform",
    "agcopenhaver",
    "oblute",
    "rluria14",
    "conda-forge/terraform",
    "agcopenhaver",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "terraform-provider-docker",
   "version": "2.21.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18",
    "go_compiler_stub 1.18",
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "5c3dcdc25a340acef9006bf67c0792cb8b7da67a4a3a06a1572b91adece9559c",
   "url": "https://github.com/kreuzwerker/terraform-provider-docker/archive/v2.21.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo 'provider \"docker\" { version=\"2.21.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/docker/2.21.0/linux_amd64/README.md",
    "echo 'provider \"docker\" { version=\"2.21.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/docker/2.21.0/darwin_amd64/README.md",
    "echo provider \"docker\" { version=\"2.21.0\" } > init.tf",
    "terraform init --plugin-dir=%PREFIX%\\bin\\../plugins",
    "if not exist .terraform.lock.hcl exit 1",
    "if exist .terraform\\plugins\\plugins/registry.terraform.io/hashicorp/docker/2.21.0\\windows_amd64/README.md exit 1"
   ],
   "requires": [
    "terraform 1",
    "terraform 1",
    "terraform 1"
   ]
  }
 },
 "name": "terraform-provider-docker",
 "new_version": "2.7.2",
 "new_version_attempts": {
  "2.7.1": 1,
  "2.7.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/terraform-providers/terraform-provider-docker",
   "doc_url": "https://www.terraform.io/docs/providers/docker/index.html",
   "home": "https://www.terraform.io",
   "license": "MPL-2.0",
   "license_file": "LICENSE",
   "summary": "The Terraform Docker provider"
  },
  "build": {
   "number": "1",
   "script": [
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/docker/2.21.0/darwin_amd64/terraform-provider-docker_v2.21.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform",
    "agcopenhaver",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "terraform-provider-docker",
   "version": "2.21.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "5c3dcdc25a340acef9006bf67c0792cb8b7da67a4a3a06a1572b91adece9559c",
   "url": "https://github.com/kreuzwerker/terraform-provider-docker/archive/v2.21.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo 'provider \"docker\" { version=\"2.21.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/docker/2.21.0/darwin_amd64/README.md"
   ],
   "requires": [
    "terraform 1"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "terraform-provider-docker"
  ]
 },
 "pinning_version": "2020.08.02.15.39.57",
 "raw_meta_yaml": "{% set provider = \"Docker\" %}\n{% set goname = \"github.com/kreuzwerker/terraform-provider-\"+provider.lower() %}\n{% set version = \"2.21.0\" %}\n\n{% set name = goname.split('/')[-1] %}\n\n{% set plugin_dir = os.sep.join([\"plugins\", \"registry.terraform.io\", \"hashicorp\", provider.lower(), version]) %}\n{% set x4_plugin = name + '_v' + version %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://{{ goname }}/archive/v{{ version }}.tar.gz\n  sha256: 5c3dcdc25a340acef9006bf67c0792cb8b7da67a4a3a06a1572b91adece9559c\n\nbuild:\n  number: 1\n  script:\n    - go build -v -o {{ target_gobin }}..{{ os.sep }}{{ plugin_dir }}{{ os.sep }}{{ target_goos }}_{{ target_goarch }}{{ os.sep }}{{ x4_plugin }}{{ target_goexe }}\n\nrequirements:\n  build:\n    - {{ compiler('go') }} 1.18\n\ntest:\n  requires:\n    - terraform 1\n\n  commands:\n    # Create a sample init.tf loading the provider\n    - echo 'provider \"{{ provider|lower }}\" { version=\"{{ version }}\" }' > init.tf  # [unix]\n    - echo provider \"{{ provider|lower }}\" { version=\"{{ version }}\" } > init.tf    # [win]\n\n    # Initialize\n    - terraform init --plugin-dir={{ target_gobin }}..{{ os.sep }}plugins\n\n    # Tests that init was successful\n    - test -f .terraform.lock.hcl              # [unix]\n    - if not exist .terraform.lock.hcl exit 1  # [win]\n\n    # Test that the provider was not downloaded\n    - test ! -f .terraform/plugins/{{ plugin_dir }}/{{ target_goos }}_{{ target_goarch }}/README.md  # [unix]\n    - if exist .terraform\\plugins\\{{ plugin_dir }}\\{{ target_goos }}_{{ target_goarch }}/README.md exit 1  # [win]\n\nabout:\n  home: https://www.terraform.io\n  license: MPL-2.0\n  license_file: LICENSE\n  summary: The Terraform {{ provider }} provider\n  doc_url: https://www.terraform.io/docs/providers/{{ provider|lower }}/index.html\n  dev_url: https://github.com/terraform-providers/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - conda-forge/terraform\n    - agcopenhaver\n    - oblute\n    - rluria14\n",
 "req": {
  "__set__": true,
  "elements": [
   "go_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub 1.18"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform 1"
   ]
  }
 },
 "url": "https://github.com/kreuzwerker/terraform-provider-docker/archive/v2.21.0.tar.gz",
 "version": "2.21.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/terraform-providers/terraform-provider-docker",
   "doc_url": "https://www.terraform.io/docs/providers/docker/index.html",
   "home": "https://www.terraform.io",
   "license": "MPL-2.0",
   "license_file": "LICENSE",
   "summary": "The Terraform Docker provider"
  },
  "build": {
   "number": "1",
   "script": [
    "go build -v -o %PREFIX%\\bin\\../plugins/registry.terraform.io/hashicorp/docker/2.21.0/windows_amd64/terraform-provider-docker_v2.21.0.exe"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform",
    "agcopenhaver",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "terraform-provider-docker",
   "version": "2.21.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "5c3dcdc25a340acef9006bf67c0792cb8b7da67a4a3a06a1572b91adece9559c",
   "url": "https://github.com/kreuzwerker/terraform-provider-docker/archive/v2.21.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo provider \"docker\" { version=\"2.21.0\" } > init.tf",
    "terraform init --plugin-dir=%PREFIX%\\bin\\../plugins",
    "if not exist .terraform.lock.hcl exit 1",
    "if exist .terraform\\plugins\\plugins/registry.terraform.io/hashicorp/docker/2.21.0\\windows_amd64/README.md exit 1"
   ],
   "requires": [
    "terraform 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 }
}