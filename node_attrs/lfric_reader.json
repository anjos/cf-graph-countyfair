{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/705769781.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf480"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/725253972.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf481"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/733214004.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775256193.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/780110978.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/808010940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815155679.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/889201303.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "lfric_reader",
 "hash_type": "sha256",
 "name": "lfric_reader",
 "new_version": "0.10",
 "new_version_attempts": {
  "0.10": 1,
  "0.8": 1,
  "0.9": 1,
  "0.9.1": 1,
  "0.9.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lfric_reader"
  ]
 },
 "pinning_version": "2022.03.24.20.51.15",
 "pre_pr_migrator_attempts": {
  "pypy37": 1
 },
 "pre_pr_migrator_status": {
  "pypy37": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1414652366\">bot CI job</a>): master: ['linux_64_python3.7.____73_pypy: Encountered problems while solving:\\n  - package paraview-5.9.1-h6df8084_2_egl requires libnetcdf >=4.8.0,<4.8.1.0a0, but none of the providers can be installed\\n', 'osx_64_python3.7.____73_pypy: Encountered problems while solving:\\n  - package python-3.7.10-0_73_pypy requires python_abi 3.7 *_pypy37_pp73, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"lfric_reader\" %}\n{% set version = \"0.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/niwa/lfric_reader/archive/v{{ version }}.tar.gz\n  sha256: 60e217cfae0e754d2edc383d26944857098390608c1b0a2e6d3339935ef515d1\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n    - {{ cdt('libxext') }}     # [linux]\n    - make  # [unix]\n    - cmake\n  host:\n    - paraview\n    - python\n    - pip\n    - setuptools_scm\n    - libnetcdf\n    - boost-cpp\n    - eigen\n    - xorg-libxfixes  # [linux]\n  run:\n    - paraview\n    - python\n    - netcdf4\n\ntest:\n  commands:\n    - python -c \"import paraview.simple as pvs; pvs.LoadPlugin('$PREFIX/lib/netCDFLFRicReader/netCDFLFRicReader.so')\"  # [not win]\n    - python -c \"import paraview.simple as pvs; pvs.LoadPlugin(r'%PREFIX%\\Library\\bin\\netCDFLFRicReader\\netCDFLFRicReader.dll')\"  # [win]\n    - replace_ugrid_metadata -h\n\nabout:\n  home: https://github.com/niwa/lfric_reader\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: ParaView plugin that reads output from the LFRic code in netCDF UGRID format\n  description: |\n    ParaView plugin that reads output from the LFRic\n    code in netCDF UGRID format.\n  doc_url: https://github.com/niwa/lfric_reader\n  dev_url: https://github.com/niwa/lfric_reader\n\nextra:\n  recipe-maintainers:\n    - tinyendian\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://github.com/niwa/lfric_reader/archive/v0.10.tar.gz",
 "version": "0.10"
}