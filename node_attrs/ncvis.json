{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/367183489.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395387031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428772066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/456396414.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502055031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560117056.json"
   },
   "data": {
    "bot_rerun": 1636858856.8891747,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776356696.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008989810.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1105760588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: Signals.SIGTERM\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 242, in _parse_meta_yaml_impl\n    cfg_as_dict.update(conda_build.environ.get_dict(m=m))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 265, in get_dict\n    d.update(lua_vars(m, prefix, escape_backslash))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 379, in lua_vars\n    deps = [str(ms.name) for ms in metadata.ms_depends(build_or_host)]\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1487, in ms_depends\n    if c in ms.name:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 425, in name\n    return self.get_exact_value('name') or '*'\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 209, in get_exact_value\n    return v and v.exact_value\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 843, in exact_value\n    return self._raw_value if self._re_match is None else None\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/xonsh/built_ins.py\", line 61, in newh\n    sys.exit(sig)\nSystemExit: Signals.SIGTERM\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 178, in parse_meta_yaml\n    raise RuntimeError(\"cond build error: %s\" % str(e))\nRuntimeError: cond build error: Signals.SIGTERM\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ncvis",
 "hash_type": "sha256",
 "name": "ncvis",
 "new_version": "1.5.9",
 "new_version_attempts": {
  "1.5.8": 1,
  "1.5.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ncvis"
  ]
 },
 "pinning_version": "2022.10.31.14.40.35",
 "raw_meta_yaml": "{% set name = \"ncvis\" %}\n{% set version = \"1.5.9\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7e60e3c59eb7ff82e925f10869efee61652884d2843d5928c6ac91bae933ec63\n\nbuild:\n  number: 2\n  skip: true  # [py==27]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux and not aarch64]\n  host:\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux and not aarch64]\n    - python\n    - pip\n    - numpy\n    - cython\n  run:\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux and not aarch64]\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  files:\n    - test.py\n    - test_init.py\n  requires:\n    - pytest\n  commands:\n    - python test_init.py\n    - pytest test.py\n\nabout:\n  home: https://github.com/stat-ml/ncvis\n  license_file:\n    - LICENSE\n    - lib/hnswlib/LICENSE\n    - lib/pcg-cpp/LICENSE-APACHE.txt\n  license: MIT\n  license_family: MIT\n  summary: Efficient solution for data visualization\n\n  description: |\n    NCVis is an efficient solution for data visualization and dimensionality\n    reduction. It uses  HNSW <https://github.com/nmslib/hnswlib> to quickly\n    construct the nearest neighbors graph and a parallel (batched) approach\n    to build its embedding. Efficient random sampling is achieved via \n    PCGRandom <https://github.com/imneme/pcg-cpp>.\n  doc_url: https://github.com/stat-ml/ncvis-examples\n  dev_url: https://github.com/stat-ml/ncvis\n\nextra:\n  recipe-maintainers:\n    - alartum\n",
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/ncvis/ncvis-1.5.9.tar.gz",
 "version": "1.5.9"
}