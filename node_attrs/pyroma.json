{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/208524119.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/284251465.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335859488.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574458061.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/583234107.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1169178941.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyroma",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/regebro/pyroma/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Test your project's packaging friendliness"
  },
  "build": {
   "entry_points": [
    "pyroma = pyroma:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "CAM-Gerlach",
    "jakirkham"
   ]
  },
  "package": {
   "name": "pyroma",
   "version": "4.0"
  },
  "requirements": {
   "build": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "docutils",
    "pep517",
    "pygments",
    "python >=3.7",
    "python-build",
    "requests",
    "setuptools",
    "wheel"
   ]
  },
  "source": {
   "sha256": "b41ed0e080fb3aa9a7b8359d0ce7af39bc9b59cb9e7d696c6521f525257cc128",
   "url": "https://pypi.io/packages/source/p/pyroma/pyroma-4.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pyroma --help",
    "cp -r $SRC_DIR/pyroma/testdata $(python -c 'from pathlib import Path; import pyroma; print(Path(pyroma.__file__).parent)')/testdata",
    "python -b -X dev -m pytest -vv -r a -k \"not only_config\" --color=yes --pyargs pyroma.tests"
   ],
   "imports": [
    "pyroma"
   ],
   "requires": [
    "pip",
    "pytest",
    "setuptools >=60"
   ],
   "source_files": [
    "pyroma/testdata"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "pep517",
    "pygments",
    "python",
    "python-build",
    "requests",
    "setuptools",
    "wheel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "setuptools"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/regebro/pyroma/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Test your project's packaging friendliness"
  },
  "build": {
   "entry_points": [
    "pyroma = pyroma:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "CAM-Gerlach",
    "jakirkham"
   ]
  },
  "package": {
   "name": "pyroma",
   "version": "4.0"
  },
  "requirements": {
   "build": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "docutils",
    "pep517",
    "pygments",
    "python >=3.7",
    "python-build",
    "requests",
    "setuptools",
    "wheel"
   ]
  },
  "source": {
   "sha256": "b41ed0e080fb3aa9a7b8359d0ce7af39bc9b59cb9e7d696c6521f525257cc128",
   "url": "https://pypi.io/packages/source/p/pyroma/pyroma-4.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pyroma --help",
    "cp -r $SRC_DIR/pyroma/testdata $(python -c 'from pathlib import Path; import pyroma; print(Path(pyroma.__file__).parent)')/testdata",
    "python -b -X dev -m pytest -vv -r a -k \"not only_config\" --color=yes --pyargs pyroma.tests"
   ],
   "imports": [
    "pyroma"
   ],
   "requires": [
    "pip",
    "pytest",
    "setuptools >=60"
   ],
   "source_files": [
    "pyroma/testdata"
   ]
  }
 },
 "name": "pyroma",
 "new_version": "4.1",
 "new_version_attempts": {
  "2.6.1": 1,
  "3.0.1": 1,
  "4.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyroma"
  ]
 },
 "pinning_version": "2022.12.16.14.20.18",
 "raw_meta_yaml": "{% set name = \"pyroma\" %}\n{% set import = \"pyroma\" %}\n{% set entrypoint = \"pyroma\" %}\n{% set version = \"4.0\" %}\n{% set sha256 = \"b41ed0e080fb3aa9a7b8359d0ce7af39bc9b59cb9e7d696c6521f525257cc128\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - {{ entrypoint }} = {{ import }}:main\n\nrequirements:\n  build:\n    - python >=3.7\n    - pip\n\n  run:\n    - docutils\n    - pep517\n    - pygments\n    - python >=3.7\n    - python-build\n    - requests\n    - setuptools\n    - wheel\n\ntest:\n  requires:\n    - pip\n    - pytest\n    - setuptools >=60\n\n  source_files:\n    # Test data to copy to installed package\n    - {{ import }}/testdata\n\n  imports:\n    - {{ import }}\n\n  commands:\n    - pip check\n    - {{ entrypoint }} --help\n    # Copy the testdata into the expected place, sincei it isn't normally installed with the package\n    - cp -r $SRC_DIR/{{ import }}/testdata $(python -c 'from pathlib import Path; import {{ import }}; print(Path({{ import }}.__file__).parent)')/testdata\n    # Run with Pytest instead of Unittest to skip a test that fails when installed, fixed in Pyroma 4.1\n    - python -b -X dev -m pytest -vv -r a -k \"not only_config\" --color=yes --pyargs {{ import }}.tests\n\nabout:\n  home: https://github.com/regebro/pyroma/\n  license: MIT\n  license_file: LICENSE.txt\n  summary: \"Test your project's packaging friendliness\"\n\nextra:\n  recipe-maintainers:\n    - CAM-Gerlach\n    - jakirkham\n",
 "req": {
  "__set__": true,
  "elements": [
   "docutils",
   "pep517",
   "pip",
   "pygments",
   "python",
   "python-build",
   "requests",
   "setuptools",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "pep517",
    "pygments",
    "python",
    "python-build",
    "requests",
    "setuptools",
    "wheel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "setuptools"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "pep517",
    "pygments",
    "python >=3.7",
    "python-build",
    "requests",
    "setuptools",
    "wheel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "setuptools >=60"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pyroma/pyroma-4.0.tar.gz",
 "version": "4.0"
}