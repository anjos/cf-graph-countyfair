{
 "PRed": [],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "marxs",
 "hash_type": "sha256",
 "name": "marxs",
 "new_version": "1.2",
 "new_version_attempts": {
  "1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "marxs"
  ]
 },
 "pinning_version": "2020.11.11.15.57.25",
 "raw_meta_yaml": "{% set name = \"marxs\" %}\n{% set version = \"1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: bb9fb2ed73f8e0fc32c6b8ee76888cbcdd6fdfec66347d04c104d6f8dca9debf\n  patches:\n    - setup.cfg.patch\n\nbuild:\n  number: 0\n  noarch: python\n  script: '{{ PYTHON }} -m pip install . -vv '\n\nrequirements:\n  host:\n    - pip\n    - python\n    - astropy\n    - transforms3d\n  run:\n    - python >=3.5\n    - astropy\n    - transforms3d\n    - scipy\n\ntest:\n  imports:\n    - marxs\n    - marxs.analysis\n    - marxs.base\n    - marxs.design\n    - marxs.math\n    - marxs.missions\n    - marxs.optics\n    - marxs.simulator\n    - marxs.source\n    - marxs.visualization\n\nabout:\n  home: https://github.com/Chandra-MARX/marxs\n  license: GPL-3.0-or-later\n  license_family: GPL3\n  license_file: licenses/LICENSE.rst\n  summary: Multi Architecture Raytracer for X-ray satellites\n  description: |\n    MARXS (Multi-Architecture-Raytrace-Xraymission-Simulator) is a toolsuite\n    to simulate the performance X-ray observatories. It is primarily aimed at\n    astronomical X-ray satellites and sounding rocket payloads, but can be\n    used to ray-trace experiments in the laboratory as well. MARXS performs\n    Monte-Carlo ray-trace simulations from a source (astronomical or lab)\n    through a collection of optical elements such as mirrors, baffles, and\n    gratings to a detector.\n  doc_url: http://marxs.readthedocs.io/en/latest/\n  dev_url: https://github.com/Chandra-MARX/marxs\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/marxs/marxs-1.2.tar.gz",
 "version": "1.2"
}