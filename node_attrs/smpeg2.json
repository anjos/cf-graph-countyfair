{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199589135.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220055092.json"
   },
   "data": {
    "bot_rerun": 1597087681.4448686,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "smpeg2",
 "hash_type": "sha256",
 "name": "smpeg2",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "smpeg2"
  ]
 },
 "pinning_version": "2018.10.01",
 "raw_meta_yaml": "{% set name = \"smpeg2\" %}\n{% set version = \"2.0.0\" %}\n{% set sha256 = \"979a65b211744a44fa641a9b6e4d64e64a12ff703ae776bafe3c4c4cd85494b3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://www.libsdl.org/projects/smpeg/release/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - windows_find_memset.patch  # [win]\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - cmake  # [win]\n    - autoconf  # [unix]\n    - automake  # [unix]\n    - libtool  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - pkgconfig  # [unix]\n    - sdl2\n  run:\n    - sdl2\n\ntest:\n  requires:\n    - python {{ environ['PY_VER'] + '*' }}  # [win]\n  commands:\n    - test -f $PREFIX/lib/libsmpeg2.a  # [unix]\n    - test -f $PREFIX/lib/libsmpeg2.dylib  # [osx]\n    - test -f $PREFIX/lib/libsmpeg2.so  # [linux]\n    - test -f $PREFIX/bin/plaympeg  # [unix]\n    - test -f $PREFIX/bin/smpeg2-config  # [unix]\n    - test -f $PREFIX/include/smpeg2/smpeg.h  # [unix]\n    - test -f $PREFIX/include/smpeg2/MPEG.h  # [unix]\n    - if not exist %LIBRARY_LIB%\\\\smpeg2.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\smpeg2.dll exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\\\smpeg2\\\\smpeg.h exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\\\smpeg2\\\\MPEG.h exit 1  # [win]\n\nabout:\n  home: https://www.libsdl.org/\n  license: GPLv2\n  license_file: COPYING\n  summary: \"SDL2 Mpeg2 libraries\"\n  description: MPEG2 Libraries for SDL2.\n\nextra:\n  recipe-maintainers:\n    - dschreij\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://www.libsdl.org/projects/smpeg/release/smpeg2-2.0.0.tar.gz",
 "version": "2.0.0"
}