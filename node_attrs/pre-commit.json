{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/307789009.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/311511607.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/332798523.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/333380487.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335895469.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/358746542.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.21.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/368350113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/368856107.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/376848329.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/383048467.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/387464593.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393763668.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/407567979.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/416989383.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/431437153.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/432077086.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442980906.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472043642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472167636.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501973585.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/512085119.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513321984.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525197776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/527726365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/527795417.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/534040063.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/536316896.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552630470.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562810154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/568866603.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/577965039.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/586364085.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/588940555.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/610046206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617191743.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650550269.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705737732.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/716063001.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/721846906.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/726442637.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773499789.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/792570492.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux": "azure",
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "osx": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "pre-commit",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "name": "pre-commit",
 "new_version": "2.16.0",
 "new_version_attempts": {
  "2.10.0": 1,
  "2.10.1": 1,
  "2.11.0": 1,
  "2.11.1": 1,
  "2.12.0": 1,
  "2.12.1": 1,
  "2.13.0": 1,
  "2.14.0": 1,
  "2.14.1": 1,
  "2.15.0": 1,
  "2.16.0": 1,
  "2.3.0": 1,
  "2.4.0": 1,
  "2.5.0": 1,
  "2.5.1": 1,
  "2.6.0": 1,
  "2.7.0": 1,
  "2.7.1": 1,
  "2.8.1": 1,
  "2.8.2": 1,
  "2.9.0": 1,
  "2.9.1": 1,
  "2.9.2": 1,
  "2.9.3": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pre-commit",
   "pre_commit"
  ]
 },
 "pinning_version": "2021.12.01.07.22.59",
 "raw_meta_yaml": "{% set version = \"2.15.0\" %}\n\npackage:\n  name: pre-commit\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pre-commit/pre-commit/archive/v{{ version }}.tar.gz\n  sha256: 979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990\n\nbuild:\n  number: 1\n  skip: true  # [py<36]\n  entry_points:\n    - pre-commit = pre_commit.main:main\n    - pre-commit-validate-config = pre_commit.clientlib:validate_config_main\n    - pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main\n\noutputs:\n  - name: pre-commit\n    script: build_base.bat  # [win]\n    script: build_base.sh  # [not win]\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n      host:\n        - pip\n        - python\n      run:\n        - cfgv >=2.0.0\n        - identify >=1.0.0\n        - importlib_metadata  # [py<38]\n        - importlib_resources  # [py<37]\n        - nodeenv >=0.11.1\n        - python\n        - pyyaml >=5.1\n        - toml\n        - virtualenv >=20.0.8\n    test:\n      requires:\n        - pip\n      imports:\n        - pre_commit\n        - pre_commit.commands\n        - pre_commit.languages\n      commands:\n        - pip check\n        - pre-commit --help\n        - pre-commit-validate-config --help\n        - pre-commit-validate-manifest --help\n\n  - name: pre_commit\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage('pre-commit', max_pin=\"x.x.x\") }}\n    test:\n      imports:\n        - pre_commit\n\nabout:\n  home: http://pre-commit.com/\n  license: MIT\n  license_file: LICENSE\n  summary: A framework for managing and maintaining multi-language pre-commit hooks.\n  license_family: MIT\n  dev_url: https://github.com/pre-commit/pre-commit\n  doc_url: https://github.com/pre-commit/pre-commit\n\nextra:\n  recipe-maintainers:\n    - deadsnakes-issues-bot\n    - nicoddemus\n    - xmnlab\n",
 "req": {
  "__set__": true,
  "elements": [
   "cfgv",
   "identify",
   "nodeenv",
   "pip",
   "pre-commit",
   "python",
   "pyyaml",
   "toml",
   "virtualenv"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv >=2.0.0",
    "identify >=1.0.0",
    "nodeenv >=0.11.1",
    "pre-commit",
    "python",
    "pyyaml >=5.1",
    "toml",
    "virtualenv >=20.0.8"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz",
 "version": "2.15.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pre-commit/pre-commit",
   "doc_url": "https://github.com/pre-commit/pre-commit",
   "home": "http://pre-commit.com/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A framework for managing and maintaining multi-language pre-commit hooks."
  },
  "build": {
   "entry_points": [
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main",
    "pre-commit = pre_commit.main:main",
    "pre-commit-validate-config = pre_commit.clientlib:validate_config_main",
    "pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab",
    "deadsnakes-issues-bot",
    "nicoddemus",
    "xmnlab"
   ]
  },
  "outputs": [
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   },
   {
    "name": "pre-commit",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "python"
     ],
     "run": [
      "cfgv >=2.0.0",
      "identify >=1.0.0",
      "nodeenv >=0.11.1",
      "python",
      "pyyaml >=5.1",
      "toml",
      "virtualenv >=20.0.8"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "pip check",
      "pre-commit --help",
      "pre-commit-validate-config --help",
      "pre-commit-validate-manifest --help"
     ],
     "imports": [
      "pre_commit",
      "pre_commit.commands",
      "pre_commit.languages"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "pre_commit",
    "requirements": {
     "run": [
      "pre-commit"
     ]
    },
    "test": {
     "imports": [
      "pre_commit"
     ]
    }
   }
  ],
  "package": {
   "name": "pre-commit",
   "version": "2.15.0"
  },
  "source": {
   "sha256": "979fc6ca62b24262de370318825de6820c09e5bdc7f8ba0c8091bd3060b0c990",
   "url": "https://github.com/pre-commit/pre-commit/archive/v2.15.0.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cfgv",
    "identify",
    "nodeenv",
    "pre-commit",
    "python",
    "pyyaml",
    "toml",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}