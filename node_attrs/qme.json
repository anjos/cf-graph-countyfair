{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/425725189.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/962727661.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "qme",
 "hash_type": "sha256",
 "name": "qme",
 "new_version": "0.0.14",
 "new_version_attempts": {
  "0.0.12": 1,
  "0.0.14": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "qme"
  ]
 },
 "pinning_version": "2022.06.08.23.30.54",
 "raw_meta_yaml": "{% set name = \"qme\" %}\n{% set version = \"0.0.14\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9dc4ce377f3fef3adc0d5100935f0e13ae17bd96f52439b6def2f4025be5567e\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - qme=qme.client:main\n  script: '{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv '\n\nrequirements:\n  host:\n    - pip\n    - python >=3\n    - pytest-runner\n  run:\n    - python >=3\n    - sqlalchemy\n    - flask\n    - flask-restful\n    - flask-socketio\n    - gevent-websocket\n\ntest:\n  imports:\n    - qme\n    - qme.defaults\n    - qme.version\n    - qme.app\n    - qme.app.server\n    - qme.client\n    - qme.client.config\n    - qme.client.get\n    - qme.client.listing\n    - qme.client.run\n    - qme.client.start\n    - qme.client.clear\n    - qme.client.generate\n    - qme.client.search\n    - qme.logger\n    - qme.logger.message\n    - qme.logger.namer\n    - qme.logger.progress\n    - qme.logger.spinner\n    - qme.main\n    - qme.main.executor\n    - qme.main.executor.base\n    - qme.main.executor.shell\n    - qme.main.executor.slurm\n    - qme.main.config\n    - qme.main.database\n    - qme.main.database.base\n    - qme.main.database.models\n    - qme.main.database.sqlite\n    - qme.main.database.relational\n    - qme.main.database.filesystem\n    - qme.utils\n    - qme.utils.command\n    - qme.utils.file\n    - qme.utils.prompt\n    - qme.utils.regex\n  commands:\n    - qme --help\n\n\nabout:\n  home: https://github.com/vsoch/qme\n  license: MPL-2.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: reproducible job submission and dashboard library\n  description: |\n    \"Queue-me\" is a jobs queue and dashboard generation tool that can be used\n    to specify executors (entities that run jobs) and actions for them. You can\n    use qme only on the command line, or if desired, via an interactive web dashboard.\n    The dashboard (and it's dependencies) are not required for using the base library.\n  doc_url: https://vsoch.github.io/qme\n  dev_url: https://github.com/vsoch/qme\n\nextra:\n  recipe-maintainers:\n    - vsoch\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/q/qme/qme-0.0.14.tar.gz",
 "version": "0.0.14"
}