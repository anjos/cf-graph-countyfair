{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/814863273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "tl-optional",
 "hash_type": "sha256",
 "name": "tl-optional",
 "new_version": "1.0.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tl-optional"
  ]
 },
 "pinning_version": "2022.01.05.11.50.48",
 "raw_meta_yaml": "{% set version = \"1.0.0\" %}\n\npackage:\n  name: tl-optional\n  version: {{ version }}\n\nsource:\n  url: https://github.com/TartanLlama/optional/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: e18941da05bca12a796ebbeacb83993bc0f10e817fa10bb45124a421c2384690\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - ninja\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/tl/optional.hpp  # [not win]\n    - test -f ${PREFIX}/share/cmake/tl-optional/tl-optional-config.cmake  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\tl\\\\optional.hpp exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\tl-optional\\\\tl-optional-config.cmake exit 1  # [win]\n\nabout:\n  home: https://github.com/TartanLlama/optional\n  license: CC0-1.0\n  license_file: COPYING\n  summary: C++11/14/17 std::optional with functional-style extensions and reference support\n\nextra:\n  recipe-maintainers:\n    - traversaro\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://github.com/TartanLlama/optional/archive/refs/tags/v1.0.0.tar.gz",
 "version": "1.0.0"
}