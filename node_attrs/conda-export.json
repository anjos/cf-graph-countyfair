{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/675540251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "conda-export",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "An alternative to `conda env export` that helps create portable environment\nspecifications with minimum number of packages.\n\nConda-export creates environment specifications which contain only top-level\n(non-transient) dependencies. It tries to minimize specific version information and\ntotal number of packages, so that the resulting spec maximizes [upgradability](https://pythonspeed.com/articles/conda-dependency-management/#three-kinds-of-dependency-specification).\nAt the same time, it respects specific package versions that were used while creating\nthe environment. If, at some point, you installed a package with explicit version (e. g.\n`conda install pytorch=1.9.0`), `conda-export` will include this specific version in\nthe resulting spec file.\n",
   "dev_url": "https://github.com/olegtarasov/conda-export",
   "doc_url": "https://github.com/olegtarasov/conda-export",
   "home": "https://github.com/olegtarasov/conda-export",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Platform agnostic conda environment export"
  },
  "build": {
   "entry_points": [
    "conda-export = conda_export:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "olegtarasov"
   ]
  },
  "package": {
   "name": "conda-export",
   "version": "0.0.4"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.6",
    "pip",
    "conda",
    "networkx"
   ]
  },
  "source": {
   "sha256": "73fea89cfeb2ec132292eb79d135f165a6d3cc9e8d80c2e3a58f6c3a5c9f6db5",
   "url": "https://github.com/olegtarasov/conda-export/archive/v0.0.4.tar.gz"
  },
  "test": {
   "commands": [
    "conda-export -h"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "networkx",
    "pip",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "An alternative to `conda env export` that helps create portable environment\nspecifications with minimum number of packages.\n\nConda-export creates environment specifications which contain only top-level\n(non-transient) dependencies. It tries to minimize specific version information and\ntotal number of packages, so that the resulting spec maximizes [upgradability](https://pythonspeed.com/articles/conda-dependency-management/#three-kinds-of-dependency-specification).\nAt the same time, it respects specific package versions that were used while creating\nthe environment. If, at some point, you installed a package with explicit version (e. g.\n`conda install pytorch=1.9.0`), `conda-export` will include this specific version in\nthe resulting spec file.\n",
   "dev_url": "https://github.com/olegtarasov/conda-export",
   "doc_url": "https://github.com/olegtarasov/conda-export",
   "home": "https://github.com/olegtarasov/conda-export",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Platform agnostic conda environment export"
  },
  "build": {
   "entry_points": [
    "conda-export = conda_export:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "olegtarasov"
   ]
  },
  "package": {
   "name": "conda-export",
   "version": "0.0.4"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.6",
    "pip",
    "conda",
    "networkx"
   ]
  },
  "source": {
   "sha256": "73fea89cfeb2ec132292eb79d135f165a6d3cc9e8d80c2e3a58f6c3a5c9f6db5",
   "url": "https://github.com/olegtarasov/conda-export/archive/v0.0.4.tar.gz"
  },
  "test": {
   "commands": [
    "conda-export -h"
   ]
  }
 },
 "name": "conda-export",
 "new_version": "0.0.4",
 "new_version_attempts": {
  "0.0.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "conda-export"
  ]
 },
 "pinning_version": "2021.06.22.04.56.18",
 "raw_meta_yaml": "{% set name = \"conda-export\" %}\n{% set version = \"0.0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/olegtarasov/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 73fea89cfeb2ec132292eb79d135f165a6d3cc9e8d80c2e3a58f6c3a5c9f6db5\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - conda-export = conda_export:main\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools\n  run:\n    - python >=3.6\n    - pip\n    - conda\n    - networkx\n\ntest:\n  commands:\n    - conda-export -h\n\nabout:\n  home: https://github.com/olegtarasov/conda-export\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Platform agnostic conda environment export'\n  description: |\n    An alternative to `conda env export` that helps create portable environment \n    specifications with minimum number of packages. \n\n    Conda-export creates environment specifications which contain only top-level \n    (non-transient) dependencies. It tries to minimize specific version information and \n    total number of packages, so that the resulting spec maximizes [upgradability](https://pythonspeed.com/articles/conda-dependency-management/#three-kinds-of-dependency-specification).\n    At the same time, it respects specific package versions that were used while creating \n    the environment. If, at some point, you installed a package with explicit version (e. g. \n    `conda install pytorch=1.9.0`), `conda-export` will include this specific version in \n    the resulting spec file.\n  doc_url: https://github.com/olegtarasov/conda-export\n  dev_url: https://github.com/olegtarasov/conda-export\n\nextra:\n  recipe-maintainers:\n    - olegtarasov\n",
 "req": {
  "__set__": true,
  "elements": [
   "conda",
   "networkx",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "networkx",
    "pip",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "networkx",
    "pip",
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/olegtarasov/conda-export/archive/v0.0.4.tar.gz",
 "version": "0.0.4"
}