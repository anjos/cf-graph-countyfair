{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/648139850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799161388.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1122693424.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gyptis",
 "hash_type": "sha256",
 "name": "gyptis",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gyptis"
  ]
 },
 "pinning_version": "2022.11.14.21.30.17",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"gyptis\" %}\n{% set version = \"0.4.2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/{{ name }}/{{ name }}/-/archive/v{{ version }}/{{ name }}-v{{ version }}.tar.gz\n  sha256: 775d248f9d22e992ebec456039dca505b26605291c4a1db49d9158af846b8b56\n\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv --no-deps\"\n  skip: true  # [win]\n  {% set mpi_prefix = \"mpi_\" + mpi %}\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ cdt('libselinux') }}        # [linux]\n    - {{ cdt('libxcb') }}            # [linux]\n    - {{ cdt('libxau') }}            # [linux]\n    - {{ cdt('libxdamage') }}        # [linux]\n    - {{ cdt('libxxf86vm') }}        # [linux]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n  host:\n    - python\n    - pip\n    - fenics\n    - numpy\n    - {{ mpi }}\n    - xorg-libxfixes     # [linux]\n    - xorg-libxext       # [linux]\n    - xorg-libxrender    # [linux]\n    - xorg-libx11        # [linux]\n    - xorg-libxmu        # [linux]\n  run:\n    - python\n    - fenics\n    - numpy\n    - dolfin-adjoint\n    - gmsh \n    - python-gmsh\n    - meshio\n    - scipy\n    - matplotlib-base\n    - nlopt\n    - psutil\n    - ipython\n    - joblib\n    - loguru\n    - {{ mpi }}\n    - h5py * {{ mpi_prefix }}_*\n\ntest:\n  imports:\n    - {{ name }}\n  source_files:\n    - tests/simple_test.py\n  commands:\n    - export MPLBACKEND=agg && unset GYPTIS_ADJOINT && pytest -svv ./tests/simple_test.py\n  requires:\n    - pytest\n\nabout:\n  home: https://gitlab.com/{{ name }}/{{ name }}\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Computational Photonics in Python'\n\n  description: |\n    Gyptis is a package to solve problems relevant in Electromagnetism and Photonics. \n    It is built on top of Gmsh <https://gmsh.info> for defining and meshing geometries and \n    FEniCS <https://fenicsproject.org> to solve Maxwell's equations with the Finite Element Method.\n  doc_url: https://{{ name }}.gitlab.io\n  dev_url: https://gitlab.com/{{ name }}/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - benvial\n",
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "url": "https://gitlab.com/gyptis/gyptis/-/archive/v0.4.2/gyptis-v0.4.2.tar.gz",
 "version": "0.4.2"
}