{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/879603872.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "json2parquet",
 "hash_type": "sha256",
 "name": "json2parquet",
 "new_version": "2.0.0",
 "new_version_attempts": {
  "2.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "json2parquet"
  ]
 },
 "pinning_version": "2022.03.14.13.58.01",
 "raw_meta_yaml": "{% set name = \"json2parquet\" %}\n{% set version = \"2.0.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 080dcbacc10c8655528f0318d24f2d9fc7bb59b3c5126caaea80938e4f6bbf49\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - ciso8601\n    - numpy >=1.14.0\n    - pandas <2.0.0\n    - pyarrow <6.0.0\n    - python >=3.6\n\ntest:\n  imports:\n    - json2parquet\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/andrewgross/json2parquet\n  summary: A simple Parquet converter for JSON/python data\n  description: This library wraps pyarrow to provide some tools to easily convert JSON data into Parquet format. It is mostly in Python. It iterates over files. It copies the data several times in memory. It is not meant to be the fastest thing available. However, it is convenient for smaller data sets, or people who don't\n    have a huge issue with speed.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  dev_url: https://github.com/andrewgross/json2parquet\n\nextra:\n  recipe-maintainers:\n    - BastianZim\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/j/json2parquet/json2parquet-2.0.0.tar.gz",
 "version": "2.0.0"
}