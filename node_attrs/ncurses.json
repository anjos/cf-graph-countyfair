{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/197276664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215184979.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/253991909.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374219435.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/466364592.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776107120.json"
   },
   "data": {
    "bot_rerun": 1639521557.6993666,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802886206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "ncurses",
 "hash_type": "sha256",
 "name": "ncurses",
 "new_version": "6.3",
 "new_version_attempts": {
  "6.3": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ncurses"
  ]
 },
 "pinning_version": "2021.12.14.17.54.38",
 "raw_meta_yaml": "{% set version = \"6.3\" %}\n\npackage:\n  name: ncurses\n  version: {{ version }}\n\nsource:\n  fn: ncurses-{{ version }}.tar.gz\n  url: http://ftp.gnu.org/pub/gnu/ncurses/ncurses-{{ version }}.tar.gz\n  sha256: 97fc51ac2b085d4cde31ef4d2c3122c21abc217e9090a43a30fc5ec21684e059\n\nbuild:\n  skip: true  # [win]\n  number: 1\n  run_exports:\n    # pretty good compat within major version\n    #  https://abi-laboratory.pro/tracker/timeline/ncurses/\n    - {{ pin_subpackage('ncurses') }}\n  # A C++ compiler is needed so that the cursesapp.h file is installed,\n  # but the library does not need libstdc++/libc++\n  ignore_run_exports:\n    - libstdcxx-ng\n    - libcxx\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkg-config\n    - make\n    - libtool\n    - coreutils\n    - ncurses  # [build_platform != target_platform]\n  host:\n    # Need a separate host section so that ncurses doesn't remove -L$PREFIX/lib\n    - libcxx        # [osx]\n    - libstdcxx-ng  # [linux]\n\ntest:\n  requires:\n    - pkg-config\n  # files:\n    # - run_test.sh         # [osx]\n    # Python test will not pass until it is recompiled against ncurses 6.1\n    # - run_test.py         # [osx]\n  commands:\n    # Test libraries\n    {% set ncurses_libraries = [\n        \"libncurses\",\n        \"libtinfo\",\n        \"libform\",\n        \"libmenu\",\n        \"libpanel\",\n    ] %}\n    {% for each_ncurses_library in ncurses_libraries %}\n    - test ! -f ${PREFIX}/lib/{{ each_ncurses_library }}.a\n    - test ! -f ${PREFIX}/lib/{{ each_ncurses_library }}w.a\n    - test -f ${PREFIX}/lib/{{ each_ncurses_library }}.dylib    # [osx]\n    - test -f ${PREFIX}/lib/{{ each_ncurses_library }}w.dylib   # [osx]\n    - test -f ${PREFIX}/lib/{{ each_ncurses_library }}.so       # [linux]\n    - test -f ${PREFIX}/lib/{{ each_ncurses_library }}w.so      # [linux]\n    {% endfor %}\n\n    # Test include directories\n    - test -d ${PREFIX}/include/ncurses\n    - test -d ${PREFIX}/include/ncursesw\n\n    # Test headers\n    {% set ncurses_headers = [\n        \"curses.h\",\n        \"cursesapp.h\",\n        \"cursesf.h\",\n        \"cursesm.h\",\n        \"cursesp.h\",\n        \"cursesw.h\",\n        \"cursslk.h\",\n        \"eti.h\",\n        \"etip.h\",\n        \"form.h\",\n        \"menu.h\",\n        \"nc_tparm.h\",\n        \"ncurses.h\",\n        \"ncurses_dll.h\",\n        \"panel.h\",\n        \"term.h\",\n        \"term_entry.h\",\n        \"termcap.h\",\n        \"tic.h\",\n        \"unctrl.h\"\n    ] %}\n    {% for each_ncurses_header in ncurses_headers %}\n    - test -L ${PREFIX}/include/ncurses/{{ each_ncurses_header }}\n    - test -L ${PREFIX}/include/ncursesw/{{ each_ncurses_header }}\n    - test -f ${PREFIX}/include/{{ each_ncurses_header }}\n    {% endfor %}\n\n    # Test pkg-config files\n    {% set ncurses_pc_files = [\n        \"form\",\n        \"menu\",\n        \"ncurses++\",\n        \"ncurses\",\n        \"panel\",\n        \"tinfo\"\n    ] %}\n    {% for each_ncurses_pc_file in ncurses_pc_files %}\n    - test -f ${PREFIX}/lib/pkgconfig/{{ each_ncurses_pc_file }}.pc\n    - cat ${PREFIX}/lib/pkgconfig/{{ each_ncurses_pc_file }}.pc\n    - test -f ${PREFIX}/lib/pkgconfig/{{ each_ncurses_pc_file }}w.pc\n    - cat ${PREFIX}/lib/pkgconfig/{{ each_ncurses_pc_file }}w.pc\n    {% endfor %}\n\n    # Test ncurses library arguments.\n    - pkg-config ncurses --libs\n    - pkg-config ncurses --libs | grep \"^-L${PREFIX}/lib .*-lncurses -ltinfo$\"\n    - pkg-config tinfo --libs | grep \"^-L${PREFIX}/lib .*-ltinfo$\"\n    - pkg-config ncursesw --libs | grep \"^-L${PREFIX}/lib .*-lncursesw -ltinfow$\"\n    - pkg-config tinfow --libs | grep \"^-L${PREFIX}/lib .*-ltinfow$\"\n\n    # Usage tests\n    # - bash run_test.sh    # [osx]\n    # Python test will not pass until it is recompiled against ncurses 6.1\n    # - python run_test.py  # [osx]\n\nabout:\n  home: http://www.gnu.org/software/ncurses/\n  # See https://github.com/mirror/ncurses/blob/3ef920d65fb2d4046096131d868ae8d4bba79d46/package/debian/copyright\n  license: X11 AND BSD-3-Clause\n  license_file: COPYING\n  summary: Library for text-based user interfaces\n  description: |\n    The ncurses (new curses) library is a free software\n    emulation of curses in System V Release 4.0 (SVr4),\n    and more. It uses terminfo format, supports pads and\n    color and multiple highlights and forms characters and\n    function-key mapping, and has all the other SVr4-curses\n    enhancements over BSD curses. SVr4 curses is better\n    known today as X/Open Curses\n  doc_url: http://invisible-island.net/ncurses/NCURSES-Programming-HOWTO.html\n  dev_url: http://invisible-island.net/ncurses/\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - mingwandroid\n    - fhoehle\n",
 "smithy_version": "3.15.1",
 "strong_exports": false,
 "url": "http://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.3.tar.gz",
 "version": "6.3"
}