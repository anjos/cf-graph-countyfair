{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mimics",
 "hash_type": "sha256",
 "name": "mimics",
 "new_version": "0.0.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mimics"
  ]
 },
 "raw_meta_yaml": "{% set name = \"mimics\" %}\n{% set version = \"0.0.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/mimics-{{ version }}.tar.gz\n  sha256: bff8361a1f089fb6edcd337a48fc77ac3db8f79d84bca800aa4735164b2d2b61\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pbr\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n\ntest:\n  imports:\n    - mimics\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/maarten-dp/mimics\n  summary: Small tool for deferring actions and operations on objects and classes\n  license: MIT\n  license_file: LICENSE\n  description: |\n    Mimic is a tool with the intention to defer actions done on objects or\n     classes. These actions can then be executed at a later date. It's main\n     goal is to solve the chicken-and-egg design conundrum, likely attributed to\n     a sub-optimal project design. Sometimes, though, when working with 3rd\n     party libraries, you just don't have the choice, and the design of one\n     library does not mesh with that of another. This library gives control over\n     \"when\" the user initialized \"what\", while being able to do it in a\n      controlled local scope without losing the ability to use global\n      definitions.\n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/mimics/mimics-0.0.1.tar.gz",
 "version": "0.0.1"
}