{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1079350691.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1079371502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1082435201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1084373823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.24.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1087831912.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.24.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pysjef",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system",
   "dev_url": "https://github.com/molpro/sjef",
   "doc_url": "https://molpro.gitlab.io/pysjef",
   "home": "https://github.com/molpro/sjef",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef\n"
  },
  "build": {
   "number": "0",
   "script": [
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson"
   ]
  },
  "package": {
   "name": "pysjef",
   "version": "1.24.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24"
   ],
   "run": [
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5a1970feb8a5cf3619f29b45176f7a54a8d0587a7240d7efb434d5cd44ff2845",
   "url": "https://github.com/molpro/sjef/archive/refs/tags//1.24.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cython",
    "pip",
    "pugixml",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "lxml",
    "numpy",
    "python",
    "regex",
    "rsync"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system",
   "dev_url": "https://github.com/molpro/sjef",
   "doc_url": "https://molpro.gitlab.io/pysjef",
   "home": "https://github.com/molpro/sjef",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef\n"
  },
  "build": {
   "number": "0",
   "script": [
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)"
   ],
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson"
   ]
  },
  "package": {
   "name": "pysjef",
   "version": "1.24.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24"
   ],
   "run": [
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5a1970feb8a5cf3619f29b45176f7a54a8d0587a7240d7efb434d5cd44ff2845",
   "url": "https://github.com/molpro/sjef/archive/refs/tags//1.24.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "pysjef",
 "new_version": "1.24.2",
 "new_version_attempts": {
  "1.24.1": 1,
  "1.24.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system",
   "dev_url": "https://github.com/molpro/sjef",
   "doc_url": "https://molpro.gitlab.io/pysjef",
   "home": "https://github.com/molpro/sjef",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef\n"
  },
  "build": {
   "number": "0",
   "script": [
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson"
   ]
  },
  "package": {
   "name": "pysjef",
   "version": "1.24.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24"
   ],
   "run": [
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5a1970feb8a5cf3619f29b45176f7a54a8d0587a7240d7efb434d5cd44ff2845",
   "url": "https://github.com/molpro/sjef/archive/refs/tags//1.24.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cython",
    "pip",
    "pugixml",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "lxml",
    "numpy",
    "python",
    "regex",
    "rsync"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system",
   "dev_url": "https://github.com/molpro/sjef",
   "doc_url": "https://molpro.gitlab.io/pysjef",
   "home": "https://github.com/molpro/sjef",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef\n"
  },
  "build": {
   "number": "0",
   "script": [
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson"
   ]
  },
  "package": {
   "name": "pysjef",
   "version": "1.24.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24"
   ],
   "run": [
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5a1970feb8a5cf3619f29b45176f7a54a8d0587a7240d7efb434d5cd44ff2845",
   "url": "https://github.com/molpro/sjef/archive/refs/tags//1.24.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cython",
    "pip",
    "pugixml",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "lxml",
    "numpy",
    "python",
    "regex",
    "rsync"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pysjef"
  ]
 },
 "pinning_version": "2022.10.14.15.41.33",
 "raw_meta_yaml": "{% set name = \"pysjef\" %}\n{% set version = \"1.24.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/molpro/sjef/archive/refs/tags//{{ version }}.tar.gz\n  sha256: 5a1970feb8a5cf3619f29b45176f7a54a8d0587a7240d7efb434d5cd44ff2845\n\nbuild:\n  skip: True  # [win]\n  script:\n    - echo __version__ = \\\"{{ version }}\\\" > pysjef/pysjef/_version.py\n    - CXXFLAGS=\"${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC\" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX  # [osx and x86]\n    - cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX  # [arm64 or linux or win]\n    - cmake --build cmake-build -t install\n    - cd pysjef && {{ PYTHON }} -m pip install . -vv\n    - rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)\n  number: 0\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >=3.14\n    - make\n  host:\n    - python\n    - pip\n    - boost-cpp\n    - pugixml >=1.10\n    - cython >=0.24\n  run:\n    - python\n    - boost-cpp\n    - lxml >=4.0\n    - rsync\n    - regex\n    - numpy\n\ntest:\n  imports:\n    - pysjef\n    - pysjef.project\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/molpro/sjef\n  summary: |\n    Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef\n  description: A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://molpro.gitlab.io/pysjef\n  dev_url: https://github.com/molpro/sjef\n\nextra:\n  recipe-maintainers:\n    - pjknowles\n    - molpro-owner\n    - nick-wilson\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost-cpp",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "cython",
   "lxml",
   "make",
   "numpy",
   "pip",
   "pugixml",
   "python",
   "regex",
   "rsync"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "pip",
    "pugixml",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "lxml",
    "numpy",
    "python",
    "regex",
    "rsync"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.14",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cython >=0.24",
    "pip",
    "pugixml >=1.10",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "lxml >=4.0",
    "numpy",
    "python",
    "regex",
    "rsync"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/molpro/sjef/archive/refs/tags//1.24.2.tar.gz",
 "version": "1.24.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system",
   "dev_url": "https://github.com/molpro/sjef",
   "doc_url": "https://molpro.gitlab.io/pysjef",
   "home": "https://github.com/molpro/sjef",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef\n"
  },
  "build": {
   "number": "0",
   "script": [
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)",
    "echo __version__ = \\\"1.24.2\\\" > pysjef/pysjef/_version.py",
    "cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX",
    "cmake --build cmake-build -t install",
    "cd pysjef && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)"
   ],
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson",
    "pjknowles",
    "molpro-owner",
    "nick-wilson"
   ]
  },
  "package": {
   "name": "pysjef",
   "version": "1.24.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.14",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24",
    "python",
    "pip",
    "boost-cpp",
    "pugixml >=1.10",
    "cython >=0.24"
   ],
   "run": [
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy",
    "python",
    "boost-cpp",
    "lxml >=4.0",
    "rsync",
    "regex",
    "numpy"
   ]
  },
  "source": {
   "sha256": "5a1970feb8a5cf3619f29b45176f7a54a8d0587a7240d7efb434d5cd44ff2845",
   "url": "https://github.com/molpro/sjef/archive/refs/tags//1.24.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project",
    "pysjef",
    "pysjef.project"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cython",
    "pip",
    "pugixml",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "lxml",
    "numpy",
    "python",
    "regex",
    "rsync"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}