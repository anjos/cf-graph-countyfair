{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/630810509.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/630815730.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779985962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052868657.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "infrared",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Infrared provides a fast and flexible C++ engine that evaluates a\nconstraint network consisting of variables, multi-ary functions, and\nmulti-ary constraints. Functions and constraints are C++ or Python\nobjects, where new functions and constraints are easily added in C++\nor in Python\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared/Doc/index.html",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A generic C++/Python hybrid library for efficient (fixed-parameter tractable) Boltzmann sampling"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "v1.0b"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "7396e35c57472380ced0f6a1e73a40a36469907bd0927105631e43b9a7c2c085",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.0b/Infrared-v1.0b.tar.gz"
  },
  "test": {
   "imports": [
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Infrared provides a fast and flexible C++ engine that evaluates a\nconstraint network consisting of variables, multi-ary functions, and\nmulti-ary constraints. Functions and constraints are C++ or Python\nobjects, where new functions and constraints are easily added in C++\nor in Python\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared/Doc/index.html",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A generic C++/Python hybrid library for efficient (fixed-parameter tractable) Boltzmann sampling"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "v1.0b"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "7396e35c57472380ced0f6a1e73a40a36469907bd0927105631e43b9a7c2c085",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.0b/Infrared-v1.0b.tar.gz"
  },
  "test": {
   "imports": [
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared"
   ]
  }
 },
 "name": "infrared",
 "new_version": "v0.5.1",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Infrared provides a fast and flexible C++ engine that evaluates a\nconstraint network consisting of variables, multi-ary functions, and\nmulti-ary constraints. Functions and constraints are C++ or Python\nobjects, where new functions and constraints are easily added in C++\nor in Python\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared/Doc/index.html",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A generic C++/Python hybrid library for efficient (fixed-parameter tractable) Boltzmann sampling"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "v1.0b"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "7396e35c57472380ced0f6a1e73a40a36469907bd0927105631e43b9a7c2c085",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.0b/Infrared-v1.0b.tar.gz"
  },
  "test": {
   "imports": [
    "infrared",
    "infrared",
    "infrared",
    "infrared",
    "infrared"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "infrared"
  ]
 },
 "pinning_version": "2022.09.12.04.26.16",
 "raw_meta_yaml": "{% set name = \"Infrared\" %}\n{% set version = \"v1.0b\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.inria.fr/amibio/{{ name }}/-/archive/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7396e35c57472380ced0f6a1e73a40a36469907bd0927105631e43b9a7c2c085\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vvv\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - pybind11\n    - boost\n    - python\n    - pip\n  run:\n    - python\n    - networkx >=2\n    - treedecomp\n\ntest:\n  imports:\n    - infrared\n\nabout:\n  home: \"https://gitlab.inria.fr/amibio/Infrared\"\n  license: \"GPL-3.0-only\"\n  license_family: GPL\n  license_file: COPYING\n  summary: 'A generic C++/Python hybrid library for efficient (fixed-parameter tractable) Boltzmann sampling'\n  description: |\n    Infrared provides a fast and flexible C++ engine that evaluates a\n    constraint network consisting of variables, multi-ary functions, and\n    multi-ary constraints. Functions and constraints are C++ or Python\n    objects, where new functions and constraints are easily added in C++\n    or in Python\n  doc_url: https://www.lix.polytechnique.fr/~will/Software/Infrared/Doc/index.html\n  dev_url: https://gitlab.inria.fr/amibio/Infrared\n\nextra:\n  recipe-maintainers:\n    - anthonyhtyao\n    - s-will\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost",
   "cmake",
   "cxx_compiler_stub",
   "networkx",
   "ninja",
   "pip",
   "pybind11",
   "python",
   "treedecomp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cxx_compiler_stub",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx >=2",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.0b/Infrared-v1.0b.tar.gz",
 "version": "v1.0b",
 "win_64_meta_yaml": {
  "about": {
   "description": "Infrared provides a fast and flexible C++ engine that evaluates a\nconstraint network consisting of variables, multi-ary functions, and\nmulti-ary constraints. Functions and constraints are C++ or Python\nobjects, where new functions and constraints are easily added in C++\nor in Python\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared/Doc/index.html",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A generic C++/Python hybrid library for efficient (fixed-parameter tractable) Boltzmann sampling"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will",
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "v1.0b"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip",
    "pybind11",
    "boost",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp",
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "7396e35c57472380ced0f6a1e73a40a36469907bd0927105631e43b9a7c2c085",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.0b/Infrared-v1.0b.tar.gz"
  },
  "test": {
   "imports": [
    "infrared",
    "infrared",
    "infrared",
    "infrared"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}