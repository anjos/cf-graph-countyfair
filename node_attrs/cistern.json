{
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cistern",
 "hash_type": "sha256",
 "name": "cistern",
 "new_version": "0.2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cistern"
  ]
 },
 "raw_meta_yaml": "{% set goname = \"github.com/nbedos/cistern\" %}\n{% set version = \"0.2.0\" %}\n\n{% set name = goname.split('/')[-1] %}\n{% set pkg_src = ('src/'+goname).replace(\"/\",os.sep) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - folder: {{ pkg_src }}\n    url: https://{{ goname }}/archive/{{ version }}.tar.gz\n    sha256: bf1c33c593cefd5360f8881a603f2f7204ea700d5f05601382df17730b687d47\n\nbuild:\n  number: 1\n  script:\n    - pushd {{ pkg_src }}\n    - go build -ldflags \"-X main.Version={{ version }}\" -v -o $GOBIN/{{ name }} ./cmd/cistern   # [unix]\n    - go build -ldflags \"-X main.Version={{ version }}\" -v -o %GOBIN%\\{{ name }}.exe ./cmd/cistern   # [win]\n\nrequirements:\n  build:\n    - {{ compiler(\"go\") }} >=1.11\n\ntest:\n  commands:\n    - cistern --version\n\nabout:\n  home: https://github.com/nbedos/cistern\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: {{ pkg_src }}/LICENSE\n  summary: |\n    A top-like utility for Unix to monitor Continuous Integration pipelines from the\n    command line. Think of cistern as the receptacle that holds the results of your\n    CI pipelines. cistern stands for Continuous Integration Services Terminal for Unix.\n  dev_url: https://github.com/nbedos/cistern\n  doc_url: https://nbedos.github.io/cistern/cistern.man\n\nextra:\n  recipe-maintainers:\n    - luizirber\n",
 "strong_exports": false,
 "url": "https://github.com/nbedos/cistern/archive/0.2.0.tar.gz",
 "version": "0.2.0"
}