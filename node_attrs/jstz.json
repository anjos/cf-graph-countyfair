{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228159842.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jstz",
 "hash_type": "sha256",
 "name": "jstz",
 "new_version": "2.1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jstz"
  ]
 },
 "pinning_version": "2018.11.3",
 "raw_meta_yaml": "{% set name = \"jstz\" %}\n{% set version = \"2.1.1\" %}\n{% set sha256 = \"af93d9cb98841d28d32b32c4aed6a99456b2b64bd97fb61caabd0f19a91c55f7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/iansinnott/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: generic\n  script: |\n    tgz=$(npm pack)\n    npm install -g $tgz\n\nrequirements:\n  build:\n    - nodejs\n  \ntest:\n  commands:\n    - npm list -g jstz\n  requires:\n    - nodejs\n   \n\nabout:\n  home: https://github.com/iansinnott/jstz\n  license: MIT\n  license_family: MIT\n  license_file: LICENCE\n  summary: 'Timezone detection for JavaScript'\n  description: |\n    This library allows you to detect a user's timezone from within their browser. \n    It is often useful to use JSTZ in combination with a timezone parsing library \n    such as Moment Timezone. \n  doc_url: http://pellepim.bitbucket.org/jstz/\n  dev_url: https://github.com/iansinnott/jstz\n\nextra:\n  recipe-maintainers:\n    - cshaley\n    - sannykr\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://github.com/iansinnott/jstz/archive/v2.1.1.tar.gz",
 "version": "2.1.1"
}