{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/941556290.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/954327772.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pyobjc-framework-coreservices",
 "hash_type": "sha256",
 "name": "pyobjc-framework-coreservices",
 "new_version": "8.5",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyobjc-framework-coreservices"
  ]
 },
 "pinning_version": "2022.06.01.01.51.44",
 "raw_meta_yaml": "{% set name = \"pyobjc-framework-CoreServices\" %}\n{% set version = \"8.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 58bad844c8e5ee82852d860b117d1238c3ed2db8dd57f754feb6bd5801fe878d\n  patches:\n    - patches/0001-Remove-werror-from-compile-flags.patch\n\nbuild:\n  skip: true   # [not osx]\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pyobjc-core >={{ version }}\n    - pyobjc-framework-fsevents >={{ version }}\n\ntest:\n  imports:\n    - CoreServices\n    - CoreServices.CarbonCore\n    - CoreServices.DictionaryServices\n    - CoreServices.LaunchServices\n    - CoreServices.Metadata\n    - CoreServices.SearchKit\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/ronaldoussoren/pyobjc\n  summary: 'Wrappers for the \u201CCoreServices\u201D framework on macOS.'\n  description: |\n    The PyObjC project aims to provide a bridge between the Python and\n    Objective-C programming languages on macOS. The bridge is intended to be\n    fully bidirectional, allowing the Python programmer to take full advantage\n    of the power provided by various Objective-C based toolkits and the\n    Objective-C programmer transparent access to Python based functionality.\n  license: MIT\n  license_family: MIT\n  license_file: License.txt\n  doc_url: https://pyobjc.readthedocs.io/\n  dev_url: https://github.com/ronaldoussoren/pyobjc\n\nextra:\n  recipe-maintainers:\n    - andfoy\n    - ccordoba12\n    - dalthviz\n    - steff456\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pyobjc-framework-CoreServices/pyobjc-framework-CoreServices-8.5.tar.gz",
 "version": "8.5"
}