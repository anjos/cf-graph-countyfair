{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/196997217.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203285079.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217509120.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220979404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224760222.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228189690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244328818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/249446606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255658919.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256434399.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/272260480.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/282966905.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/301658460.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/311158560.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315151786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/329371919.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335814356.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339224492.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356492844.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/359753013.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/387822031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/390318831.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405748276.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412624990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427715605.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437472954.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454868352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/484228579.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501047781.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505157248.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/511991458.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514183388.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549386950.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/564517378.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569069046.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602162178.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/641335413.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/675461355.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.21.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/692150767.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.21.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/713000741.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.21.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "numpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "setuptools"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "pytest-xdist",
    "setuptools"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "setuptools"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": [
    "f2py = numpy.f2py.f2py2e:main",
    "f2py = numpy.f2py.f2py2e:main",
    "f2py = numpy.f2py.f2py2e:main",
    "f2py = numpy.f2py.f2py2e:main"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "pytest-xdist",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "name": "numpy",
 "new_version": "1.21.2",
 "new_version_attempts": {
  "1.18.3": 1,
  "1.18.4": 11,
  "1.18.5": 1,
  "1.19.0": 1,
  "1.19.1": 1,
  "1.19.2": 1,
  "1.19.3": 1,
  "1.19.4": 1,
  "1.19.5": 1,
  "1.20.0": 1,
  "1.20.1": 1,
  "1.20.2": 1,
  "1.20.3": 3,
  "1.21.0": 11,
  "1.21.1": 2,
  "1.21.2": 1
 },
 "new_version_errors": {
  "1.18.4": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.18.4' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz'\n",
  "1.20.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.20.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz'\n",
  "1.21.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.21.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz'\n",
  "1.21.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.21.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "setuptools"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "setuptools"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "numpy"
  ]
 },
 "pinning_version": "2021.08.14.10.30.44",
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: nothing provides openssl >=1.0.2p,<1.0.3a needed by python-2.7.15-h938d71a_1006\\n', 'Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n', 'Encountered problems while solving.\\nProblem: package cython-0.24-py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'Encountered problems while solving.\\nProblem: package cython-0.29.10-py27hb209c28_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.21.2\" %}\n\npackage:\n  name: numpy\n  version: {{ version }}\n\nsource:\n  url: https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz\n  sha256: 76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05\n  patches:\n    # carry numpy/numpy#19450 to help with flaky hypothesis errors\n    - patches/0001-TST-Simplify-property-test.patch\n\nbuild:\n  number: 0\n  skip: true  # [py<37]\n  entry_points:\n    - f2py = numpy.f2py.f2py2e:main  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - libblas\n    - libcblas\n    - liblapack\n  run:\n    - python\n  run_constrained:\n    # enforce eviction of package from anaconda defaults\n    - numpy-base <0a0\n\n{% set tests_to_skip = \"_not_a_real_test\" %}\n# Seems to fail with current version of glibc for large numbers\n# https://github.com/numpy/numpy/issues/15179\n{% set tests_to_skip = tests_to_skip + \" or test_sincos_float32\" %}                    # [linux64]\n# https://github.com/numpy/numpy/issues/15243\n{% set tests_to_skip = tests_to_skip + \" or test_loss_of_precision[complex256]\" %}     # [ppc64le]\n# Probably needs too much memory on ppc64le, it sometimes fails on travis\n{% set tests_to_skip = tests_to_skip + \" or test_large_archive or test_big_arrays\" %}  # [ppc64le]\n# the following skips are the longest running tests at time of writing; all over 45sec, up to 750sec\n# skipping is done purely to stop pypy jobs from regularly timing out on drone/travis\n{% if (aarch64 or ppc64le) and (python_impl == \"pypy\") %}\n    {% set tests_to_skip = tests_to_skip + \" or test_may_share_memory_easy_fuzz or test_may_share_memory_harder_fuzz\"\n                                         + \" or test_binary_ufunc_1d_manual or test_diophantine_fuzz\"\n                                         + \" or test_unary_ufunc_call_fuzz or test_unary_gufunc_fuzz\"\n                                         + \" or test_big_arrays or test_large_archive or test_large_zip\"\n                                         + \" or test_closing_fid or test_iter_buffered_reduce_reuse\"\n                                         + \" or test_count_nonzero_all or test_divmod_128_64\"\n                                         + \" or (test_generalized_sq_cases \"\n                                         + \"     and (TestCond or TestDet or TestInv or TestSolve))\" %}\n{% endif %}\n\ntest:\n  requires:\n    - pytest\n    - pytest-xdist  # [aarch64]\n    - hypothesis\n    - setuptools\n  commands:\n    - f2py -h\n    {% set numproc = \"-nauto\" if aarch64 else \"\" %}\n    # np.test will show SIMD features of agent (some failures occur depending on presence/absence of e.g. AVX512)\n    - python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not ({{ tests_to_skip }})', '{{ numproc }}'])\"\n  imports:\n    - numpy\n    - numpy.core.multiarray\n    - numpy.core._multiarray_tests\n    - numpy.core.numeric\n    - numpy.core._operand_flag_tests\n    - numpy.core._struct_ufunc_tests\n    - numpy.core._rational_tests\n    - numpy.core.umath\n    - numpy.core._umath_tests\n    - numpy.linalg.lapack_lite\n    - numpy.random.mtrand\n\nabout:\n  home: http://numpy.scipy.org/\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: Array processing for numbers, strings, records, and objects.\n  doc_url: https://docs.scipy.org/doc/numpy/reference/\n  dev_url: https://github.com/numpy/numpy\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - msarahan\n    - pelson\n    - rgommers\n    - ocefpaf\n    - isuruf\n    - xhochy\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "libblas",
   "libcblas",
   "liblapack",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "pytest-xdist",
    "setuptools"
   ]
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "pytest-xdist",
    "setuptools"
   ]
  }
 },
 "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz",
 "version": "1.21.2",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/numpy/numpy",
   "doc_url": "https://docs.scipy.org/doc/numpy/reference/",
   "home": "http://numpy.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Array processing for numbers, strings, records, and objects."
  },
  "build": {
   "entry_points": [
    "f2py = numpy.f2py.f2py2e:main",
    "f2py = numpy.f2py.f2py2e:main",
    "f2py = numpy.f2py.f2py2e:main",
    "f2py = numpy.f2py.f2py2e:main"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari",
    "jakirkham",
    "msarahan",
    "pelson",
    "rgommers",
    "ocefpaf",
    "isuruf",
    "xhochy",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "numpy",
   "version": "1.21.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "cython",
    "libblas",
    "libcblas",
    "liblapack"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0",
    "numpy-base <0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch",
    "patches/0001-TST-Simplify-property-test.patch"
   ],
   "sha256": "76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05",
   "url": "https://github.com/numpy/numpy/releases/download/v1.21.2/numpy-1.21.2.tar.gz"
  },
  "test": {
   "commands": [
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\"",
    "f2py -h",
    "python -c \"import numpy as np; np.test(verbose=3, durations=50, extra_argv=['-k', 'not (_not_a_real_test or test_sincos_float32 or test_loss_of_precision[complex256] or test_large_archive or test_big_arrays)', ''])\""
   ],
   "imports": [
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand",
    "numpy",
    "numpy.core.multiarray",
    "numpy.core._multiarray_tests",
    "numpy.core.numeric",
    "numpy.core._operand_flag_tests",
    "numpy.core._struct_ufunc_tests",
    "numpy.core._rational_tests",
    "numpy.core.umath",
    "numpy.core._umath_tests",
    "numpy.linalg.lapack_lite",
    "numpy.random.mtrand"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools",
    "pytest",
    "hypothesis",
    "setuptools"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pytest",
    "setuptools"
   ]
  }
 }
}