{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/661670694.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-rnomni",
 "hash_type": "sha256",
 "name": "r-rnomni",
 "new_version": "1.0.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-rnomni"
  ]
 },
 "pinning_version": "2021.06.03.19.30.35",
 "raw_meta_yaml": "{% set version = '1.0.0' %}\n\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rnomni\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RNOmni_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RNOmni/RNOmni_{{ version }}.tar.gz\n  sha256: 7b4ea6b98167dff4632d9d546368cb652d291641f6b45cea1aec6fe6b9f6c0fe\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\n# Suggests: R.rsp\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rcpp\n    - r-rcpparmadillo\n    - r-plyr\n    - libblas\n    - liblapack\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcpp\n    - r-rcpparmadillo\n    - r-plyr\n\ntest:\n  commands:\n    - $R -e \"library('RNOmni')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RNOmni')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=RNOmni\n  license: GPL-3.0-only\n  summary: Inverse normal transformation (INT) based genetic association testing. These tests\n    are recommend for continuous traits with non-normally distributed residuals. INT-based\n    tests robustly control the type I error in settings where standard linear regression\n    does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover,\n    INT-based tests dominate standard linear regression in terms of power. These tests\n    may be classified into two types. In direct INT (D-INT), the phenotype is itself\n    transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The\n    omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and\n    statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin\n    X. \"Operating characteristics of the rank-based inverse normal transformation for\n    quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>.\n\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# The original CRAN metadata for this package was:\n\n# Package: RNOmni\n# Title: Rank Normal Transformation Omnibus Test\n# Version: 1.0.0\n# Date: 2020-10-04\n# Authors@R: person(given = \"Zachary\", family = \"McCaw\", role = c(\"aut\", \"cre\"), email = \"zmccaw@alumni.harvard.edu\", comment = c(ORCID = \"0000-0002-2006-9828\"))\n# Description: Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>.\n# Depends: R (>= 3.2.2)\n# Imports: plyr, Rcpp, stats\n# LinkingTo: Rcpp, RcppArmadillo\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 7.1.1\n# Suggests: R.rsp\n# VignetteBuilder: R.rsp\n# NeedsCompilation: yes\n# Packaged: 2020-10-05 14:37:41 UTC; zmccaw\n# Author: Zachary McCaw [aut, cre] (<https://orcid.org/0000-0002-2006-9828>)\n# Maintainer: Zachary McCaw <zmccaw@alumni.harvard.edu>\n# Repository: CRAN\n# Date/Publication: 2020-10-05 16:40:02 UTC\n\n# See\n# https://docs.conda.io/projects/conda-build for\n# more information about meta.yaml\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/RNOmni_1.0.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.0.tar.gz"
 ],
 "version": "1.0.0"
}