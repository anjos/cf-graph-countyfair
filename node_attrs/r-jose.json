{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/651869548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/669135385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774829251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-jose",
 "hash_type": "sha256",
 "name": "r-jose",
 "new_version": "1.2.0",
 "new_version_attempts": {
  "1.1.0": 1,
  "1.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-jose"
  ]
 },
 "pinning_version": "2021.11.05.20.51.02",
 "raw_meta_yaml": "{% set version = \"1.2.0\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-jose\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/jose_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/jose/jose_{{ version }}.tar.gz\n  sha256: 7bd098edbcafebd066ea6a3e85f31305deadac66d994409ea275698aade56626\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n\n  host:\n    - r-base\n    - r-jsonlite\n    - r-openssl >=1.2.1\n\n  run:\n    - r-base\n    - r-jsonlite\n    - r-openssl >=1.2.1\n\ntest:\n  commands:\n    - $R -e \"library('jose')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('jose')\\\"\"  # [win]\n\nabout:\n  home: https://datatracker.ietf.org/wg/jose/documents/ https://www.w3.org/TR/WebCryptoAPI/#jose https://github.com/jeroen/jose\n\n  license: MIT\n  summary: Read and write JSON Web Keys (JWK, rfc7517), generate and verify JSON Web Signatures (JWS, rfc7515) and encode/decode JSON Web Tokens (JWT, rfc7519). These standards provide modern signing and encryption formats that are the basis for services like OAuth 2.0 or LetsEncrypt and are natively supported by browsers\n    via the JavaScript WebCryptoAPI.\n\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: jose\n# Type: Package\n# Title: JavaScript Object Signing and Encryption\n# Version: 1.0\n# Authors@R: person(\"Jeroen\", \"Ooms\", role = c(\"aut\", \"cre\"), email = \"jeroen@berkeley.edu\", comment = c(ORCID = \"0000-0002-4035-0289\"))\n# Description: Read and write JSON Web Keys (JWK, rfc7517), generate and verify JSON Web Signatures (JWS, rfc7515) and encode/decode JSON Web Tokens (JWT, rfc7519). These standards provide modern signing and encryption formats that are the basis for services like OAuth 2.0 or LetsEncrypt and are natively supported by browsers via the JavaScript WebCryptoAPI.\n# License: MIT + file LICENSE\n# URL: https://datatracker.ietf.org/wg/jose/documents/ https://www.w3.org/TR/WebCryptoAPI/#jose https://github.com/jeroen/jose\n# BugReports: https://github.com/jeroen/jose/issues\n# Depends: openssl (>= 1.2.1)\n# Imports: jsonlite\n# RoxygenNote: 6.1.1\n# VignetteBuilder: knitr\n# Suggests: spelling, testthat, knitr, rmarkdown\n# Encoding: UTF-8\n# Language: en-US\n# NeedsCompilation: no\n# Packaged: 2019-01-20 17:45:12 UTC; jeroen\n# Author: Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>)\n# Maintainer: Jeroen Ooms <jeroen@berkeley.edu>\n# Repository: CRAN\n# Date/Publication: 2019-01-20 18:10:03 UTC\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/jose_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/jose/jose_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/jose_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/jose/jose_1.2.0.tar.gz"
 ],
 "version": "1.2.0"
}