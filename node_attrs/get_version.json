{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/659038302.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/659139482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/665158900.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/688896867.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/688968190.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689125728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753181062.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/754181711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841707406.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "get_version",
 "hash_type": "sha256",
 "name": "get_version",
 "new_version": "3.5.4",
 "new_version_attempts": {
  "2.2": 1,
  "3.0": 1,
  "3.2": 1,
  "3.3": 1,
  "3.4": 1,
  "3.5": 1,
  "3.5.1": 1,
  "3.5.3": 1,
  "3.5.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "get_version"
  ]
 },
 "pinning_version": "2022.02.07.06.12.16",
 "raw_meta_yaml": "{% set name = \"get_version\" %}\n{% set version = \"3.5.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/flying-sheep/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: af86fb9873235d5aee3e5b6e85622cd1c72ef42758ab4b97e6cb59c34bb83fde\n  folder: {{ name }}-{{ version }}\n\nbuild:\n  noarch: python\n  number: 0\n  script:\n    - cd \"{{ name }}-{{ version }}\"\n    - {{ PYTHON }} -m pip install --use-feature=in-tree-build .\n\nrequirements:\n  host:\n    - python >=3.7\n    - flit >=1.3\n  run:\n    - python >=3.7\n    - git\n    - dunamai\n    - importlib_metadata\n    - typing_extensions  # in reality just for python <3.8, but that would prevent `noarch`\n\ntest:\n  imports:\n    - get_version\n\nabout:\n  home: https://github.com/flying-sheep/get_version\n  license: GPL-3.0\n  license_family: GPL\n  license_file: {{ name }}-{{ version }}/LICENSE\n  summary: Automatically use the latest \u201CvX.X.X\u201D Git tag as version in your Python package.\n  description: |\n    A version helper in the spirit of versioneer.\n    Minimalistic and able to run without build step using pkg_resources.\n  dev_url: https://github.com/flying-sheep/get_version\n\nextra:\n  recipe-maintainers:\n    - flying-sheep\n    - grst\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://github.com/flying-sheep/get_version/archive/v3.5.4.tar.gz",
 "version": "3.5.4"
}