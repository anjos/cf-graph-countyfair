{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/564185727.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/698815704.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: 404",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "inja",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Inja is a template engine for modern C++, loosely inspired by jinja for python.\nIt has an easy and yet powerful template syntax with all variables, loops,\nconditions, includes, callbacks, and comments you need, nested and combined\nas you like.\n",
   "dev_url": "https://github.com/pantor/inja",
   "doc_url": "https://pantor.github.io/inja/",
   "home": "https://github.com/pantor/inja",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Template Engine for Modern C++"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jessemapel",
    "scsides",
    "kberryUSGS"
   ]
  },
  "package": {
   "name": "inja",
   "version": "3.3.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json >=3.8.0"
   ],
   "run": [
    "nlohmann_json >=3.8.0"
   ]
  },
  "source": {
   "sha256": "e628d994762dcdaa9a97f63a9b8b73d9af51af0ffa5acea6bdbba0aceaf8ee25",
   "url": "https://github.com/pantor/inja/archive/v3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -d ${PREFIX}/include/inja",
    "test -f ${PREFIX}/include/inja/inja.hpp",
    "test -f ${PREFIX}/include/inja/renderer.hpp",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfigVersion.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaTargets.cmake"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "nlohmann_json"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nlohmann_json"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Inja is a template engine for modern C++, loosely inspired by jinja for python.\nIt has an easy and yet powerful template syntax with all variables, loops,\nconditions, includes, callbacks, and comments you need, nested and combined\nas you like.\n",
   "dev_url": "https://github.com/pantor/inja",
   "doc_url": "https://pantor.github.io/inja/",
   "home": "https://github.com/pantor/inja",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Template Engine for Modern C++"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jessemapel",
    "scsides",
    "kberryUSGS",
    "jessemapel",
    "scsides",
    "kberryUSGS",
    "jessemapel",
    "scsides",
    "kberryUSGS"
   ]
  },
  "package": {
   "name": "inja",
   "version": "3.3.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json >=3.8.0",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json >=3.8.0",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json >=3.8.0"
   ],
   "run": [
    "nlohmann_json >=3.8.0",
    "nlohmann_json >=3.8.0",
    "nlohmann_json >=3.8.0"
   ]
  },
  "source": {
   "sha256": "e628d994762dcdaa9a97f63a9b8b73d9af51af0ffa5acea6bdbba0aceaf8ee25",
   "url": "https://github.com/pantor/inja/archive/v3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -d ${PREFIX}/include/inja",
    "test -f ${PREFIX}/include/inja/inja.hpp",
    "test -f ${PREFIX}/include/inja/renderer.hpp",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfigVersion.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaTargets.cmake",
    "test -d ${PREFIX}/include/inja",
    "test -f ${PREFIX}/include/inja/inja.hpp",
    "test -f ${PREFIX}/include/inja/renderer.hpp",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfigVersion.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaTargets.cmake",
    "if exist %LIBRARY_PREFIX%\\include\\inja\\inja.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\include\\inja\\renderer.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaConfig.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaConfigVersion.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaTargets.cmake (exit 0) else (exit 1)"
   ]
  }
 },
 "name": "inja",
 "new_version": "3.3.0",
 "new_version_attempts": {
  "3.2.0": 1,
  "3.3.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Inja is a template engine for modern C++, loosely inspired by jinja for python.\nIt has an easy and yet powerful template syntax with all variables, loops,\nconditions, includes, callbacks, and comments you need, nested and combined\nas you like.\n",
   "dev_url": "https://github.com/pantor/inja",
   "doc_url": "https://pantor.github.io/inja/",
   "home": "https://github.com/pantor/inja",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Template Engine for Modern C++"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jessemapel",
    "scsides",
    "kberryUSGS"
   ]
  },
  "package": {
   "name": "inja",
   "version": "3.3.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json >=3.8.0"
   ],
   "run": [
    "nlohmann_json >=3.8.0"
   ]
  },
  "source": {
   "sha256": "e628d994762dcdaa9a97f63a9b8b73d9af51af0ffa5acea6bdbba0aceaf8ee25",
   "url": "https://github.com/pantor/inja/archive/v3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -d ${PREFIX}/include/inja",
    "test -f ${PREFIX}/include/inja/inja.hpp",
    "test -f ${PREFIX}/include/inja/renderer.hpp",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaConfigVersion.cmake",
    "test -f ${PREFIX}/lib/cmake/inja/injaTargets.cmake"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "nlohmann_json"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nlohmann_json"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "inja"
  ]
 },
 "pinning_version": "2021.07.28.08.03.56",
 "raw_meta_yaml": "{% set name = \"inja\" %}\n{% set version = \"3.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pantor/inja/archive/v{{ version }}.tar.gz\n  sha256: e628d994762dcdaa9a97f63a9b8b73d9af51af0ffa5acea6bdbba0aceaf8ee25\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - cmake\n    - make  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - nlohmann_json >=3.8.0\n  run:\n    - nlohmann_json >=3.8.0\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/inja  # [unix]\n    - test -f ${PREFIX}/include/inja/inja.hpp  # [unix]\n    - test -f ${PREFIX}/include/inja/renderer.hpp  # [unix]\n    - test -f ${PREFIX}/lib/cmake/inja/injaConfig.cmake  # [unix]\n    - test -f ${PREFIX}/lib/cmake/inja/injaConfigVersion.cmake  # [unix]\n    - test -f ${PREFIX}/lib/cmake/inja/injaTargets.cmake  # [unix]\n    - if exist %LIBRARY_PREFIX%\\include\\inja\\inja.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\include\\inja\\renderer.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaConfig.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaConfigVersion.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaTargets.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/pantor/inja\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A Template Engine for Modern C++\n  description: |\n    Inja is a template engine for modern C++, loosely inspired by jinja for python.\n    It has an easy and yet powerful template syntax with all variables, loops,\n    conditions, includes, callbacks, and comments you need, nested and combined\n    as you like.\n  doc_url: https://pantor.github.io/inja/\n  dev_url: https://github.com/pantor/inja\n\nextra:\n  recipe-maintainers:\n    - jessemapel\n    - scsides\n    - kberryUSGS\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "make",
   "nlohmann_json"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "nlohmann_json"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "nlohmann_json >=3.8.0"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nlohmann_json >=3.8.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/pantor/inja/archive/v3.3.0.tar.gz",
 "version": "3.3.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "Inja is a template engine for modern C++, loosely inspired by jinja for python.\nIt has an easy and yet powerful template syntax with all variables, loops,\nconditions, includes, callbacks, and comments you need, nested and combined\nas you like.\n",
   "dev_url": "https://github.com/pantor/inja",
   "doc_url": "https://pantor.github.io/inja/",
   "home": "https://github.com/pantor/inja",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Template Engine for Modern C++"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jessemapel",
    "scsides",
    "kberryUSGS"
   ]
  },
  "package": {
   "name": "inja",
   "version": "3.3.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "nlohmann_json >=3.8.0"
   ],
   "run": [
    "nlohmann_json >=3.8.0"
   ]
  },
  "source": {
   "sha256": "e628d994762dcdaa9a97f63a9b8b73d9af51af0ffa5acea6bdbba0aceaf8ee25",
   "url": "https://github.com/pantor/inja/archive/v3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "if exist %LIBRARY_PREFIX%\\include\\inja\\inja.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\include\\inja\\renderer.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaConfig.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaConfigVersion.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\injaTargets.cmake (exit 0) else (exit 1)"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "nlohmann_json"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nlohmann_json"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}