{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/580517150.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/583152159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/634595124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643901951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/737873700.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/780243201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/837572183.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000399642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libimagequant",
 "hash_type": "sha256",
 "name": "libimagequant",
 "new_version": "4.0.1",
 "new_version_attempts": {
  "2.14.0": 1,
  "2.14.1": 1,
  "2.15.0": 1,
  "2.15.1": 1,
  "2.16.0": 1,
  "2.17.0": 1,
  "4.0.0": 1,
  "4.0.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libimagequant"
  ]
 },
 "pinning_version": "2022.07.18.11.18.34",
 "raw_meta_yaml": "{% set version = \"2.17.0\" %}\n\npackage:\n  name: libimagequant\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ImageOptim/libimagequant/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 9f6cc50182be4d2ece75118aa0b0fd3e9bbad06e94fd6b9eb3a4c08129c2dd26\n  patches:\n    - patches/0001-do-not-build-static-library.patch\n    - patches/0002-fix-some-OpenMP-for-loop-statements-for-windows.patch  # [win]\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage('libimagequant', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - pkg-config\n    - make\n    - cmake\n    - llvm-openmp  # [not linux]\n    - libgomp      # [linux]\n\ntest:\n  commands:\n    # shared\n    - test -f $PREFIX/lib/libimagequant.so              # [linux]\n    - test -f $PREFIX/lib/libimagequant.dylib           # [osx]\n    - if not exist %LIBRARY_BIN%\\imagequant.dll exit 1  # [win]\n\n    # absence of static libraries\n    - test ! -f $PREFIX/lib/libimagequant.a             # [not win]\n\n    # header\n    - test -f $PREFIX/include/libimagequant.h || (echo \"libimagequant.h not found\" && exit 1)  # [unix]\n    - if not exist %LIBRARY_INC%\\libimagequant.h exit 1                                        # [win]\n\nabout:\n  home: https://pngquant.org/lib/\n  license: GPL-3.0-or-later\n  license_file: COPYRIGHT\n  summary: Palette quantization library that powers pngquant and other PNG optimizers\n  dev_url: https://github.com/ImageOptim/libimagequant\n\nextra:\n  recipe-maintainers:\n    - izahn\n    - h-vetinari\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/ImageOptim/libimagequant/archive/refs/tags/2.17.0.tar.gz",
 "version": "2.17.0"
}