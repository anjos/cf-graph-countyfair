{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1c4e5e3f-2483-4903-bd13-569b6ceb3ff3.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572983413.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/575583681.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/579985006.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/584716231.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/590778367.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/595392013.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600609482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/607263078.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/611439169.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615954319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/620978517.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/625996222.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/631328009.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2021.19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "stackvana-core",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/beckermr/stackvana-core",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "LICENSE",
    "COPYRIGHT"
   ],
   "summary": "core build tooling for stackvana"
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "stackvana-core",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "stackvana-core-impl"
     ]
    },
    "run_exports": [
     "stackvana-core-impl"
    ],
    "test": {
     "commands": [
      "eups -h",
      "eups list",
      "if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi"
     ]
    },
    "version": "0.2021.19"
   },
   {
    "name": "stackvana-core-impl",
    "requirements": {
     "host": [
      "python",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "rubin-env-nosysroot"
     ],
     "run": [
      "python",
      "rubin-env-nosysroot"
     ]
    },
    "script": "build_impl.sh",
    "test": {
     "requires": [
      "python",
      "rubin-env-nosysroot",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "script": "run_test_impl.sh"
    },
    "version": "0.2021.19"
   }
  ],
  "package": {
   "name": "stackvana-core",
   "version": "0.2021.19"
  },
  "requirements": {
   "host": [
    "python"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "sha256": "ba9e0a38c4ed781bfde156f758bc0b046aa390927ff8149a1f355e530195c2f4",
   "url": "https://eups.lsst.codes/stack/src/tags/w_2021_19.list"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "rubin-env-nosysroot",
    "stackvana-core-impl"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/beckermr/stackvana-core",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "LICENSE",
    "COPYRIGHT",
    "LICENSE",
    "COPYRIGHT"
   ],
   "summary": "core build tooling for stackvana"
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "beckermr",
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "stackvana-core",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "stackvana-core-impl"
     ]
    },
    "run_exports": [
     "stackvana-core-impl"
    ],
    "test": {
     "commands": [
      "eups -h",
      "eups list",
      "if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi"
     ]
    },
    "version": "0.2021.19"
   },
   {
    "name": "stackvana-core-impl",
    "requirements": {
     "host": [
      "python",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "rubin-env-nosysroot"
     ],
     "run": [
      "python",
      "rubin-env-nosysroot"
     ]
    },
    "script": "build_impl.sh",
    "test": {
     "requires": [
      "python",
      "rubin-env-nosysroot",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "script": "run_test_impl.sh"
    },
    "version": "0.2021.19"
   },
   {
    "name": "stackvana-core",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "stackvana-core-impl"
     ]
    },
    "run_exports": [
     "stackvana-core-impl"
    ],
    "test": {
     "commands": [
      "eups -h",
      "eups list",
      "if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi"
     ]
    },
    "version": "0.2021.19"
   },
   {
    "name": "stackvana-core-impl",
    "requirements": {
     "host": [
      "python",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "rubin-env-nosysroot"
     ],
     "run": [
      "python",
      "rubin-env-nosysroot"
     ]
    },
    "script": "build_impl.sh",
    "test": {
     "requires": [
      "python",
      "rubin-env-nosysroot",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "script": "run_test_impl.sh"
    },
    "version": "0.2021.19"
   }
  ],
  "package": {
   "name": "stackvana-core",
   "version": "0.2021.19"
  },
  "requirements": {
   "host": [
    "python",
    "python"
   ],
   "run": [
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "ba9e0a38c4ed781bfde156f758bc0b046aa390927ff8149a1f355e530195c2f4",
   "url": "https://eups.lsst.codes/stack/src/tags/w_2021_19.list"
  }
 },
 "name": "stackvana-core",
 "new_version": "0.2021.19",
 "new_version_attempts": {
  "0.2021.10": 1,
  "0.2021.11": 1,
  "0.2021.12": 1,
  "0.2021.13": 1,
  "0.2021.14": 1,
  "0.2021.15": 1,
  "0.2021.16": 1,
  "0.2021.17": 1,
  "0.2021.18": 1,
  "0.2021.19": 1,
  "0.2021.7": 1,
  "0.2021.8": 1,
  "0.2021.9": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/beckermr/stackvana-core",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "LICENSE",
    "COPYRIGHT"
   ],
   "summary": "core build tooling for stackvana"
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "stackvana-core",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "stackvana-core-impl"
     ]
    },
    "run_exports": [
     "stackvana-core-impl"
    ],
    "test": {
     "commands": [
      "eups -h",
      "eups list",
      "if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi"
     ]
    },
    "version": "0.2021.19"
   },
   {
    "name": "stackvana-core-impl",
    "requirements": {
     "host": [
      "python",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "rubin-env-nosysroot"
     ],
     "run": [
      "python",
      "rubin-env-nosysroot"
     ]
    },
    "script": "build_impl.sh",
    "test": {
     "requires": [
      "python",
      "rubin-env-nosysroot",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "script": "run_test_impl.sh"
    },
    "version": "0.2021.19"
   }
  ],
  "package": {
   "name": "stackvana-core",
   "version": "0.2021.19"
  },
  "requirements": {
   "host": [
    "python"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "sha256": "ba9e0a38c4ed781bfde156f758bc0b046aa390927ff8149a1f355e530195c2f4",
   "url": "https://eups.lsst.codes/stack/src/tags/w_2021_19.list"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "rubin-env-nosysroot",
    "stackvana-core-impl"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "stackvana-core",
   "stackvana-core-impl"
  ]
 },
 "pinning_version": "2021.05.06.04.07.38",
 "raw_meta_yaml": "{% set name = \"stackvana-core\" %}\n# LSST DM versions are prefixed with letters\n#\n#  - a weekly build is 'w_2018_50'\n#  - a major release is 'v18_1'\n#\n# In order to play nice with conda, we take the following conventions\n#\n#  - for a weekly build 'w_2018_50', the conda version is '0.2018.50'\n#  - for a major version 'v18_1', the conda version is '18.1.0'\n#\n{% set version = \"0.2021.19\" %}\n{% set patch_version = version.split(\".\")[-1] if version.split(\".\")[-1].__len__() == 2 else \"0\" + version.split(\".\")[-1] %}\n{% set dm_tag = \"w_\" + version.split(\".\")[1] + \"_\" + patch_version if version.startswith(\"0.\") else \"v\" + version.replace(\".\", \"_\") %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://eups.lsst.codes/stack/src/tags/{{ dm_tag }}.list\n  sha256: ba9e0a38c4ed781bfde156f758bc0b046aa390927ff8149a1f355e530195c2f4\n\nbuild:\n  skip: true  # [win or py != 38]\n  number: 0\n  merge_build_host: true\n\nrequirements:\n  host:\n    - python\n  run:\n    - python\n\noutputs:\n  - name: stackvana-core\n    version: {{ version }}\n    run_exports:\n      - {{ pin_subpackage('stackvana-core-impl', exact=True) }}\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('stackvana-core-impl', exact=True) }}\n    test:\n      commands:\n        - eups -h\n        - eups list\n        - if [[ ! ${STACKVANA_ACTIVATED} ]]; then exit 1; fi\n\n  - name: stackvana-core-impl\n    version: {{ version }}\n    script: build_impl.sh\n    requirements:\n      host:\n        - python\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - rubin-env-nosysroot\n      run:\n        - python\n        - {{ pin_compatible('rubin-env-nosysroot', max_pin='x.x.x') }}\n    test:\n      script: run_test_impl.sh\n      requires:\n        - python\n        - rubin-env-nosysroot\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n\nabout:\n  home: https://github.com/beckermr/stackvana-core\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file:\n    - LICENSE\n    - COPYRIGHT\n  summary: core build tooling for stackvana\n\nextra:\n  recipe-maintainers:\n    - beckermr\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "python",
   "rubin-env-nosysroot",
   "stackvana-core-impl"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot",
    "stackvana-core-impl"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "rubin-env-nosysroot",
    "stackvana-core-impl"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "rubin-env-nosysroot"
   ]
  }
 },
 "url": "https://eups.lsst.codes/stack/src/tags/w_2021_19.list",
 "version": "0.2021.19"
}