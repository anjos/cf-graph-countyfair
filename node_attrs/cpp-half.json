{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cpp-half",
 "hash_type": "sha256",
 "name": "cpp-half",
 "new_version": "2.1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cpp-half"
  ]
 },
 "raw_meta_yaml": "{% set name = \"cpp-half\" %}\n{% set version = \"2.1.0\" %}\n{% set sha256 = \"b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/davidbrochart/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/half_float/half.hpp  # [unix]\n    - test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake  # [unix]\n    - if exist %LIBRARY_PREFIX%\\include\\half_float\\half.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\halfFloatConfig.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: http://half.sourceforge.net\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Half-precision floating-point library\n  description: |\n    This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\n    half-precision floating-point type along with corresponding arithmetic\n    operators, type conversions and common mathematical functions. It aims for\n    both efficiency and ease of use, trying to accurately mimic the behaviour\n    of the built-in floating-point types at the best performance possible.\n\nextra:\n  recipe-maintainers:\n    - davidbrochart\n    - SylvainCorlay\n    - JohanMabille\n",
 "strong_exports": false,
 "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz",
 "version": "2.1.0"
}