{
 "PRed": [
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/447906267.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/448356054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680341629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/698935354.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "ipytest",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Sometimes quick experiments in IPython grow large and you find yourself wanting unit tests. This module aims to make testing code in IPython notebooks easy. At its core, it offers a way to run pytest tests inside the notebook environment. It is also designed to make the transfer of the tests into proper python modules easy.\n",
   "home": "https://pypi.org/project/ipytest/",
   "license": "MIT",
   "license_file": "LICENSE.md",
   "summary": "Unit tests in IPython notebooks."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "pmgrafe"
   ]
  },
  "package": {
   "name": "ipytest",
   "version": "0.11.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.0"
   ],
   "run": [
    "packaging",
    "ipython",
    "pytest >=5.4",
    "python >=3.0"
   ]
  },
  "source": {
   "sha256": "6f1a03b32e243fd331439fcef587b34a72c74aa91e7fb7fa9e0799c83ccbe331",
   "url": "https://pypi.io/packages/source/i/ipytest/ipytest-0.11.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "ipytest"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipython",
    "packaging",
    "pytest",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Sometimes quick experiments in IPython grow large and you find yourself wanting unit tests. This module aims to make testing code in IPython notebooks easy. At its core, it offers a way to run pytest tests inside the notebook environment. It is also designed to make the transfer of the tests into proper python modules easy.\n",
   "home": "https://pypi.org/project/ipytest/",
   "license": "MIT",
   "license_file": "LICENSE.md",
   "summary": "Unit tests in IPython notebooks."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "pmgrafe"
   ]
  },
  "package": {
   "name": "ipytest",
   "version": "0.11.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.0"
   ],
   "run": [
    "packaging",
    "ipython",
    "pytest >=5.4",
    "python >=3.0"
   ]
  },
  "source": {
   "sha256": "6f1a03b32e243fd331439fcef587b34a72c74aa91e7fb7fa9e0799c83ccbe331",
   "url": "https://pypi.io/packages/source/i/ipytest/ipytest-0.11.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "ipytest"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "ipytest",
 "new_version": "0.11.0",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.11.0": 1,
  "0.8.0": 75,
  "0.8.1": 1,
  "0.9.0": 1,
  "0.9.1": 1
 },
 "new_version_errors": {
  "0.8.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.8.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/{{ arch }}/{{ name[0] }}/{{ name }}/{{ fn }}'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ipytest"
  ]
 },
 "pinning_version": "2021.07.28.08.03.56",
 "raw_meta_yaml": "{% set name = \"ipytest\" %}\n{% set version = \"0.11.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 6f1a03b32e243fd331439fcef587b34a72c74aa91e7fb7fa9e0799c83ccbe331\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.0\n  run:\n    - packaging\n    - ipython\n    - pytest >=5.4\n    - python >=3.0\n\ntest:\n  imports:\n    - ipytest\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://pypi.org/project/ipytest/\n  summary: Unit tests in IPython notebooks.\n  description: |\n    Sometimes quick experiments in IPython grow large and you find yourself wanting unit tests. This module aims to make testing code in IPython notebooks easy. At its core, it offers a way to run pytest tests inside the notebook environment. It is also designed to make the transfer of the tests into proper python modules easy.\n  license: MIT\n  license_file: LICENSE.md\n\nextra:\n  recipe-maintainers:\n    - xhochy\n    - pmgrafe\n",
 "req": {
  "__set__": true,
  "elements": [
   "ipython",
   "packaging",
   "pip",
   "pytest",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipython",
    "packaging",
    "pytest",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "time": 1568135303.6771185,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipython",
    "packaging",
    "pytest >=5.4",
    "python >=3.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/i/ipytest/ipytest-0.11.0.tar.gz",
 "version": "0.11.0"
}