{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cabinetry",
 "hash_type": "sha256",
 "name": "cabinetry",
 "new_version": "0.4.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cabinetry"
  ]
 },
 "raw_meta_yaml": "{% set name = \"cabinetry\" %}\n{% set version = \"0.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 88accfd0a6138e1b0c7ce0b5f44a746a53ebed8488bea02a5333846fee71f30a\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - cabinetry = cabinetry.cli:cabinetry\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - pyhf ~=0.6.3\n    - iminuit >=2.7.0\n    - boost-histogram >=1.0.0\n    - awkward >=1.0\n    - tabulate >=0.8.1\n    - matplotlib-base\n    - typing_extensions\n\ntest:\n  imports:\n    - cabinetry\n  commands:\n    - cabinetry --help\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/scikit-hep/cabinetry\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'library for building and steering binned template fits'\n\n  description: |\n    cabinetry is a Python library for building and steering binned template fits. \n    It is written with applications in High Energy Physics in mind. \n    cabinetry interfaces many other powerful libraries to make it easy for an analyzer to run their statistical inference pipeline.\n    Statistical models in HistFactory format can be built by cabinetry from instructions in a declarative configuration. \n    cabinetry makes heavy use of pyhf for statistical inference, and provides additional utilities to help study and disseminate fit results. \n    This includes commonly used visualizations. Due to its modular approach, analyzers are free to use all of cabinetry's functionality or only some pieces.\n    cabinetry can be used for inference and visualization with any pyhf-compatible model, whether it was built with cabinetry or not.\n  doc_url: https://cabinetry.readthedocs.io/en/latest/\n  dev_url: https://github.com/scikit-hep/cabinetry\n\nextra:\n  recipe-maintainers:\n    - alexander-held\n    - matthewfeickert\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/c/cabinetry/cabinetry-0.4.1.tar.gz",
 "version": "0.4.1"
}