{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209283285.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229424688.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/235205051.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260066991.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/282417820.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/294999187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/337031357.json"
   },
   "data": {
    "bot_rerun": 1579272527.822375,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/337481729.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509651038.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/538570588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553279244.json"
   },
   "data": {
    "bot_rerun": 1644267396.019964,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/618109850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785052665.json"
   },
   "data": {
    "bot_rerun": 1644267396.0203447,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/842189382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/842297786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1025251648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "doconce",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "DocOnce is two things:\n.\n1. DocOnce is a very simple and minimally tagged markup language that\nlooks like ordinary ASCII text (much like what you would use in an\nemail), but the text can be transformed to numerous other formats,\nincluding HTML, Wiki, LaTeX, PDF, reStructuredText (reST), Sphinx,\nEpytext, and also plain text (where non-obvious formatting/tags are\nremoved for clear reading in, e.g., emails). From reStructuredText\nyou can go to XML, HTML, LaTeX, PDF, OpenOffice, and from the latter\nto RTF and MS Word. From Pandoc one can generate Markdown, reST,\nLaTeX, HTML, PDF, DocBook XML, OpenOffice, GNU Texinfo, MediaWiki,\nRTF, Groff, and other formats.\n.\n2. DocOnce is a working strategy for never duplicating information.\nText is written in a single place and then transformed to a number of\ndifferent destinations of diverse type (software source code,\nmanuals, tutorials, books, wikis, memos, emails, etc.). The DocOnce\nmarkup language support this working strategy. The slogan is: \"Write\nonce, include anywhere\".\n",
   "dev_url": "https://github.com/doconce/doconce",
   "doc_url": "http://doconce.github.io/doconce/doc/web/",
   "home": "http://doconce.github.io/doconce/doc/web/",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Document once, include anywhere"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80"
   ]
  },
  "package": {
   "name": "doconce",
   "version": "1.5.9"
  },
  "requirements": {
   "build": [
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish"
   ]
  },
  "source": {
   "fn": "doconce-1.5.9.tar.gz",
   "sha256": "ca0f101bfe42d44b0b0ce5bb10a1cc2294905b200e487ee58e11597bce72e424",
   "url": "https://github.com/doconce/doconce/archive/1.5.9.tar.gz"
  },
  "test": {
   "imports": [
    "doconce",
    "doconce",
    "doconce"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "future",
    "mako",
    "preprocess",
    "pygments",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "alabaster",
    "beautifulsoup4",
    "cloud_sptheme",
    "cogapp",
    "future",
    "html5lib",
    "jsonschema",
    "libxml2",
    "libxslt",
    "lxml",
    "mako",
    "notebook",
    "pandoc",
    "paver",
    "pickleshare",
    "preprocess",
    "publish",
    "pygments",
    "python",
    "python-levenshtein",
    "pyzmq",
    "sphinx",
    "sphinx_bootstrap_theme",
    "sphinx_rtd_theme",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "texinfo",
    "tornado",
    "traitlets",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "DocOnce is two things:\n.\n1. DocOnce is a very simple and minimally tagged markup language that\nlooks like ordinary ASCII text (much like what you would use in an\nemail), but the text can be transformed to numerous other formats,\nincluding HTML, Wiki, LaTeX, PDF, reStructuredText (reST), Sphinx,\nEpytext, and also plain text (where non-obvious formatting/tags are\nremoved for clear reading in, e.g., emails). From reStructuredText\nyou can go to XML, HTML, LaTeX, PDF, OpenOffice, and from the latter\nto RTF and MS Word. From Pandoc one can generate Markdown, reST,\nLaTeX, HTML, PDF, DocBook XML, OpenOffice, GNU Texinfo, MediaWiki,\nRTF, Groff, and other formats.\n.\n2. DocOnce is a working strategy for never duplicating information.\nText is written in a single place and then transformed to a number of\ndifferent destinations of diverse type (software source code,\nmanuals, tutorials, books, wikis, memos, emails, etc.). The DocOnce\nmarkup language support this working strategy. The slogan is: \"Write\nonce, include anywhere\".\n",
   "dev_url": "https://github.com/doconce/doconce",
   "doc_url": "http://doconce.github.io/doconce/doc/web/",
   "home": "http://doconce.github.io/doconce/doc/web/",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Document once, include anywhere"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80"
   ]
  },
  "package": {
   "name": "doconce",
   "version": "1.5.9"
  },
  "requirements": {
   "build": [
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish"
   ]
  },
  "source": {
   "fn": "doconce-1.5.9.tar.gz",
   "sha256": "ca0f101bfe42d44b0b0ce5bb10a1cc2294905b200e487ee58e11597bce72e424",
   "url": "https://github.com/doconce/doconce/archive/1.5.9.tar.gz"
  },
  "test": {
   "imports": [
    "doconce",
    "doconce",
    "doconce",
    "doconce",
    "doconce",
    "doconce",
    "doconce",
    "doconce",
    "doconce"
   ]
  }
 },
 "name": "doconce",
 "new_version": "1.5.15",
 "new_version_attempts": {
  "1.5.00": 1,
  "1.5.14": 1,
  "1.5.15": 0,
  "1.5.9": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "DocOnce is two things:\n.\n1. DocOnce is a very simple and minimally tagged markup language that\nlooks like ordinary ASCII text (much like what you would use in an\nemail), but the text can be transformed to numerous other formats,\nincluding HTML, Wiki, LaTeX, PDF, reStructuredText (reST), Sphinx,\nEpytext, and also plain text (where non-obvious formatting/tags are\nremoved for clear reading in, e.g., emails). From reStructuredText\nyou can go to XML, HTML, LaTeX, PDF, OpenOffice, and from the latter\nto RTF and MS Word. From Pandoc one can generate Markdown, reST,\nLaTeX, HTML, PDF, DocBook XML, OpenOffice, GNU Texinfo, MediaWiki,\nRTF, Groff, and other formats.\n.\n2. DocOnce is a working strategy for never duplicating information.\nText is written in a single place and then transformed to a number of\ndifferent destinations of diverse type (software source code,\nmanuals, tutorials, books, wikis, memos, emails, etc.). The DocOnce\nmarkup language support this working strategy. The slogan is: \"Write\nonce, include anywhere\".\n",
   "dev_url": "https://github.com/doconce/doconce",
   "doc_url": "http://doconce.github.io/doconce/doc/web/",
   "home": "http://doconce.github.io/doconce/doc/web/",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Document once, include anywhere"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80"
   ]
  },
  "package": {
   "name": "doconce",
   "version": "1.5.9"
  },
  "requirements": {
   "build": [
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "texinfo",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish"
   ]
  },
  "source": {
   "fn": "doconce-1.5.9.tar.gz",
   "sha256": "ca0f101bfe42d44b0b0ce5bb10a1cc2294905b200e487ee58e11597bce72e424",
   "url": "https://github.com/doconce/doconce/archive/1.5.9.tar.gz"
  },
  "test": {
   "imports": [
    "doconce",
    "doconce",
    "doconce"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "future",
    "mako",
    "preprocess",
    "pygments",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "alabaster",
    "beautifulsoup4",
    "cloud_sptheme",
    "cogapp",
    "future",
    "html5lib",
    "jsonschema",
    "libxml2",
    "libxslt",
    "lxml",
    "mako",
    "notebook",
    "pandoc",
    "paver",
    "pickleshare",
    "preprocess",
    "publish",
    "pygments",
    "python",
    "python-levenshtein",
    "pyzmq",
    "sphinx",
    "sphinx_bootstrap_theme",
    "sphinx_rtd_theme",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "texinfo",
    "tornado",
    "traitlets",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "doconce"
  ]
 },
 "pinning_version": "2022.08.11.23.35.06",
 "pre_pr_migrator_attempts": {
  "python311": 47
 },
 "pre_pr_migrator_status": {
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3557012942\">bot CI job</a>): main: ['linux_64_python3.11.____cpython: Encountered problems while solving:\\n  - package lxml-3.8.0-py27hb3ac1f5_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'osx_64_python3.11.____cpython: Encountered problems while solving:\\n  - package lxml-3.8.0-py27h037e1f5_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'win_64_python3.11.____cpython: Encountered problems while solving:\\n  - nothing provides vc 10.* needed by python-3.4.5-0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"doconce\" %}\n{% set version = \"1.5.9\" %}\n{% set sha256 = \"ca0f101bfe42d44b0b0ce5bb10a1cc2294905b200e487ee58e11597bce72e424\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/doconce/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  build:\n    - python\n    - pygments\n    - future\n    - preprocess\n    - mako\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pygments\n    - notebook\n    - tornado\n    - pyzmq\n    - traitlets\n    - pickleshare\n    - jsonschema\n    - future\n    - mako\n    - python-levenshtein\n    - libxml2 2.9.*\n    - libxslt\n    - zlib 1.2.*\n    - lxml\n    - sphinx\n    - alabaster\n    - sphinx_rtd_theme\n    - cloud_sptheme\n    - sphinx_bootstrap_theme\n    - paver\n    - cogapp\n    - beautifulsoup4\n    - html5lib\n    - texinfo  # [not win]\n    - pandoc\n    - sphinxcontrib-paverutils\n    - sphinxjp.themes.solarized\n    - preprocess\n#    - sphinxjp.themes.impressjs    # incompatible with sphinx >= 1.7\n    - publish\n# FIXME: Add these packages when available in conda\n#    - pdftools\n#    - sphinx-sagecell\n#    - tinkerer\n#    - pygments-ipython-console\n#    - pygments-doconce\n#    - ptex2tex\n\ntest:\n  imports:\n    - doconce\n\nabout:\n  home: http://doconce.github.io/doconce/doc/web/\n  license: BSD 3-clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Document once, include anywhere\n\n  description: |\n    DocOnce is two things:\n    .\n    1. DocOnce is a very simple and minimally tagged markup language that\n    looks like ordinary ASCII text (much like what you would use in an\n    email), but the text can be transformed to numerous other formats,\n    including HTML, Wiki, LaTeX, PDF, reStructuredText (reST), Sphinx,\n    Epytext, and also plain text (where non-obvious formatting/tags are\n    removed for clear reading in, e.g., emails). From reStructuredText\n    you can go to XML, HTML, LaTeX, PDF, OpenOffice, and from the latter\n    to RTF and MS Word. From Pandoc one can generate Markdown, reST,\n    LaTeX, HTML, PDF, DocBook XML, OpenOffice, GNU Texinfo, MediaWiki,\n    RTF, Groff, and other formats.\n    .\n    2. DocOnce is a working strategy for never duplicating information.\n    Text is written in a single place and then transformed to a number of\n    different destinations of diverse type (software source code,\n    manuals, tutorials, books, wikis, memos, emails, etc.). The DocOnce\n    markup language support this working strategy. The slogan is: \"Write\n    once, include anywhere\".\n  doc_url: http://doconce.github.io/doconce/doc/web/\n  dev_url: https://github.com/doconce/doconce\n\nextra:\n  recipe-maintainers:\n    - johannesring\n    - kghustad\n    - aless80\n",
 "req": {
  "__set__": true,
  "elements": [
   "alabaster",
   "beautifulsoup4",
   "cloud_sptheme",
   "cogapp",
   "future",
   "html5lib",
   "jsonschema",
   "libxml2",
   "libxslt",
   "lxml",
   "mako",
   "notebook",
   "pandoc",
   "paver",
   "pickleshare",
   "pip",
   "preprocess",
   "publish",
   "pygments",
   "python",
   "python-levenshtein",
   "pyzmq",
   "sphinx",
   "sphinx_bootstrap_theme",
   "sphinx_rtd_theme",
   "sphinxcontrib-paverutils",
   "sphinxjp.themes.solarized",
   "texinfo",
   "tornado",
   "traitlets",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "future",
    "mako",
    "preprocess",
    "pygments",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "alabaster",
    "beautifulsoup4",
    "cloud_sptheme",
    "cogapp",
    "future",
    "html5lib",
    "jsonschema",
    "libxml2",
    "libxslt",
    "lxml",
    "mako",
    "notebook",
    "pandoc",
    "paver",
    "pickleshare",
    "preprocess",
    "publish",
    "pygments",
    "python",
    "python-levenshtein",
    "pyzmq",
    "sphinx",
    "sphinx_bootstrap_theme",
    "sphinx_rtd_theme",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "texinfo",
    "tornado",
    "traitlets",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "future",
    "mako",
    "preprocess",
    "pygments",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "alabaster",
    "beautifulsoup4",
    "cloud_sptheme",
    "cogapp",
    "future",
    "html5lib",
    "jsonschema",
    "libxml2 2.9.*",
    "libxslt",
    "lxml",
    "mako",
    "notebook",
    "pandoc",
    "paver",
    "pickleshare",
    "preprocess",
    "publish",
    "pygments",
    "python",
    "python-levenshtein",
    "pyzmq",
    "sphinx",
    "sphinx_bootstrap_theme",
    "sphinx_rtd_theme",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "texinfo",
    "tornado",
    "traitlets",
    "zlib 1.2.*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/doconce/doconce/archive/1.5.9.tar.gz",
 "version": "1.5.9",
 "win_64_meta_yaml": {
  "about": {
   "description": "DocOnce is two things:\n.\n1. DocOnce is a very simple and minimally tagged markup language that\nlooks like ordinary ASCII text (much like what you would use in an\nemail), but the text can be transformed to numerous other formats,\nincluding HTML, Wiki, LaTeX, PDF, reStructuredText (reST), Sphinx,\nEpytext, and also plain text (where non-obvious formatting/tags are\nremoved for clear reading in, e.g., emails). From reStructuredText\nyou can go to XML, HTML, LaTeX, PDF, OpenOffice, and from the latter\nto RTF and MS Word. From Pandoc one can generate Markdown, reST,\nLaTeX, HTML, PDF, DocBook XML, OpenOffice, GNU Texinfo, MediaWiki,\nRTF, Groff, and other formats.\n.\n2. DocOnce is a working strategy for never duplicating information.\nText is written in a single place and then transformed to a number of\ndifferent destinations of diverse type (software source code,\nmanuals, tutorials, books, wikis, memos, emails, etc.). The DocOnce\nmarkup language support this working strategy. The slogan is: \"Write\nonce, include anywhere\".\n",
   "dev_url": "https://github.com/doconce/doconce",
   "doc_url": "http://doconce.github.io/doconce/doc/web/",
   "home": "http://doconce.github.io/doconce/doc/web/",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Document once, include anywhere"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80",
    "johannesring",
    "kghustad",
    "aless80"
   ]
  },
  "package": {
   "name": "doconce",
   "version": "1.5.9"
  },
  "requirements": {
   "build": [
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako",
    "python",
    "pygments",
    "future",
    "preprocess",
    "mako"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish",
    "python",
    "pygments",
    "notebook",
    "tornado",
    "pyzmq",
    "traitlets",
    "pickleshare",
    "jsonschema",
    "future",
    "mako",
    "python-levenshtein",
    "libxml2 2.9.*",
    "libxslt",
    "zlib 1.2.*",
    "lxml",
    "sphinx",
    "alabaster",
    "sphinx_rtd_theme",
    "cloud_sptheme",
    "sphinx_bootstrap_theme",
    "paver",
    "cogapp",
    "beautifulsoup4",
    "html5lib",
    "pandoc",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "preprocess",
    "publish"
   ]
  },
  "source": {
   "fn": "doconce-1.5.9.tar.gz",
   "sha256": "ca0f101bfe42d44b0b0ce5bb10a1cc2294905b200e487ee58e11597bce72e424",
   "url": "https://github.com/doconce/doconce/archive/1.5.9.tar.gz"
  },
  "test": {
   "imports": [
    "doconce",
    "doconce",
    "doconce"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "future",
    "mako",
    "preprocess",
    "pygments",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "alabaster",
    "beautifulsoup4",
    "cloud_sptheme",
    "cogapp",
    "future",
    "html5lib",
    "jsonschema",
    "libxml2",
    "libxslt",
    "lxml",
    "mako",
    "notebook",
    "pandoc",
    "paver",
    "pickleshare",
    "preprocess",
    "publish",
    "pygments",
    "python",
    "python-levenshtein",
    "pyzmq",
    "sphinx",
    "sphinx_bootstrap_theme",
    "sphinx_rtd_theme",
    "sphinxcontrib-paverutils",
    "sphinxjp.themes.solarized",
    "tornado",
    "traitlets",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}