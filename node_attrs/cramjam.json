{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/572841926.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572844072.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572954563.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "cramjam",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Extremely thin Python bindings to de/compression algorithms in Rust.\nAllows for using algorithms such as Snappy, without any system dependencies.\nThis is handy when being used in environments like AWS Lambda,\nwhere installing packages like python-snappy becomes difficult because of\nsystem level dependencies.\n",
   "doc_url": "https://docs.rs/cramjam/1.1.0/cramjam/",
   "home": "https://github.com/milesgranger/pyrus-cramjam",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "python bindings to rust-implemented compression"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger"
   ]
  },
  "package": {
   "name": "cramjam",
   "version": "1.3.2"
  },
  "requirements": {
   "build": [
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "3746a5643a364f1d5639fa77384b7075572d29f063f844582226efbdec76350f",
   "url": "https://pypi.io/packages/source/c/cramjam/cramjam-1.3.2.tar.gz"
  },
  "test": {
   "imports": [
    "cramjam",
    "cramjam",
    "cramjam"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Extremely thin Python bindings to de/compression algorithms in Rust.\nAllows for using algorithms such as Snappy, without any system dependencies.\nThis is handy when being used in environments like AWS Lambda,\nwhere installing packages like python-snappy becomes difficult because of\nsystem level dependencies.\n",
   "doc_url": "https://docs.rs/cramjam/1.1.0/cramjam/",
   "home": "https://github.com/milesgranger/pyrus-cramjam",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "python bindings to rust-implemented compression"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger"
   ]
  },
  "package": {
   "name": "cramjam",
   "version": "1.3.2"
  },
  "requirements": {
   "build": [
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "3746a5643a364f1d5639fa77384b7075572d29f063f844582226efbdec76350f",
   "url": "https://pypi.io/packages/source/c/cramjam/cramjam-1.3.2.tar.gz"
  },
  "test": {
   "imports": [
    "cramjam",
    "cramjam",
    "cramjam",
    "cramjam",
    "cramjam",
    "cramjam",
    "cramjam",
    "cramjam",
    "cramjam"
   ]
  }
 },
 "name": "cramjam",
 "new_version": "1.3.2",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Extremely thin Python bindings to de/compression algorithms in Rust.\nAllows for using algorithms such as Snappy, without any system dependencies.\nThis is handy when being used in environments like AWS Lambda,\nwhere installing packages like python-snappy becomes difficult because of\nsystem level dependencies.\n",
   "doc_url": "https://docs.rs/cramjam/1.1.0/cramjam/",
   "home": "https://github.com/milesgranger/pyrus-cramjam",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "python bindings to rust-implemented compression"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger"
   ]
  },
  "package": {
   "name": "cramjam",
   "version": "1.3.2"
  },
  "requirements": {
   "build": [
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "3746a5643a364f1d5639fa77384b7075572d29f063f844582226efbdec76350f",
   "url": "https://pypi.io/packages/source/c/cramjam/cramjam-1.3.2.tar.gz"
  },
  "test": {
   "imports": [
    "cramjam",
    "cramjam",
    "cramjam"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cramjam"
  ]
 },
 "pinning_version": "2021.02.13.12.56.44",
 "raw_meta_yaml": "{% set name = \"cramjam\" %}\n{% set version = \"1.3.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 3746a5643a364f1d5639fa77384b7075572d29f063f844582226efbdec76350f\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - rust\n    - maturin\n    - toml\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - maturin\n    - toml\n  run:\n    - python\n\ntest:\n  imports:\n    - cramjam\n\nabout:\n  home: https://github.com/milesgranger/pyrus-cramjam\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'python bindings to rust-implemented compression'\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n      Extremely thin Python bindings to de/compression algorithms in Rust. \n      Allows for using algorithms such as Snappy, without any system dependencies.\n      This is handy when being used in environments like AWS Lambda, \n      where installing packages like python-snappy becomes difficult because of \n      system level dependencies.\n  doc_url: https://docs.rs/cramjam/1.1.0/cramjam/\n\nextra:\n  recipe-maintainers:\n    - martindurant\n    - milesgranger\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "maturin",
   "pip",
   "python",
   "rust",
   "toml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "pip",
    "python",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/c/cramjam/cramjam-1.3.2.tar.gz",
 "version": "1.3.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "Extremely thin Python bindings to de/compression algorithms in Rust.\nAllows for using algorithms such as Snappy, without any system dependencies.\nThis is handy when being used in environments like AWS Lambda,\nwhere installing packages like python-snappy becomes difficult because of\nsystem level dependencies.\n",
   "doc_url": "https://docs.rs/cramjam/1.1.0/cramjam/",
   "home": "https://github.com/milesgranger/pyrus-cramjam",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "python bindings to rust-implemented compression"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger",
    "martindurant",
    "milesgranger"
   ]
  },
  "package": {
   "name": "cramjam",
   "version": "1.3.2"
  },
  "requirements": {
   "build": [
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub",
    "rust",
    "maturin",
    "toml",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml",
    "python",
    "pip",
    "maturin",
    "toml"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "3746a5643a364f1d5639fa77384b7075572d29f063f844582226efbdec76350f",
   "url": "https://pypi.io/packages/source/c/cramjam/cramjam-1.3.2.tar.gz"
  },
  "test": {
   "imports": [
    "cramjam",
    "cramjam",
    "cramjam"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}