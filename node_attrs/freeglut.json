{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/206852695.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/223495952.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/399974175.json"
   },
   "data": {
    "bot_rerun": 1592977014.6878314,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/438976767.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841079039.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "freeglut",
 "hash_type": "sha256",
 "name": "freeglut",
 "new_version": "3.2.2",
 "new_version_attempts": {
  "3.2.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "freeglut"
  ]
 },
 "pinning_version": "2022.02.06.08.21.47",
 "raw_meta_yaml": "{% set version = \"3.2.2\" %}\n\npackage:\n  name: freeglut\n  version: {{ version }}\n\nsource:\n  fn: freeglut-{{ version }}.tar.bz2\n  url: http://sourceforge.net/projects/freeglut/files/freeglut/{{ version }}/freeglut-{{ version }}.tar.gz\n  sha256: c5944a082df0bba96b5756dddb1f75d0cd72ce27b5395c6c1dde85c2ff297a50\n  patches:\n    - disable_autolink_windows.patch\n    - 96.patch\n\nbuild:\n  number: 1\n  skip: true  # [osx]\n  run_exports:\n    # https://abi-laboratory.pro/index.php?view=timeline&l=freeglut\n    # very good backwards compatibility\n    - {{ pin_subpackage(\"freeglut\", max_pin=\"x\") }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make                               # [linux]\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libxxf86vm-devel') }}      # [linux]\n  host:\n    - libglu                             # [linux]\n    - libxcb                             # [linux]\n    - xorg-libx11                        # [linux]\n    - xorg-libxau                        # [linux]\n    - xorg-libxext                       # [linux]\n    - xorg-libxfixes                     # [linux]\n    - xorg-libxi                         # [linux]\n  run:\n    - libxcb                             # [linux]\n    - xorg-libx11                        # [linux]\n    - xorg-libxau                        # [linux]\n    - xorg-libxext                       # [linux]\n    - xorg-libxfixes                     # [linux]\n    - xorg-libxi                         # [linux]\n\ntest:\n  files:\n    - test\n\n  requires:\n    - {{ compiler('c') }}\n    - cmake\n    - ninja\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libxxf86vm-devel') }}      # [linux]\n    - libglu                             # [linux]\n    - libxcb                             # [linux]\n    - xorg-libx11                        # [linux]\n    - xorg-libxau                        # [linux]\n    - xorg-libxext                       # [linux]\n    - xorg-libxfixes                     # [linux]\n    - xorg-libxi                         # [linux]\n    - {{ cdt('mesa-dri-drivers') }}      # [linux]\n    - {{ cdt('libselinux') }}            # [linux]\n    - {{ cdt('libxdamage') }}            # [linux]\n    - {{ cdt('libxext') }}               # [linux]\n    - xorg-libxfixes                     # [linux]\n\n  commands:\n    # Test includes.\n    - test -d \"${PREFIX}/include/GL\"  # [linux]\n\n      # Test libraries.\n    - test ! -f \"${PREFIX}/lib/libglut.a\"   # [linux]\n    - test -f \"${PREFIX}/lib/libglut.so\"    # [linux]\n    - ldd \"${PREFIX}/lib/libglut.so\"        # [linux]\n\n    # Test Windows includes and libraries.\n    - if not exist %LIBRARY_INC%\\\\GL\\\\freeglut.h     exit 1   # [win]\n    - if not exist %LIBRARY_INC%\\\\GL\\\\freeglut_ext.h exit 1   # [win]\n    - if not exist %LIBRARY_INC%\\\\GL\\\\freeglut_std.h exit 1   # [win]\n    - if not exist %LIBRARY_INC%\\\\GL\\\\glut.h         exit 1   # [win]\n    - if not exist %LIBRARY_LIB%\\\\freeglut.lib       exit 1   # [win]\n    - if not exist %LIBRARY_BIN%\\\\freeglut.dll       exit 1   # [win]\n\nabout:\n  home: http://freeglut.sourceforge.net/\n  license: MIT\n  license_family: MIT\n  license_file: COPYING\n  summary: A GUI based on OpenGL.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - shadowwalkersb\n    - wolfv\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "http://sourceforge.net/projects/freeglut/files/freeglut/3.2.2/freeglut-3.2.2.tar.gz",
 "version": "3.2.2"
}