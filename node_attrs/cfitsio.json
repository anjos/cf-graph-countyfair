{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/221430915.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308193144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/311936634.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500202791.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/518834819.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/880819664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1123612356.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "cfitsio",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libcurl",
    "bzip2",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libcfitsio.so"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libcurl",
    "bzip2",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libcfitsio.so"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libcurl",
    "bzip2",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libcfitsio.so"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio",
    "cfitsio",
    "cfitsio",
    "cfitsio",
    "cfitsio",
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake",
    "pkgw",
    "teake",
    "pkgw",
    "teake",
    "pkgw",
    "teake",
    "pkgw",
    "teake",
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "cmake"
   ],
   "host": [
    "libcurl",
    "bzip2",
    "zlib",
    "libcurl",
    "bzip2",
    "zlib",
    "libcurl",
    "bzip2",
    "zlib",
    "libcurl",
    "bzip2",
    "zlib",
    "libcurl",
    "bzip2",
    "zlib",
    "libcurl",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch",
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch",
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch",
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch",
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch",
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libcfitsio.so",
    "test -f ${PREFIX}/lib/libcfitsio.so",
    "test -f ${PREFIX}/lib/libcfitsio.so",
    "test -f ${PREFIX}/lib/libcfitsio.dylib",
    "test -f ${PREFIX}/lib/libcfitsio.dylib",
    "if not exist %LIBRARY_LIB%\\cfitsio.lib exit 1",
    "if not exist %LIBRARY_BIN%\\cfitsio.dll exit 1"
   ]
  }
 },
 "name": "cfitsio",
 "new_version": "4.2.0",
 "new_version_attempts": {
  "4.1.0": 1,
  "4.2.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libcurl",
    "bzip2",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libcfitsio.dylib"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libcurl",
    "bzip2",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libcfitsio.dylib"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cfitsio"
  ]
 },
 "pinning_version": "2022.11.15.22.41.08",
 "raw_meta_yaml": "{% set name = \"cfitsio\" %}\n{% set version = \"4.1.0\" %}\n# This is the SHA256 hash of the ungzipped tar file. See https://github.com/conda/conda/issues/3798.\n{% set sha256 = \"748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - ldflags.patch\n    - unvendor_zlib.patch\n    - lcurl-pkg-config.patch\n\nbuild:\n  number: 0\n  skip: true  # [win and py27]\n  run_exports:\n    - {{ pin_subpackage('cfitsio', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - libtool  # [unix]\n    - {{ compiler('fortran') }}  # [not win]\n    - {{ compiler('c') }}\n    - cmake  # [win]\n    - make  # [not win]\n  host:\n    - libcurl\n    - bzip2  # [not win]\n    - zlib\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libcfitsio{{ SHLIB_EXT }}  # [not win]\n    - if not exist %LIBRARY_LIB%\\cfitsio.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\cfitsio.dll exit 1  # [win]\n  # Downstream tests are not possible due to cfitsio being pinned to a specific\n  # major.minor.patch version in conda-forge-pinning. E.g. gdal is currently\n  # build pinned against cfitsio 4.0.0, which means we cannot test a new version\n  # of cfitsio (4.1.0 say) in a downstream test of gdal.\n  # Downstream tests could be enabled again if there are no foreseeable new versions\n  # cfitsio.\n#  downstreams:\n#    - gdal  # [x86_64]\n\nabout:\n  home: http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html\n  license: LicenseRef-fitsio\n  license_file: License.txt\n  summary: A library for reading and writing FITS files\n\n  description: |\n    CFITSIO is a library of C and Fortran subroutines for reading and writing\n    data files in FITS (Flexible Image Transport System) data format. CFITSIO\n    provides simple high-level routines for reading and writing FITS files that\n    insulate the programmer from the internal complexities of the FITS format.\n    CFITSIO also provides many advanced features for manipulating and filtering\n    the information in FITS files.\n  doc_url: https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html\n\nextra:\n  recipe-maintainers:\n    - pkgw\n    - teake\n",
 "req": {
  "__set__": true,
  "elements": [
   "bzip2",
   "c_compiler_stub",
   "cmake",
   "fortran_compiler_stub",
   "libcurl",
   "libtool",
   "make",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz",
 "version": "4.1.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "CFITSIO is a library of C and Fortran subroutines for reading and writing\ndata files in FITS (Flexible Image Transport System) data format. CFITSIO\nprovides simple high-level routines for reading and writing FITS files that\ninsulate the programmer from the internal complexities of the FITS format.\nCFITSIO also provides many advanced features for manipulating and filtering\nthe information in FITS files.\n",
   "doc_url": "https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html",
   "home": "http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html",
   "license": "LicenseRef-fitsio",
   "license_file": "License.txt",
   "summary": "A library for reading and writing FITS files"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "cfitsio"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "pkgw",
    "teake"
   ]
  },
  "package": {
   "name": "cfitsio",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cmake"
   ],
   "host": [
    "libcurl",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "ldflags.patch",
    "unvendor_zlib.patch",
    "lcurl-pkg-config.patch"
   ],
   "sha256": "748994dd1c819b88567e3539ea1f0ec2dd39fc0ed2884c033afa3da66efb5f4e",
   "url": "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_LIB%\\cfitsio.lib exit 1",
    "if not exist %LIBRARY_BIN%\\cfitsio.dll exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libcurl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}