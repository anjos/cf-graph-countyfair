{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/547644180.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547695825.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/667537457.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1111758067.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "robotframework-pythonlibcore",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Robot Framework hybrid and dynamic library API gives more flexibility for\nlibrary than the static library API, but they also sets requirements for\nlibraries which needs to be implemented in the library side. PythonLibCore\neases the problem by providing simpler interface and handling all the\nrequirements towards the Robot Framework library APIs.",
   "home": "https://github.com/robotframework/PythonLibCore",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "COPYRIGHT.txt"
   ],
   "summary": "Tools to ease creating larger test libraries for Robot Framework using Python."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv --no-deps"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "martinRenou"
   ]
  },
  "package": {
   "name": "robotframework-pythonlibcore",
   "version": "3.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=2.7"
   ],
   "run": [
    "python >=2.7",
    "robotframework"
   ]
  },
  "source": {
   "sha256": "1bce3b8dfcb7519789ee3a89320f6402e126f6d0a02794184a1ab8cee0e46b5d",
   "url": "https://pypi.io/packages/source/r/robotframework-pythonlibcore/robotframework-pythonlibcore-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "robotlibcore"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "robotframework"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Robot Framework hybrid and dynamic library API gives more flexibility for\nlibrary than the static library API, but they also sets requirements for\nlibraries which needs to be implemented in the library side. PythonLibCore\neases the problem by providing simpler interface and handling all the\nrequirements towards the Robot Framework library APIs.",
   "home": "https://github.com/robotframework/PythonLibCore",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "COPYRIGHT.txt"
   ],
   "summary": "Tools to ease creating larger test libraries for Robot Framework using Python."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv --no-deps"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "martinRenou"
   ]
  },
  "package": {
   "name": "robotframework-pythonlibcore",
   "version": "3.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=2.7"
   ],
   "run": [
    "python >=2.7",
    "robotframework"
   ]
  },
  "source": {
   "sha256": "1bce3b8dfcb7519789ee3a89320f6402e126f6d0a02794184a1ab8cee0e46b5d",
   "url": "https://pypi.io/packages/source/r/robotframework-pythonlibcore/robotframework-pythonlibcore-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "robotlibcore"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "robotframework-pythonlibcore",
 "new_version": "4.0.0",
 "new_version_attempts": {
  "2.2.0": 1,
  "2.2.1": 2,
  "3.0.0": 1,
  "4.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "robotframework-pythonlibcore"
  ]
 },
 "pinning_version": "2022.11.05.16.13.05",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"robotframework-pythonlibcore\" %}\n{% set version = \"3.0.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 1bce3b8dfcb7519789ee3a89320f6402e126f6d0a02794184a1ab8cee0e46b5d\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps\n\nrequirements:\n  host:\n    - pip\n    - python >=2.7\n  run:\n    - python >=2.7\n    - robotframework\n\ntest:\n  imports:\n    - robotlibcore\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/robotframework/PythonLibCore\n  summary: Tools to ease creating larger test libraries for Robot Framework using Python.\n  license: Apache-2.0\n  license_file:\n    - LICENSE.txt\n    - COPYRIGHT.txt\n  description: |-\n    The Robot Framework hybrid and dynamic library API gives more flexibility for\n    library than the static library API, but they also sets requirements for\n    libraries which needs to be implemented in the library side. PythonLibCore\n    eases the problem by providing simpler interface and handling all the\n    requirements towards the Robot Framework library APIs.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - martinRenou\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python",
   "robotframework"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "robotframework"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=2.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=2.7",
    "robotframework"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/r/robotframework-pythonlibcore/robotframework-pythonlibcore-3.0.0.tar.gz",
 "version": "3.0.0"
}