{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/215002426.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496255588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/538571244.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/585682763.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "qhull",
 "hash_type": "sha256",
 "name": "qhull",
 "new_version": "2020.2",
 "new_version_attempts": {
  "2020.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "qhull"
  ]
 },
 "pinning_version": "2021.03.05.13.29.10",
 "raw_meta_yaml": "{% set name = \"qhull\" %}\n{% set version = \"2020.2\" %}\n{% set sha256 = \"59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}.tar.gz\n  url: https://github.com/qhull/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - fix-osx-rpath.patch\n    - windows.patch\n\nbuild:\n  number: 2\n  run_exports:\n    - {{ pin_subpackage('qhull', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - make  # [unix]\n  host:\n  run:\n\ntest:\n  commands:\n    # Verify libraries.\n    {% set qhull_libs = [\"qhullcpp\", \"qhullstatic\", \"qhullstatic_r\"] %}\n    {% for each_qhull_lib in qhull_libs %}\n    - test -f $PREFIX/lib/lib{{ each_qhull_lib }}.a                           # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_qhull_lib }}.lib exit 1    # [win]\n    {% endfor %}\n    # [S. Bruens #69]\n    # BUILD_SHARED_LIBS\n    {% set qhull_dynlibs = [\"qhull_r\"] %}\n    {% for each_qhull_lib in qhull_dynlibs %}\n    - test -f $PREFIX/lib/lib{{ each_qhull_lib }}${SHLIB_EXT}                 # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_qhull_lib }}.lib exit 1    # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_qhull_lib }}.dll exit 1    # [win]\n    {% endfor %}\n    - rbox c P0 D2 | qvoronoi s o\n    - rbox c | qconvex FQ FV n | qhalf Fp\n    - rbox 1000 D3 | qhull C-1e-4 FO Ts\n\nabout:\n  home: http://www.qhull.org/\n  license: Qhull\n  license_file: COPYING.txt\n  summary: Qhull computes the convex hull\n  doc_url: http://www.qhull.org/html\n  dev_url: https://github.com/qhull/qhull\n\nextra:\n  recipe-maintainers:\n    - sirokujira\n",
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz",
 "version": "2020.2"
}