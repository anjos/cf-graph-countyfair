{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "gdal-3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "min_py_ver": "36",
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "gsshapy",
 "hash_type": "sha256",
 "name": "gsshapy",
 "new_version": "2.3.9",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gsshapy"
  ]
 },
 "pinning_version": "2019.08.11",
 "raw_meta_yaml": "{% set name = \"gsshapy\" %}\n{% set version = \"2.3.9\" %}\n{% set sha256 = \"13b47b450d0cc5e9053b83211dac8cf2905991a1626bda7c6e9219a7e70ceb50\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - pip\n    - python>=3.6\n    - setuptools\n  host:\n    - python>=3.6\n    - pip\n    - setuptools\n  run:\n    - python>=3.6\n    - affine\n    - appdirs\n    - gdal\n    - geopandas\n    - mapkit>=1.2.6\n    - pangaea\n    - psycopg2\n    - pyyaml\n    - rapidpy\n    - timezonefinder\n    - utm\n    - wrf-python\n\ntest:\n  imports:\n    - gsshapy\n    - gsshapy.orm\n    - gsshapy.orm.file_io\n    - gsshapy.orm.prj\n    - gsshapy.lib\n    - gsshapy.lib.db_tools\n    - gsshapy.grid\n    - gsshapy.grid.grid_to_gssha\n    - gsshapy.grid.hrrr_to_gssha\n    - gsshapy.grid.era_to_gssha\n    - gsshapy.grid.nwm_to_gssha\n    - gsshapy.modeling\n    - gsshapy.modeling.event\n    - gsshapy.modeling.framework\n    - gsshapy.modeling.model\n\nabout:\n  home: http://github.com/ci-water/gsshapy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'Object Relational Model for GSSHA model files and a toolkit to convert gridded input into GSSHA input.'\n  description: |\n    GsshaPy is an object relational model (ORM) for the\n    Gridded Surface Subsurface Hydrologic Analysis (GSSHA) model\n    and a toolkit to convert gridded input into GSSHA input.\n    The purpose of GsshaPy is to expose GSSHA files to a web\n    development environment by reading them into an SQL database.\n    The files can also be written back to file for model execution.\n  doc_url: http://gsshapy.readthedocs.io\n  dev_url: https://github.com/ci-water/gsshapy\n\nextra:\n  recipe-maintainers:\n    - dharhas\n    - kajiglet\n    - sdc50\n    - swainn\n    - snowman2\n",
 "smithy_version": "3.4.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/gsshapy/gsshapy-2.3.9.tar.gz",
 "version": "2.3.9"
}