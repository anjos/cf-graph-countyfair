{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/418836104.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/655744719.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-survivalsvm",
 "hash_type": "sha256",
 "name": "r-survivalsvm",
 "new_version": "0.0.5",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-survivalsvm"
  ]
 },
 "pinning_version": "2021.05.27.19.14.28",
 "raw_meta_yaml": "{% set version = '0.0.5' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-survivalsvm\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/survivalsvm_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/survivalsvm/survivalsvm_{{ version }}.tar.gz\n  sha256: ea4d39ebecb38e4e4e89891b2d5c2ba222344879bcdd8dac9be0078c73cb90ac\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 2\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-hmisc\n    - r-matrix\n    - r-kernlab\n    - r-pracma\n    - r-quadprog\n    - r-survival\n  run:\n    - r-base\n    - r-hmisc\n    - r-matrix\n    - r-kernlab\n    - r-pracma\n    - r-quadprog\n    - r-survival\n\ntest:\n  commands:\n    - $R -e \"library('survivalsvm')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('survivalsvm')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/imbs-hl/survivalsvm\n  license: GPL-3.0-only\n  summary: 'Performs support vectors analysis for data sets with survival outcome. Three approaches\n    are available in the package: The regression approach takes censoring into account\n    when formulating the inequality constraints of the support vector problem. In the\n    ranking approach, the inequality constraints set the objective to maximize the concordance\n    index for comparable pairs of observations. The hybrid approach combines the regression\n    and ranking constraints in the same model.'\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: survivalsvm\n# Type: Package\n# Title: Survival Support Vector Analysis\n# Version: 0.0.5\n# Date: 2018-01-05\n# Author: Cesaire J. K. Fouodo\n# Maintainer: Cesaire Fouodo <fouodo@imbs.uni-luebeck.de>\n# Description: Performs support vectors analysis for data sets with survival outcome. Three approaches are available in the package: The regression approach takes censoring into account when formulating the inequality constraints of the support vector problem. In the ranking approach, the inequality constraints set the objective to maximize the concordance index for comparable pairs of observations. The hybrid approach combines the regression and ranking constraints in the same model.\n# Imports: pracma, quadprog, kernlab, Matrix, stats, Hmisc\n# Suggests: testthat\n# Depends: survival\n# License: GPL\n# RoxygenNote: 6.0.1\n# URL: https://github.com/imbs-hl/survivalsvm\n# BugReports: https://github.com/imbs-hl/survivalsvm/issues\n# NeedsCompilation: no\n# Packaged: 2018-02-05 06:44:20 UTC; fouodo\n# Repository: CRAN\n# Date/Publication: 2018-02-05 07:01:13 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/survivalsvm_0.0.5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/survivalsvm/survivalsvm_0.0.5.tar.gz",
  "https://cran.r-project.org/src/contrib/survivalsvm_0.0.5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/survivalsvm/survivalsvm_0.0.5.tar.gz"
 ],
 "version": "0.0.5"
}