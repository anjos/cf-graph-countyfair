{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/811435386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1012451709.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ccr",
 "hash_type": "sha256",
 "name": "ccr",
 "new_version": "1_3_0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ccr"
  ]
 },
 "pinning_version": "2022.07.29.16.12.45",
 "raw_meta_yaml": "{% set version = \"1.3.0\" %}\n\npackage:\n  name: ccr\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ccr/ccr/releases/download/v{{ version | replace(\".\",\"_\") }}/ccr-{{ version }}.tar.gz\n  sha256: bb892e3319e5d748e29453f801286ec2f82bf4074f2f86de0e9b1ba5f08995c6\n\nbuild:\n  number: 2\n  # No windows build available\n  # https://github.com/ccr/ccr/issues/166\n  # https://github.com/ccr/ccr/issues/167\n  skip: true  # [win]\n  run_exports:\n    # 2021/12/29 hmaarrfk\n    # No information on https://abi-laboratory.pro/\n    - {{ pin_subpackage('ccr', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make  # [unix]\n  host:\n    - libnetcdf\n    - hdf5\n    - bzip2\n    - zstd\n    # No lz4 support yet\n    # https://github.com/ccr/ccr/issues/20\n    # - lz4-c\n    # not sure if this exists on conda forge yet\n    # - bitgroom\n\ntest:\n  commands:\n    - ccr-config --help\n    - test -f ${PREFIX}/include/ccr.h            # [unix]\n    - test -f ${PREFIX}/lib/libccr${SHLIB_EXT}   # [unix]\n    - test ! -f ${PREFIX}/lib/libccr.a           # [unix]\n    - cat ${PREFIX}/lib/libccr.settings          # [unix]\n    # - ccr-config --has-bitgroom | grep yes       # [unix]\n    - ccr-config --has-bzip2    | grep yes       # [unix]\n    # - ccr-config --has-fortran  | grep yes       # [unix]\n    # - ccr-config --has-lz4      | grep yes       # [unix]\n    - ccr-config --has-zstd     | grep yes       # [unix]\n\nabout:\n  home: https://github.com/ccr/ccr\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Community Codec Repository'\n  description: |\n    This project supports compression (and other) filters for netCDF/HDF5 files\n    which are not natively supported by the netCDF C library.\n\n  doc_url: https://ccr.github.io/ccr/\n  dev_url: https://github.com/ccr/ccr\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/ccr/ccr/releases/download/v1_3_0/ccr-1.3.0.tar.gz",
 "version": "1.3.0"
}