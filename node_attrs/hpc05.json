{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.24"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/225217708.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285959854.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/287298343.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/287307773.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/296752940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/338329101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345703910.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482311970.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503894736.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507210113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/618512708.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "hpc05",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/basnijholt/hpc05",
   "home": "https://hpc05.readthedocs.io/",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "ipyparallel Client and convenience package for a PBS or SLURM cluster with a headnode."
  },
  "build": {
   "number": "1",
   "script": [
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "hpc05",
   "version": "2.0.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill"
   ]
  },
  "source": {
   "fn": "2.0.6.zip",
   "sha256": "caef40ed18042fafa5e37b61727a65d91d111ef077390a45c2d9288e3e47bca9",
   "url": "https://github.com/basnijholt/hpc05/archive/v2.0.6.zip"
  },
  "test": {
   "imports": [
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dill",
    "ipyparallel",
    "paramiko",
    "pexpect",
    "psutil",
    "python",
    "tornado"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/basnijholt/hpc05",
   "home": "https://hpc05.readthedocs.io/",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "ipyparallel Client and convenience package for a PBS or SLURM cluster with a headnode."
  },
  "build": {
   "number": "1",
   "script": [
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "hpc05",
   "version": "2.0.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill"
   ]
  },
  "source": {
   "fn": "2.0.6.zip",
   "sha256": "caef40ed18042fafa5e37b61727a65d91d111ef077390a45c2d9288e3e47bca9",
   "url": "https://github.com/basnijholt/hpc05/archive/v2.0.6.zip"
  },
  "test": {
   "imports": [
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor"
   ]
  }
 },
 "name": "hpc05",
 "new_version": "2.0.6",
 "new_version_attempts": {
  "2.0.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/basnijholt/hpc05",
   "home": "https://hpc05.readthedocs.io/",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "ipyparallel Client and convenience package for a PBS or SLURM cluster with a headnode."
  },
  "build": {
   "number": "1",
   "script": [
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt",
    "basnijholt"
   ]
  },
  "package": {
   "name": "hpc05",
   "version": "2.0.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill",
    "python",
    "paramiko",
    "ipyparallel",
    "tornado",
    "pexpect",
    "psutil",
    "dill"
   ]
  },
  "source": {
   "fn": "2.0.6.zip",
   "sha256": "caef40ed18042fafa5e37b61727a65d91d111ef077390a45c2d9288e3e47bca9",
   "url": "https://github.com/basnijholt/hpc05/archive/v2.0.6.zip"
  },
  "test": {
   "imports": [
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor",
    "hpc05",
    "hpc05_culler",
    "hpc05_monitor"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dill",
    "ipyparallel",
    "paramiko",
    "pexpect",
    "psutil",
    "python",
    "tornado"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hpc05"
  ]
 },
 "pinning_version": "2021.04.19.16.42.48",
 "raw_meta_yaml": "{% set name = \"hpc05\" %}\n{% set version = \"2.0.6\" %}\n{% set sha256 = \"caef40ed18042fafa5e37b61727a65d91d111ef077390a45c2d9288e3e47bca9\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}.zip\n  url: https://github.com/basnijholt/hpc05/archive/v{{ version }}.zip\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  skip: true  # [py<36 or win]\n  script:\n    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n    - paramiko\n    - ipyparallel\n    - tornado\n    - pexpect\n    - psutil\n    - dill\n\ntest:\n  imports:\n    - hpc05\n    - hpc05_culler\n    - hpc05_monitor\n\nabout:\n  home: https://hpc05.readthedocs.io/\n  license: MIT\n  license_file: LICENSE\n  summary: ipyparallel Client and convenience package for a PBS or SLURM cluster with a headnode.\n  dev_url: https://github.com/basnijholt/hpc05\n\nextra:\n  recipe-maintainers:\n    - basnijholt\n",
 "req": {
  "__set__": true,
  "elements": [
   "dill",
   "ipyparallel",
   "paramiko",
   "pexpect",
   "pip",
   "psutil",
   "python",
   "setuptools",
   "tornado"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dill",
    "ipyparallel",
    "paramiko",
    "pexpect",
    "psutil",
    "python",
    "tornado"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dill",
    "ipyparallel",
    "paramiko",
    "pexpect",
    "psutil",
    "python",
    "tornado"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/basnijholt/hpc05/archive/v2.0.6.zip",
 "version": "2.0.6"
}