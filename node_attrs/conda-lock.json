{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/427491836.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/450442114.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/463666385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/483146089.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485548168.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/494961292.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495238472.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499406866.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525904027.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "conda-lock",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Conda lock is a lightweight library that can be used to generate fully\nreproducible lock files for conda environments.\nIt does this by performing multiple solves for conda targeting a set of\nplatforms you desire lockfiles for.\nThis also has the added benefit of acting as an external presolve for conda\nas the lockfiles it generates results in the conda solver not being invoked\nwhen installing the packages from the generated lockfile.\n",
   "dev_url": "https://github.com/conda-incubator/conda-lock",
   "doc_url": "https://github.com/conda-incubator/conda-lock/blob/master/README.md",
   "home": "https://github.com/conda-incubator/conda-lock",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight lockfile for conda environments"
  },
  "build": {
   "entry_points": [
    "conda-lock = conda_lock:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ericdill",
    "mariusvniekerk",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "conda-lock",
   "version": "0.7.3"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools >=41.2",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6",
    "ensureconda",
    "pyyaml",
    "requests",
    "jinja2",
    "setuptools",
    "toml",
    "click-default-group"
   ]
  },
  "source": {
   "sha256": "dc06cbb91519557f0e81a39c58b2bcc4f3e8dd2622ee4ba05fd95182229089d8",
   "url": "https://pypi.io/packages/source/c/conda_lock/conda_lock-0.7.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "conda_lock"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click-default-group",
    "ensureconda",
    "jinja2",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Conda lock is a lightweight library that can be used to generate fully\nreproducible lock files for conda environments.\nIt does this by performing multiple solves for conda targeting a set of\nplatforms you desire lockfiles for.\nThis also has the added benefit of acting as an external presolve for conda\nas the lockfiles it generates results in the conda solver not being invoked\nwhen installing the packages from the generated lockfile.\n",
   "dev_url": "https://github.com/conda-incubator/conda-lock",
   "doc_url": "https://github.com/conda-incubator/conda-lock/blob/master/README.md",
   "home": "https://github.com/conda-incubator/conda-lock",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight lockfile for conda environments"
  },
  "build": {
   "entry_points": [
    "conda-lock = conda_lock:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ericdill",
    "mariusvniekerk",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "conda-lock",
   "version": "0.7.3"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools >=41.2",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6",
    "ensureconda",
    "pyyaml",
    "requests",
    "jinja2",
    "setuptools",
    "toml",
    "click-default-group"
   ]
  },
  "source": {
   "sha256": "dc06cbb91519557f0e81a39c58b2bcc4f3e8dd2622ee4ba05fd95182229089d8",
   "url": "https://pypi.io/packages/source/c/conda_lock/conda_lock-0.7.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "conda_lock"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "conda-lock",
 "new_version": "0.7.3",
 "new_version_attempts": {
  "0.3.0": 1,
  "0.4.0": 1,
  "0.4.1": 1,
  "0.5.0": 1,
  "0.6.0": 1,
  "0.7.0": 1,
  "0.7.1": 1,
  "0.7.2": 1,
  "0.7.3": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Conda lock is a lightweight library that can be used to generate fully\nreproducible lock files for conda environments.\nIt does this by performing multiple solves for conda targeting a set of\nplatforms you desire lockfiles for.\nThis also has the added benefit of acting as an external presolve for conda\nas the lockfiles it generates results in the conda solver not being invoked\nwhen installing the packages from the generated lockfile.\n",
   "dev_url": "https://github.com/mariusvniekerk/conda-lock",
   "doc_url": "https://github.com/mariusvniekerk/conda-lock/blob/master/README.md",
   "home": "https://github.com/mariusvniekerk/conda-lock",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight lockfile for conda environments"
  },
  "build": {
   "entry_points": [
    "conda-lock = conda_lock:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ericdill",
    "mariusvniekerk",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "conda-lock",
   "version": "0.4.1"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools >=41.2",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6",
    "pyyaml",
    "requests",
    "jinja2",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "9e9d4ea4374f87249fba56489734b55fea58a5a88f2d768a35f5e1bdd8562fd5",
   "url": "https://pypi.io/packages/source/c/conda_lock/conda_lock-0.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "conda_lock"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jinja2",
    "python",
    "pyyaml",
    "requests",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "conda-lock"
  ]
 },
 "pinning_version": "2020.11.23.15.13.34",
 "raw_meta_yaml": "{% set name = \"conda-lock\" %}\n{% set version = \"0.7.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name.replace('-', '_') }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz\n  sha256: dc06cbb91519557f0e81a39c58b2bcc4f3e8dd2622ee4ba05fd95182229089d8\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  noarch: python\n  entry_points:\n    - conda-lock = conda_lock:main\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools >=41.2\n    - setuptools_scm\n  run:\n    - python >=3.6\n    - ensureconda\n    - pyyaml\n    - requests\n    - jinja2\n    - setuptools\n    - toml\n    - click-default-group\n\ntest:\n  imports:\n    - conda_lock\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/conda-incubator/{{ name }}\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Lightweight lockfile for conda environments\n  description: |\n    Conda lock is a lightweight library that can be used to generate fully\n    reproducible lock files for conda environments.\n    It does this by performing multiple solves for conda targeting a set of\n    platforms you desire lockfiles for.\n    This also has the added benefit of acting as an external presolve for conda\n    as the lockfiles it generates results in the conda solver not being invoked\n    when installing the packages from the generated lockfile.\n  doc_url: https://github.com/conda-incubator/conda-lock/blob/master/README.md\n  dev_url: https://github.com/conda-incubator/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - ericdill\n    - mariusvniekerk\n    - ocefpaf\n",
 "req": {
  "__set__": true,
  "elements": [
   "click-default-group",
   "ensureconda",
   "jinja2",
   "pip",
   "python",
   "pyyaml",
   "requests",
   "setuptools",
   "setuptools_scm",
   "toml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click-default-group",
    "ensureconda",
    "jinja2",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6",
    "setuptools >=41.2",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click-default-group",
    "ensureconda",
    "jinja2",
    "python >=3.6",
    "pyyaml",
    "requests",
    "setuptools",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/conda_lock/conda_lock-0.2.2.tar.gz",
 "version": "0.7.3",
 "win_64_meta_yaml": {
  "about": {
   "description": "Conda lock is a lightweight library that can be used to generate fully\nreproducible lock files for conda environments.\nIt does this by performing multiple solves for conda targeting a set of\nplatforms you desire lockfiles for.\nThis also has the added benefit of acting as an external presolve for conda\nas the lockfiles it generates results in the conda solver not being invoked\nwhen installing the packages from the generated lockfile.\n",
   "dev_url": "https://github.com/mariusvniekerk/conda-lock",
   "doc_url": "https://github.com/mariusvniekerk/conda-lock/blob/master/README.md",
   "home": "https://github.com/mariusvniekerk/conda-lock",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight lockfile for conda environments"
  },
  "build": {
   "entry_points": [
    "conda-lock = conda_lock:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ericdill",
    "mariusvniekerk",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "conda-lock",
   "version": "0.4.1"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools >=41.2",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6",
    "pyyaml",
    "requests",
    "jinja2",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "9e9d4ea4374f87249fba56489734b55fea58a5a88f2d768a35f5e1bdd8562fd5",
   "url": "https://pypi.io/packages/source/c/conda_lock/conda_lock-0.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "conda_lock"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jinja2",
    "python",
    "pyyaml",
    "requests",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}