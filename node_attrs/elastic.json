{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200935401.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.0.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200952397.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.0.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200966648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.0.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "elastic",
 "hash_type": "sha256",
 "name": "elastic",
 "new_version": "5.1.0.17",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "elastic"
  ]
 },
 "pinning_version": "2018.07.01",
 "raw_meta_yaml": "{% set name = \"elastic\" %}\n{% set version = \"5.1.0.17\" %}\n{% set sha256 = \"f1832da9cf09485f0e8edc20dc215e51c0260603a51c6f23adc27c2d2601f13f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n  entry_points:\n          - elastic = elastic.cli.elastic:cli\n\nrequirements:\n  build:\n    - python\n    - pip\n    - setuptools\n    - future\n    - setuptools_scm\n    - sphinx\n  run:\n    - python\n    - ase\n    - numpy\n    - scipy\n    - spglib\n    - future\n    - click\n\ntest:\n  source_files:\n    - test\n    - tests\n  requires:\n    - hypothesis\n  imports:\n    - elastic\n  commands:\n    - python -m unittest discover -s test -b\n    - elastic --version\n    - elastic -v --cij proc tests/data/calc-cij_*/vasprun.xml\n\nabout:\n  home: http://jochym.github.io/Elastic/\n  license: GPL-3.0\n  license_family: GPL3\n  license_file: LICENSE\n  summary: 'Elastic is a set of python routines for calculation of elastic properties of crystals'\n\n  description: |\n     Elastic is a set of python routines for calculation of elastic properties \n     of crystals (elastic constants, equation of state, sound velocities, etc.). \n     It is a third version of the code implemented as a extension to the ASE system. \n     The code was a basis for some of my publications and was described briefly \n     in these papers. The code was available to anyone, presented at the Workshop \n     on ab initio Calculations in Geosciences and used by some of my co-workers. \n  doc_url: http://elastic.readthedocs.io/\n  dev_url: https://github.com/jochym/elastic\n\nextra:\n  recipe-maintainers:\n    - jochym\n",
 "smithy_version": "3.1.6",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/e/elastic/elastic-5.1.0.17.tar.gz",
 "version": "5.1.0.17"
}