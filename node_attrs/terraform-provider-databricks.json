{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1090679348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1095515342.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1108777832.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1112731106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1116412562.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1119358078.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1166078944.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1193757080.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "terraform-provider-databricks",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/databricks/terraform-provider-databricks",
   "doc_url": "https://registry.terraform.io/providers/databricks/databricks/latest/docs",
   "home": "https://github.com/databricks/terraform-provider-databricks",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "Terraform provider for Databricks."
  },
  "build": {
   "number": "0",
   "script": [
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/databricks/1.8.0/linux_amd64/terraform-provider-databricks_v1.8.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform"
   ]
  },
  "package": {
   "name": "terraform-provider-databricks",
   "version": "1.8.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "c2619b1978dfeac2faca1d9ac536d284c72fa0cff55829ce218358e54a9994f0",
   "url": "https://github.com/databricks/terraform-provider-databricks/archive/v1.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo 'provider \"databricks\" { version=\"1.8.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/databricks/1.8.0/linux_amd64/README.md"
   ],
   "requires": [
    "terraform >=1"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/databricks/terraform-provider-databricks",
   "doc_url": "https://registry.terraform.io/providers/databricks/databricks/latest/docs",
   "home": "https://github.com/databricks/terraform-provider-databricks",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "Terraform provider for Databricks."
  },
  "build": {
   "number": "0",
   "script": [
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/databricks/1.8.0/linux_amd64/terraform-provider-databricks_v1.8.0",
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/databricks/1.8.0/darwin_amd64/terraform-provider-databricks_v1.8.0",
    "go build -v -o %PREFIX%\\bin\\../plugins/registry.terraform.io/hashicorp/databricks/1.8.0/windows_amd64/terraform-provider-databricks_v1.8.0.exe"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform",
    "conda-forge/terraform",
    "conda-forge/terraform"
   ]
  },
  "package": {
   "name": "terraform-provider-databricks",
   "version": "1.8.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18",
    "go_compiler_stub 1.18",
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "c2619b1978dfeac2faca1d9ac536d284c72fa0cff55829ce218358e54a9994f0",
   "url": "https://github.com/databricks/terraform-provider-databricks/archive/v1.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo 'provider \"databricks\" { version=\"1.8.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/databricks/1.8.0/linux_amd64/README.md",
    "echo 'provider \"databricks\" { version=\"1.8.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/databricks/1.8.0/darwin_amd64/README.md",
    "echo provider \"databricks\" { version=\"1.8.0\" } > init.tf",
    "terraform init --plugin-dir=%PREFIX%\\bin\\../plugins",
    "if not exist .terraform.lock.hcl exit 1",
    "if exist .terraform\\plugins\\plugins/registry.terraform.io/hashicorp/databricks/1.8.0\\windows_amd64/README.md exit 1"
   ],
   "requires": [
    "terraform >=1",
    "terraform >=1",
    "terraform >=1"
   ]
  }
 },
 "name": "terraform-provider-databricks",
 "new_version": "1.9.0",
 "new_version_attempts": {
  "1.6.0": 1,
  "1.6.1": 1,
  "1.6.2": 1,
  "1.6.3": 1,
  "1.6.4": 1,
  "1.6.5": 1,
  "1.7.0": 1,
  "1.8.0": 2,
  "1.9.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/databricks/terraform-provider-databricks",
   "doc_url": "https://registry.terraform.io/providers/databricks/databricks/latest/docs",
   "home": "https://github.com/databricks/terraform-provider-databricks",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "Terraform provider for Databricks."
  },
  "build": {
   "number": "0",
   "script": [
    "go build -v -o ${PREFIX}/bin/../plugins/registry.terraform.io/hashicorp/databricks/1.8.0/darwin_amd64/terraform-provider-databricks_v1.8.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform"
   ]
  },
  "package": {
   "name": "terraform-provider-databricks",
   "version": "1.8.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "c2619b1978dfeac2faca1d9ac536d284c72fa0cff55829ce218358e54a9994f0",
   "url": "https://github.com/databricks/terraform-provider-databricks/archive/v1.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo 'provider \"databricks\" { version=\"1.8.0\" }' > init.tf",
    "terraform init --plugin-dir=${PREFIX}/bin/../plugins",
    "test -f .terraform.lock.hcl",
    "test ! -f .terraform/plugins/plugins/registry.terraform.io/hashicorp/databricks/1.8.0/darwin_amd64/README.md"
   ],
   "requires": [
    "terraform >=1"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "terraform-provider-databricks"
  ]
 },
 "pinning_version": "2023.01.07.12.45.19",
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3940553421\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 340, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set provider = \"databricks\" %}\n{% set goname = \"github.com/databricks/terraform-provider-\"+provider.lower() %}\n{% set version = \"1.8.0\" %}\n\n{% set name = goname.split('/')[-1] %}\n\n{% set plugin_dir = os.sep.join([\"plugins\", \"registry.terraform.io\", \"hashicorp\", provider.lower(), version]) %}\n{% set x4_plugin = name + '_v' + version %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://{{ goname }}/archive/v{{ version }}.tar.gz\n  sha256: c2619b1978dfeac2faca1d9ac536d284c72fa0cff55829ce218358e54a9994f0\n\nbuild:\n  number: 0\n  script:\n    - go build -v -o {{ target_gobin }}..{{ os.sep }}{{ plugin_dir }}{{ os.sep }}{{ target_goos }}_{{ target_goarch }}{{ os.sep }}{{ x4_plugin }}{{ target_goexe }}\n\nrequirements:\n  build:\n    - {{ compiler('go') }} 1.18\n\ntest:\n  requires:\n    - terraform >=1\n\n  commands:\n    # Create a sample init.tf loading the provider\n    - echo 'provider \"{{ provider|lower }}\" { version=\"{{ version }}\" }' > init.tf  # [unix]\n    - echo provider \"{{ provider|lower }}\" { version=\"{{ version }}\" } > init.tf    # [win]\n\n    # Initialize\n    - terraform init --plugin-dir={{ target_gobin }}..{{ os.sep }}plugins\n\n    # Tests that init was successful\n    - test -f .terraform.lock.hcl              # [unix]\n    - if not exist .terraform.lock.hcl exit 1  # [win]\n\n    # Test that the provider was not downloaded\n    - test ! -f .terraform/plugins/{{ plugin_dir }}/{{ target_goos }}_{{ target_goarch }}/README.md  # [unix]\n    - if exist .terraform\\plugins\\{{ plugin_dir }}\\{{ target_goos }}_{{ target_goarch }}/README.md exit 1  # [win]\n\nabout:\n  home: https://github.com/databricks/terraform-provider-databricks\n  license: Apache-2.0\n  license_file: LICENSE\n  license_family: APACHE\n  summary: Terraform provider for Databricks.\n  doc_url: https://registry.terraform.io/providers/databricks/databricks/latest/docs\n  dev_url: https://github.com/databricks/terraform-provider-databricks\n\nextra:\n  recipe-maintainers:\n    - conda-forge/terraform\n",
 "req": {
  "__set__": true,
  "elements": [
   "go_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub 1.18"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform >=1"
   ]
  }
 },
 "url": "https://github.com/databricks/terraform-provider-databricks/archive/v1.8.0.tar.gz",
 "version": "1.8.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/databricks/terraform-provider-databricks",
   "doc_url": "https://registry.terraform.io/providers/databricks/databricks/latest/docs",
   "home": "https://github.com/databricks/terraform-provider-databricks",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "Terraform provider for Databricks."
  },
  "build": {
   "number": "0",
   "script": [
    "go build -v -o %PREFIX%\\bin\\../plugins/registry.terraform.io/hashicorp/databricks/1.8.0/windows_amd64/terraform-provider-databricks_v1.8.0.exe"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/terraform"
   ]
  },
  "package": {
   "name": "terraform-provider-databricks",
   "version": "1.8.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub 1.18"
   ]
  },
  "source": {
   "sha256": "c2619b1978dfeac2faca1d9ac536d284c72fa0cff55829ce218358e54a9994f0",
   "url": "https://github.com/databricks/terraform-provider-databricks/archive/v1.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo provider \"databricks\" { version=\"1.8.0\" } > init.tf",
    "terraform init --plugin-dir=%PREFIX%\\bin\\../plugins",
    "if not exist .terraform.lock.hcl exit 1",
    "if exist .terraform\\plugins\\plugins/registry.terraform.io/hashicorp/databricks/1.8.0\\windows_amd64/README.md exit 1"
   ],
   "requires": [
    "terraform >=1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "terraform"
   ]
  }
 }
}