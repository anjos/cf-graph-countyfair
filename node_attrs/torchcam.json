{
 "archived": false,
 "bad": "make_graph: 429",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "torchcam",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Simple way to leverage the class-specific activation of\nconvolutional layers in PyTorch.\n",
   "dev_url": "https://github.com/frgfm/torch-cam",
   "doc_url": "https://frgfm.github.io/torch-cam",
   "home": "https://github.com/frgfm/torch-cam",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Class activation maps for your PyTorch CNN models"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "rm -rf test",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "torchcam",
   "version": "0.3.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "python >=3.6",
    "matplotlib-base >=3.0.0",
    "numpy >=1.14.0",
    "pillow >=8.3.2",
    "pytorch >=1.5.1"
   ]
  },
  "source": {
   "sha256": "400d451cbbafe0dbddbf3a22feab9e23d1317e90cf6eae16bca96e0e2ff4f076",
   "url": "https://pypi.io/packages/source/t/torchcam/torchcam-0.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "torchcam",
    "torchcam.methods"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "pillow",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Simple way to leverage the class-specific activation of\nconvolutional layers in PyTorch.\n",
   "dev_url": "https://github.com/frgfm/torch-cam",
   "doc_url": "https://frgfm.github.io/torch-cam",
   "home": "https://github.com/frgfm/torch-cam",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Class activation maps for your PyTorch CNN models"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "rm -rf test",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "torchcam",
   "version": "0.3.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "python >=3.6",
    "matplotlib-base >=3.0.0",
    "numpy >=1.14.0",
    "pillow >=8.3.2",
    "pytorch >=1.5.1"
   ]
  },
  "source": {
   "sha256": "400d451cbbafe0dbddbf3a22feab9e23d1317e90cf6eae16bca96e0e2ff4f076",
   "url": "https://pypi.io/packages/source/t/torchcam/torchcam-0.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "torchcam",
    "torchcam.methods"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "torchcam",
 "new_version": "0.3.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchcam"
  ]
 },
 "raw_meta_yaml": "{% set name = \"torchcam\" %}\n{% set version = \"0.3.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/torchcam-{{ version }}.tar.gz\n  sha256: 400d451cbbafe0dbddbf3a22feab9e23d1317e90cf6eae16bca96e0e2ff4f076\n\nbuild:\n  number: 0\n  noarch: python\n  script:     \n    ## Ensure exclusion of tests folder\n    - rm -rf test  # [not win]\n    ## Install package {{ name }} from PyPI\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n    - matplotlib-base >=3.0.0\n    - numpy >=1.14.0\n    - pillow >=8.3.2    \n    - pytorch >=1.5.1\n\ntest:\n  imports:\n    - torchcam\n    - torchcam.methods\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/frgfm/torch-cam\n  summary: Class activation maps for your PyTorch CNN models\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    Simple way to leverage the class-specific activation of \n    convolutional layers in PyTorch.\n  doc_url: https://frgfm.github.io/torch-cam\n  dev_url: https://github.com/frgfm/torch-cam\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "req": {
  "__set__": true,
  "elements": [
   "matplotlib-base",
   "numpy",
   "pillow",
   "pip",
   "python",
   "pytorch"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "pillow",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base >=3.0.0",
    "numpy >=1.14.0",
    "pillow >=8.3.2",
    "python >=3.6",
    "pytorch >=1.5.1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/t/torchcam/torchcam-0.3.1.tar.gz",
 "version": "0.3.1"
}