{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/814079046.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896251737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pbxproj",
 "hash_type": "sha256",
 "name": "pbxproj",
 "new_version": "3.4.0",
 "new_version_attempts": {
  "3.3.1": 1,
  "3.4.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pbxproj"
  ]
 },
 "pinning_version": "2022.03.31.16.27.41",
 "raw_meta_yaml": "{% set name = \"pbxproj\" %}\n{% set version = \"3.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 23ea590b006316aa5bc11208088e6df7138bbe1127bc9d570baa15bc5bef6ed8\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - pbxproj = pbxproj.__main__:main\n    - pbxproj-file = pbxproj.pbxcli.pbxproj_file:main\n    - pbxproj-flag = pbxproj.pbxcli.pbxproj_flag:main\n    - pbxproj-folder = pbxproj.pbxcli.pbxproj_folder:main\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - coverage\n    - nose\n    - pip\n    - python >=3.6\n  run:\n    - docopt\n    - openstep-parser >=1.5.1\n    - python >=3.6\n\ntest:\n  imports:\n    - pbxproj\n    - pbxproj.pbxcli\n  commands:\n    - pip check\n    - pbxproj --help\n    - pbxproj-file --help\n    - pbxproj-flag --help\n    - pbxproj-folder --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/kronenthaler/mod-pbxproj\n  license: MIT \n  summary: 'XCode Project manipulation library for Python'\n  license_file: license.txt\n  description: |\n    This module can read, modify, and write a .pbxproj file from an Xcode 4+ projects. \n\nextra:\n  recipe-maintainers:\n    - cav71\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pbxproj/pbxproj-3.3.0.tar.gz",
 "version": "3.3.0"
}