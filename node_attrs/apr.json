{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/494341402.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/550076433.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601978915.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "expat23"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "apr",
 "hash_type": "sha256",
 "name": "apr",
 "new_version": "1.7.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "apr",
   "libapr",
   "libapriconv",
   "libaprutil"
  ]
 },
 "pinning_version": "2021.03.26.22.47.29",
 "raw_meta_yaml": "{% set apr_ver = \"1.7.0\" %}\n{% set apu_ver = \"1.6.1\" %}\n{% set api_ver = \"1.2.2\" %}\n{% set mirror = \"http://www-us.apache.org/dist/\" %}\n\npackage:\n  name: apr\n  version: {{ apr_ver }}\n\nsource:\n  - url: {{ mirror }}/apr/apr-{{ apr_ver }}.tar.gz\n    folder: apr\n    sha256: 48e9dbf45ae3fdc7b491259ffb6ccf7d63049ffacbc1c0977cced095e4c2d5a2\n    patches:\n      - patches/osx-libapr-darwin20-hints.patch\n      # backport of commit 866e1df from upstream\n      - patches/cross-compile-apr-866e1df.patch\n      - patches/cross-compile-osx-arm64-strerror.patch  # [osx and build_platform != target_platform]\n  - url: {{ mirror }}/apr/apr-util-{{ apu_ver }}.tar.gz\n    folder: apr-util\n    sha256: b65e40713da57d004123b6319828be7f1273fbc6490e145874ee1177e112c459\n  - url: {{ mirror }}/apr/apr-iconv-{{ api_ver }}.tar.gz\n    folder: apr-iconv\n    sha256: ce94c7722ede927ce1e5a368675ace17d96d60ff9b8918df216ee5c1298c6a5e\n  - path: cmake/  # [win]\n\nbuild:\n  number: 5\n  ignore_run_exports:                                           # [win]\n    - expat                                                     # [win]\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake                                                     # [win]\n    - ninja                                                     # [win]\n    - libtool  # [not win]\n    - make  # [unix]\n  host:\n    - expat                                                     # [win]\n    - {{ compiler('c') }}  # [build_platform != target_platform]\n  run:\n    - libapr\n    - libaprutil\n    - libapriconv\n\noutputs:\n  - name: libapr\n    version: {{ apr_ver }}\n    build:\n      run_exports:\n        # https://abi-laboratory.pro/tracker/timeline/apr/\n        # This is only on the basis of libapr.so\n        - {{ pin_subpackage('libapr', max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make                                                  # [unix]\n        - cmake                                                 # [win]\n        - ninja                                                 # [win]\n        - libtool  # [not win]\n        - autoconf  # [unix]\n        - automake  # [unix]\n        - gettext  # [unix]\n      host:\n    script: install_libapr.sh                                   # [unix]\n    script: install_libapr.bat                                  # [win]\n    test:\n      commands:\n        - apr-1-config --help                                   # [unix]\n\n        - if not exist %LIBRARY_INC%\\\\apr.h             exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\libapr-1.dll      exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\libapr-1.lib      exit 1  # [win]\n\n        - test -f ${PREFIX}/include/apr-1/apr.h                 # [unix]\n        - test -f ${PREFIX}/lib/libapr-1${SHLIB_EXT}            # [unix]\n\n  - name: libaprutil\n    version: {{ apu_ver }}\n    build:\n      run_exports:\n        - {{ pin_subpackage('libaprutil', max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make                                                  # [unix]\n        - cmake                                                 # [win]\n        - ninja                                                 # [win]\n        - libtool  # [not win]\n      host:\n        - expat\n        - libapr\n        - libapriconv\n    script: install_libaprutil.sh                               # [unix]\n    script: install_libaprutil.bat                              # [win]\n    test:\n      commands:\n        - apu-1-config --help                                   # [unix]\n\n        - if not exist %LIBRARY_INC%\\\\apu.h             exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\libaprutil-1.dll  exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\libaprutil-1.lib  exit 1  # [win]\n\n        - test -f ${PREFIX}/include/apr-1/apu.h                 # [unix]\n        - test -f ${PREFIX}/lib/libaprutil-1${SHLIB_EXT}        # [unix]\n\n  - name: libapriconv\n    version: {{ api_ver }}\n    build:\n      run_exports:\n        - {{ pin_subpackage('libapriconv', max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make                                                  # [unix]\n        - cmake                                                 # [win]\n        - ninja                                                 # [win]\n        - libtool  # [not win]\n      host:\n        - libapr\n    script: install_libapriconv.sh                              # [unix]\n    script: install_libapriconv.bat                             # [win]\n    test:\n      commands:\n        - if not exist %LIBRARY_INC%\\\\apr_iconv.h       exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\libapriconv-1.dll exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\libapriconv-1.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\iconv\\\\utf-8.so   exit 1  # [win]\n        - test -f ${PREFIX}/lib/libapriconv-1${SHLIB_EXT}       # [unix]\n\nabout:\n  home: http://apr.apache.org/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: apr/LICENSE\n  summary: Maintains a consistent API with predictable behaviour\n  description: |\n    Apache Portable Run-time libraries have been designed to provide a common\n    interface to low level routines across any platform.The original goal of APR\n    was to combine all code in Apache to one common code base.\n  doc_url: https://apr.apache.org/docs/apr/1.6/index.html\n  dev_url: https://svn.apache.org/viewvc/apr\n  doc_source_url: https://github.com/apache/apr/tree/trunk/docs\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - mingwandroid\n    - nehaljwani\n    - seanyen\n",
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "url": "http://www-us.apache.org/dist//apr/apr-1.7.0.tar.gz",
 "version": "1.7.0"
}