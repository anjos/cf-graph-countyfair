{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1076292508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "assimp524"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gz-common",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gazebosim/gz-common",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "gz-common",
   "recipe-maintainers": [
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "libgz-common5",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config"
     ],
     "host": [
      "libgz-math7",
      "libgz-cmake3",
      "libgz-utils2",
      "libuuid",
      "freeimage",
      "gts",
      "tinyxml2",
      "glib",
      "ffmpeg",
      "libgdal",
      "assimp"
     ]
    },
    "script": "build_cxx.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.so",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.so",
      "test -f ${PREFIX}/lib/libgz-common5-av.so",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "gz-common5",
    "requirements": {
     "run": [
      "libgz-common5"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.so",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.so",
      "test -f ${PREFIX}/lib/libgz-common5-av.so",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   }
  ],
  "package": {
   "name": "gz-common5",
   "version": "5.0.0"
  },
  "source": [
   {
    "patches": [
     "librt_linkage.patch",
     "macro_path_binary_relocation.patch"
    ],
    "sha256": "046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159",
    "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "assimp",
    "ffmpeg",
    "freeimage",
    "glib",
    "gts",
    "libgdal",
    "libgz-cmake3",
    "libgz-math7",
    "libgz-utils2",
    "libuuid",
    "tinyxml2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgz-common5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/gazebosim/gz-common",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "gz-common",
   "recipe-maintainers": [
    "Tobias-Fischer",
    "traversaro",
    "Tobias-Fischer",
    "traversaro",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "libgz-common5",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config"
     ],
     "host": [
      "libgz-math7",
      "libgz-cmake3",
      "libgz-utils2",
      "libuuid",
      "freeimage",
      "gts",
      "tinyxml2",
      "glib",
      "ffmpeg",
      "libgdal",
      "assimp"
     ]
    },
    "script": "build_cxx.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.so",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.so",
      "test -f ${PREFIX}/lib/libgz-common5-av.so",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "gz-common5",
    "requirements": {
     "run": [
      "libgz-common5"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.so",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.so",
      "test -f ${PREFIX}/lib/libgz-common5-av.so",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "libgz-common5",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config"
     ],
     "host": [
      "libgz-math7",
      "libgz-cmake3",
      "libgz-utils2",
      "freeimage",
      "gts",
      "tinyxml2",
      "glib",
      "ffmpeg",
      "libgdal",
      "assimp"
     ]
    },
    "script": "build_cxx.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-av.dylib",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "gz-common5",
    "requirements": {
     "run": [
      "libgz-common5"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-av.dylib",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "libgz-common5",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config"
     ],
     "host": [
      "libgz-math7",
      "libgz-cmake3",
      "libgz-utils2",
      "dlfcn-win32",
      "freeimage",
      "gts",
      "tinyxml2",
      "glib",
      "ffmpeg",
      "libgdal",
      "assimp"
     ]
    },
    "script": "bld_cxx.bat",
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common5\\\\gz\\\\common.hh exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-graphics.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-graphics.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-av.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-av.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common5\\\\gz-common5-config.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "gz-common5",
    "requirements": {
     "run": [
      "libgz-common5"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common5\\\\gz\\\\common.hh exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-graphics.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-graphics.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-av.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-av.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common5\\\\gz-common5-config.cmake exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "gz-common5",
   "version": "5.0.0"
  },
  "source": [
   {
    "patches": [
     "librt_linkage.patch",
     "macro_path_binary_relocation.patch"
    ],
    "sha256": "046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159",
    "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz"
   },
   {
    "patches": [
     "macro_path_binary_relocation.patch"
    ],
    "sha256": "046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159",
    "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz"
   },
   {
    "patches": [
     "macro_path_binary_relocation.patch"
    ],
    "sha256": "046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159",
    "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz"
   }
  ]
 },
 "name": "gz-common5",
 "new_version": "5_5.0.0",
 "new_version_attempts": {
  "5_5.0.0": 13
 },
 "new_version_errors": {
  "5_5.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '5_5.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/gazebosim/{{ repo_name }}/archive/{{ repo_name }}{{ major_version }}_{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gazebosim/gz-common",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "gz-common",
   "recipe-maintainers": [
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "libgz-common5",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config"
     ],
     "host": [
      "libgz-math7",
      "libgz-cmake3",
      "libgz-utils2",
      "freeimage",
      "gts",
      "tinyxml2",
      "glib",
      "ffmpeg",
      "libgdal",
      "assimp"
     ]
    },
    "script": "build_cxx.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-av.dylib",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "gz-common5",
    "requirements": {
     "run": [
      "libgz-common5"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/gz/common5/gz/common.hh",
      "test -f ${PREFIX}/lib/libgz-common5.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-graphics.dylib",
      "test -f ${PREFIX}/lib/libgz-common5-av.dylib",
      "test -f ${PREFIX}/lib/cmake/gz-common5/gz-common5-config.cmake"
     ]
    }
   }
  ],
  "package": {
   "name": "gz-common5",
   "version": "5.0.0"
  },
  "source": [
   {
    "patches": [
     "macro_path_binary_relocation.patch"
    ],
    "sha256": "046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159",
    "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "assimp",
    "ffmpeg",
    "freeimage",
    "glib",
    "gts",
    "libgdal",
    "libgz-cmake3",
    "libgz-math7",
    "libgz-utils2",
    "tinyxml2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgz-common5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gz-common5",
   "libgz-common5"
  ]
 },
 "pinning_version": "2022.10.04.15.44.33",
 "raw_meta_yaml": "{% set component_name = \"common\" %}\n{% set repo_name = \"gz-\" + component_name %}\n{% set version = \"5.0.0\" %}\n{% set major_version = version.split('.')[0] %}\n{% set name = repo_name + major_version %}\n{% set component_version = component_name + major_version %}\n{% set cxx_name = \"lib\" + name %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/gazebosim/{{ repo_name }}/archive/{{ repo_name }}{{ major_version }}_{{ version }}.tar.gz\n    sha256: 046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159\n    patches:\n      - librt_linkage.patch  # [linux]\n      - macro_path_binary_relocation.patch\n\nbuild:\n  number: 1\n\noutputs:\n  - name: {{ cxx_name }}\n    script: build_cxx.sh  # [unix]\n    script: bld_cxx.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage(cxx_name, max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - ninja\n        - cmake\n        - pkg-config\n      host:\n        - libgz-math7\n        - libgz-cmake3\n        - libgz-utils2\n        - dlfcn-win32  # [win]\n        - libuuid      # [linux]\n        - freeimage\n        - gts\n        - tinyxml2\n        - glib\n        - ffmpeg\n        - libgdal\n        - assimp\n    test:\n      commands:\n        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics.dylib  # [osx]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av.dylib  # [osx]\n        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\{{ component_version }}\\\\gz\\\\{{ component_name }}.hh exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-graphics.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-graphics.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-av.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-av.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\{{ name }}\\\\{{ name }}-config.cmake exit 1  # [win]\n\n  - name: {{ name }}\n    build:\n      run_exports:\n        - {{ pin_subpackage(cxx_name, max_pin='x') }}\n    requirements:\n      run:\n        - {{ pin_subpackage(cxx_name, exact=True) }}\n    test:\n      commands:\n        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics.dylib  # [osx]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av.dylib  # [osx]\n        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\{{ component_version }}\\\\gz\\\\{{ component_name }}.hh exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-graphics.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-graphics.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-av.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-av.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\{{ name }}\\\\{{ name }}-config.cmake exit 1  # [win]\n\nabout:\n  home: https://github.com/gazebosim/{{ repo_name }}\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: 'An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools.'\n\nextra:\n  feedstock-name: {{ repo_name }}\n  recipe-maintainers:\n    - Tobias-Fischer\n    - traversaro\n",
 "req": {
  "__set__": true,
  "elements": [
   "assimp",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "dlfcn-win32",
   "ffmpeg",
   "freeimage",
   "glib",
   "gts",
   "libgdal",
   "libgz-cmake3",
   "libgz-common5",
   "libgz-math7",
   "libgz-utils2",
   "libuuid",
   "ninja",
   "pkg-config",
   "tinyxml2"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "assimp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "dlfcn-win32",
    "ffmpeg",
    "freeimage",
    "glib",
    "gts",
    "libgdal",
    "libgz-cmake3",
    "libgz-math7",
    "libgz-utils2",
    "libuuid",
    "tinyxml2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgz-common5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "assimp",
    "dlfcn-win32",
    "ffmpeg",
    "freeimage",
    "glib",
    "gts",
    "libgdal",
    "libgz-cmake3",
    "libgz-math7",
    "libgz-utils2",
    "libuuid",
    "tinyxml2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgz-common5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz",
 "version": "5.0.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gazebosim/gz-common",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "gz-common",
   "recipe-maintainers": [
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "libgz-common5",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config"
     ],
     "host": [
      "libgz-math7",
      "libgz-cmake3",
      "libgz-utils2",
      "dlfcn-win32",
      "freeimage",
      "gts",
      "tinyxml2",
      "glib",
      "ffmpeg",
      "libgdal",
      "assimp"
     ]
    },
    "script": "bld_cxx.bat",
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common5\\\\gz\\\\common.hh exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-graphics.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-graphics.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-av.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-av.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common5\\\\gz-common5-config.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libgz-common5"
     ]
    },
    "name": "gz-common5",
    "requirements": {
     "run": [
      "libgz-common5"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common5\\\\gz\\\\common.hh exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-graphics.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-graphics.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common5-av.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common5-av.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common5\\\\gz-common5-config.cmake exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "gz-common5",
   "version": "5.0.0"
  },
  "source": [
   {
    "patches": [
     "macro_path_binary_relocation.patch"
    ],
    "sha256": "046552ca440fd9b8bcb2900da4bd0b9eacc1a5561373bdfae10e99d41536b159",
    "url": "https://github.com/gazebosim/gz-common/archive/gz-common5_5.0.0.tar.gz"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "assimp",
    "dlfcn-win32",
    "ffmpeg",
    "freeimage",
    "glib",
    "gts",
    "libgdal",
    "libgz-cmake3",
    "libgz-math7",
    "libgz-utils2",
    "tinyxml2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgz-common5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}