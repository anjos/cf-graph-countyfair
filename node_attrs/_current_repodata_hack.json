{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "_current_repodata_hack",
 "name": "_current_repodata_hack",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "_current_repodata_hack_gcc_linux_64_75",
   "_current_repodata_hack_gcc_linux_64_84",
   "_current_repodata_hack_gcc_linux_aarch64_75",
   "_current_repodata_hack_gcc_linux_aarch64_84",
   "_current_repodata_hack_gcc_linux_ppc64le_75",
   "_current_repodata_hack_gcc_linux_ppc64le_84"
  ]
 },
 "raw_meta_yaml": "package:\n  name: _current_repodata_hack\n  version: 0.0.3\n\nbuild:\n  number: 0\n\n\noutputs:\n  - name: _current_repodata_hack_gcc_linux_64_75\n    build:\n      skip: True  # [not (linux and x86_64)]\n    requirements:\n      run:\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\", \"libgcc-devel\", \"libstdcxx-devel\"] %}\n      - {{ cmp }}_linux-64 7.5.*\n      {% endfor %}\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\"] %}\n      - {{ cmp }}_impl_linux-64 7.5.*\n      {% endfor %}\n    test:\n      commands:\n        - echo \"hello\"\n\n  - name: _current_repodata_hack_gcc_linux_64_84\n    build:\n      skip: True  # [not (linux and x86_64)]\n    requirements:\n      run:\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\", \"libgcc-devel\", \"libstdcxx-devel\"] %}\n      - {{ cmp }}_linux-64 8.4.*\n      {% endfor %}\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\"] %}\n      - {{ cmp }}_impl_linux-64 8.4.*\n      {% endfor %}\n    test:\n      commands:\n        - echo \"hello\"\n  \n  - name: _current_repodata_hack_gcc_linux_aarch64_75\n    build:\n      skip: True  # [not (linux and (x86_64 or aarch64))]\n    requirements:\n      run:\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\", \"libgcc-devel\", \"libstdcxx-devel\"] %}\n      - {{ cmp }}_linux-aarch64 7.5.*\n      {% endfor %}\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\"] %}\n      - {{ cmp }}_impl_linux-aarch64 7.5.*\n      {% endfor %}\n    test:\n      commands:\n        - echo \"hello\"\n  \n  - name: _current_repodata_hack_gcc_linux_aarch64_84\n    build:\n      skip: True  # [not (linux and (x86_64 or aarch64))]\n    requirements:\n      run:\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\", \"libgcc-devel\", \"libstdcxx-devel\"] %}\n      - {{ cmp }}_linux-aarch64 8.4.*\n      {% endfor %}\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\"] %}\n      - {{ cmp }}_impl_linux-aarch64 8.4.*\n      {% endfor %}\n    test:\n      commands:\n        - echo \"hello\"\n  \n  - name: _current_repodata_hack_gcc_linux_ppc64le_75\n    build:\n      skip: True  # [not (linux and (x86_64 or ppc64le))]\n    requirements:\n      run:\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\", \"libgcc-devel\", \"libstdcxx-devel\"] %}\n      - {{ cmp }}_linux-ppc64le 7.5.*\n      {% endfor %}\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\"] %}\n      - {{ cmp }}_impl_linux-ppc64le 7.5.*\n      {% endfor %}\n    test:\n      commands:\n        - echo \"hello\"\n  \n  - name: _current_repodata_hack_gcc_linux_ppc64le_84\n    build:\n      skip: True  # [not (linux and (x86_64 or ppc64le))]\n    requirements:\n      run:\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\", \"libgcc-devel\", \"libstdcxx-devel\"] %}\n      - {{ cmp }}_linux-ppc64le 8.4.*\n      {% endfor %}\n      {% for cmp in [\"gcc\", \"gxx\", \"gfortran\"] %}\n      - {{ cmp }}_impl_linux-ppc64le 8.4.*\n      {% endfor %}\n    test:\n      commands:\n        - echo \"hello\"\n\nabout:\n  home: https://github.com/conda-forge/_current_repodata_hack-feedstock\n  license: LicenseRef-OTHER\n  summary: Meta-package to fix current_repodata\n  description: |\n    As of writing, conda-forge has versions of the linux compilers that are ahead of the \n    ones in the global pinnings. The current_repodata.json file only pulls in the latest \n    version of a package by default. Thus anytime one asks for the compilers in the pinnings,\n    the solver will always fail on current_repodata.json and have to pull all of the repodata. \n    The packages here make sure the latest versions of the compilers we use are in \n    current_repodata.json by depending on those packages. Thus it solves the solver inefficiency. \n    It also helps in cases when the solver appears to pull older builds of the compilers when they are \n    not explicitly asked for in the environment.\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "strong_exports": false,
 "version": "0.0.3"
}