{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0a0_20170929a0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/204211947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215184838.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/352508461.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.6-modified"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35",
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "oommf",
 "hash_type": "sha256",
 "name": "oommf",
 "new_version": "12.6-modified",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "oommf"
  ]
 },
 "pinning_version": "2019.12.02",
 "raw_meta_yaml": "package:\n  name: oommf\n  version: \"2.0a3\"\n\nsource:\n   url: https://github.com/fangohr/oommf/archive/20a3_20210930.tar.gz\n   sha256: 880242afdf4c84de7f2a3c42ab0ad8c354028a7d2d3c3160980cf3e08e285691\n   patches:\n     - mmarchive.patch\n     - oc.patch\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}  # [linux]\n    - {{ cdt('libxau') }}  # [linux]\n    - {{ cdt('libxcb') }}  # [linux]\n    - xorg-libx11  # [linux]\n    - make  # [linux]\n    - zlib  # [linux]\n  host:\n    - tk\n  run:\n    - tk\n    - xorg-libx11  # [linux]\n\ntest:\n  commands:\n    - oommf boxsi +fg ${PREFIX}/opt/oommf/app/oxs/examples/stdprob4.mif -exitondone 1  # [unix]\n    - oommf boxsi +fg %PREFIX%\\Library\\opt\\oommf\\app\\oxs\\examples\\stdprob4.mif -exitondone 1  # [win]\n\nabout:\n  home: http://math.nist.gov/oommf/\n  license_file: oommf/LICENSE\n  license: Custom\n  summary: 'Object Oriented MicroMagnetic Framework (OOMMF)'\n  description: |\n    The Object Oriented MicroMagnetic Framework (OOMMF) forms a completely\n    functional micromagnetics package. OOMMF is written in C++. For portable user\n    interfaces, it uses Tcl/Tk so that OOMMF operates across a wide range of Unix,\n    Windows, and MacOS platforms.\n\n    The recipe for building this OOMMF conda package was developed by Martin Lang,\n    Thomas Kluyver, Ryan A. Pepper, Marijan Beg, and Hans Fangohr at the University\n    of Southampton, Max Planck Institute for the Structure and Dynamics of Matter,\n    European XFEL, and Imperial College London as a part of OpenDreamKit \u2013 Horizon\n    2020 European Research Infrastructure project (676541) and EPSRC Programme Grant\n    on Skyrmionics (EP/N032128/1).\n\n    This package contains Dzyaloshinskii-Moriya extensions for Cnv, T(O), and D2d\n    crystallographic classes as well as magneto-elastic energy term. These\n    extensions are not included in the OOMMF binaries and tarballs provided by NIST.\n    More information can be found at https://github.com/fangohr/oommf.\n  dev_url: https://github.com/fangohr/oommf\n  doc_url: http://math.nist.gov/oommf/doc/\n\nextra:\n  recipe-maintainers:\n    - lang-m\n    - fangohr\n    - marijanbeg\n    - davidcortesortuno\n",
 "smithy_version": "3.6.3",
 "strong_exports": false,
 "url": "https://github.com/fangohr/oommf/archive/20a3_20210930.tar.gz",
 "version": "2.0a3"
}