{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20131225"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198459247.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203891360.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Pinning",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215787320.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/254598223.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546025199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "x264",
 "hash_type": "sha256",
 "name": "x264",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "x264"
  ]
 },
 "pinning_version": "2020.12.28.08.15.01",
 "raw_meta_yaml": "{% set so_number = '164' %}\n{% set epoch = '1' %}\n{% set version_prefix = epoch + '!' + so_number %}\n{% set revision = '3095' %}\n{% set version = version_prefix + '.' + revision %}\n# This is revision 3095. (git rev-list HEAD | wc -l)\n{% set commit = \"baee400fa9ced6f5481a728138fed6e867b0ff7f\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: x264\n  version: {{ version }}\n\nsource:\n  # need to use the git source to make version.sh in source work\n  - url: https://code.videolan.org/videolan/x264/-/archive/{{ commit }}/x264-{{ commit }}.tar.gz\n    sha256: 436a2be54d8bc0cb05dd33ecbbcb7df9c3b57362714fcdaa3a5991189a33319b\n    patches:\n      - libname_windows.patch\n  # 2022/07 hmaarrfk\n  # x264 attempts to detect the version from the git information.\n  # however, installing (and using) git on windows is tricky\n  # with m2- tools installed in parallel.\n  # Since the version file is easy to recreate, we use\n  # a thin stub of a file, along with exporting a few variables\n  # from this recipe as environment variables in the build process\n  # to recreate it\n  - path: version.sh\n\nbuild:\n  number: 0\n  run_exports:\n    - x264 >={{ version }},<{{ epoch + '!' }}{{ so_number|int + 1 }}\n  script_env:\n    - X264_REV={{ revision }}\n    - X264_VERSION=r{{ revision }} {{ commit[:7] }}\n    - X264_POINTVER=0.{{ so_number }}.{{ revision }} {{ commit[:7] }}\n\nrequirements:\n  build:\n    - gnuconfig  # [unix]\n    - {{ compiler(\"c\") }}\n    - perl\n    - nasm\n    - make\n    - {{ posix }}bash  # [win]\n    - {{ posix }}coreutils  # [win]\n    - {{ posix }}grep  # [win]\n    - {{ posix }}sed  # [win]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/x264.h                     # [unix]\n    - test ! -f ${PREFIX}/lib/libx264.a                    # [unix]\n    - test -f ${PREFIX}/lib/libx264${SHLIB_EXT}            # [unix]\n    - test -f ${PREFIX}/lib/libx264.{{ so_number }}.dylib  # [osx]\n    - test -f ${PREFIX}/lib/libx264.so.{{ so_number }}     # [linux]\n    - if not exist %LIBRARY_INC%\\\\x264.h exit 1            # [win]\n    - if not exist %LIBRARY_BIN%\\\\libx264-{{ so_number }}.dll exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\libx264.lib exit 1       # [win]\n    - if not exist %LIBRARY_LIB%\\\\x264.lib exit 1          # [win]\n    - x264 --help\n\nabout:\n  home: http://www.videolan.org/developers/x264.html\n  license: GPL-2.0\n  license_file: COPYING\n  summary: A free software library for encoding video streams into the H.264/MPEG-4 AVC format.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - 183amir\n    - carlodri\n    - sdvillal\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://code.videolan.org/videolan/x264/-/archive/baee400fa9ced6f5481a728138fed6e867b0ff7f/x264-baee400fa9ced6f5481a728138fed6e867b0ff7f.tar.gz",
 "version": "1!164.3095"
}