{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "gdal-3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375194538.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pysw4",
 "hash_type": "sha256",
 "name": "pysw4",
 "new_version": "0.3.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pysw4"
  ]
 },
 "pinning_version": "2020.02.12",
 "raw_meta_yaml": "{% set name = \"pySW4\" %}\n{% set version = \"0.3.0\" %}\n{% set sha256 = \"b14bb605da99ffb557fe1742914207beb876602bb69576b95fc1176304b6c58a\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/shaharkadmiel/pySW4/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 1\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  entry_points:\n    - pySW4-plot-image = pySW4.cli.plot_image:main\n    - pySW4-create-plots = pySW4.cli.create_all_plots:main\n    - png2mp4 = pySW4.cli.png2mp4:main\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - python\n    - obspy >=1.0.3\n    - numpy\n    - scipy\n    - matplotlib-base\n    - pyproj\n    - gdal 2.*\n\ntest:\n  imports:\n    - pySW4\n  commands:\n    - pySW4-plot-image --help\n    - pySW4-create-plots --help\n    - png2mp4 --help\n\nabout:\n  home: https://github.com/shaharkadmiel/pySW4/\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: 'Setup, run, post process, and visualize numerical simulations. Primarily SW4'\n\n  description: |\n    pySW4 is an open-source project dedicated to provide a Python framework for working with numerical simulations of seismic-wave propagation with SW4 in all phases of the task (preprocessing, post-processing and runtime visualization).\n  doc_url: http://shaharkadmiel.github.io/pySW4/\n  dev_url: https://github.com/shaharkadmiel/pySW4/\n\nextra:\n  recipe-maintainers:\n    - shaharkadmiel\n    - megies\n",
 "smithy_version": "3.6.8",
 "strong_exports": false,
 "url": "https://github.com/shaharkadmiel/pySW4/archive/v0.3.0.tar.gz",
 "version": "0.3.0"
}