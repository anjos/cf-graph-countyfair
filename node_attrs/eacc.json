{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "eacc",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Python Eacc is a parsing tool it implements a flexible lexer and a\n straightforward approach to analyze documents. It uses Python code\n to specify both lexer and grammar for a given document. Eacc can\n handle succinctly most parsing cases that existing Python parsing\n tools propose to address.\n",
   "doc_url": "https://github.com/iogf/eacc/wiki",
   "home": "https://github.com/iogf/eacc",
   "license": "AGPL-3.0-or-later",
   "license_file": "LICENSE",
   "summary": "Eacc-like parsing tools."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan"
   ]
  },
  "package": {
   "name": "eacc",
   "version": "3.1.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": {
   "sha256": "eef770cce038a614282111617370fe32960daf7d2ccbcf380136667d348352f7",
   "url": "https://pypi.io/packages/source/e/eacc/eacc-3.1.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "eacc"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Python Eacc is a parsing tool it implements a flexible lexer and a\n straightforward approach to analyze documents. It uses Python code\n to specify both lexer and grammar for a given document. Eacc can\n handle succinctly most parsing cases that existing Python parsing\n tools propose to address.\n",
   "doc_url": "https://github.com/iogf/eacc/wiki",
   "home": "https://github.com/iogf/eacc",
   "license": "AGPL-3.0-or-later",
   "license_file": "LICENSE",
   "summary": "Eacc-like parsing tools."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan"
   ]
  },
  "package": {
   "name": "eacc",
   "version": "3.1.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": {
   "sha256": "eef770cce038a614282111617370fe32960daf7d2ccbcf380136667d348352f7",
   "url": "https://pypi.io/packages/source/e/eacc/eacc-3.1.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "eacc"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "eacc",
 "new_version": "3.1.6",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "eacc"
  ]
 },
 "raw_meta_yaml": "{% set name = \"eacc\" %}\n{% set version = \"3.1.6\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/eacc-{{ version }}.tar.gz\n  sha256: eef770cce038a614282111617370fe32960daf7d2ccbcf380136667d348352f7\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n\ntest:\n  imports:\n    - eacc\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/iogf/eacc\n  doc_url: https://github.com/iogf/eacc/wiki\n  summary: Eacc-like parsing tools.\n  license: AGPL-3.0-or-later\n  license_file: LICENSE\n  description: |\n    Python Eacc is a parsing tool it implements a flexible lexer and a\n     straightforward approach to analyze documents. It uses Python code\n     to specify both lexer and grammar for a given document. Eacc can\n     handle succinctly most parsing cases that existing Python parsing\n     tools propose to address.\n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/e/eacc/eacc-3.1.6.tar.gz",
 "version": "3.1.6"
}