{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/349601377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Replacement",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pydv",
 "hash_type": "sha256",
 "name": "pydv",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pydv"
  ]
 },
 "pinning_version": "2019.12.02",
 "raw_meta_yaml": "{% set name = \"pydv\" %}\n{% set version = \"0.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://git.ligo.org/cds/software/pydv/-/archive/{{ version }}/pydv-{{ version }}.tar.gz\n  sha256: 829e15a6b801bf5785c1a71e9ae92fb03aeaaaa994c661b16e21113f5f068346\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n  entry_points:\n    - pydv = pydv.__main__:main\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools\n  run:\n    - gpstime\n    - matplotlib-base\n    - numpy\n    - python >=3.6\n    - python-nds2-client\n\ntest:\n  imports:\n    - pydv\n    - pydv.bufferdict\n    - pydv.const\n    - pydv.plotting\n    - pydv.util\n  commands:\n    - pydv --help\n\nabout:\n  home: https://git.ligo.org/cds/software/pydv/\n  dev_url: https://git.ligo.org/cds/software/pydv/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: NDS timeseries plotting utility\n  description: |\n    Python library for creating time series plots of LIGO data retrieved\n    using the LIGO NDS services.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - jrollins\n    - evonreis\n",
 "smithy_version": "3.6.3",
 "strong_exports": false,
 "url": "https://git.ligo.org/cds/software/pydv/-/archive/0.2.1/pydv-0.2.1.tar.gz",
 "version": "0.2.1"
}