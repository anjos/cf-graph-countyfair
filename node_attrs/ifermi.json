{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/695142061.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "ifermi",
 "hash_type": "sha256",
 "name": "ifermi",
 "new_version": "0.3.0",
 "new_version_attempts": {
  "0.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ifermi"
  ]
 },
 "pinning_version": "2021.07.22.10.53.36",
 "raw_meta_yaml": "{% set name = \"ifermi\" %}\n{% set version = \"0.3.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/ifermi-{{ version }}.tar.gz\n  sha256: 9077961cde4f1803f0bb36ed8a6f2dc24d623bfff3fb4a6688b6c415873417f9\n\nbuild:\n  number: 0\n  entry_points:\n    - ifermi = ifermi.cli:cli\n  script: {{ PYTHON }} -m pip install . -vv\n  noarch: python\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - boltztrap2\n    - click\n    - dataclasses >=0.6\n    - matplotlib-base\n    - meshcut\n    - monty\n    - networkx\n    - numpy\n    - plotly\n    - psutil\n    - pyfftw\n    - pymatgen >=2017.12.30\n    - python >=3.6\n    - scikit-image\n    - scipy\n    - spglib\n    - tabulate\n    - trimesh\n\ntest:\n  imports:\n    - ifermi\n    - ifermi.tests\n  commands:\n    - pip check\n    - ifermi --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/fermisurfaces/IFermi\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Fermi surface generation, analysis and visualisation.\n  description: |\n    IFermi is a Python (3.6+) library and set of command-line tools for\n    the generation, analysis, and visualisation of Fermi surfaces and\n    Fermi slices. The goal of the library is to provide fully featured\n    FermiSurface and FermiSlice objects that allow for easy manipulation\n    and analysis.\n  doc_url: https://fermisurfaces.github.io/IFermi\n  dev_url: https://github.com/fermisurfaces/IFermi\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/ifermi/ifermi-0.3.0.tar.gz",
 "version": "0.3.0"
}