{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/219925229.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222712516.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/307826418.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/350738934.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/351000320.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/361348173.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472838437.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/475836948.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/596104146.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646148908.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646215936.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1183009561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1183572867.json"
   },
   "data": {
    "bot_rerun": 1672793393.326566,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1184237256.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pydocstyle",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "pydocstyle is a static analysis tool for checking compliance with Python\ndocstring conventions. pydocstyle supports most of PEP 257 out of the box,\nbut it should not be considered a reference implementation.\nThe framework for checking docstring style is flexible, and custom checks\ncan be easily added, for example to cover NumPy docstring conventions.\npydocstyle supports Python 3.4, 3.5, 3.6, and 3.7.\n",
   "dev_url": "https://github.com/PyCQA/pydocstyle",
   "doc_url": "http://pydocstyle.readthedocs.org",
   "home": "https://github.com/PyCQA/pydocstyle",
   "license": "MIT",
   "license_file": "LICENSE-MIT",
   "summary": "Python docstring style checker (formerly pep257)"
  },
  "build": {
   "entry_points": [
    "pydocstyle = pydocstyle.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "goanpeca",
    "jakirkham",
    "Nurdok",
    "dopplershift"
   ]
  },
  "package": {
   "name": "pydocstyle",
   "version": "6.2.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6",
    "poetry-core"
   ],
   "run": [
    "python >=3.6",
    "snowballstemmer >=2.2.0",
    "importlib-metadata >=2.0.0,<5.0.0"
   ]
  },
  "source": {
   "sha256": "b2d280501a4c0d9feeb96e9171dc3f6f7d0064c55270f4c7b1baa18452019fd9",
   "url": "https://pypi.io/packages/source/p/pydocstyle/pydocstyle-6.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "pydocstyle --version"
   ],
   "imports": [
    "pydocstyle"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib-metadata",
    "python",
    "snowballstemmer"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "pydocstyle is a static analysis tool for checking compliance with Python\ndocstring conventions. pydocstyle supports most of PEP 257 out of the box,\nbut it should not be considered a reference implementation.\nThe framework for checking docstring style is flexible, and custom checks\ncan be easily added, for example to cover NumPy docstring conventions.\npydocstyle supports Python 3.4, 3.5, 3.6, and 3.7.\n",
   "dev_url": "https://github.com/PyCQA/pydocstyle",
   "doc_url": "http://pydocstyle.readthedocs.org",
   "home": "https://github.com/PyCQA/pydocstyle",
   "license": "MIT",
   "license_file": "LICENSE-MIT",
   "summary": "Python docstring style checker (formerly pep257)"
  },
  "build": {
   "entry_points": [
    "pydocstyle = pydocstyle.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "goanpeca",
    "jakirkham",
    "Nurdok",
    "dopplershift"
   ]
  },
  "package": {
   "name": "pydocstyle",
   "version": "6.2.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6",
    "poetry-core"
   ],
   "run": [
    "python >=3.6",
    "snowballstemmer >=2.2.0",
    "importlib-metadata >=2.0.0,<5.0.0"
   ]
  },
  "source": {
   "sha256": "b2d280501a4c0d9feeb96e9171dc3f6f7d0064c55270f4c7b1baa18452019fd9",
   "url": "https://pypi.io/packages/source/p/pydocstyle/pydocstyle-6.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "pydocstyle --version"
   ],
   "imports": [
    "pydocstyle"
   ]
  }
 },
 "name": "pydocstyle",
 "new_version": "6.2.2",
 "new_version_attempts": {
  "5.1.0": 32,
  "5.1.1": 1,
  "6.0.0": 1,
  "6.1.0": 1,
  "6.1.1": 1,
  "6.2.0": 1,
  "6.2.1": 1,
  "6.2.2": 1
 },
 "new_version_errors": {
  "5.1.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '5.1.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pydocstyle"
  ]
 },
 "pinning_version": "2023.01.03.13.13.01",
 "raw_meta_yaml": "{% set name = \"pydocstyle\" %}\n{% set version = \"6.2.0\" %}\n{% set hash = \"b2d280501a4c0d9feeb96e9171dc3f6f7d0064c55270f4c7b1baa18452019fd9\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ hash }}\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  number: 0\n  entry_points:\n    - pydocstyle = pydocstyle.cli:main\n\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - poetry-core\n\n  run:\n    - python >=3.6\n    - snowballstemmer >=2.2.0\n    - importlib-metadata >=2.0.0,<5.0.0\n\ntest:\n  imports:\n    - pydocstyle\n  commands:\n    - pydocstyle --version\n\nabout:\n  home: https://github.com/PyCQA/pydocstyle\n  license: MIT\n  license_file: LICENSE-MIT\n  summary: Python docstring style checker (formerly pep257)\n  description: |\n    pydocstyle is a static analysis tool for checking compliance with Python\n    docstring conventions. pydocstyle supports most of PEP 257 out of the box,\n    but it should not be considered a reference implementation.\n    The framework for checking docstring style is flexible, and custom checks\n    can be easily added, for example to cover NumPy docstring conventions.\n    pydocstyle supports Python 3.4, 3.5, 3.6, and 3.7.\n  doc_url: http://pydocstyle.readthedocs.org\n  dev_url: https://github.com/PyCQA/pydocstyle\n\nextra:\n  recipe-maintainers:\n    - goanpeca\n    - jakirkham\n    - Nurdok\n    - dopplershift\n",
 "req": {
  "__set__": true,
  "elements": [
   "importlib-metadata",
   "pip",
   "poetry-core",
   "python",
   "snowballstemmer"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib-metadata",
    "python",
    "snowballstemmer"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib-metadata >=2.0.0,<5.0.0",
    "python >=3.6",
    "snowballstemmer >=2.2.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pydocstyle/pydocstyle-6.2.0.tar.gz",
 "version": "6.2.0"
}