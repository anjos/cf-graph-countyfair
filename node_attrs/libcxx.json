{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/198232334.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199662984.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216617161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224538014.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/238893962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263083648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269409164.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335476023.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349179346.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375719107.json"
   },
   "data": {
    "bot_rerun": 1581808085.6738896,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11-init"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400243969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454894330.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/463562892.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482161494.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501447296.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libcxx",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "libcxx/LICENSE.TXT",
   "summary": "LLVM C++ standard library"
  },
  "build": {
   "ignore_run_exports": [
    "libstdcxx-ng"
   ],
   "missing_dso_whitelist": [
    "/usr/lib/libc++abi.dylib"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder"
   ]
  },
  "outputs": [
   {
    "files": [
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name": "libcxx",
    "requirements": {
     "run": [
      "libcxxabi"
     ]
    },
    "test": {
     "commands": [
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "test -f $PREFIX/lib/libc++abi.so"
     ],
     "files": [
      "test_sources",
      "compile_test.sh"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": null,
    "files": [
     "lib/libc++abi.*"
    ],
    "name": "libcxxabi",
    "requirements": {
     "run_constrained": [
      "libcxx 11.0.0.*"
     ]
    },
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libc++abi.so"
     ]
    }
   }
  ],
  "package": {
   "name": "libcxx_and_libcxxabi",
   "version": "11.0.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "python >3"
   ],
   "host": [
    "clangdev 11.0.0",
    "llvmdev 11.0.0"
   ]
  },
  "source": [
   {
    "patches": null,
    "sha256": "b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "llvmdev"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxxabi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "libcxx/LICENSE.TXT",
   "summary": "LLVM C++ standard library"
  },
  "build": {
   "ignore_run_exports": [
    "libstdcxx-ng",
    "libstdcxx-ng",
    "libstdcxx-ng"
   ],
   "missing_dso_whitelist": [
    "/usr/lib/libc++abi.dylib",
    "/usr/lib/libc++abi.dylib",
    "/usr/lib/libc++abi.dylib"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder",
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder",
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder"
   ]
  },
  "outputs": [
   {
    "files": [
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name": "libcxx",
    "requirements": {
     "run": [
      "libcxxabi"
     ]
    },
    "test": {
     "commands": [
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "test -f $PREFIX/lib/libc++abi.so"
     ],
     "files": [
      "test_sources",
      "compile_test.sh"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": null,
    "files": [
     "lib/libc++abi.*"
    ],
    "name": "libcxxabi",
    "requirements": {
     "run_constrained": [
      "libcxx 11.0.0.*"
     ]
    },
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libc++abi.so"
     ]
    }
   },
   {
    "files": [
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name": "libcxx",
    "test": {
     "commands": [
      "echo 0",
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi"
     ],
     "downstreams": [
      "python-symengine",
      "openturns",
      "libcxx-testing"
     ],
     "files": [
      "test_sources",
      "compile_test.sh"
     ],
     "requires": [
      "clang",
      "clangxx",
      "ld64",
      "cctools",
      "llvm-tools"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "files": [
     "lib/libc++abi.*"
    ],
    "name": "libcxxabi",
    "requirements": {
     "run_constrained": [
      "libcxx 11.0.0.*"
     ]
    },
    "test": {
     "commands": null
    }
   },
   {
    "files": [
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name": "libcxx",
    "test": {
     "commands": [
      "echo 1",
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi"
     ],
     "downstreams": [
      "python-symengine",
      "openturns",
      "libcxx-testing"
     ],
     "files": [
      "test_sources",
      "compile_test.sh"
     ],
     "requires": [
      "clang",
      "clangxx",
      "ld64",
      "cctools",
      "llvm-tools"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "files": [
     "lib/libc++abi.*"
    ],
    "name": "libcxxabi",
    "requirements": {
     "run_constrained": [
      "libcxx 11.0.0.*"
     ]
    },
    "test": {
     "commands": null
    }
   }
  ],
  "package": {
   "name": "libcxx_and_libcxxabi",
   "version": "11.0.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "python >3",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub"
   ],
   "host": [
    "clangdev 11.0.0",
    "llvmdev 11.0.0"
   ]
  },
  "source": [
   {
    "patches": null,
    "sha256": "b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz"
   },
   {
    "patches": [
     "libcxxabi_10.9_compatibility.diff",
     "libcxx_10.9_compatibility.patch"
    ],
    "sha256": "b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz"
   },
   {
    "patches": null,
    "sha256": "b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz"
   }
  ]
 },
 "name": "libcxx_and_libcxxabi",
 "new_version": "11.0.1",
 "new_version_attempts": {
  "10.0.0": 31,
  "10.0.1": 1,
  "11.0.0": 1,
  "11.0.1": 12
 },
 "new_version_errors": {
  "11.0.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '11.0.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.tar.xz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "libcxx/LICENSE.TXT",
   "summary": "LLVM C++ standard library"
  },
  "build": {
   "ignore_run_exports": [
    "libstdcxx-ng"
   ],
   "missing_dso_whitelist": [
    "/usr/lib/libc++abi.dylib"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder"
   ]
  },
  "outputs": [
   {
    "files": [
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name": "libcxx",
    "test": {
     "commands": [
      "echo 0",
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi"
     ],
     "downstreams": [
      "python-symengine",
      "openturns",
      "libcxx-testing"
     ],
     "files": [
      "test_sources",
      "compile_test.sh"
     ],
     "requires": [
      "clang",
      "clangxx",
      "ld64",
      "cctools",
      "llvm-tools"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "files": [
     "lib/libc++abi.*"
    ],
    "name": "libcxxabi",
    "requirements": {
     "run_constrained": [
      "libcxx 11.0.0.*"
     ]
    },
    "test": {
     "commands": null
    }
   }
  ],
  "package": {
   "name": "libcxx_and_libcxxabi",
   "version": "11.0.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub"
   ],
   "host": []
  },
  "source": [
   {
    "patches": [
     "libcxxabi_10.9_compatibility.diff",
     "libcxx_10.9_compatibility.patch"
    ],
    "sha256": "b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "cctools",
    "clang",
    "clangxx",
    "ld64",
    "llvm-tools"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "libcxx/LICENSE.TXT",
   "summary": "LLVM C++ standard library"
  },
  "build": {
   "ignore_run_exports": [
    "libstdcxx-ng"
   ],
   "missing_dso_whitelist": [
    "/usr/lib/libc++abi.dylib"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder"
   ]
  },
  "outputs": [
   {
    "files": [
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name": "libcxx",
    "test": {
     "commands": [
      "echo 1",
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi"
     ],
     "downstreams": [
      "python-symengine",
      "openturns",
      "libcxx-testing"
     ],
     "files": [
      "test_sources",
      "compile_test.sh"
     ],
     "requires": [
      "clang",
      "clangxx",
      "ld64",
      "cctools",
      "llvm-tools"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "files": [
     "lib/libc++abi.*"
    ],
    "name": "libcxxabi",
    "requirements": {
     "run_constrained": [
      "libcxx 11.0.0.*"
     ]
    },
    "test": {
     "commands": null
    }
   }
  ],
  "package": {
   "name": "libcxx_and_libcxxabi",
   "version": "11.0.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub"
   ],
   "host": []
  },
  "source": [
   {
    "patches": null,
    "sha256": "b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "cctools",
    "clang",
    "clangxx",
    "ld64",
    "llvm-tools"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libcxx",
   "libcxxabi"
  ]
 },
 "pinning_version": "2020.10.11.15.10.22",
 "raw_meta_yaml": "{% set version = \"11.0.0\" %}\n\npackage:\n  name: libcxx_and_libcxxabi\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.tar.xz\n    sha256: b7b639fc675fa1c86dd6d0bc32267be9eb34451748d2efd03f674b773000e92b\n    patches:\n      - libcxxabi_10.9_compatibility.diff   # [osx and x86_64]\n      - libcxx_10.9_compatibility.patch   # [osx and x86_64]\n\nbuild:\n  number: 1\n  skip: true  # [win and vc<14]\n  skip: true  # [win]\n  skip: true  # [ppc64le or aarch64]\n  ignore_run_exports:\n    - libstdcxx-ng\n  missing_dso_whitelist:\n    - /usr/lib/libc++abi.dylib\n\nrequirements:\n  build:\n    - cmake\n    - make                    # [unix]\n    - {{ compiler('cxx') }}\n    - python >3               # [not osx]\n  host:\n    - clangdev {{ version }}  # [not osx]\n    - llvmdev {{ version }}   # [not osx]\n\noutputs:\n  - name: libcxx\n    files:\n      - include/c++\n      - Library/include/c++\n      - lib/libc++.*\n      - lib/libc++fs.*\n      - lib/libc++experimental.*\n      - Library/bin/c++*.dll\n      - Library/lib/c++*.lib\n      - Library/lib/libc++*.lib\n    requirements:   # [linux]\n      run:   # [linux]\n        - {{ pin_subpackage(\"libcxxabi\", exact=True) }}    # [linux]\n    test:\n      requires:\n        - clang                  # [osx]\n        - clangxx\n        - ld64                   # [osx]\n        - cctools                # [osx]\n        - llvm-tools             # [osx]\n        - {{ compiler('cxx') }}  # [not osx]\n      files:\n        - test_sources\n        - compile_test.sh   # [unix]\n        - compile_test.bat  # [win]\n      commands:\n        # Dummy var for different hashes\n        - echo {{ dummy_var }}   # [osx]\n        - if not exist %LIBRARY_INC%\\\\c++\\\\v1\\\\iterator exit 1     # [win]\n        - test -f $PREFIX/include/c++/v1/iterator      # [unix]\n        - bash compile_test.sh   # [unix]\n        - compile_test.bat       # [win]\n        # !!!!!!!!!!!! README !!!!!!!!!!!!!!!!!!\n        # we do not ship libcxxabi on OSX - this breaks exception passing\n        - if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi  # [osx]\n        - test -f $PREFIX/lib/libc++abi.so  # [linux]\n\n      # Following 2 projects had issues with libc++, so check them\n      # before releasing just to be sure.\n      downstreams:   # [osx]\n        - python-symengine  # [osx]\n        - openturns         # [osx]\n        - libcxx-testing    # [osx]\n\n  - name: libcxxabi\n    build:\n      skip: true  # [not linux]\n    files:\n      - lib/libc++abi.*\n    requirements:\n      run_constrained:\n        - libcxx {{ version }}.*\n    test:\n      commands:\n        - test -f $PREFIX/lib/libc++abi.so  # [linux]\n\nabout:\n  home: http://llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: libcxx/LICENSE.TXT\n  license_family: Apache\n  summary: LLVM C++ standard library\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - inducer\n    - jakirkham\n    - isuruf\n    - beckermr\n    - timsnyder\n",
 "req": {
  "__set__": true,
  "elements": [
   "clangdev",
   "cmake",
   "cxx_compiler_stub",
   "libcxxabi",
   "llvmdev",
   "make",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cxx_compiler_stub",
    "llvmdev"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libcxxabi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cctools",
    "clang",
    "clangxx",
    "cxx_compiler_stub",
    "ld64",
    "llvm-tools"
   ]
  }
 },
 "smithy_version": "3.8.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python >3"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev 11.0.0",
    "llvmdev 11.0.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxxabi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cctools",
    "clang",
    "clangxx",
    "cxx_compiler_stub",
    "ld64",
    "llvm-tools"
   ]
  }
 },
 "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz",
 "version": "11.0.0"
}