{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/364262174.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/473565804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/504241907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560317657.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/781284876.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1113919198.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "fortran_kernel",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "LFortran is a modern open-source (BSD licensed) interactive Fortran\ncompiler built on top of LLVM. It can execute user's code interactively to\nallow exploratory work (much like Python, MATLAB or Julia) as well as\ncompile to binaries with the goal to run user\u2019s code on modern\narchitectures such as multi-core CPUs and GPUs.\n\nThis package provides the Jupyter kernel.\n",
   "dev_url": "https://gitlab.com/lfortran/fortran_kernel",
   "doc_url": "https://docs.lfortran.org/",
   "home": "https://lfortran.org",
   "license": "BSD-3",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Fortran Jupyter kernel based on LFortran"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "certik",
    "certik",
    "certik"
   ]
  },
  "package": {
   "name": "fortran_kernel",
   "version": "0.1.7"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel"
   ],
   "run": [
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "62838595ff707ad34100834ac545faf35feb5884ebde552f4b4ed56aeee08dfe",
   "url": "https://gitlab.com/lfortran/fortran_kernel/-/archive/v0.1.7/fortran_kernel-v0.1.7.tar.bz2"
  },
  "test": {
   "commands": [
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel"
   ],
   "imports": [
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel"
   ],
   "requires": [
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "jupyter_kernel_test",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "LFortran is a modern open-source (BSD licensed) interactive Fortran\ncompiler built on top of LLVM. It can execute user's code interactively to\nallow exploratory work (much like Python, MATLAB or Julia) as well as\ncompile to binaries with the goal to run user\u2019s code on modern\narchitectures such as multi-core CPUs and GPUs.\n\nThis package provides the Jupyter kernel.\n",
   "dev_url": "https://gitlab.com/lfortran/fortran_kernel",
   "doc_url": "https://docs.lfortran.org/",
   "home": "https://lfortran.org",
   "license": "BSD-3",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Fortran Jupyter kernel based on LFortran"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m fortran_kernel.install --prefix %PREFIX%",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m fortran_kernel.install --prefix %PREFIX%",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m fortran_kernel.install --prefix %PREFIX%"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "certik",
    "certik",
    "certik",
    "certik",
    "certik",
    "certik",
    "certik",
    "certik",
    "certik"
   ]
  },
  "package": {
   "name": "fortran_kernel",
   "version": "0.1.7"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel"
   ],
   "run": [
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel"
   ]
  },
  "source": {
   "patches": [
    "win.patch",
    "win.patch",
    "win.patch"
   ],
   "sha256": "62838595ff707ad34100834ac545faf35feb5884ebde552f4b4ed56aeee08dfe",
   "url": "https://gitlab.com/lfortran/fortran_kernel/-/archive/v0.1.7/fortran_kernel-v0.1.7.tar.bz2"
  },
  "test": {
   "commands": [
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel"
   ],
   "imports": [
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel"
   ],
   "requires": [
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test"
   ]
  }
 },
 "name": "fortran_kernel",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "LFortran is a modern open-source (BSD licensed) interactive Fortran\ncompiler built on top of LLVM. It can execute user's code interactively to\nallow exploratory work (much like Python, MATLAB or Julia) as well as\ncompile to binaries with the goal to run user\u2019s code on modern\narchitectures such as multi-core CPUs and GPUs.\n\nThis package provides the Jupyter kernel.\n",
   "dev_url": "https://gitlab.com/lfortran/fortran_kernel",
   "doc_url": "https://docs.lfortran.org/",
   "home": "https://lfortran.org",
   "license": "BSD-3",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Fortran Jupyter kernel based on LFortran"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m fortran_kernel.install --prefix $PREFIX"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "certik",
    "certik",
    "certik"
   ]
  },
  "package": {
   "name": "fortran_kernel",
   "version": "0.1.7"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel"
   ],
   "run": [
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "62838595ff707ad34100834ac545faf35feb5884ebde552f4b4ed56aeee08dfe",
   "url": "https://gitlab.com/lfortran/fortran_kernel/-/archive/v0.1.7/fortran_kernel-v0.1.7.tar.bz2"
  },
  "test": {
   "commands": [
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel"
   ],
   "imports": [
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel"
   ],
   "requires": [
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "jupyter_kernel_test",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fortran_kernel"
  ]
 },
 "pinning_version": "2022.11.08.03.00.11",
 "pre_pr_migrator_attempts": {
  "pypy38": 2
 },
 "pre_pr_migrator_status": {
  "pypy38": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3945489521\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 340, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"fortran_kernel\" %}\n{% set version = \"0.1.7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/lfortran/{{ name }}/-/archive/v{{ version }}/{{ name }}-v{{ version }}.tar.bz2\n  sha256: 62838595ff707ad34100834ac545faf35feb5884ebde552f4b4ed56aeee08dfe\n  patches:\n    - win.patch  # [win]\n\nbuild:\n  number: 0\n  script:\n    - \"{{ PYTHON }} -m pip install . -vv\"\n    - \"{{ PYTHON }} -m fortran_kernel.install --prefix $PREFIX\"  # [not win]\n    - \"{{ PYTHON }} -m fortran_kernel.install --prefix %PREFIX%\"  # [win]\n  skip: True  # [py<36]\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools\n    - lfortran\n    - ipykernel\n  run:\n    - python\n    - lfortran\n    - ipykernel\n\ntest:\n  imports:\n    - fortran_kernel\n  requires:\n    - pytest\n    - jupyter_kernel_test\n  commands:\n    - jupyter kernelspec list --json\n    - pytest --disable-warnings --pyargs fortran_kernel\n\nabout:\n  home: https://lfortran.org\n  license: BSD-3\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Fortran Jupyter kernel based on LFortran'\n  description: |\n    LFortran is a modern open-source (BSD licensed) interactive Fortran\n    compiler built on top of LLVM. It can execute user's code interactively to\n    allow exploratory work (much like Python, MATLAB or Julia) as well as\n    compile to binaries with the goal to run user\u2019s code on modern\n    architectures such as multi-core CPUs and GPUs.\n\n    This package provides the Jupyter kernel.\n  doc_url: https://docs.lfortran.org/\n  dev_url: https://gitlab.com/lfortran/fortran_kernel\n\nextra:\n  recipe-maintainers:\n    - certik\n",
 "req": {
  "__set__": true,
  "elements": [
   "ipykernel",
   "lfortran",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "jupyter_kernel_test",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "jupyter_kernel_test",
    "pytest"
   ]
  }
 },
 "url": "https://gitlab.com/lfortran/fortran_kernel/-/archive/v0.1.7/fortran_kernel-v0.1.7.tar.bz2",
 "version": "0.1.7",
 "win_64_meta_yaml": {
  "about": {
   "description": "LFortran is a modern open-source (BSD licensed) interactive Fortran\ncompiler built on top of LLVM. It can execute user's code interactively to\nallow exploratory work (much like Python, MATLAB or Julia) as well as\ncompile to binaries with the goal to run user\u2019s code on modern\narchitectures such as multi-core CPUs and GPUs.\n\nThis package provides the Jupyter kernel.\n",
   "dev_url": "https://gitlab.com/lfortran/fortran_kernel",
   "doc_url": "https://docs.lfortran.org/",
   "home": "https://lfortran.org",
   "license": "BSD-3",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Fortran Jupyter kernel based on LFortran"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m fortran_kernel.install --prefix %PREFIX%",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m fortran_kernel.install --prefix %PREFIX%",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m fortran_kernel.install --prefix %PREFIX%"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "certik",
    "certik",
    "certik"
   ]
  },
  "package": {
   "name": "fortran_kernel",
   "version": "0.1.7"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel",
    "python",
    "pip",
    "setuptools",
    "lfortran",
    "ipykernel"
   ],
   "run": [
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel",
    "python",
    "lfortran",
    "ipykernel"
   ]
  },
  "source": {
   "patches": [
    "win.patch",
    "win.patch",
    "win.patch"
   ],
   "sha256": "62838595ff707ad34100834ac545faf35feb5884ebde552f4b4ed56aeee08dfe",
   "url": "https://gitlab.com/lfortran/fortran_kernel/-/archive/v0.1.7/fortran_kernel-v0.1.7.tar.bz2"
  },
  "test": {
   "commands": [
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel",
    "jupyter kernelspec list --json",
    "pytest --disable-warnings --pyargs fortran_kernel"
   ],
   "imports": [
    "fortran_kernel",
    "fortran_kernel",
    "fortran_kernel"
   ],
   "requires": [
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test",
    "pytest",
    "jupyter_kernel_test"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ipykernel",
    "lfortran",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "jupyter_kernel_test",
    "pytest"
   ]
  }
 }
}