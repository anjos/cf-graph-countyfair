{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/839462273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pip2conda",
 "hash_type": "sha256",
 "name": "pip2conda",
 "new_version": "0.3.2",
 "new_version_attempts": {
  "0.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pip2conda"
  ]
 },
 "pinning_version": "2022.02.03.09.37.06",
 "raw_meta_yaml": "{% set name = \"pip2conda\" %}\n{% set version = \"0.3.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pip2conda-{{ version }}.tar.gz\n  sha256: 8b5f27916d264fc6582780daa75ef20ddd13f782028bf8778558a6765983d576\n\nbuild:\n  entry_points:\n    - pip2conda = pip2conda.pip2conda:main\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.8\n    - setuptools\n    - setuptools-scm\n  run:\n    - grayskull >=1.0.0\n    - python >=3.8\n    - requests\n    - ruamel.yaml\n    - setuptools\n    - tomli\n\ntest:\n  requires:\n    - pip\n    - pytest\n  commands:\n    # check metadata\n    - python -m pip check\n    # run test suite\n    - python -m pytest -ra -v --pyargs pip2conda.tests -k \"not real\"\n    # test entry point\n    - pip2conda --help\n\nabout:\n  home: https://github.com/duncanmmacleod/pip2conda/\n  dev_url: https://github.com/duncanmmacleod/pip2conda.git\n  doc_url: https://pip2conda.readthedocs.io/\n  summary: Translate pip requirements into conda requirements\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  description: |\n    `pip2conda` is a tool to translate `pip`-style requirements into `conda`\n    requirements.\n\n    `pip2conda` parses build requirements from ``pyproject.toml`` files, then\n    runtime and extra requirements from ``setup.cfg``, including unpackging\n    extras and evaluating environment markers, before matching translating\n    each requirement into a conda-forge requirement suitable for installation\n    with `conda/mamba`.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pip2conda/pip2conda-0.3.2.tar.gz",
 "version": "0.3.2"
}