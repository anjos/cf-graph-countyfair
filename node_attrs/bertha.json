{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/347268598.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/391829328.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502203996.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552269313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682491323.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775897993.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911378983.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bertha",
 "hash_type": "sha256",
 "name": "bertha",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bertha"
  ]
 },
 "pinning_version": "2022.04.16.22.20.19",
 "raw_meta_yaml": "{% set name = \"bertha\" %}\n{% set version = \"1.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/cph-tum/{{ name }}/-/archive/v{{ version }}/{{ name }}-v{{ version }}.tar.gz\n  sha256: 740341ed525f03c27e5879c633c4b51398b0d95f31a9465bc539d3c0c34f5352\n\nbuild:\n  number: 4\n  skip: True  # [win and vc<14]\n  skip: True  # [python_impl == 'pypy']\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make             # [unix]\n    - ninja            # [win]\n    - swig\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make             # [unix]\n    - ninja            # [win]\n  files:\n    - export_test/CMakeLists.txt\n    - export_test/cmake_export_test.cpp\n  commands:\n    - python -c \"import bertha.core as b; d = b.device(1, 2); d.get_length()\"\n    - mkdir -p build && cd build\n    - cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Release ../export_test     # [win]\n    - cmake --build . --config Release                               # [win]\n    - cmake_export_test                                              # [win]\n    - cmake -DCMAKE_BUILD_TYPE=Release ../export_test                # [unix]\n    - cmake --build .                                                # [unix]\n    - ./cmake_export_test                                            # [unix]\n\nabout:\n  home: https://gitlab.com/cph-tum/bertha\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'Project skeleton for scientific C++ software w/ Python interface.'\n  description: |\n      bertha is a light-weight project skeleton for scientific software\n      libraries written in C++ (featuring a Python interface).\n  doc_url: https://cph-tum.gitlab.io/bertha\n  dev_url: https://gitlab.com/cph-tum/bertha\n\nextra:\n  recipe-maintainers:\n    - mriesch-tum\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://gitlab.com/cph-tum/bertha/-/archive/v1.1.0/bertha-v1.1.0.tar.gz",
 "version": "1.1.0"
}