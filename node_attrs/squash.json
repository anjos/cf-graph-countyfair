{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/223905422.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505178027.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "squash",
 "hash_type": "sha256",
 "name": "squash",
 "new_version": "0.7.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "squash"
  ]
 },
 "pinning_version": "2020.10.16.18.51.08",
 "raw_meta_yaml": "{% set name = \"squash\" %}\n{% set version = \"0.7.0\" %}\n{% set version_major = \"0.7\" %}\n{% set hash_val = \"4e741b1ab9dff9433fe9dd7393c7db41173b49b0426dcfcd03b13d0b03bc19b8\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.bz2\n  url: https://github.com/quixdb/squash/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.bz2\n  sha256: {{ hash_val }}\n  patches:\n    - patches/0001-Remove-wrongly-placed-break-on-cmake-file.patch\n    - patches/0002-Add-directive-to-have-_SC_PAGE_SIZE-defined.patch\n    - patches/0003-Fix-squash-missing-endian-declarations-in-OSX.patch\n    - patches/0004-Fix-zconf.h-generation.patch\n    - patches/0005-Fix-lzham-compilation-on-OSX.patch\n    - patches/0006-Fix-negative-left-shifting.patch\n    - patches/0007-Fix-negative-bit-left-shifting.patch\n    - patches/0008-Backported-unaligned-operations-patch.patch\n    - patches/0009-Skip-OSX-only-failing-tests-for-now.patch\n\nbuild:\n  number: 1001\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkg-config\n    - cmake\n  host:\n    - ragel >=6.6\n    - glib\n    - bzip2\n    - xz\n    - lzo  # [linux]\n    - snappy\n    - zlib\n  run:\n    - bzip2\n    - xz\n    - lzo  # [linux]\n    - snappy\n    - zlib\n\ntest:\n  requires:\n    # We use python just to compute the md5sum of codecs output.\n    - python 3.5.*\n    - pkg-config\n  commands:\n    - test -f ${PREFIX}/include/squash-{{ version_major }}/squash/squash.h\n    - test -f ${PREFIX}/lib/libsquash{{ version_major }}.dylib  # [osx]\n    - test -f ${PREFIX}/lib/libsquash{{ version_major }}.so     # [linux]\n    - test -f ${PREFIX}/lib/pkgconfig/squash-{{ version_major }}.pc\n    - pkg-config --cflags --libs {{ name }}-{{ version_major }}\n    - conda inspect linkages -p $PREFIX {{ name }}\n    - conda inspect objects -p $PREFIX {{ name }}  # [osx]\n  files:\n    - testdata.txt\n\nabout:\n  home: https://quixdb.github.io/squash/\n  license: MIT\n  license_file: COPYING\n  summary: Squash \u2014 Compression Abstraction Library\n  description: |\n    Squash provides a single API to access many compression libraries, allowing\n    applications a great deal of flexibility in choosing compression\n    algorithms, including the option to pass that choice along to the user.\n\nextra:\n  recipe-maintainers:\n    - rmax\n",
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "url": "https://github.com/quixdb/squash/releases/download/v0.7.0/squash-0.7.0.tar.bz2",
 "version": "0.7.0"
}