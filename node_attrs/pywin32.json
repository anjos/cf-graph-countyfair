{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/217496523.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/218873984.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "226"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/254913571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268187499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "225"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335790951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340729692.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "227"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386670512.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/433965790.json"
   },
   "data": {
    "bot_rerun": 1600798195.4761772,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "228"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492352426.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "228"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499572977.json"
   },
   "data": {
    "bot_rerun": 1602118759.0811214,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500692159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551543711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557048266.json"
   },
   "data": {
    "bot_rerun": 1611701091.2451336,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "302"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562142957.json"
   },
   "data": {
    "bot_rerun": 1628282225.812809,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "302"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679494929.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705738120.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "302"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771020663.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898144462.json"
   },
   "data": {
    "bot_rerun": 1666815694.426159,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1100358506.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1100880610.json"
   },
   "data": {
    "bot_rerun": 1666973837.389468,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1103350626.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pywin32",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "host": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "host": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "host": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\"",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\"",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "python",
    "pip",
    "python",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "name": "pywin32",
 "new_version": "305",
 "new_version_attempts": {
  "228": 2,
  "302": 3,
  "303": 20,
  "304": 22,
  "305": 7
 },
 "new_version_errors": {
  "303": "We found a problem parsing the recipe for version '303': \n\nRuntimeError(\"Could not parse meta.yaml due to multiline string '|' paired with a conda build selector! (offending line: '    - |                                                                                           # [win and python_impl != 'pypy']')\")\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 436, in __init__\n    raise RuntimeError(\n",
  "304": "We found a problem parsing the recipe for version '304': \n\nRuntimeError(\"Could not parse meta.yaml due to multiline string '|' paired with a conda build selector! (offending line: '    - |                                                                                           # [win and python_impl != 'pypy']')\")\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 513, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    raise RuntimeError(\n",
  "305": "We found a problem parsing the recipe for version '305': \n\nRuntimeError(\"Could not parse meta.yaml due to multiline string '|' paired with a conda build selector! (offending line: '    - |                                                                                           # [win and python_impl != 'pypy']')\")\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 513, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    raise RuntimeError(\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "host": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\"",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "host": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pywin32"
  ]
 },
 "pinning_version": "2022.10.28.11.26.40",
 "pre_pr_migrator_attempts": {
  "armosxaddition": 1250
 },
 "pre_pr_migrator_status": {
  "armosxaddition": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3675225935\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 332, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"304\" %}\n\npackage:\n  name: pywin32\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mhammond/pywin32/archive/b{{ version }}.tar.gz\n  sha256: 23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246\n  patches:\n    - 0003-remove-PATH-pth-hack.patch\n    - do-not-build-scintilla.patch\n\nbuild:\n  number: 2\n  script:\n    - |                                                                                           # [win and python_impl != 'pypy']\n      @echo on                                                                                    # [win and python_impl != 'pypy']\n      set \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"                                        # [win and python_impl != 'pypy']\n      {{ PYTHON }} setup.py -q install --record=record.txt --skip-verstamp                        # [win and python_impl != 'pypy']\n      echo \"sleeping for 15\"                                                                      # [win and python_impl != 'pypy']\n      {{ PYTHON }} -c \"import time; time.sleep(15)\"                                               # [win and python_impl != 'pypy']\n      echo \"Copying over stray DLLS\"                                                              # [win and python_impl != 'pypy']\n      if %ERRORLEVEL% neq 0 exit 1                                                                # [win and python_impl != 'pypy']\n      dir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll                                                # [win and python_impl != 'pypy']\n      copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\    # [win and python_impl != 'pypy']\n      dir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll                                                # [win and python_impl != 'pypy']\n      if %ERRORLEVEL% neq 0 exit 1                                                                # [win and python_impl != 'pypy']\n      dir %LIBRARY_BIN%\\py*.dll                                                                   # [win and python_impl != 'pypy']\n      copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\                       # [win and python_impl != 'pypy']\n      if %ERRORLEVEL% neq 0 exit 1                                                                # [win and python_impl != 'pypy']\n      dir %LIBRARY_BIN%\\py*.dll                                                                   # [win and python_impl != 'pypy']\n      if %ERRORLEVEL% neq 0 exit 1                                                                # [win and python_impl != 'pypy']\n    - echo \"noop\"\n\n\nrequirements:\n  build:                          # [win and python_impl != 'pypy']\n    - {{ compiler(\"c\") }}         # [win and python_impl != 'pypy']\n    - {{ compiler(\"cxx\") }}       # [win and python_impl != 'pypy']\n  host:\n    - python\n    - pip                         # [win and python_impl != 'pypy']\n  run:\n    - python\n\ntest:\n  requires:\n    - python\n\nabout:\n  home: https://github.com/mhammond/pywin32\n  license: PSF-2.0\n  license_file: Pythonwin/License.txt\n  summary: Python extensions for Windows\n  description: |\n    A set of extension modules that provides access to many of the Windows API functions.\n  dev_url: https://github.com/mhammond/pywin32\n\nextra:\n  recipe-maintainers:\n    - mingwandroid\n    - nicoddemus\n    - carlodri\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 },
 "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz",
 "version": "304",
 "win_64_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "2",
   "script": [
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\"",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\"",
    "echo \"noop\"",
    "@echo on\nset \"STDLIB_DIR=%PREFIX%\\Lib;%PREFIX%;%LIBRARY_BIN%\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp\necho \"sleeping for 15\"\n/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -c \"import time; time.sleep(15)\"\necho \"Copying over stray DLLS\"\nif %ERRORLEVEL% neq 0 exit 1\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\ndir %PREFIX%\\Lib\\site-packages\\win32\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\ncopy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\nif %ERRORLEVEL% neq 0 exit 1\ndir %LIBRARY_BIN%\\py*.dll\nif %ERRORLEVEL% neq 0 exit 1\n",
    "echo \"noop\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "304"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "python",
    "pip",
    "python",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch",
    "0003-remove-PATH-pth-hack.patch",
    "do-not-build-scintilla.patch"
   ],
   "sha256": "23e43eaacca3161565b2adc71f75625d9011087379e60fcdfb5238e187169246",
   "url": "https://github.com/mhammond/pywin32/archive/b304.tar.gz"
  },
  "test": {
   "requires": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python"
   ]
  }
 }
}