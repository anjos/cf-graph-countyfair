{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/217496523.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/218873984.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "226"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/254913571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268187499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "225"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335790951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340729692.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "227"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386670512.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/433965790.json"
   },
   "data": {
    "bot_rerun": 1600798195.4761772,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "228"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492352426.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "228"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499572977.json"
   },
   "data": {
    "bot_rerun": 1602118759.0811214,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500692159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551543711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557048266.json"
   },
   "data": {
    "bot_rerun": 1611701091.2451336,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "302"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562142957.json"
   },
   "data": {
    "bot_rerun": 1628282225.812809,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "302"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679494929.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705738120.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "302"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771020663.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pywin32",
 "hash_type": "sha256",
 "meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "301"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch",
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch",
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch",
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch"
   ],
   "sha256": "5366613c366c66b521a2e79780dcdf347310bd2b75022e424df320760931999c",
   "url": "https://github.com/mhammond/pywin32/archive/b301.tar.gz"
  }
 },
 "name": "pywin32",
 "new_version": "302",
 "new_version_attempts": {
  "228": 2,
  "302": 3
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pywin32"
  ]
 },
 "pinning_version": "2021.11.01.21.58.36",
 "raw_meta_yaml": "{% set version = \"301\" %}\n\npackage:\n  name: pywin32\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mhammond/pywin32/archive/b{{ version }}.tar.gz\n  sha256: 5366613c366c66b521a2e79780dcdf347310bd2b75022e424df320760931999c\n  patches:\n    - disable_exchange_modules.patch\n    - 0003-remove-PATH-pth-hack.patch\n\nbuild:\n  number: 0\n  script:\n    - {{ PYTHON }} setup.py -q install --record=record.txt --skip-verstamp\n    - copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\\n    - copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\\n  skip: true  # [not win or py27]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n\nabout:\n  home: https://github.com/mhammond/pywin32\n  license: PSF-2.0\n  license_file: Pythonwin/License.txt\n  summary: Python extensions for Windows\n  description: |\n    A set of extension modules that provides access to many of the Windows API functions.\n  dev_url: https://github.com/mhammond/pywin32\n\nextra:\n  recipe-maintainers:\n    - mingwandroid\n    - nicoddemus\n    - carlodri\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/mhammond/pywin32/archive/b301.tar.gz",
 "version": "301",
 "win_64_meta_yaml": {
  "about": {
   "description": "A set of extension modules that provides access to many of the Windows API functions.\n",
   "dev_url": "https://github.com/mhammond/pywin32",
   "home": "https://github.com/mhammond/pywin32",
   "license": "PSF-2.0",
   "license_file": "Pythonwin/License.txt",
   "summary": "Python extensions for Windows"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe setup.py -q install --record=record.txt --skip-verstamp",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %PREFIX%\\Lib\\site-packages\\win32\\",
    "copy %PREFIX%\\Lib\\site-packages\\pywin32_system32\\*.dll %LIBRARY_BIN%\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri",
    "mingwandroid",
    "nicoddemus",
    "carlodri"
   ]
  },
  "package": {
   "name": "pywin32",
   "version": "301"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch",
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch",
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch",
    "disable_exchange_modules.patch",
    "0003-remove-PATH-pth-hack.patch"
   ],
   "sha256": "5366613c366c66b521a2e79780dcdf347310bd2b75022e424df320760931999c",
   "url": "https://github.com/mhammond/pywin32/archive/b301.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}