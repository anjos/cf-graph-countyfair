{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/690372625.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/692090688.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "timemory",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
   "dev_url": "https://github.com/NERSC/timemory.git",
   "doc_url": "https://timemory.readthedocs.io/",
   "home": "https://github.com/NERSC/timemory.git",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight performance analysis toolkit and suite of tools"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python setup.py install --single-version-externally-managed --record record.txt -G \"Unix Makefiles\" --cxx-standard=17 --enable-portable --enable-static-libs --disable-c --disable-cuda --disable-fortran --disable-ert --disable-develop --disable-shared-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -- "
  },
  "extra": {
   "recipe-maintainers": [
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen"
   ]
  },
  "package": {
   "name": "timemory",
   "version": "3.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build"
   ],
   "run": [
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess"
   ]
  },
  "source": {
   "sha256": "b7425357d3c028aaf1f15622f8c29a897add0d332210f4c5dbc834b4e412f8cb",
   "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.2.tar.gz"
  },
  "test": {
   "imports": [
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mpich",
    "openmpi",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "scikit-build"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "mpi4py",
    "mpich",
    "multiprocess",
    "numpy",
    "openmpi",
    "pandas",
    "pillow",
    "pydot",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
   "dev_url": "https://github.com/NERSC/timemory.git",
   "doc_url": "https://timemory.readthedocs.io/",
   "home": "https://github.com/NERSC/timemory.git",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight performance analysis toolkit and suite of tools"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe setup.py install --single-version-externally-managed --record record.txt -G \"Unix Makefiles\" --cxx-standard=17 --enable-portable --enable-static-libs --disable-c --disable-cuda --disable-fortran --disable-ert --disable-develop --disable-shared-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -- "
  },
  "extra": {
   "recipe-maintainers": [
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen"
   ]
  },
  "package": {
   "name": "timemory",
   "version": "3.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "openmpi",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "mpich",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build"
   ],
   "run": [
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "openmpi",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "mpi4py",
    "mpich",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess"
   ]
  },
  "source": {
   "sha256": "b7425357d3c028aaf1f15622f8c29a897add0d332210f4c5dbc834b4e412f8cb",
   "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.2.tar.gz"
  },
  "test": {
   "imports": [
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util"
   ]
  }
 },
 "name": "timemory",
 "new_version": "3.2.3",
 "new_version_attempts": {
  "3.2.2": 1,
  "3.2.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "timemory"
  ]
 },
 "pinning_version": "2021.07.18.08.46.59",
 "raw_meta_yaml": "{% set name = \"timemory\" %}\n{% set version = \"3.2.2\" %}\n\n{% set generator = \"NMake Makefiles\" %}  # [win]\n{% set generator = \"Unix Makefiles\" %}  # [not win]\n\n{% set cmake_args = \"\" %}\n\n{% set generator_args = \"-j2\" %}  # [not win]\n{% set generator_args = \"\" %}  # [win]\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: b7425357d3c028aaf1f15622f8c29a897add0d332210f4c5dbc834b4e412f8cb\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} setup.py install --single-version-externally-managed --record record.txt \\\n    -G \\\"{{ generator }}\\\" \\\n    --cxx-standard=17 \\\n    --enable-portable \\\n    --enable-static-libs \\\n    --disable-c \\\n    --disable-cuda \\\n    --disable-fortran \\\n    --disable-ert \\\n    --disable-develop \\\n    --disable-shared-libs \\\n    --disable-unity-build \\\n    --disable-require-packages \\\n    --disable-ompt \\\n    --disable-upcxx \\\n    --disable-kokkos \\\n    --disable-caliper \\\n    --disable-dyninst \\\n    --disable-gperftools \\\n    --disable-compiler-instrumentation \\\n    --disable-install-rpath-use-link-path \\\n    --skip-generator-test \\\n    -- {{ cmake_args }} \\\n    -- {{ generator_args }}\"\n  skip: true  # [osx]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - python\n    - pip\n    - cython\n    - pybind11\n    - pybind11-abi\n    - scikit-build\n    - {{ mpi }}  # [linux and mpi != 'nompi']\n  run:\n    - python\n    - six\n    - numpy\n    - pydot\n    - pillow\n    - pandas\n    - matplotlib-base\n    - multiprocess\n    - mpi4py  # [linux and mpi != 'nompi']\n    - {{ mpi }}  # [linux and mpi != 'nompi']\n\ntest:\n  imports:\n    - timemory\n    - timemory.settings\n    - timemory.profiler\n    - timemory.trace\n    - timemory.util\n\nabout:\n  home: https://github.com/NERSC/timemory.git\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Lightweight performance analysis toolkit and suite of tools\n  description: |\n    Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\n    Timemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\n    which can inter-weaved and without nesting restrictions.\n  doc_url: https://timemory.readthedocs.io/\n  dev_url: https://github.com/NERSC/timemory.git\n\nextra:\n  recipe-maintainers:\n    - jrmadsen\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "cython",
   "matplotlib-base",
   "mpi4py",
   "mpich",
   "multiprocess",
   "ninja",
   "numpy",
   "openmpi",
   "pandas",
   "pillow",
   "pip",
   "pybind11",
   "pybind11-abi",
   "pydot",
   "python",
   "scikit-build",
   "six"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "mpich",
    "openmpi",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "scikit-build"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "matplotlib-base",
    "mpi4py",
    "mpich",
    "multiprocess",
    "numpy",
    "openmpi",
    "pandas",
    "pillow",
    "pydot",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mpich",
    "openmpi",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "scikit-build"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "mpi4py",
    "mpich",
    "multiprocess",
    "numpy",
    "openmpi",
    "pandas",
    "pillow",
    "pydot",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.2.tar.gz",
 "version": "3.2.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
   "dev_url": "https://github.com/NERSC/timemory.git",
   "doc_url": "https://timemory.readthedocs.io/",
   "home": "https://github.com/NERSC/timemory.git",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight performance analysis toolkit and suite of tools"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe setup.py install --single-version-externally-managed --record record.txt -G \"Unix Makefiles\" --cxx-standard=17 --enable-portable --enable-static-libs --disable-c --disable-cuda --disable-fortran --disable-ert --disable-develop --disable-shared-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -- "
  },
  "extra": {
   "recipe-maintainers": [
    "jrmadsen",
    "jrmadsen",
    "jrmadsen",
    "jrmadsen"
   ]
  },
  "package": {
   "name": "timemory",
   "version": "3.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build",
    "python",
    "pip",
    "cython",
    "pybind11",
    "pybind11-abi",
    "scikit-build"
   ],
   "run": [
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess",
    "python",
    "six",
    "numpy",
    "pydot",
    "pillow",
    "pandas",
    "matplotlib-base",
    "multiprocess"
   ]
  },
  "source": {
   "sha256": "b7425357d3c028aaf1f15622f8c29a897add0d332210f4c5dbc834b4e412f8cb",
   "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.2.tar.gz"
  },
  "test": {
   "imports": [
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util",
    "timemory",
    "timemory.settings",
    "timemory.profiler",
    "timemory.trace",
    "timemory.util"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "scikit-build"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "multiprocess",
    "numpy",
    "pandas",
    "pillow",
    "pydot",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}