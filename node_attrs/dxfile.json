{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199877938.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "dxfile",
 "hash_type": "sha256",
 "name": "dxfile",
 "new_version": "0.5",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dxfile"
  ]
 },
 "pinning_version": "2018.10.11",
 "raw_meta_yaml": "{% set version = \"0.5\" %}\n\npackage:\n    name: dxfile\n    version: {{ version }}\n\nsource:\n    url: https://github.com/data-exchange/dxfile/archive/v{{ version }}.tar.gz\n    fn: dxfile-{{ version }}.tar.gz\n    sha256: 6317fa9f1b4f12039ca68eab2d9c96d95930499d084f5802a02bb49c5fb1c88d\n\nbuild:\n    noarch: python\n    number: 1\n    script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n    host:\n        - pip\n        - python\n        - setuptools\n    run:\n        - python\n        - h5py\n\ntest:\n    imports:\n        - dxfile\n        - dxfile.dxtomo\n\nabout:\n    home: http://dxfile.readthedocs.org\n    license: BSD 3-Clause\n    summary: 'Reader/Writer for Data Exchange files.'\n\nextra:\n    recipe-maintainers:\n        - dgursoy\n        - decarlof\n        - licode\n        - ravescovi\n        - tacaswell\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://github.com/data-exchange/dxfile/archive/v0.5.tar.gz",
 "version": "0.5"
}