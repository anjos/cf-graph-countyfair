{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196933005.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220993676.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "libgap",
 "hash_type": "sha256",
 "name": "libgap",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libgap"
  ]
 },
 "pinning_version": "2018.10.03",
 "raw_meta_yaml": "{% set version = \"4.8.6\" %}\n{% set name = \"libgap\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: http://files.sagemath.org/spkg/upstream/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: bbd89bff4b2a03a0fd52451ebd6bea1e2742a5f0f4503c50e1a7a05254e9aec0\n  patches:\n    # https://github.com/gap-system/gap/pull/448\n    - patches/448.patch\n    # https://github.com/gap-system/gap/pull/1188\n    - patches/long_path.patch\n\nbuild:\n  number: 1001\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - libtool\n    - automake\n    - {{ compiler('c') }}\n  host:\n    - gap {{ version }}\n    - gmp\n    - mpfr\n  run:\n    - gap {{ version }}\n    - gmp\n    - mpfr\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/gap/gap.h\n    - test -f ${PREFIX}/lib/libgap.a\n    - test -f ${PREFIX}/lib/libgap.dylib     # [osx]\n    - test -f ${PREFIX}/lib/libgap.so        # [linux]\n\nabout:\n  home: https://bitbucket.org/vbraun/libgap\n  license: GPLv3+\n  license_file: COPYING\n  summary: A C library version of the GAP kernel.\n  dev_url: https://bitbucket.org/vbraun/libgap\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - saraedum\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "http://files.sagemath.org/spkg/upstream/libgap/libgap-4.8.6.tar.gz",
 "version": "4.8.6"
}