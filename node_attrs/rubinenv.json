{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/483184874.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/933983966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/934249711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cfitsio410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "rubinenv",
 "name": "rubin-env",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rubin-env",
   "rubin-env-extras",
   "rubin-env-nosysroot",
   "rubin-env-rsp"
  ]
 },
 "pinning_version": "2022.05.09.07.08.30",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"rubin-env\" %}\n{% set version = \"4.1.0\" %}\n{% set build_number = 4 %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nbuild:\n  skip: True  # [python_impl == 'pypy' or win or py != 310]\n  number: {{ build_number }}\n\noutputs:\n  - name: rubin-env-nosysroot\n    script: build-nosysroot.sh\n    # Since all requirements are required \"at run time\" for the\n    # Rubin developers, all requirements are fundamentally\n    # run requirements. However, we've attempted to organize\n    # requirements as build-like, host-like, or run-like, in\n    # order inform any evolution of this recipe.\n    requirements:\n      host:\n        - python\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - apr\n        - boost\n        - cfitsio\n        - curl\n        - fftw\n        - gsl\n        - libaprutil\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - log4cxx\n        - minuit2\n        - mpich\n        - numpy\n        - xpa\n        - starlink-ast\n        - wcslib\n      run:\n        # jq is special - it is needed for the pin-it utility in this package\n        - jq\n        ###################################################\n        # build-like dependencies\n        # As part of our scons build process, we do run tests, so\n        # these really are required to perform a build.\n        # Note that \"testing\" in conda-forge should be limited to testing\n        # successful packaging, and not testing code.\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        # The above are needed to get the official conda-forge versions.\n        # The below is needed to get convenience symlinks for users to invoke.\n        - compilers\n        - cmake\n        # Coverage 6.3 is breaking with NFS and multi-process testing.\n        - coverage >=3.6,!=6.3\n        - coveralls\n        - doxygen\n        - flake8 =4.0\n        - make\n        - nose\n        - pep8-naming\n        - pip\n        - psutil\n        - pytest\n        - pytest-cov\n        - pytest-doctestplus\n        - pytest-flake8\n        - pytest-openfiles\n        - pytest-runner\n        - pytest-session2file\n        - pytest-subtests\n        - pytest-xdist\n        - scons\n\n        ###################################################\n        # host-like and run-like\n        # These are mostly run-like, but for the same reasons as\n        # above, we need most of these at build time, so they are mostly\n        # host-like\n        - apr {{ apr }}.*\n        - boost {{ boost }}.*\n        - cffi {{ cffi }}.*\n        - cfitsio {{ cfitsio }}.*\n        - cython {{ cython }}.*\n        - eigen {{ eigen }}.*\n        - eups\n        - firefly-client\n        - galsim\n        - gsl {{ gsl }}.*\n        - libaprutil {{ libaprutil }}.*\n        # there is some issue with pex_exceptions with clang 11 and libcxx 12\n        # until it is tracked down, it makes sense to keep these at the same\n        # major version\n        - libcxx =={{ cxx_compiler_version }}.*  # [osx]\n        - llvmlite\n        - log4cxx {{ log4cxx }}.*\n        - lsst-documenteer-pipelines\n        - lsst-documenteer-technote\n        - minuit2 {{ minuit2 }}.*\n        - mpich {{ mpich }}.*\n        - ndarray {{ ndarray }}.*\n        - numpy {{ numpy }}.*\n        - numba\n        - starlink-ast {{ starlink_ast }}.*\n        - wcslib {{ wcslib }}.*\n        - xpa {{ xpa }}.*\n        - yaml-cpp {{ yaml_cpp }}.*\n\n        ###################################################\n        # run-like\n        - alembic\n        - astropy\n        - astroquery\n        - autograd\n        - backoff\n        - boto3\n        - bottleneck\n        - cassandra-driver  # [linux64]\n        # conda is required for runtime inspection of installed software\n        - conda\n        - configparser\n        - click !=8.1.0,!=8.1.1\n        - coloredlogs\n        - deprecated\n        - dustmaps\n        - emcee\n        - esutil\n        - fastavro\n        - future\n        - getcalspec\n        - git\n        - git-lfs\n        - h5py\n        - healpy\n        - healsparse\n        - hpgeom >=0.8.2\n        - idds-client >=0.11.0\n        - idds-doma >=0.11.0\n        # inflection may go away in the future; see DM-32591\n        - inflection\n        - iminuit >=2\n        - lmfit !=1.0.3\n        - lsstdesc.coord\n        - matplotlib-base\n        - moto >=3\n        - mpi4py\n        - networkx\n        - numexpr =2\n        - {{ pin_compatible('numpy') }}\n        - pandas\n        - pgcli\n        # Remove < after Spectractor fix: see DM-35580\n        - photutils >=0.7,<1.5\n        - piff\n        - prmon  # [linux]\n        - psycopg2 =2\n        - pyarrow\n        - pybind11 <2.10\n        - pydantic\n        - pyld\n        - pysynphot\n        - pytables\n        - python\n        - pyyaml\n        - requests\n        - schwimmbad\n        - scikit-image !=0.18\n        - scikit-learn\n        # scipy 1.9 breaks a meas_base test; see DM-35777\n        - scipy <1.9\n        - seaborn\n        - skyproj\n        - spherematch <0.10\n        - sqlalchemy <2\n        - sqlite\n        - threadpoolctl\n        - tqdm\n        - treecorr =4\n        - ws4py\n\n    test:\n      commands:\n        # grep pin-it output for python dependency\n        - pin-it rubin-env-nosysroot | grep \"python=\"\n        # ensure binary compatibility; bump major version if not\n        - '[ $(echo __GXX_ABI_VERSION | ${CXX} -E - | tail -1) == 1014 ]'  # [linux]\n        - '[ $(echo __GXX_ABI_VERSION | ${CXX} -E - | tail -1) == 1002 ]'  # [osx]\n\n  - name: rubin-env\n    requirements:\n      host:\n        - python\n      run:\n        - {{ pin_subpackage(\"rubin-env-nosysroot\", exact=True) }}\n        - sysroot_linux-64 =2.17  # [linux64]\n        - python\n    test:\n      commands:\n        # grep pin-it output for python dependency\n        - pin-it rubin-env | grep \"python=\"\n        # ensure binary compatibility; bump major version if not\n        - '[ $(echo __GXX_ABI_VERSION | ${CXX} -E - | tail -1) == 1014 ]'  # [linux]\n        - '[ $(echo __GXX_ABI_VERSION | ${CXX} -E - | tail -1) == 1002 ]'  # [osx]\n\n  - name: rubin-env-rsp\n    requirements:\n      host:\n        - python\n      run:\n        - {{ pin_subpackage(\"rubin-env\", exact=True) }}\n        # All are from sciplat-lab unless otherwise stated\n        - astroplan # sims\n        - astroquery\n        - astrowidgets  # [not aarch64]\n        - awkward\n        - awkward-numba\n        - black\n        - bokeh\n        - bqplot\n        - ciso8601  # [not aarch64]\n        - cloudpickle\n        - cookiecutter\n        - dash\n        - dask\n        - dask-kubernetes\n        - dask_labextension\n        - datashader\n        - distributed\n        - fastparquet\n        - ffmpeg # RFC-846\n        - freetype-py\n        - gcsfs\n        - geoviews\n        - ginga\n        - graphviz\n        - holoviews\n        - hvplot\n        - imagemagick # RFC-846\n        - intake\n        - intake-parquet\n        - ipyevents\n        - ipykernel\n        - ipympl\n        - ipyvolume\n        - ipywidgets\n        - isort\n        - jedi\n        - jupyter\n        - jupyter-dash  # [not aarch64]\n        - jupyter-packaging\n        - jupyter-server-proxy\n        - jupyter_bokeh\n        - jupyterhub\n        - jupyterlab >=3,<4\n        - jupyterlab_execute_time\n        - jupyterlab_iframe\n        - jupyterlab_widgets\n        - mamba\n        - mypy\n        - mysqlclient\n        - nbconvert-webpdf\n        - nbdime\n        - nbval\n        - nodejs >=16\n        - numba\n        - panel # shared\n        - papermill\n        - paramnb\n        - partd\n        - pep8 # shared\n        - plotly\n        - pre-commit\n        - pyflakes # shared\n        - pypandoc\n        - pyshp\n        - python-snappy\n        - python-socketio\n        - pythreejs\n        - pyviz_comms\n        - pyvo\n        - sidecar\n        - snappy\n        - terminado\n        - toolz\n        - xarray\n        - yarn\n    test:\n      commands:\n        # grep pin-it output for yarn dependency\n        - pin-it rubin-env-rsp | grep \"yarn=\"\n\n  - name: rubin-env-extras\n    requirements:\n      host:\n        - python\n      run:\n        - {{ pin_subpackage(\"rubin-env\", exact=True) }}\n        - {{ pin_subpackage(\"rubin-env-rsp\", exact=True) }}\n        - colorcet # sims\n        - cycler # sims\n        - dask-jobqueue # shared\n        - george # sims  # [not aarch64]\n        - ipdb # shared\n        - ipyparallel # sims\n        - openorb # sims  # [not aarch64 and not osx-arm64]\n        - openorb-data-de405 # sims  # [not aarch64 and not osx-arm64]\n        - palpy # sims  # [not aarch64 and not osx-arm64]\n        - pyct # shared\n    test:\n      commands:\n        # grep pin-it output for george dependency\n        - pin-it rubin-env-extras | grep \"pyct\"\n\nabout:\n  home: https://github.com/conda-forge/rubinenv-feedstock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: Metapackage to install the Rubin Observatory's common software environment.\n\n  description: |\n    This metapackage exists to define the Rubin Observatory common software\n    environment, including version specifications where needed, while allowing\n    users flexibility when installing additional packages into the same environment.\n\nextra:\n  recipe-maintainers:\n    - brianv0\n    - timj\n    - ktlim\n    - beckermr\n    - erykoff\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "version": "4.1.0"
}