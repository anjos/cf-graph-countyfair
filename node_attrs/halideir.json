{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "halideir",
 "name": "halideir",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "halideir"
  ]
 },
 "raw_meta_yaml": "{% set name = \"halideir\" %}\n{% set version = \"0.19\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # For now it is using the git repository because there is no tarball available\n  git_url: https://github.com/dmlc/HalideIR.git\n  patches:\n    - makefile_patch.patch\n\nbuild:\n  number: 2\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - dmlc\n    - dlpack\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libHalideIR.a  # [unix]\n    - test -f $PREFIX/lib/libHalideIR${SHLIB_EXT}  # [unix]\n    - test -d $PREFIX/lib/arithmetic  # [unix]\n    - test -d $PREFIX/lib/ir  # [unix]\n    - test -d $PREFIX/lib/base  # [unix]\n    - test -d $PREFIX/lib/tvm  # [unix]\n    - test -d $PREFIX/include/arithmetic  # [unix]\n    - test -d $PREFIX/include/ir  # [unix]\n    - test -d $PREFIX/include/base  # [unix]\n    - test -d $PREFIX/include/tvm/node  # [unix]\n\nabout:\n  home: https://github.com/dmlc/HalideIR\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'HalideIR - Symbolic Arithmetic IR Module'\n  description: |\n    HalideIR is a base module for building symbolic expression and arithmetic simplification \n    for building new DSLs. It is isolated and refactored from part of Halide project (credit \n    should go to the original authors). It is used in the TVM project.\n  dev_url: https://github.com/dmlc/HalideIR\n\nextra:\n  recipe-maintainers:\n    - marcelotrevisani\n",
 "strong_exports": false,
 "time": 1568135302.9965808,
 "url": null,
 "version": "0.19"
}