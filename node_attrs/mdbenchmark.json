{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/217877564.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/226843086.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228161517.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336415103.json"
   },
   "data": {
    "bot_rerun": 1579272528.0164378,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/364195015.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375121370.json"
   },
   "data": {
    "bot_rerun": 1581653260.640506,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/384807473.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500667712.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519051965.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535975531.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mdbenchmark",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MDBenchmark is a tool to squeeze the maximum out of your limited computing resources. It tries to make it as easy as possible to set up systems on varying numbers of nodes and compare their performances to each other.\nYou can also create a plot to get a quick overview of the possible performance (and show of to your friends)!\n",
   "dev_url": "https://github.com/bio-phys/MDBenchmark",
   "doc_url": "https://docs.mdbenchmark.org",
   "home": "https://github.com/bio-phys/MDBenchmark",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Quickly generate, start and analyze benchmarks for your molecular dynamics simulations."
  },
  "build": {
   "entry_points": [
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli"
   ],
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install --no-deps --ignore-installed -vv ."
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi"
   ]
  },
  "package": {
   "name": "mdbenchmark",
   "version": "3.0.1"
  },
  "requirements": {
   "host": [
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0"
   ]
  },
  "source": {
   "fn": "mdbenchmark-3.0.1.tar.gz",
   "sha256": "3b2ebb693737a93155a67a7f25f3f5d20140ba8d87e5bda461e44840d0f1f87d",
   "url": "https://pypi.io/packages/source/m/mdbenchmark/mdbenchmark-3.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark"
   ],
   "imports": [
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark"
   ],
   "requires": [
    "libglu",
    "libglu",
    "libglu",
    "libglu"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "datreant",
    "jinja2",
    "matplotlib-base",
    "numpy",
    "pandas",
    "psutil",
    "python",
    "python-levenshtein",
    "tabulate",
    "xdg"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "libglu"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MDBenchmark is a tool to squeeze the maximum out of your limited computing resources. It tries to make it as easy as possible to set up systems on varying numbers of nodes and compare their performances to each other.\nYou can also create a plot to get a quick overview of the possible performance (and show of to your friends)!\n",
   "dev_url": "https://github.com/bio-phys/MDBenchmark",
   "doc_url": "https://docs.mdbenchmark.org",
   "home": "https://github.com/bio-phys/MDBenchmark",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Quickly generate, start and analyze benchmarks for your molecular dynamics simulations."
  },
  "build": {
   "entry_points": [
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli"
   ],
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install --no-deps --ignore-installed -vv ."
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi"
   ]
  },
  "package": {
   "name": "mdbenchmark",
   "version": "3.0.1"
  },
  "requirements": {
   "host": [
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0"
   ]
  },
  "source": {
   "fn": "mdbenchmark-3.0.1.tar.gz",
   "sha256": "3b2ebb693737a93155a67a7f25f3f5d20140ba8d87e5bda461e44840d0f1f87d",
   "url": "https://pypi.io/packages/source/m/mdbenchmark/mdbenchmark-3.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark"
   ],
   "imports": [
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark"
   ],
   "requires": null
  }
 },
 "name": "mdbenchmark",
 "new_version": "3.0.1",
 "new_version_attempts": {
  "3.0.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "MDBenchmark is a tool to squeeze the maximum out of your limited computing resources. It tries to make it as easy as possible to set up systems on varying numbers of nodes and compare their performances to each other.\nYou can also create a plot to get a quick overview of the possible performance (and show of to your friends)!\n",
   "dev_url": "https://github.com/bio-phys/MDBenchmark",
   "doc_url": "https://docs.mdbenchmark.org",
   "home": "https://github.com/bio-phys/MDBenchmark",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Quickly generate, start and analyze benchmarks for your molecular dynamics simulations."
  },
  "build": {
   "entry_points": [
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli",
    "mdbenchmark = mdbenchmark.cli:cli"
   ],
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install --no-deps --ignore-installed -vv ."
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi",
    "kain88-de",
    "mimischi"
   ]
  },
  "package": {
   "name": "mdbenchmark",
   "version": "3.0.1"
  },
  "requirements": {
   "host": [
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip",
    "python",
    "poetry >=1.1.0",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0",
    "python",
    "numpy >=1.15",
    "datreant >=1.0.0",
    "click >=6.7",
    "jinja2 >=2.10",
    "pandas >=0.24",
    "matplotlib-base >=2",
    "xdg >=2",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "psutil >=5.7.0"
   ]
  },
  "source": {
   "fn": "mdbenchmark-3.0.1.tar.gz",
   "sha256": "3b2ebb693737a93155a67a7f25f3f5d20140ba8d87e5bda461e44840d0f1f87d",
   "url": "https://pypi.io/packages/source/m/mdbenchmark/mdbenchmark-3.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark"
   ],
   "imports": [
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark",
    "mdbenchmark"
   ],
   "requires": null
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "datreant",
    "jinja2",
    "matplotlib-base",
    "numpy",
    "pandas",
    "psutil",
    "python",
    "python-levenshtein",
    "tabulate",
    "xdg"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mdbenchmark"
  ]
 },
 "pinning_version": "2020.12.09.17.24.05",
 "raw_meta_yaml": "{% set version = \"3.0.1\" %}\n{% set sha256 = \"3b2ebb693737a93155a67a7f25f3f5d20140ba8d87e5bda461e44840d0f1f87d\" %}\n\npackage:\n  name: mdbenchmark\n  version: {{ version }}\n\nsource:\n  fn: mdbenchmark-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/m/mdbenchmark/mdbenchmark-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed -vv .\n  skip: true  # [win]\n  entry_points:\n    - mdbenchmark = mdbenchmark.cli:cli\n\nrequirements:\n  host:\n    - python\n    - poetry >=1.1.0\n    - pip\n  run:\n    - python\n    - numpy >=1.15\n    - datreant >=1.0.0\n    - click >=6.7\n    - jinja2 >=2.10\n    - pandas >=0.24\n    - matplotlib-base >=2\n    - xdg <2  # [py2k]\n    - xdg >=2  # [py>=35]\n    - python-levenshtein >=0.12.0\n    - tabulate >=0.8.2\n    - psutil >=5.7.0\n\ntest:\n  requires:\n    - libglu  # [linux]\n  imports:\n    - mdbenchmark\n  commands:\n    - xvfb-run --server-args=\":99 -screen 0 1024x768x24 -ac +extension GLX -noreset\" mdbenchmark  # [linux]\n    - mdbenchmark  # [not linux]\n\nabout:\n  home: https://github.com/bio-phys/MDBenchmark\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: \"Quickly generate, start and analyze benchmarks for your molecular dynamics simulations.\"\n  doc_url: https://docs.mdbenchmark.org\n  dev_url: https://github.com/bio-phys/MDBenchmark\n  description: >\n    MDBenchmark is a tool to squeeze the maximum out of your limited computing resources. It tries to make it as easy as possible to set up systems on varying numbers of nodes and compare their performances to each other.\n\n    You can also create a plot to get a quick overview of the possible performance (and show of to your friends)!\n\nextra:\n  recipe-maintainers:\n    - kain88-de\n    - mimischi\n",
 "req": {
  "__set__": true,
  "elements": [
   "click",
   "datreant",
   "jinja2",
   "matplotlib-base",
   "numpy",
   "pandas",
   "pip",
   "poetry",
   "psutil",
   "python",
   "python-levenshtein",
   "tabulate",
   "xdg"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "datreant",
    "jinja2",
    "matplotlib-base",
    "numpy",
    "pandas",
    "psutil",
    "python",
    "python-levenshtein",
    "tabulate",
    "xdg"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry >=1.1.0",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click >=6.7",
    "datreant >=1.0.0",
    "jinja2 >=2.10",
    "matplotlib-base >=2",
    "numpy >=1.15",
    "pandas >=0.24",
    "psutil >=5.7.0",
    "python",
    "python-levenshtein >=0.12.0",
    "tabulate >=0.8.2",
    "xdg >=2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/m/mdbenchmark/mdbenchmark-3.0.1.tar.gz",
 "version": "3.0.1"
}