{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199674894.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200150958.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200524664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/207793004.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215121034.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222929001.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/279640321.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/279657442.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/281541570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/287509648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336082544.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340579899.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392541628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/396429493.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/397580770.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/433911082.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/434303600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/439573914.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440043245.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440218810.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/447756117.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/449530759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/450592114.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/452446851.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488602511.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/489919138.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492371918.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501540160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/524274121.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525145958.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/534075851.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/540849756.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "iminuit",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "name": "iminuit",
 "new_version": "2.2.1",
 "new_version_attempts": {
  "1.4.0": 1,
  "1.4.2": 1,
  "1.4.3": 1,
  "1.4.4": 1,
  "1.4.5": 1,
  "1.4.6": 1,
  "1.4.7": 1,
  "1.4.8": 1,
  "1.4.9": 1,
  "1.5.0": 1,
  "1.5.1": 1,
  "1.5.2": 1,
  "1.5.3": 1,
  "1.5.4": 1,
  "2.0.0": 1,
  "2.1.0": 26,
  "2.2.0": 25,
  "2.2.1": 3
 },
 "new_version_errors": {
  "2.1.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.1.0' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on `git_url`s\n",
  "2.2.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.2.0' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on `git_url`s\n",
  "2.2.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.2.1' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on `git_url`s\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "iminuit"
  ]
 },
 "pinning_version": "2020.12.15.22.08.25",
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package numpy-1.19.1-py36h5510c5b_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"iminuit\" %}\n{% set version = \"2.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n- url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88\n  patches:\n    - iminuit-2.0.1-wincomp.patch\n- git_url: https://github.com/scikit-hep/iminuit.git\n  git_rev:  v2.0.0\n  folder: for_tests\n\nbuild:\n  number: 0\n  script:\n    - export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}\n    - {{ PYTHON }} -m pip install . -vvv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  source_files:\n    - for_tests/tests\n  requires:\n    - pytest\n  imports:\n    - iminuit\n  commands:\n    - python -m pytest for_tests/tests\n\nabout:\n  home: https://github.com/scikit-hep/iminuit\n  license: LGPL-2.0-or-later\n  license_family: LGPL\n  license_file: LICENSE\n  summary: Interactive Minimization Tools based on MINUIT\n  description: |\n    iminuit is designed from ground up to be fast, interactive and cython\n    friendly. iminuit extract function signature very permissively starting\n    from checking func_code down to last resort of parsing docstring (or you\n    could tell iminuit to stop looking and take your answer). The interface is\n    inspired heavily by PyMinuit and the status printout is inspired by ROOT\n    Minuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\n    Existing PyMinuit code can be ported to iminuit by just changing the\n    import statement.\n  doc_url: http://iminuit.readthedocs.io\n  dev_url: https://github.com/scikit-hep/iminuit\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n    - bsipocz\n    - piti118\n    - HDembinski\n    - beckermr\n    - chrisburr\n    - henryiii\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "make",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz",
 "version": "2.0.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "iminuit is designed from ground up to be fast, interactive and cython\nfriendly. iminuit extract function signature very permissively starting\nfrom checking func_code down to last resort of parsing docstring (or you\ncould tell iminuit to stop looking and take your answer). The interface is\ninspired heavily by PyMinuit and the status printout is inspired by ROOT\nMinuit. iminuit is mostly compatible with PyMinuit (with few exceptions).\nExisting PyMinuit code can be ported to iminuit by just changing the\nimport statement.\n",
   "dev_url": "https://github.com/scikit-hep/iminuit",
   "doc_url": "http://iminuit.readthedocs.io",
   "home": "https://github.com/scikit-hep/iminuit",
   "license": "LGPL-2.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Interactive Minimization Tools based on MINUIT"
  },
  "build": {
   "number": "0",
   "script": [
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv",
    "export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii",
    "mwcraig",
    "bsipocz",
    "piti118",
    "HDembinski",
    "beckermr",
    "chrisburr",
    "henryiii"
   ]
  },
  "package": {
   "name": "iminuit",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": [
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   },
   {
    "patches": [
     "iminuit-2.0.1-wincomp.patch"
    ],
    "sha256": "b0a3b8ac9dccadcb0f4554fc8fb9c4a3583f356a7071c37e17a0f2bd6cda1b88",
    "url": "https://pypi.io/packages/source/i/iminuit/iminuit-2.0.0.tar.gz"
   },
   {
    "folder": "for_tests",
    "git_rev": "v2.0.0",
    "git_url": "https://github.com/scikit-hep/iminuit.git"
   }
  ],
  "test": {
   "commands": [
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests",
    "python -m pytest for_tests/tests"
   ],
   "imports": [
    "iminuit",
    "iminuit",
    "iminuit",
    "iminuit"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests",
    "for_tests/tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}