{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/242222968.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299582709.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/414080960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/651865096.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-mcbiopi",
 "hash_type": "sha256",
 "name": "r-mcbiopi",
 "new_version": "1.1.6",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-mcbiopi"
  ]
 },
 "pinning_version": "2021.05.24.19.39.56",
 "raw_meta_yaml": "{% set version = '1.1.6' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-mcbiopi\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/mcbiopi_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/mcbiopi/mcbiopi_{{ version }}.tar.gz\n  sha256: 271541d1d79a96caad01b7534886a799587894b6dcfab600ff82c312bc165cb1\n\nbuild:\n  noarch: generic\n  merge_build_host: True  # [win]\n  number: 1002\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('mcbiopi')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('mcbiopi')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=mcbiopi\n  license: LGPL (>= 2)\n  summary: Computes the prime implicants or a minimal disjunctive normal form for a logic expression\n    presented by a truth table or a logic tree. Has been particularly  developed for\n    logic expressions resulting from a logic regression analysis, i.e. logic expressions\n    typically consisting of up to 16 literals, where the prime implicants  are typically\n    composed of a maximum of 4 or 5 literals.\n  license_family: LGPL\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/LGPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: mcbiopi\n# Title: Matrix Computation Based Identification of Prime Implicants\n# Version: 1.1.6\n# Date: 2018-10-06\n# Author: Holger Schwender\n# Maintainer: Holger Schwender <holger.schw@gmx.de>\n# Imports: methods\n# Description: Computes the prime implicants or a minimal disjunctive normal form for a logic expression presented by a truth table or a logic tree. Has been particularly  developed for logic expressions resulting from a logic regression analysis, i.e. logic expressions typically consisting of up to 16 literals, where the prime implicants  are typically composed of a maximum of 4 or 5 literals.\n# License: LGPL (>= 2)\n# NeedsCompilation: no\n# Packaged: 2018-10-06 19:21:54 UTC; schwender\n# Repository: CRAN\n# Date/Publication: 2018-10-06 20:10:03 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/mcbiopi_1.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/mcbiopi/mcbiopi_1.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/mcbiopi_1.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/mcbiopi/mcbiopi_1.1.6.tar.gz"
 ],
 "version": "1.1.6"
}