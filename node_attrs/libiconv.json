{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/213443410.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248393921.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274027456.json"
   },
   "data": {
    "bot_rerun": 1597087667.5924973,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465841386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/468105419.json"
   },
   "data": {
    "bot_rerun": 1597441845.414802,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/468202917.json"
   },
   "data": {
    "bot_rerun": 1597525327.9994118,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/468397200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/936794180.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "libiconv",
 "hash_type": "sha256",
 "name": "libiconv",
 "new_version": "1.17",
 "new_version_attempts": {
  "1.16": 1,
  "1.17": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libiconv"
  ]
 },
 "pinning_version": "2022.05.15.15.04.08",
 "raw_meta_yaml": "{% set version = \"1.17\" %}\n\npackage:\n  name: libiconv\n  version: {{ version }}\n\nsource:\n  url: http://ftp.gnu.org/pub/gnu/libiconv/libiconv-{{ version }}.tar.gz\n  sha256: 8f74213b56238c85a50a5329f77e06198771e70dd9a739779f4c02f65d971313\n  patches:\n    - glibc.patch  # [linux]\n    - CMakeLists.txt.patch  # [win]\n    - config.h.patch  # [win]\n    - configure.cmake.patch  # [win]\n\nbuild:\n  number: 0\n  run_exports:\n    # Pretty good recently, let's trust them.\n    #   https://abi-laboratory.pro/tracker/timeline/libiconv/\n    - {{ pin_subpackage('libiconv') }}\n\nrequirements:\n  build:\n    - libtool  # [unix]\n    - {{ compiler('c') }}\n    - cmake     # [win]\n    - ninja     # [win]\n    - m2-patch  # [win]\n    - make      # [unix]\n\ntest:\n  commands:\n    - iconv --help  # [not win]\n\nabout:\n  home: https://www.gnu.org/software/libiconv/\n  license: GPL and LGPL\n  license_file: COPYING\n  summary: Provides iconv for systems which don't have one (or that cannot convert from/to Unicode.)\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n    - jakirkham\n    - jhamman\n    - scopatz\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.17.tar.gz",
 "version": "1.17"
}