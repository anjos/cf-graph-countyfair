{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/254842912.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/259157786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/261594830.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262395726.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262559524.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269140433.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/270750259.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274440552.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274566026.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274594539.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278932721.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/280601348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/283679002.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285922362.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/288850424.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/292108852.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/295428888.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321242265.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321528475.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339459764.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349671990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356508067.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375786524.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/398321379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401090903.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/406713157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/411093474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412167082.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412378537.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428209734.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428798319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442480197.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.32"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/449211594.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.32.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495974392.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.33"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503738310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.33.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/558302880.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559486436.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.34"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "eelbrain",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/christianbrodbeck/eelbrain",
   "doc_url": "http://eelbrain.readthedocs.io/",
   "home": "http://eelbrain.readthedocs.io",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MEG/EEG analysis tools"
  },
  "build": {
   "number": "0",
   "osx_is_app": true,
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "christianbrodbeck",
    "christianbrodbeck"
   ]
  },
  "package": {
   "name": "eelbrain",
   "version": "0.34"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pip",
    "cython >=0.21",
    "numpy"
   ],
   "run": [
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "olefile",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "olefile",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0"
   ]
  },
  "source": {
   "sha256": "2f72c7c0e0807eef5da2ed7748dbba4bde78573c9f5ac65ddfbbb58067554a96",
   "url": "https://pypi.io/packages/source/e/eelbrain/eelbrain-0.34.tar.gz"
  },
  "test": {
   "imports": [
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "numpy",
    "olefile",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "colormath",
    "ipython",
    "keyring",
    "matplotlib-base",
    "mayavi",
    "mne",
    "nibabel",
    "nilearn",
    "numba",
    "numpy",
    "olefile",
    "packaging",
    "pillow",
    "pyface",
    "pysurfer",
    "python",
    "scipy",
    "tqdm",
    "wxpython"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/christianbrodbeck/eelbrain",
   "doc_url": "http://eelbrain.readthedocs.io/",
   "home": "http://eelbrain.readthedocs.io",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MEG/EEG analysis tools"
  },
  "build": {
   "number": "0",
   "osx_is_app": true,
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "christianbrodbeck",
    "christianbrodbeck",
    "christianbrodbeck",
    "christianbrodbeck",
    "christianbrodbeck",
    "christianbrodbeck"
   ]
  },
  "package": {
   "name": "eelbrain",
   "version": "0.34"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "python.app",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "python.app",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pywin32-ctypes",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pywin32-ctypes",
    "pip",
    "cython >=0.21",
    "numpy"
   ],
   "run": [
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "olefile",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "olefile",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "python.app",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "python.app",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0"
   ]
  },
  "source": {
   "sha256": "2f72c7c0e0807eef5da2ed7748dbba4bde78573c9f5ac65ddfbbb58067554a96",
   "url": "https://pypi.io/packages/source/e/eelbrain/eelbrain-0.34.tar.gz"
  },
  "test": {
   "imports": [
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save"
   ]
  }
 },
 "name": "eelbrain",
 "new_version": "0.34",
 "new_version_attempts": {
  "0.31.3": 1,
  "0.31.4": 1,
  "0.31.5": 1,
  "0.31.6": 1,
  "0.31.7": 1,
  "0.31.8": 1,
  "0.31.9": 1,
  "0.32": 1,
  "0.32.1": 1,
  "0.33": 1,
  "0.33.1": 1,
  "0.34": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/christianbrodbeck/eelbrain",
   "doc_url": "http://eelbrain.readthedocs.io/",
   "home": "http://eelbrain.readthedocs.io",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MEG/EEG analysis tools"
  },
  "build": {
   "number": "0",
   "osx_is_app": true,
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "christianbrodbeck",
    "christianbrodbeck"
   ]
  },
  "package": {
   "name": "eelbrain",
   "version": "0.34"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "python.app",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "python.app",
    "pip",
    "cython >=0.21",
    "numpy"
   ],
   "run": [
    "python",
    "python.app",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "python.app",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0"
   ]
  },
  "source": {
   "sha256": "2f72c7c0e0807eef5da2ed7748dbba4bde78573c9f5ac65ddfbbb58067554a96",
   "url": "https://pypi.io/packages/source/e/eelbrain/eelbrain-0.34.tar.gz"
  },
  "test": {
   "imports": [
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "numpy",
    "pip",
    "python",
    "python.app"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "colormath",
    "ipython",
    "keyring",
    "matplotlib-base",
    "mayavi",
    "mne",
    "nibabel",
    "nilearn",
    "numba",
    "numpy",
    "packaging",
    "pillow",
    "pyface",
    "pysurfer",
    "python",
    "python.app",
    "scipy",
    "tqdm",
    "wxpython"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "eelbrain"
  ]
 },
 "pinning_version": "2021.01.21.00.27.51",
 "raw_meta_yaml": "{% set name = \"eelbrain\" %}\n{% set version = \"0.34\" %}\n{% set sha256 = \"2f72c7c0e0807eef5da2ed7748dbba4bde78573c9f5ac65ddfbbb58067554a96\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  osx_is_app: true\n  skip: true  # [py<37]\n  # Note: --no-deps is currently required due to https://github.com/conda/conda-build/issues/3254\n  # Once resolved, it should be removed.\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - setuptools >=17\n  host:\n    - libblas\n    - libcblas\n    - python\n    - python.app  # [osx]\n    - olefile  # [win or linux]\n    - pywin32-ctypes  # [win]\n    - pip\n    - cython >=0.21\n    - numpy\n  run:\n    - python\n    - python.app  # [osx]\n    - colormath >=2.1\n    - ipython\n    - keyring >=5\n    - matplotlib-base >=3\n    - mne >=0.19\n    - nibabel >=2.5\n    - olefile  # [linux]\n    - {{ pin_compatible('numpy') }}\n    - pillow\n    - pysurfer >=0.9\n    - nilearn\n    - packaging\n    - scipy >=1.3\n    - numba\n    - tqdm >=4.40\n    - wxpython >=4.0.3\n    - mayavi >=4.6.2\n    - pyface !=7.2.0  # broken for wx\n\ntest:\n  imports:\n    - eelbrain\n    - eelbrain.load\n    - eelbrain.mne_fixes\n    - eelbrain.plot\n    - eelbrain.save\n\nabout:\n  home: http://eelbrain.readthedocs.io\n  summary: MEG/EEG analysis tools\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  doc_url: http://eelbrain.readthedocs.io/\n  dev_url: https://github.com/christianbrodbeck/eelbrain\n\nextra:\n  recipe-maintainers:\n    - christianbrodbeck\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "colormath",
   "cxx_compiler_stub",
   "cython",
   "ipython",
   "keyring",
   "libblas",
   "libcblas",
   "matplotlib-base",
   "mayavi",
   "mne",
   "nibabel",
   "nilearn",
   "numba",
   "numpy",
   "olefile",
   "packaging",
   "pillow",
   "pip",
   "pyface",
   "pysurfer",
   "python",
   "python.app",
   "pywin32-ctypes",
   "scipy",
   "setuptools",
   "tqdm",
   "wxpython"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "libblas",
    "libcblas",
    "numpy",
    "olefile",
    "pip",
    "python",
    "python.app",
    "pywin32-ctypes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "colormath",
    "cxx_compiler_stub",
    "ipython",
    "keyring",
    "matplotlib-base",
    "mayavi",
    "mne",
    "nibabel",
    "nilearn",
    "numba",
    "numpy",
    "olefile",
    "packaging",
    "pillow",
    "pyface",
    "pysurfer",
    "python",
    "python.app",
    "scipy",
    "tqdm",
    "wxpython"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython >=0.21",
    "libblas",
    "libcblas",
    "numpy",
    "olefile",
    "pip",
    "python",
    "python.app",
    "pywin32-ctypes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mayavi >=4.6.2",
    "mne >=0.19",
    "nibabel >=2.5",
    "nilearn",
    "numba",
    "numpy",
    "olefile",
    "packaging",
    "pillow",
    "pyface !=7.2.0",
    "pysurfer >=0.9",
    "python",
    "python.app",
    "scipy >=1.3",
    "tqdm >=4.40",
    "wxpython >=4.0.3"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/e/eelbrain/eelbrain-0.34.tar.gz",
 "version": "0.34",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/christianbrodbeck/eelbrain",
   "doc_url": "http://eelbrain.readthedocs.io/",
   "home": "http://eelbrain.readthedocs.io",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MEG/EEG analysis tools"
  },
  "build": {
   "number": "0",
   "osx_is_app": true,
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "christianbrodbeck",
    "christianbrodbeck"
   ]
  },
  "package": {
   "name": "eelbrain",
   "version": "0.34"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools >=17"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pywin32-ctypes",
    "pip",
    "cython >=0.21",
    "numpy",
    "libblas",
    "libcblas",
    "python",
    "olefile",
    "pywin32-ctypes",
    "pip",
    "cython >=0.21",
    "numpy"
   ],
   "run": [
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0",
    "python",
    "colormath >=2.1",
    "ipython",
    "keyring >=5",
    "matplotlib-base >=3",
    "mne >=0.19",
    "nibabel >=2.5",
    "numpy",
    "pillow",
    "pysurfer >=0.9",
    "nilearn",
    "packaging",
    "scipy >=1.3",
    "numba",
    "tqdm >=4.40",
    "wxpython >=4.0.3",
    "mayavi >=4.6.2",
    "pyface !=7.2.0"
   ]
  },
  "source": {
   "sha256": "2f72c7c0e0807eef5da2ed7748dbba4bde78573c9f5ac65ddfbbb58067554a96",
   "url": "https://pypi.io/packages/source/e/eelbrain/eelbrain-0.34.tar.gz"
  },
  "test": {
   "imports": [
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save",
    "eelbrain",
    "eelbrain.load",
    "eelbrain.mne_fixes",
    "eelbrain.plot",
    "eelbrain.save"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "numpy",
    "olefile",
    "pip",
    "python",
    "pywin32-ctypes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "colormath",
    "ipython",
    "keyring",
    "matplotlib-base",
    "mayavi",
    "mne",
    "nibabel",
    "nilearn",
    "numba",
    "numpy",
    "packaging",
    "pillow",
    "pyface",
    "pysurfer",
    "python",
    "scipy",
    "tqdm",
    "wxpython"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}