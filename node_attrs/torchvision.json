{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222628090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256245365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/281038548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/304815544.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/329927608.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336082777.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/556415465.json"
   },
   "data": {
    "bot_rerun": 1615344003.4012864,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/556433054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/588993074.json"
   },
   "data": {
    "bot_rerun": 1615662626.9787064,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/589044704.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/592355730.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/592418071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/620635098.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "torchvision",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py36h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py38h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py39h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py37h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "torchvision-0.9.0.tar.gz",
   "sha256": "9351ed92aded632f8c7f59dfadac13c191a834babe682f5785ea47e6fcf6b472",
   "url": "https://github.com/pytorch/vision/archive/v0.9.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cudnn",
    "jpeg",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudnn",
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "torchvision"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "requests",
    "scipy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py36h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py38h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py39h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda112h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py38cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py36cuda110h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py39cuda111h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cuda"
     ],
     "string": "py37cuda102h1234567_0_cuda"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cuda*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cuda*",
      "cudnn",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py37h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py37h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py39h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py38h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py36h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py38h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py39h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "torchvision-0.9.0.tar.gz",
   "sha256": "9351ed92aded632f8c7f59dfadac13c191a834babe682f5785ea47e6fcf6b472",
   "url": "https://github.com/pytorch/vision/archive/v0.9.0.tar.gz"
  }
 },
 "name": "torchvision-split",
 "new_version": "0.9.1",
 "new_version_attempts": {
  "0.8.2": 1,
  "0.9.0": 9,
  "0.9.1": 84
 },
 "new_version_errors": {
  "0.9.0": "We found a problem parsing the recipe for version '0.9.0': \n\nParserError('while parsing a block mapping', <ruamel.yaml.error.StringMark object at 0x7fa0c5f97c10>, \"expected <block end>, but found '<scalar>'\", <ruamel.yaml.error.StringMark object at 0x7fa0c5c1e270>)\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 111, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 78, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 101, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 218, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 136, in compose_node\n    node = self.compose_sequence_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 180, in compose_sequence_node\n    node.value.append(self.compose_node(node, index))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 218, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/composer.py\", line 211, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/parser.py\", line 140, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/parser.py\", line 585, in parse_block_mapping_key\n    raise ParserError(\n",
  "0.9.1": "We found a problem parsing the recipe for version '0.9.1': \n\nParserError('while parsing a block mapping',   in \"<unicode string>\", line 28, column 7:\n          string__###conda-selector###__cu ... \n          ^ (line: 28), \"expected <block end>, but found '<scalar>'\",   in \"<unicode string>\", line 29, column 125:\n     ...  cuda_compiler_version|replace(\".\", \"\") }}h<{ PKG_HASH }}_<{ num ... \n                                         ^ (line: 29))\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 421, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 109, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 76, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 99, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 142, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 222, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 140, in compose_node\n    node = self.compose_sequence_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 184, in compose_sequence_node\n    node.value.append(self.compose_node(node, index))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 142, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 222, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 142, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 215, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 138, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 590, in parse_block_mapping_key\n    raise ParserError(\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py37h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py39h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py38h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py36h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "torchvision-0.9.0.tar.gz",
   "sha256": "9351ed92aded632f8c7f59dfadac13c191a834babe682f5785ea47e6fcf6b472",
   "url": "https://github.com/pytorch/vision/archive/v0.9.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "jpeg",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "torchvision"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "requests",
    "scipy"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py38h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "torchvision =*=*_cpu"
     ],
     "string": "py39h1234567_0_cpu"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "jpeg",
      "libpng",
      "numpy",
      "pillow >=4.1.1",
      "pytorch >=1.8.0=cpu*"
     ],
     "run": [
      "python",
      "pytorch >=1.8.0=cpu*",
      "numpy",
      "pillow >=4.1.1"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not test_url_is_accessible\" test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": null,
    "name": "torchvision-cpu",
    "requirements": {
     "run": [
      "torchvision =0.9.0=*_cpu"
     ]
    },
    "test": {
     "imports": [
      "torchvision"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "torchvision-0.9.0.tar.gz",
   "sha256": "9351ed92aded632f8c7f59dfadac13c191a834babe682f5785ea47e6fcf6b472",
   "url": "https://github.com/pytorch/vision/archive/v0.9.0.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "jpeg",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "torchvision"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "requests",
    "scipy"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchvision",
   "torchvision-cpu"
  ]
 },
 "pinning_version": "2021.04.21.17.39.23",
 "pre_pr_migrator_status": {
  "cuda110": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/648741383\">bot CI job</a>): master: ['linux_64_cuda_compiler_version11.0cudnn8python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_cuda_compiler_version11.0cudnn8python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_cuda_compiler_version11.0cudnn8python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n']"
 },
 "raw_meta_yaml": "{% set version = \"0.9.0\" %}\n{% set number = 0 %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: torchvision-split\n  version: {{ version }}\n\nsource:\n  fn: torchvision-{{ version }}.tar.gz\n  url: https://github.com/pytorch/vision/archive/v{{ version }}.tar.gz\n  sha256: 9351ed92aded632f8c7f59dfadac13c191a834babe682f5785ea47e6fcf6b472\n\nbuild:\n  number: {{ number }}\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\noutputs:\n  - name: torchvision\n    script: build-torch.sh   # [not win]\n    script: build-torch.bat  # [win]\n    build:\n      string: \"py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ number }}_{{ torch_proc_type }}\"                                                  # [cuda_compiler_version == \"None\"]\n      string: \"py{{ CONDA_PY }}cuda{{ cuda_compiler_version|replace(\".\", \"\") }}h{{ PKG_HASH }}_{{ number }}_{{ torch_proc_type }}\"  # [cuda_compiler_version != \"None\"]\n      run_exports:\n        # ensure matching proc-type\n        - torchvision =*=*_{{ torch_proc_type }}\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n        - sysroot_linux-64 ==2.17                # [linux64]\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - pytorch =*={{ torch_proc_type }}*      # [build_platform != target_platform]\n      host:\n        - python\n        - pip\n        - setuptools\n        - cudnn                          # [cuda_compiler_version != \"None\"]\n        # split off image/video into separate outputs?\n        - jpeg\n        - libpng\n        # ffmpeg\n        - numpy\n        - pillow >=4.1.1\n        - pytorch >=1.8.0={{ torch_proc_type }}*\n      run:\n        - python\n        - pytorch >=1.8.0={{ torch_proc_type }}*\n        - {{ pin_compatible('cudnn') }}  # [cuda_compiler_version != \"None\"]\n        - {{ pin_compatible('numpy') }}\n        - pillow >=4.1.1\n\n    test:\n      requires:\n        - pytest\n        - requests\n        - scipy\n      source_files:\n        - test\n      imports:\n        - torchvision\n        - torchvision.datasets\n        - torchvision.models\n        - torchvision.transforms\n        - torchvision.utils\n      commands:\n        # skip test_url_is_accessible instead of hitting 20+ servers per run, since\n        # each server might be occasionally unresponsive and end up failing our CI\n        - pytest -k \"not test_url_is_accessible\" test/\n\n  # for compatibility with (& ease of migration from) old packages in the pytorch channel, see\n  # https://anaconda.org/pytorch/torchvision-cpu/files\n  - name: torchvision-cpu\n    build:\n      skip: true  # [cuda_compiler_version != \"None\"]\n    requirements:\n      run:\n        - torchvision ={{ version }}=*_cpu\n    test:\n      imports:\n        - torchvision\n\nabout:\n  home: http://pytorch.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Image and video datasets and models for torch deep learning\n  dev_url: https://github.com/pytorch/vision\n  doc_url: http://pytorch.org/docs/master/torchvision\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n    - hmaarrfk\n    - h-vetinari\n  feedstock-name: torchvision\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cudnn",
   "cxx_compiler_stub",
   "jpeg",
   "libpng",
   "numpy",
   "pillow",
   "pip",
   "python",
   "pytorch",
   "setuptools",
   "sysroot_linux-64",
   "torchvision"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "jpeg",
    "libpng",
    "linux-sysroot",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "linux-sysroot",
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "torchvision"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "requests",
    "scipy"
   ]
  }
 },
 "smithy_version": "3.10.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cudnn",
    "jpeg",
    "libpng",
    "numpy",
    "pillow >=4.1.1",
    "pip",
    "python",
    "pytorch >=1.8.0=cpu*",
    "pytorch >=1.8.0=cuda*",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudnn",
    "numpy",
    "pillow >=4.1.1",
    "python",
    "pytorch >=1.8.0=cpu*",
    "pytorch >=1.8.0=cuda*",
    "torchvision =0.9.0=*_cpu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "requests",
    "scipy"
   ]
  }
 },
 "url": "https://github.com/pytorch/vision/archive/v0.9.0.tar.gz",
 "version": "0.9.0"
}