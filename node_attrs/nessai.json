{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1188164395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "nessai",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "nessai is a nested sampling algorithm for Bayesian Inference that\nincorporates normalisings flows. It is designed for applications where the\nBayesian likelihood is computationally expensive.\n",
   "dev_url": "https://github.com/mj-will/nessai",
   "doc_url": "https://nessai.readthedocs.io",
   "home": "https://github.com/mj-will/nessai",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.md",
   "summary": "nessai: Nested Sampling with Artificial Intelligence"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johnveitch",
    "mj-will"
   ]
  },
  "package": {
   "name": "nessai",
   "version": "0.7.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools",
    "setuptools-scm"
   ],
   "run": [
    "glasflow",
    "matplotlib-base >=2.0",
    "numpy >=1.9",
    "pandas",
    "python >=3.7",
    "scipy >=0.16",
    "seaborn",
    "pytorch >=1.11.0",
    "tqdm"
   ]
  },
  "source": {
   "sha256": "50d1557eebc71e7ddd4678dd9451d5c1174bf32a0116b801a85fd51a46d8ec2e",
   "url": "https://pypi.io/packages/source/n/nessai/nessai-0.7.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -m pytest tests/ -vv -k \"not (integration_test or slow_integration_test)\""
   ],
   "imports": [
    "nessai"
   ],
   "requires": [
    "pip",
    "corner",
    "pytest >=0.6.0",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout"
   ],
   "source_files": [
    "tests",
    "pyproject.toml"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools-scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glasflow",
    "matplotlib-base",
    "numpy",
    "pandas",
    "python",
    "pytorch",
    "scipy",
    "seaborn",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "corner",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "nessai is a nested sampling algorithm for Bayesian Inference that\nincorporates normalisings flows. It is designed for applications where the\nBayesian likelihood is computationally expensive.\n",
   "dev_url": "https://github.com/mj-will/nessai",
   "doc_url": "https://nessai.readthedocs.io",
   "home": "https://github.com/mj-will/nessai",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.md",
   "summary": "nessai: Nested Sampling with Artificial Intelligence"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johnveitch",
    "mj-will"
   ]
  },
  "package": {
   "name": "nessai",
   "version": "0.7.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools",
    "setuptools-scm"
   ],
   "run": [
    "glasflow",
    "matplotlib-base >=2.0",
    "numpy >=1.9",
    "pandas",
    "python >=3.7",
    "scipy >=0.16",
    "seaborn",
    "pytorch >=1.11.0",
    "tqdm"
   ]
  },
  "source": {
   "sha256": "50d1557eebc71e7ddd4678dd9451d5c1174bf32a0116b801a85fd51a46d8ec2e",
   "url": "https://pypi.io/packages/source/n/nessai/nessai-0.7.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -m pytest tests/ -vv -k \"not (integration_test or slow_integration_test)\""
   ],
   "imports": [
    "nessai"
   ],
   "requires": [
    "pip",
    "corner",
    "pytest >=0.6.0",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout"
   ],
   "source_files": [
    "tests",
    "pyproject.toml"
   ]
  }
 },
 "name": "nessai",
 "new_version": "0.7.1",
 "new_version_attempts": {
  "0.7.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nessai"
  ]
 },
 "pinning_version": "2023.01.04.13.03.46",
 "raw_meta_yaml": "{% set name = \"nessai\" %}\n{% set version = \"0.7.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/nessai-{{ version }}.tar.gz\n  sha256: 50d1557eebc71e7ddd4678dd9451d5c1174bf32a0116b801a85fd51a46d8ec2e\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n    - setuptools\n    - setuptools-scm\n  run:\n    - glasflow\n    - matplotlib-base >=2.0\n    - numpy >=1.9\n    - pandas\n    - python >=3.7\n    - scipy >=0.16\n    - seaborn\n    - pytorch >=1.11.0\n    - tqdm\n\ntest:\n  requires:\n    - pip\n    - corner\n    - pytest >=0.6.0\n    - pytest-cov\n    - pytest-rerunfailures\n    - pytest-timeout\n  imports:\n    - nessai\n  source_files:\n    - tests\n    - pyproject.toml\n  commands:\n    - pip check\n    - python -m pytest tests/ -vv -k \"not (integration_test or slow_integration_test)\"\n\nabout:\n  home: https://github.com/mj-will/nessai\n  dev_url: https://github.com/mj-will/nessai\n  doc_url: https://nessai.readthedocs.io \n  summary: 'nessai: Nested Sampling with Artificial Intelligence'\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.md\n  description: |\n    nessai is a nested sampling algorithm for Bayesian Inference that\n    incorporates normalisings flows. It is designed for applications where the\n    Bayesian likelihood is computationally expensive.\n\nextra:\n  recipe-maintainers:\n    - johnveitch\n    - mj-will\n",
 "req": {
  "__set__": true,
  "elements": [
   "glasflow",
   "matplotlib-base",
   "numpy",
   "pandas",
   "pip",
   "python",
   "pytorch",
   "scipy",
   "seaborn",
   "setuptools",
   "setuptools-scm",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools-scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glasflow",
    "matplotlib-base",
    "numpy",
    "pandas",
    "python",
    "pytorch",
    "scipy",
    "seaborn",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "corner",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7",
    "setuptools",
    "setuptools-scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glasflow",
    "matplotlib-base >=2.0",
    "numpy >=1.9",
    "pandas",
    "python >=3.7",
    "pytorch >=1.11.0",
    "scipy >=0.16",
    "seaborn",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "corner",
    "pip",
    "pytest >=0.6.0",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/n/nessai/nessai-0.7.0.tar.gz",
 "version": "0.7.0"
}