{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/220098413.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375169144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378280613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/438723529.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pysurfer",
 "hash_type": "sha256",
 "name": "pysurfer",
 "new_version": "0.11.0",
 "new_version_attempts": {
  "0.11.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pysurfer"
  ]
 },
 "pinning_version": "2020.06.23.15.05.51",
 "raw_meta_yaml": "{% set version = \"0.11.0\" %}\n{% set sha256 = \"ae709b6f933694f1810eb3c8f517bdb76c13576d74a7a5a1704e05239df0a179\" %}\n\npackage:\n  name: pysurfer\n  version: {{ version }}\n\nsource:\n  fn: pysurfer-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/p/pysurfer/pysurfer-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python >=3.5\n    - pip\n  run:\n    - python >=3.5\n    - imageio\n    - matplotlib-base\n    - mayavi\n    - nibabel\n    - numpy\n    - scipy\n\ntest:\n  commands:\n#    - DISPLAY=localhost:1.0 xvfb-run -a python -c \"import surfer\"  # [linux]\n    - python -c \"import surfer\"  # [not linux]\n\nabout:\n  home: http://pysurfer.github.com\n  license: BSD-3-clause\n  license_file: LICENSE\n  license_family: BSD\n  summary: Cortical surface visualization using Python\n\n  description: |\n    PySurfer is a Python library for visualizing cortical surface\n    representations of neuroimaging data. The package is primarily intended for\n    use with Freesurfer, but it can plot data that are drawn from a variety of\n    sources. PySurfer extends Mayavi\u2019s powerful rendering engine with a\n    high-level interface for working with MRI and MEG data.\n  doc_url: http://pysurfer.github.io\n  dev_url: https://github.com/nipy/PySurfer/\n\nextra:\n  recipe-maintainers:\n    - christianbrodbeck\n    - larsoner\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pysurfer/pysurfer-0.11.0.tar.gz",
 "version": "0.11.0"
}