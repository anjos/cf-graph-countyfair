{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/393197258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393201024.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393201479.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393663985.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6202"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/406839700.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6204"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435019966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base622"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/471817113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485595660.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533233157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/596536823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6226"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597511818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6228"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643888745.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6240"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "hammer",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A C++ software library, designed to provide fast and efficient reweighting\nof large Monte Carlo datasets containing semileptonic b-Hadron decays to\nany desired New Physics, or to any description of the hadronic matrix\nelements. See the HAMMER website for more information.\n",
   "dev_url": "https://gitlab.com/mpapucci/Hammer",
   "doc_url": "https://hammer.physics.lbl.gov/HammerManual.pdf",
   "home": "https://hammer.physics.lbl.gov/",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Helicity Amplitude Module for Matrix Element Reweighting"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr"
   ]
  },
  "package": {
   "name": "hammer",
   "version": "1.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove"
   ],
   "run": [
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base"
   ],
   "run_constrained": null
  },
  "source": {
   "patches": [
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch"
   ],
   "sha256": "ec70a8a67f7feb7b4013bb78af22481186665eb2b6803c7bc441f464b63415a9",
   "url": "https://gitlab.com/mpapucci/Hammer/-/archive/v1.1.0/Hammer-v1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py"
   ],
   "imports": [
    "hammer",
    "hammer",
    "hammer",
    "hammer"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cymove",
    "cython",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "root_base",
    "yaml-cpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "yaml-cpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A C++ software library, designed to provide fast and efficient reweighting\nof large Monte Carlo datasets containing semileptonic b-Hadron decays to\nany desired New Physics, or to any description of the hadronic matrix\nelements. See the HAMMER website for more information.\n",
   "dev_url": "https://gitlab.com/mpapucci/Hammer",
   "doc_url": "https://hammer.physics.lbl.gov/HammerManual.pdf",
   "home": "https://hammer.physics.lbl.gov/",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Helicity Amplitude Module for Matrix Element Reweighting"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr"
   ]
  },
  "package": {
   "name": "hammer",
   "version": "1.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove"
   ],
   "run": [
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base"
   ],
   "run_constrained": [
    "__osx >=10.13",
    "__osx >=10.13",
    "__osx >=10.13",
    "__osx >=10.13"
   ]
  },
  "source": {
   "patches": [
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch"
   ],
   "sha256": "ec70a8a67f7feb7b4013bb78af22481186665eb2b6803c7bc441f464b63415a9",
   "url": "https://gitlab.com/mpapucci/Hammer/-/archive/v1.1.0/Hammer-v1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py"
   ],
   "imports": [
    "hammer",
    "hammer",
    "hammer",
    "hammer",
    "hammer",
    "hammer",
    "hammer",
    "hammer"
   ]
  }
 },
 "name": "hammer",
 "new_version": false,
 "new_version_attempts": {
  "1.1.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "A C++ software library, designed to provide fast and efficient reweighting\nof large Monte Carlo datasets containing semileptonic b-Hadron decays to\nany desired New Physics, or to any description of the hadronic matrix\nelements. See the HAMMER website for more information.\n",
   "dev_url": "https://gitlab.com/mpapucci/Hammer",
   "doc_url": "https://hammer.physics.lbl.gov/HammerManual.pdf",
   "home": "https://hammer.physics.lbl.gov/",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Helicity Amplitude Module for Matrix Element Reweighting"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "chrisburr",
    "chrisburr",
    "chrisburr"
   ]
  },
  "package": {
   "name": "hammer",
   "version": "1.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove",
    "python",
    "root_base",
    "boost-cpp",
    "hepmc2",
    "yaml-cpp",
    "numpy",
    "matplotlib-base",
    "cython",
    "cymove"
   ],
   "run": [
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base",
    "python",
    "boost-cpp",
    "yaml-cpp",
    "hepmc2",
    "numpy",
    "matplotlib-base"
   ],
   "run_constrained": [
    "__osx >=10.13",
    "__osx >=10.13",
    "__osx >=10.13",
    "__osx >=10.13"
   ]
  },
  "source": {
   "patches": [
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch",
    "0001-Add-missing-includes.patch"
   ],
   "sha256": "ec70a8a67f7feb7b4013bb78af22481186665eb2b6803c7bc441f464b63415a9",
   "url": "https://gitlab.com/mpapucci/Hammer/-/archive/v1.1.0/Hammer-v1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py",
    "cd $CONDA_PREFIX/share/Hammer/examples",
    "./demo01",
    "./demo01card",
    "./demo01root",
    "./demo02",
    "./demo02root",
    "./demo03",
    "./demo03root",
    "./demo04",
    "./demo04root",
    "./demo04root2",
    "./demo05",
    "./demo07",
    "./demo08",
    "./demo09",
    "./demo10",
    "python demo03.py",
    "python demo04.py"
   ],
   "imports": [
    "hammer",
    "hammer",
    "hammer",
    "hammer"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cymove",
    "cython",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "root_base",
    "yaml-cpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "yaml-cpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hammer"
  ]
 },
 "pinning_version": "2021.05.13.06.28.40",
 "pre_pr_migrator_status": {
  "root_base6240": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/769601846\">bot CI job</a>): master: [\"TypeError('__init__(): incompatible constructor arguments. The following argument types are supported:\\\\n    1. mamba.mamba_api.Transaction(arg0: mamba::MSolver, arg1: mamba.mamba_api.MultiPackageCache, arg2: str)\\\\n\\\\nInvoked with: <mamba.mamba_api.Solver object at 0x7f5ee03c3a30>, <mamba.mamba_api.MultiPackageCache object at 0x7f5f722e2a30>')\"]"
 },
 "raw_meta_yaml": "{% set name = \"hammer\" %}\n{% set version = \"1.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/mpapucci/Hammer/-/archive/v{{ version }}/Hammer-v{{ version }}.tar.gz\n  sha256: ec70a8a67f7feb7b4013bb78af22481186665eb2b6803c7bc441f464b63415a9\n  patches:\n    - 0001-Add-missing-includes.patch\n\nbuild:\n  number: 5\n  skip: true  # [win or py2k]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make\n    - pkg-config\n  host:\n    - python\n    - root_base\n    - boost-cpp\n    - hepmc2\n    - yaml-cpp\n    - numpy\n    - matplotlib-base\n    - cython\n    - cymove\n  run:\n    - python\n    - boost-cpp\n    - yaml-cpp\n    - hepmc2\n    - {{ pin_compatible('numpy') }}\n    - matplotlib-base\n  run_constrained:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\ntest:\n  imports:\n    - hammer\n  commands:\n    - cd $CONDA_PREFIX/share/Hammer/examples\n    - ./demo01\n    - ./demo01card\n    - ./demo01root\n    - ./demo02\n    - ./demo02root\n    - ./demo03\n    - ./demo03root\n    - ./demo04\n    # Disabled due to being very slow\n    # - ./demo04parallel\n    - ./demo04root\n    - ./demo04root2\n    - ./demo05\n    - ./demo07\n    - ./demo08\n    - ./demo09\n    - ./demo10\n    - python demo03.py\n    - python demo04.py\n\nabout:\n  home: https://hammer.physics.lbl.gov/\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: Helicity Amplitude Module for Matrix Element Reweighting\n\n  description: |\n    A C++ software library, designed to provide fast and efficient reweighting\n    of large Monte Carlo datasets containing semileptonic b-Hadron decays to\n    any desired New Physics, or to any description of the hadronic matrix\n    elements. See the HAMMER website for more information.\n  doc_url: https://hammer.physics.lbl.gov/HammerManual.pdf\n  dev_url: https://gitlab.com/mpapucci/Hammer\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost-cpp",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "cymove",
   "cython",
   "hepmc2",
   "make",
   "matplotlib-base",
   "numpy",
   "pkg-config",
   "python",
   "root_base",
   "yaml-cpp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cymove",
    "cython",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "root_base",
    "yaml-cpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "yaml-cpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cymove",
    "cython",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "root_base",
    "yaml-cpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "hepmc2",
    "matplotlib-base",
    "numpy",
    "python",
    "yaml-cpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.com/mpapucci/Hammer/-/archive/v1.1.0/Hammer-v1.1.0.tar.gz",
 "version": "1.1.0"
}