{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/500331662.json"
   },
   "data": {
    "bot_rerun": 1613170847.2492692,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571575689.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "coretran",
 "hash_type": "sha256",
 "name": "coretran",
 "new_version": "1.0.1",
 "new_version_attempts": {
  "1.0.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "coretran"
  ]
 },
 "pinning_version": "2021.02.11.03.11.06",
 "raw_meta_yaml": "{% set name = \"coretran\" %}\n{% set version = \"1.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/leonfoks/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: abcf5f934158c33295f3c3eae21e0d2de53d341a89d8cc78a16ebc86359f685d\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}\n    - cmake\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -s $PREFIX/lib/lib{{ name }}$SHLIB_EXT\n\nabout:\n  home: https://github.com/leonfoks/coretran\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: The coretran numerical library\n  description: |\n    Coretran is an easy to follow library to make Fortran easier in\n    general with wrapped interfaces, sorting routines, kD-Trees, and\n    other algorithms to handle scientific data and concepts. The\n    library contains core Fortran routines and object-oriented\n    classes.\n  doc_url: https://leonfoks.github.io/coretran\n  dev_url: https://github.com/leonfoks/coretran\n\nextra:\n  recipe-maintainers:\n    - mdpiper\n",
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "url": "https://github.com/leonfoks/coretran/archive/1.0.1.tar.gz",
 "version": "1.0.1"
}