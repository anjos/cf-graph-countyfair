{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ansifilter",
 "hash_type": "sha256",
 "name": "ansifilter",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ansifilter"
  ]
 },
 "raw_meta_yaml": "{% set name = \"ansifilter\" %}\n{% set version = \"2.17\" %}\n{% set sha256 = \"5c8c4d86babbc952141341f70f1ac7a27de5f288b03938b7c8bcb5b84c4217ba\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/saalen/{{ name }}/-/archive/v{{ version }}/{{ name }}-v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script:\n    - make -j$CPU_COUNT\n    - make install PREFIX=$PREFIX\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\ntest:\n  commands:\n    - ansifilter --version\n\nabout:\n  home: http://andre-simon.de/doku/ansifilter/en/ansifilter.php\n  dev_url: https://gitlab.com/saalen/ansifilter\n  doc_url: https://gitlab.com/saalen/ansifilter\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Ansifilter handles text files containing ANSI terminal escape codes.'\n\n  description: |\n    ANSI codes are commands embedded in a text stream to add formatting\n    instructions into this text. These codes are interpreted by terminal\n    emulators like xterm or Putty.\n\n    Ansifilter parses common ANSI codes to remove them or to convert them to\n    another colored text file format (HTML, TeX, LaTeX, RTF, Pango or BBCode).\n    Support for ANSI art files (based on codepage 437 and ANSI.SYS sequences or\n    BIN/XBIN/TND files) is enabled with the --art-cp437, --art-bin and\n    --art-tundra options.\n\nextra:\n  recipe-maintainers:\n    - asford\n",
 "strong_exports": false,
 "url": "https://gitlab.com/saalen/ansifilter/-/archive/v2.17/ansifilter-v2.17.tar.gz",
 "version": "2.17"
}