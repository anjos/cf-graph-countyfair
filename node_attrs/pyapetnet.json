{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1025550092.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1045358232.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1049709599.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyapetnet",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/pyapetnet",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "a CNN for anatomy-guided deconvolution and denoising of PET images"
  },
  "build": {
   "entry_points": [
    "pyapetnet_predict_from_nifti=pyapetnet.command_line_tools:predict_from_nifti",
    "pyapetnet_predict_from_dicom=pyapetnet.command_line_tools:predict_from_dicom",
    "pyapetnet_list_models=pyapetnet.command_line_tools:list_models"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "gschramm"
   ]
  },
  "package": {
   "name": "pyapetnet",
   "version": "1.2"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.9",
    "setuptools-scm",
    "setuptools_scm_git_archive"
   ],
   "run": [
    "matplotlib-base >=3.1",
    "nibabel >=3.0",
    "pydicom >=2.0",
    "pymirc >=0.22",
    "python >=3.6,<3.9",
    "tensorflow >=2.2"
   ]
  },
  "source": {
   "sha256": "b5621676fc0bfda1ffd4bfcc037652f8360e1811e04c319cc1f4545f72a66ef8",
   "url": "https://pypi.io/packages/source/p/pyapetnet/pyapetnet-1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pyapetnet_predict_from_nifti --help",
    "pyapetnet_predict_from_dicom --help",
    "pyapetnet_list_models --help"
   ],
   "imports": [
    "pyapetnet"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools-scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "nibabel",
    "pydicom",
    "pymirc",
    "python",
    "tensorflow"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/pyapetnet",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "a CNN for anatomy-guided deconvolution and denoising of PET images"
  },
  "build": {
   "entry_points": [
    "pyapetnet_predict_from_nifti=pyapetnet.command_line_tools:predict_from_nifti",
    "pyapetnet_predict_from_dicom=pyapetnet.command_line_tools:predict_from_dicom",
    "pyapetnet_list_models=pyapetnet.command_line_tools:list_models"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "gschramm"
   ]
  },
  "package": {
   "name": "pyapetnet",
   "version": "1.2"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.9",
    "setuptools-scm",
    "setuptools_scm_git_archive"
   ],
   "run": [
    "matplotlib-base >=3.1",
    "nibabel >=3.0",
    "pydicom >=2.0",
    "pymirc >=0.22",
    "python >=3.6,<3.9",
    "tensorflow >=2.2"
   ]
  },
  "source": {
   "sha256": "b5621676fc0bfda1ffd4bfcc037652f8360e1811e04c319cc1f4545f72a66ef8",
   "url": "https://pypi.io/packages/source/p/pyapetnet/pyapetnet-1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pyapetnet_predict_from_nifti --help",
    "pyapetnet_predict_from_dicom --help",
    "pyapetnet_list_models --help"
   ],
   "imports": [
    "pyapetnet"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "pyapetnet",
 "new_version": "1.3.2",
 "new_version_attempts": {
  "1.3": 2,
  "1.3.1": 1,
  "1.3.2": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyapetnet"
  ]
 },
 "pinning_version": "2022.09.07.10.20.36",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"pyapetnet\" %}\n{% set version = \"1.2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pyapetnet-{{ version }}.tar.gz\n  sha256: b5621676fc0bfda1ffd4bfcc037652f8360e1811e04c319cc1f4545f72a66ef8\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - pyapetnet_predict_from_nifti=pyapetnet.command_line_tools:predict_from_nifti\n    - pyapetnet_predict_from_dicom=pyapetnet.command_line_tools:predict_from_dicom\n    - pyapetnet_list_models=pyapetnet.command_line_tools:list_models\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6,<3.9\n    - setuptools-scm\n    - setuptools_scm_git_archive\n  run:\n    - matplotlib-base >=3.1\n    - nibabel >=3.0\n    - pydicom >=2.0\n    - pymirc >=0.22\n    - python >=3.6,<3.9\n    - tensorflow >=2.2\n\ntest:\n  imports:\n    - pyapetnet\n  commands:\n    - pip check\n    - pyapetnet_predict_from_nifti --help\n    - pyapetnet_predict_from_dicom --help\n    - pyapetnet_list_models --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/gschramm/pyapetnet\n  summary: a CNN for anatomy-guided deconvolution and denoising of PET images\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - gschramm\n",
 "req": {
  "__set__": true,
  "elements": [
   "matplotlib-base",
   "nibabel",
   "pip",
   "pydicom",
   "pymirc",
   "python",
   "setuptools-scm",
   "setuptools_scm_git_archive",
   "tensorflow"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools-scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "nibabel",
    "pydicom",
    "pymirc",
    "python",
    "tensorflow"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6,<3.9",
    "setuptools-scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base >=3.1",
    "nibabel >=3.0",
    "pydicom >=2.0",
    "pymirc >=0.22",
    "python >=3.6,<3.9",
    "tensorflow >=2.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pyapetnet/pyapetnet-1.2.tar.gz",
 "version": "1.2"
}