{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/642184554.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/787907533.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/948819358.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cosapp",
 "hash_type": "sha256",
 "name": "cosapp",
 "new_version": "0.12.2",
 "new_version_attempts": {
  "0.11.5": 1,
  "0.11.8": 1,
  "0.12.0-1": 166,
  "0.12.2": 1
 },
 "new_version_errors": {
  "0.12.0-1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.12.0-1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cosapp"
  ]
 },
 "pinning_version": "2022.05.25.19.48.06",
 "raw_meta_yaml": "{% set name = \"cosapp\" %}\n{% set version = \"0.12.2\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 5289854665e65075652a092822e3973f4c7844bd109a5ceff4e3eb2284b7f891\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - pandas\n    - jsonschema\n    - numpy >=1.12\n    - scipy\n    - wrapt\n\ntest:\n  requires:\n    - coverage\n    - jinja2\n    - pytest\n    - pythonfmu >=0.6.0,<0.7.0  # [not osx]\n    - watchdog\n    - xlrd\n    - xlsxwriter\n  commands:\n    - python -m cosapp.tests.all_tests\n\nabout:\n  home: https://cosapp.readthedocs.io\n  summary: CoSApp, the Collaborative System Approach.\n  description: |\n    The primary goal of **CoSApp** is to help technical department in the design of complex systems.\n    To do so, the framework allows the simulation of various systems representing the different\n    parts of the final product in a common environment. The consequences are the ability for each\n    subsystem team to carry out design study with a direct feedback of the impact of parameters at\n    the product level.\n\n    The main features are :\n\n    - Butterfly effect\n\n    Coupled your preferred simulation software with CoSApp to get immediate impact on main product\n    variables and iterates to converge on a better design.\n\n    - Design guidance\n\n    All systems can share design parameters associated with an acceptable range. You can take advantage\n    of those limited degrees of freedom without fear of breaking your neighbors' work.\n\n    - Margins & Uncertainties\n\n    All design parameters have an intrinsic dispersion. Knowing the range of fluctuations is crucial to\n    ensure the robustness of the design. CoSApp handles natively uncertain variables.\n  keywords: cosapp\n  dev_url: https://gitlab.com/cosapp/cosapp\n  license: Apache-2.0\n  license_file: LICENSE.rst\n\nextra:\n  recipe-maintainers:\n    - elac-safran\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/c/cosapp/cosapp-0.12.2.tar.gz",
 "version": "0.12.2"
}