{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/326761891.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514304274.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "tktable",
 "hash_type": "sha256",
 "name": "tktable",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tktable"
  ]
 },
 "pinning_version": "2020.11.02.18.49.03",
 "raw_meta_yaml": "\n{% set version = \"2.10\" %}\n\npackage:\n  name: tktable\n  version: {{ version }}\n\nsource:\n  url: http://downloads.sourceforge.net/project/tktable/tktable/{{ version }}/Tktable{{ version }}.tar.gz\n  sha256: c335117fa1be45fe4d3032e96fd4b4641fff6a4f8467878608dabed11198a4cb\n\nbuild:\n  skip: True  # [win]\n  number: 3\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}          # [linux]\n    - libxcb                             # [linux]\n    - xorg-libxau                        # [linux]\n    - make                               # [linux]\n  host:\n    - tk\n  run:\n    - tk\n\ntest:\n  commands:\n    - echo \"if {[catch {package require -exact Tktable {{ version }}; exit 0}]} {exit 1}\" | xvfb-run tclsh  # [linux]\n    - echo \"if {[catch {package require -exact Tktable {{ version }}; exit 0}]} {exit 1}\" | tclsh  # [osx]\n\nabout:\n  home: http://www.tcl.tk/\n  license: Tcl/Tk\n  license_family: BSD\n  license_file: license.txt\n  summary: Tktable is a 2D editable table widget\n  doc_url: https://core.tcl.tk/jenglish/gutter/packages/tktable.html\n\nextra:\n  recipe-maintainers:\n    - fhoehle\n",
 "smithy_version": "3.8.4",
 "strong_exports": false,
 "url": "http://downloads.sourceforge.net/project/tktable/tktable/2.10/Tktable2.10.tar.gz",
 "version": "2.10"
}