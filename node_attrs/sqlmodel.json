{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/801285129.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/810933383.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038782326.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "sqlmodel",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SQLModel is designed to simplify interacting with SQL databases in FastAPI\n applications, it was created by the same author. It combines SQLAlchemy\n and Pydantic and tries to simplify the code you write as much as possible,\n allowing you to reduce the code duplication to a minimum, but while getting\n the best developer experience possible. SQLModel is, in fact, a thin layer\n on top of Pydantic and SQLAlchemy, carefully designed to be compatible with\n both.\n",
   "doc_url": "https://sqlmodel.tiangolo.com/",
   "home": "https://github.com/tiangolo/sqlmodel",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "SQL databases in Python, designed for simplicity, compatibility, and robustness."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "grep __version__ sqlmodel/__init__.py | grep 0.0.8",
    "sed -i \"s/version = \\\"0\\\"/version = \\\"0.0.8\\\"/\" pyproject.toml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "tiangolo",
    "maresb",
    "thewchan"
   ]
  },
  "package": {
   "name": "sqlmodel",
   "version": "0.0.8"
  },
  "requirements": {
   "host": [
    "python >=3.6.1,<4.0",
    "pip",
    "poetry-core"
   ],
   "run": [
    "python >=3.6.1,<4.0",
    "sqlalchemy >=1.4.17,<=1.4.41",
    "pydantic >=1.8.2,<2.0.0",
    "sqlalchemy2-stubs"
   ]
  },
  "source": {
   "sha256": "3371b4d1ad59d2ffd0c530582c2140b6c06b090b32af9b9c6412986d7b117036",
   "url": "https://pypi.io/packages/source/s/sqlmodel/sqlmodel-0.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "VERSION=$(python -c 'from importlib import metadata; print(metadata.version(\"sqlmodel\"))')",
    "echo \"sqlmodel version $VERSION\"",
    "if [ \"0\" == \"$VERSION\" ]; then false; fi"
   ],
   "imports": [
    "sqlmodel",
    "sqlmodel.engine"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pydantic",
    "python",
    "sqlalchemy",
    "sqlalchemy2-stubs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SQLModel is designed to simplify interacting with SQL databases in FastAPI\n applications, it was created by the same author. It combines SQLAlchemy\n and Pydantic and tries to simplify the code you write as much as possible,\n allowing you to reduce the code duplication to a minimum, but while getting\n the best developer experience possible. SQLModel is, in fact, a thin layer\n on top of Pydantic and SQLAlchemy, carefully designed to be compatible with\n both.\n",
   "doc_url": "https://sqlmodel.tiangolo.com/",
   "home": "https://github.com/tiangolo/sqlmodel",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "SQL databases in Python, designed for simplicity, compatibility, and robustness."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "grep __version__ sqlmodel/__init__.py | grep 0.0.8",
    "sed -i \"s/version = \\\"0\\\"/version = \\\"0.0.8\\\"/\" pyproject.toml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "tiangolo",
    "maresb",
    "thewchan"
   ]
  },
  "package": {
   "name": "sqlmodel",
   "version": "0.0.8"
  },
  "requirements": {
   "host": [
    "python >=3.6.1,<4.0",
    "pip",
    "poetry-core"
   ],
   "run": [
    "python >=3.6.1,<4.0",
    "sqlalchemy >=1.4.17,<=1.4.41",
    "pydantic >=1.8.2,<2.0.0",
    "sqlalchemy2-stubs"
   ]
  },
  "source": {
   "sha256": "3371b4d1ad59d2ffd0c530582c2140b6c06b090b32af9b9c6412986d7b117036",
   "url": "https://pypi.io/packages/source/s/sqlmodel/sqlmodel-0.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "VERSION=$(python -c 'from importlib import metadata; print(metadata.version(\"sqlmodel\"))')",
    "echo \"sqlmodel version $VERSION\"",
    "if [ \"0\" == \"$VERSION\" ]; then false; fi"
   ],
   "imports": [
    "sqlmodel",
    "sqlmodel.engine"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "sqlmodel",
 "new_version": "0.0.8",
 "new_version_attempts": {
  "0.0.5": 1,
  "0.0.6": 1,
  "0.0.7": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "sqlmodel"
  ]
 },
 "pinning_version": "2022.08.27.13.34.34",
 "raw_meta_yaml": "{% set name = \"sqlmodel\" %}\n{% set version = \"0.0.8\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/sqlmodel-{{ version }}.tar.gz\n  sha256: 3371b4d1ad59d2ffd0c530582c2140b6c06b090b32af9b9c6412986d7b117036\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    # Unfortunately sqlmodel relies on a custom plugin called \"poetry-version-plugin\"\n    # which relies on the development version of poetry, which is annoying to install\n    # on conda-forge. But why install some weird plugin when we can just use a simple\n    # Bash hack? ;)\n\n    # Verify that the version is correctly set in __init__.py\n    - grep __version__ sqlmodel/__init__.py | grep {{ version }}\n    # Replace the version number in the pyproject.toml with the one we extracted\n    - sed -i \"s/version = \\\"0\\\"/version = \\\"{{ version }}\\\"/\" pyproject.toml\n    # Install\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6.1,<4.0\n    - pip\n    - poetry-core\n  run:\n    - python >=3.6.1,<4.0\n    - sqlalchemy >=1.4.17,<=1.4.41\n    - pydantic >=1.8.2,<2.0.0\n    - sqlalchemy2-stubs\n\ntest:\n  imports:\n    - sqlmodel\n    - sqlmodel.engine\n  commands:\n    - pip check\n    # Extract the version of the built package\n    - VERSION=$(python -c 'from importlib import metadata; print(metadata.version(\"sqlmodel\"))')\n    - echo \"sqlmodel version $VERSION\"\n    # Ensure that version is not 0. (This conditional looks redundant, but YAML thinks\n    # that [...] denotes a list.)\n    - if [ \"0\" == \"$VERSION\" ]; then false; fi\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/tiangolo/sqlmodel\n  summary: SQL databases in Python, designed for simplicity, compatibility, and robustness.\n  doc_url: https://sqlmodel.tiangolo.com/\n  license: MIT\n  license_file: LICENSE\n  description: |\n    SQLModel is designed to simplify interacting with SQL databases in FastAPI\n     applications, it was created by the same author. It combines SQLAlchemy\n     and Pydantic and tries to simplify the code you write as much as possible,\n     allowing you to reduce the code duplication to a minimum, but while getting\n     the best developer experience possible. SQLModel is, in fact, a thin layer\n     on top of Pydantic and SQLAlchemy, carefully designed to be compatible with\n     both.\n\nextra:\n  recipe-maintainers:\n    - tiangolo\n    - maresb\n    - thewchan\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "poetry-core",
   "pydantic",
   "python",
   "sqlalchemy",
   "sqlalchemy2-stubs"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pydantic",
    "python",
    "sqlalchemy",
    "sqlalchemy2-stubs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python >=3.6.1,<4.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pydantic >=1.8.2,<2.0.0",
    "python >=3.6.1,<4.0",
    "sqlalchemy >=1.4.17,<=1.4.41",
    "sqlalchemy2-stubs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/sqlmodel/sqlmodel-0.0.8.tar.gz",
 "version": "0.0.8"
}