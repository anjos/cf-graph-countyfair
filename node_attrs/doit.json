{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217984242.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336049884.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/352498722.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.32.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/477210431.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.33.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/479405249.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.33.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501151130.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784276783.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "doit",
 "hash_type": "sha256",
 "name": "doit-split",
 "new_version": "0.36.0",
 "new_version_attempts": {
  "0.33.0": 1,
  "0.33.1": 1,
  "0.34.0": 3,
  "0.34.1": 23,
  "0.34.2": 31,
  "0.35.0": 3
 },
 "new_version_errors": {
  "0.34.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.34.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/pydoit/doit/archive/{{ version }}.tar.gz'\n",
  "0.34.1": "We found a problem parsing the recipe for version '0.34.1': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 447, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 115, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "0.34.2": "We found a problem parsing the recipe for version '0.34.2': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "0.35.0": "We found a problem parsing the recipe for version '0.35.0': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "doit",
   "doit-split",
   "doit-with-all",
   "doit-with-toml"
  ]
 },
 "pinning_version": "2021.11.18.16.59.41",
 "raw_meta_yaml": "{% set version = \"0.36.0\" %}\n{% set build_number = 0 %}\n{% set min_noarch_python = \">=3.8\" %}\n\n# we don't ship all of the fixtures\n{% set skips = [\"test_execute\", \"test_sqlite_import\"] %}\n\n{% set cov_fail_under = 97 %}\n\npackage:\n  name: doit-split\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/d/doit/doit-{{ version }}.tar.gz\n  sha256: 71d07ccc9514cb22fe59d98999577665eaab57e16f644d04336ae0b4bae234bc\n\nbuild:\n  noarch: python\n  number: {{ build_number }}\n\nrequirements:\n  host:\n    - python {{ min_noarch_python }}\n    - pip\n  run:\n    - python {{ min_noarch_python }}\n\ntest:\n  commands:\n    - echo \"TBD\"\n\noutputs:\n  - name: doit\n    build:\n      noarch: python\n      number: {{ build_number }}\n      entry_points:\n        - doit = doit.__main__:main\n      script: {{ PYTHON }} -m pip install . --no-deps -vv\n    requirements:\n      host:\n        - pip\n        - python {{ min_noarch_python }}\n      run:\n        - cloudpickle\n        - importlib-metadata >=4.4\n        - python {{ min_noarch_python }}\n    test:\n      requires:\n        - pip\n      commands:\n        - pip check\n        - doit --version\n        - doit --help\n\n  - name: doit-with-toml\n    build:\n      number: {{ build_number }}\n      noarch: python\n    requirements:\n      host:\n        - python {{ min_noarch_python }}\n      run:\n        - {{ pin_subpackage(\"doit\", max_pin=\"x.x.x\") }}\n        - python {{ min_noarch_python }}\n        # technically python_version<\"3.11\"\n        - tomli\n    test:\n      requires:\n        - pip\n      commands:\n        - pip check\n\n    about:\n      summary: doit - Automation Tool (with toml config)\n\n  - name: doit-with-all\n    build:\n      number: {{ build_number }}\n      noarch: python\n    requirements:\n      host:\n        - python {{ min_noarch_python }}\n      run:\n        - python {{ min_noarch_python }}\n        - {{ pin_subpackage(\"doit-with-toml\", max_pin=\"x.x.x\") }}\n    test:\n      source_files:\n        - tests\n      requires:\n        - pip\n        - pytest >=4.0\n        - pytest-cov\n      imports:\n        - doit\n      commands:\n        - pip check\n        - pytest --cov doit -vv -k \"not ({{ skips | join(' or ') }})\" --no-cov-on-fail --cov-fail-under={{ cov_fail_under }} --cov-report term-missing:skip-covered\n\n    about:\n      summary: doit - Automation Tool (with all extras)\n\nabout:\n  home: https://pydoit.org\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: doit - Automation Tool\n  description: |\n    `doit` is a task management & automation tool.\n\n    `doit` comes from the idea of bringing the power of build-tools to execute\n    any kind of **task**\n\n    `doit` is a modern open-source build-tool written in python designed to be\n    simple to use and flexible to deal with complex work-flows.\n\n    It is specially suitable for building and managing custom work-flows where\n    there is no out-of-the-box solution available.\n\n    `doit` has been successfully used on: systems test/integration automation,\n    scientific computational pipelines, content generation, configuration\n    management, etc.\"\n  doc_url: https://pydoit.org/contents.html\n  dev_url: https://github.com/pydoit/doit\n  doc_source_url: https://github.com/pydoit/doit/tree/{{ version }}/doc\n\nextra:\n  feedstock-name: doit\n  recipe-maintainers:\n    - pbronez\n    - bollwyvl\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/d/doit/doit-0.36.0.tar.gz",
 "version": "0.36.0"
}