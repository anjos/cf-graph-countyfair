{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "carve",
 "hash_type": "sha256",
 "name": "carve",
 "new_version": "2.0.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "carve"
  ]
 },
 "raw_meta_yaml": "{% set name = \"carve\" %}\n{% set version = \"2.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ngodber/carve/archive/v{{ version }}.tar.gz\n  sha256: 20481918af488fc92694bf1d5bdd6351ad73a0b64fbe4373e1f829a7b0eeff63\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(\"carve\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - boost-cpp\n  run:\n    - boost-cpp  \n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/slice  # [unix]\n    - test -f ${PREFIX}/bin/intersect  # [unix]\n    - test -f ${PREFIX}/bin/triangulate  # [unix]\n    - test -f ${PREFIX}/bin/convert  # [unix]\n    - test -f ${PREFIX}/lib/libcarve${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\bin\\carve.dll exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\slice.exe exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\intersect.exe exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\triangulate.exe exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\convert.exe exit 1  # [win]\n    \nabout:\n  home: https://github.com/PyMesh/carve\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'Carve computes boolean operations between sets of arbitrary closed and open surfaces'\n  description: |\n     Carve computes boolean operations between sets of arbitrary closed and open surfaces faster, more robustly and with fewer restrictions than comparable software.\n  dev_url: https://github.com/PyMesh/carve\n\nextra:\n  recipe-maintainers:\n    - ngodber\n",
 "strong_exports": false,
 "url": "https://github.com/ngodber/carve/archive/v2.0.1.tar.gz",
 "version": "2.0.1"
}