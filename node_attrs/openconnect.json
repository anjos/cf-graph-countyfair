{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/426886034.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb51171"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553652626.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4-c193"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/644311665.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb5119"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/942245593.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4_c19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/952302753.json"
   },
   "data": {
    "bot_rerun": 1654529592.246898,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gnutls37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/959354414.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gnutls37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/df139d3f-68ce-4d00-b614-96ebfad81b8f.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "nettle38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/965445262.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "p11_kit024"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/979329726.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "openconnect",
 "hash_type": "sha256",
 "name": "openconnect",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openconnect"
  ]
 },
 "pinning_version": "2022.06.26.11.17.33",
 "raw_meta_yaml": "{% set name = \"openconnect\" %}\n{% set version = \"9.01\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # OpenConnect source. Favor https source over ftp so as to let conda-forge bot pick up updates.\n  - url: https://www.infradead.org/openconnect/download/openconnect-{{ version }}.tar.gz\n    sha256: b3d7faf830e9793299d6a41e81d84cd4a3e2789c148c9e598e4585010090e4c7\n\n  # OpenConnect requires a configuration script to run.\n  # It is downloaded from a separate repo.\n  # See https://www.infradead.org/openconnect/vpnc-script.html\n  - git_url: https://gitlab.com/openconnect/vpnc-scripts.git\n    git_rev: e52f8e66\n    folder: vpnc-scripts\n\nbuild:\n  number: 3\n  skip: true  # [win]\n  missing_dso_whitelist:\n    - '/System/Library/Frameworks/PCSC.framework/**'  # [osx]\n  skip_compile_pyc:\n    - \"*.py\"  # [build_platform != target_platform]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - libtool\n    - pkg-config\n    - make\n    - gnuconfig  # [unix]\n    - gettext\n  host:\n    - gettext\n    - gnutls >=3.6.13\n    - libxml2\n    - stoken\n    - zlib\n    - libiconv\n    - lz4-c\n    - krb5\n    - nettle\n    - p11-kit\n  run:\n    - gettext\n    - gnutls\n    - libxml2\n    - stoken\n    - zlib\n    - libiconv\n    - lz4-c\n    - krb5\n\ntest:\n  commands:\n    - ${PREFIX}/bin/openconnect --version\n    - test -f ${PREFIX}/etc/openconnect/vpnc-script\n\nabout:\n  home: https://www.infradead.org/openconnect\n  license: LGPL-2.1-only\n  license_family: LGPL\n  license_file:\n    - COPYING.LGPL\n    - vpnc-scripts/COPYING\n  summary: 'OpenConnect is an SSL VPN client'\n  description: |\n    OpenConnect is an SSL VPN client initially created to support Cisco's AnyConnect SSL VPN.\n    It has since been ported to support the Juniper SSL VPN (which is now known as\n    Pulse Connect Secure), and the Palo Alto Networks GlobalProtect SSL VPN.\n\n    An openconnect VPN server (ocserv), which implements an improved version of the Cisco AnyConnect\n    protocol, has also been written.\n\nextra:\n  recipe-maintainers:\n    - stuarteberg\n    - leofang\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://www.infradead.org/openconnect/download/openconnect-9.01.tar.gz",
 "version": "9.01"
}