{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/668404499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/670618141.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/673952081.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/780009549.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/791228367.json"
   },
   "data": {
    "bot_rerun": 1649835147.9433653,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/818245518.json"
   },
   "data": {
    "bot_rerun": 1649835147.9435654,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/903373753.json"
   },
   "data": {
    "bot_rerun": 1649835147.9436784,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909536158.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mt-metadata",
 "hash_type": "sha256",
 "name": "mt-metadata",
 "new_version": "0.1.9",
 "new_version_attempts": {
  "0.1.1": 1,
  "0.1.2": 1,
  "0.1.3": 1,
  "0.1.5": 1,
  "0.1.6": 1,
  "0.1.7": 1,
  "0.1.8": 1,
  "0.1.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mt-metadata"
  ]
 },
 "pinning_version": "2022.04.13.14.53.36",
 "raw_meta_yaml": "{% set name = \"mt-metadata\" %}\n{% set version = \"0.1.9\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/mt_metadata-{{ version }}.tar.gz\n  sha256: afad5667b30ca96929db52baf43e85f10fa9bef5af11c995b2dd1240a196b87b\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - pytest-runner\n    - python >=3.5\n  run:\n    - concurrent-log-handler\n    - matplotlib-base\n    - numpy <=1.21\n    - obspy\n    - pandas\n    - python >=3.5\n    - pyyaml\n    - xarray\n\ntest:\n  imports:\n    - mt_metadata\n    - mt_metadata.base\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/kujaku11/mt_metadata\n  summary: Metadata for magnetotelluric data\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - kujaku11\n    - kkappler\n    - lheagy\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/mt-metadata/mt_metadata-0.1.9.tar.gz",
 "version": "0.1.9"
}