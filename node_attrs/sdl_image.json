{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/494962646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "sdl_image",
 "hash_type": "sha256",
 "name": "sdl_image",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "sdl_image"
  ]
 },
 "pinning_version": "2020.09.29.13.22.45",
 "raw_meta_yaml": "{% set name = \"sdl_image\" %}\n{% set version = \"1.2.12\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://www.libsdl.org/projects/SDL_image/release/SDL_image-{{ version }}.tar.gz\n    sha256: 0b90722984561004de84847744d566809dbb9daf732a9e503b91a1b5a84e5699\n  - path: cmake/\n\nbuild:\n  number: 2\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}  # [not win]\n    - {{ compiler('c') }}    # [not win]\n    - vs2017_win-64          # [win64]\n    - cmake  # [win]\n    - ninja  # [win]\n    - make   # [unix]\n    - gnuconfig   # [unix]\n  host:\n    - sdl\n    - libtiff\n    - libpng\n    - zlib\n    - jpeg\n    - libwebp\n  run:\n    - sdl\n    - libtiff\n    - libpng\n    - zlib\n    - jpeg\n    - libwebp\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/SDL/SDL_image.h  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\SDL\\\\SDL_image.h exit 1  # [win]\n\nabout:\n  home: https://www.libsdl.org/index.php\n  license: LGPL-2.1-or-later\n  license_file: COPYING\n  summary: |\n    SDL_image is an image file loading library with Simple DirectMedia Layer\n\nextra:\n  recipe-maintainers:\n    - seanyen\n    - traversaro\n    - Tobias-Fischer\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "url": "https://www.libsdl.org/projects/SDL_image/release/SDL_image-1.2.12.tar.gz",
 "version": "1.2.12"
}