{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/872202568.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908201609.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926109910.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/980826589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000397508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1004896036.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006439500.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: 429",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "statsforecast",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "**StatsForecast** offers a collection of widely used univariate time series forecasting\nmodels, including exponential smoothing and automatic `ARIMA` modeling optimized for\nhigh performance using `numba`.\n\n- [Getting started](https://github.com/Nixtla/statsforecast/tree/main/#-getting-started-)\n- [Installation](https://github.com/Nixtla/statsforecast/tree/main/#-installation)\n\nPyPI: [https://pypi.org/project/statsforecast/](https://pypi.org/project/statsforecast/)\n",
   "dev_url": "https://github.com/Nixtla/statsforecast/",
   "doc_url": "https://nixtla.github.io/statsforecast/",
   "home": "https://github.com/Nixtla/statsforecast/",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE",
   "summary": "Time series forecasting suite using statistical models"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "statsforecast",
   "version": "0.7.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "python >=3.6",
    "numba",
    "numpy",
    "pandas",
    "scipy",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "dac2dc63abbae63760520e0a0e7657fed58a8b398938961e0ae6f4a5502e59f0",
   "url": "https://pypi.io/packages/source/s/statsforecast/statsforecast-0.7.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "statsforecast"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "pandas",
    "python",
    "scipy",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "**StatsForecast** offers a collection of widely used univariate time series forecasting\nmodels, including exponential smoothing and automatic `ARIMA` modeling optimized for\nhigh performance using `numba`.\n\n- [Getting started](https://github.com/Nixtla/statsforecast/tree/main/#-getting-started-)\n- [Installation](https://github.com/Nixtla/statsforecast/tree/main/#-installation)\n\nPyPI: [https://pypi.org/project/statsforecast/](https://pypi.org/project/statsforecast/)\n",
   "dev_url": "https://github.com/Nixtla/statsforecast/",
   "doc_url": "https://nixtla.github.io/statsforecast/",
   "home": "https://github.com/Nixtla/statsforecast/",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE",
   "summary": "Time series forecasting suite using statistical models"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "statsforecast",
   "version": "0.7.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "python >=3.6",
    "numba",
    "numpy",
    "pandas",
    "scipy",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "dac2dc63abbae63760520e0a0e7657fed58a8b398938961e0ae6f4a5502e59f0",
   "url": "https://pypi.io/packages/source/s/statsforecast/statsforecast-0.7.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "statsforecast"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "statsforecast",
 "new_version": "0.7.1",
 "new_version_attempts": {
  "0.4.0": 1,
  "0.5.0": 11,
  "0.5.1": 20,
  "0.5.2": 12,
  "0.5.3": 1,
  "0.5.4": 1,
  "0.5.6": 1,
  "0.6.0": 1,
  "0.7.0": 1,
  "0.7.1": 1
 },
 "new_version_errors": {
  "0.5.0": "We found a problem parsing the recipe for version '0.5.0': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "0.5.1": "We found a problem parsing the recipe for version '0.5.1': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "0.5.2": "We found a problem parsing the recipe for version '0.5.2': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "statsforecast"
  ]
 },
 "pinning_version": "2022.07.22.23.35.10",
 "raw_meta_yaml": "{% set name = \"statsforecast\" %}\n{% set version = \"0.7.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/statsforecast-{{ version }}.tar.gz\n  sha256: dac2dc63abbae63760520e0a0e7657fed58a8b398938961e0ae6f4a5502e59f0\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n    - numba\n    - numpy\n    - pandas\n    - scipy\n    - statsmodels\n\ntest:\n  imports:\n    - statsforecast\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/Nixtla/statsforecast/\n  summary: Time series forecasting suite using statistical models\n  license: GPL-3.0-only\n  license_file: LICENSE\n  description: |\n    **StatsForecast** offers a collection of widely used univariate time series forecasting \n    models, including exponential smoothing and automatic `ARIMA` modeling optimized for \n    high performance using `numba`.\n\n    - [Getting started](https://github.com/Nixtla/statsforecast/tree/main/#-getting-started-)\n    - [Installation](https://github.com/Nixtla/statsforecast/tree/main/#-installation)\n\n    PyPI: [https://pypi.org/project/statsforecast/](https://pypi.org/project/statsforecast/)\n\n  doc_url: https://nixtla.github.io/statsforecast/\n  dev_url: https://github.com/Nixtla/statsforecast/\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "req": {
  "__set__": true,
  "elements": [
   "numba",
   "numpy",
   "pandas",
   "pip",
   "python",
   "scipy",
   "statsmodels"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "pandas",
    "python",
    "scipy",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "pandas",
    "python >=3.6",
    "scipy",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/statsforecast/statsforecast-0.7.1.tar.gz",
 "version": "0.7.1"
}