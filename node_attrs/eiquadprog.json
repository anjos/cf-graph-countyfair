{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "eiquadprog",
 "hash_type": "sha256",
 "name": "eiquadprog",
 "new_version": "1.2.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "eiquadprog"
  ]
 },
 "raw_meta_yaml": "{% set name = \"eiquadprog\" %}\n{% set version = \"1.2.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/stack-of-tasks/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: a17f3715cf8e2ceb20e3a9d68d7bdd26e0910de05a9df96e9a1085915df3e850\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}  # [not win]\n    - cmake\n    - make  # [not win]\n  host:\n    - eigen\n    - boost-cpp\n  run:\n    - eigen\n    - {{ pin_compatible('boost-cpp', max_pin='x.x') }}\ntest:\n  requires:\n    - pkg-config\n  commands:\n    - pkg-config --modversion {{ name }}\n\nabout:\n  home: http://github.com/stack-of-tasks/eiquadprog\n  license: LGPL-3.0-or-later\n  license_file: COPYING.LESSER\n  summary: C++ implementations of the algorithm of Goldfarb and Idnani for the solution of a (convex) Quadratic Programming problem by means of a dual method\n  dev_url: https://github.com/stack-of-tasks/eiquadprog\n\nextra:\n  recipe-maintainers:\n    - jcarpent\n    - EtienneAr\n",
 "strong_exports": false,
 "url": "https://github.com/stack-of-tasks/eiquadprog/releases/download/v1.2.3/eiquadprog-1.2.3.tar.gz",
 "version": "1.2.3"
}