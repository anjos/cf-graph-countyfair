{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/360010436.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503047203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/778556325.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cigetcert",
 "hash_type": "sha256",
 "name": "cigetcert",
 "new_version": "1.19",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cigetcert"
  ]
 },
 "pinning_version": "2021.11.11.06.31.57",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"cigetcert\" %}\n{% set version = \"1.19\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: db7c3226552d23516aa16a767dfce8031362640fc7a94d87a0a6e90d5c8afb36\n\nbuild:\n  number: 2\n  script: \"{{ PYTHON }} -m pip install . -vv \"\n  skip: True  # [win]\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n    - lxml\n    - m2crypto\n    - pykerberos  # [not win]\n    - pyopenssl\n    - winkerberos  # [win]\n\ntest:\n  commands:\n    - cigetcert --listinstitutions\n    - test -f ${PREFIX}/share/man/man1/cigetcert.1  # [unix]\n    # if we have man, print the man page\n    - if command -v man; then man -P cat cigetcert; fi  # [unix]\n\nabout:\n  home: https://cdcvs.fnal.gov/redmine/projects/fermitools/wiki/cigetcert\n  doc_url: http://htmlpreview.github.io/?https://github.com/fermitools/cigetcert/blob/master/cigetcert.html\n  dev_url: https://github.com/fermitools/cigetcert\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: COPYING\n  summary: Get an X.509 certificate with SAML ECP and store proxies\n  description: |\n    cigetcert gets an X.509 certificate from a SAML 2.0 Service Provider\n    (SP) such as CILogon using the Enhanced Client or Proxy (ECP)\n    profile. Optionally it can also get a grid proxy certificate and/or\n    transfer a grid proxy to MyProxy. It was developed for the Fermilab\n    Distributed Computing Access with Federated Identities (DCAFI) project\n    but is intended to be usable by other projects.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/c/cigetcert/cigetcert-1.19.tar.gz",
 "version": "1.19"
}