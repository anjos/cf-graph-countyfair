{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/360010436.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503047203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cigetcert",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "cigetcert gets an X.509 certificate from a SAML 2.0 Service Provider\n(SP) such as CILogon using the Enhanced Client or Proxy (ECP)\nprofile. Optionally it can also get a grid proxy certificate and/or\ntransfer a grid proxy to MyProxy. It was developed for the Fermilab\nDistributed Computing Access with Federated Identities (DCAFI) project\nbut is intended to be usable by other projects.\n",
   "dev_url": "https://github.com/fermitools/cigetcert",
   "doc_url": "http://htmlpreview.github.io/?https://github.com/fermitools/cigetcert/blob/master/cigetcert.html",
   "home": "https://cdcvs.fnal.gov/redmine/projects/fermitools/wiki/cigetcert",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "Get an X.509 certificate with SAML ECP and store proxies"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "cigetcert",
   "version": "1.19"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl"
   ]
  },
  "source": {
   "sha256": "db7c3226552d23516aa16a767dfce8031362640fc7a94d87a0a6e90d5c8afb36",
   "url": "https://pypi.io/packages/source/c/cigetcert/cigetcert-1.19.tar.gz"
  },
  "test": {
   "commands": [
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "cigetcert gets an X.509 certificate from a SAML 2.0 Service Provider\n(SP) such as CILogon using the Enhanced Client or Proxy (ECP)\nprofile. Optionally it can also get a grid proxy certificate and/or\ntransfer a grid proxy to MyProxy. It was developed for the Fermilab\nDistributed Computing Access with Federated Identities (DCAFI) project\nbut is intended to be usable by other projects.\n",
   "dev_url": "https://github.com/fermitools/cigetcert",
   "doc_url": "http://htmlpreview.github.io/?https://github.com/fermitools/cigetcert/blob/master/cigetcert.html",
   "home": "https://cdcvs.fnal.gov/redmine/projects/fermitools/wiki/cigetcert",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "Get an X.509 certificate with SAML ECP and store proxies"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "cigetcert",
   "version": "1.19"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl"
   ]
  },
  "source": {
   "sha256": "db7c3226552d23516aa16a767dfce8031362640fc7a94d87a0a6e90d5c8afb36",
   "url": "https://pypi.io/packages/source/c/cigetcert/cigetcert-1.19.tar.gz"
  },
  "test": {
   "commands": [
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi"
   ]
  }
 },
 "name": "cigetcert",
 "new_version": "1.19",
 "osx_64_meta_yaml": {
  "about": {
   "description": "cigetcert gets an X.509 certificate from a SAML 2.0 Service Provider\n(SP) such as CILogon using the Enhanced Client or Proxy (ECP)\nprofile. Optionally it can also get a grid proxy certificate and/or\ntransfer a grid proxy to MyProxy. It was developed for the Fermilab\nDistributed Computing Access with Federated Identities (DCAFI) project\nbut is intended to be usable by other projects.\n",
   "dev_url": "https://github.com/fermitools/cigetcert",
   "doc_url": "http://htmlpreview.github.io/?https://github.com/fermitools/cigetcert/blob/master/cigetcert.html",
   "home": "https://cdcvs.fnal.gov/redmine/projects/fermitools/wiki/cigetcert",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "Get an X.509 certificate with SAML ECP and store proxies"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "cigetcert",
   "version": "1.19"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python",
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl"
   ]
  },
  "source": {
   "sha256": "db7c3226552d23516aa16a767dfce8031362640fc7a94d87a0a6e90d5c8afb36",
   "url": "https://pypi.io/packages/source/c/cigetcert/cigetcert-1.19.tar.gz"
  },
  "test": {
   "commands": [
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi",
    "cigetcert --listinstitutions",
    "test -f ${PREFIX}/share/man/man1/cigetcert.1",
    "if command -v man; then man -P cat cigetcert; fi"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cigetcert"
  ]
 },
 "pinning_version": "2020.10.13.19.09.25",
 "pre_pr_migrator_attempts": {
  "python310": 6
 },
 "pre_pr_migrator_status": {
  "python310": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1445865253\">bot CI job</a>): master: ['linux_64_python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.23.0-py27_0\\n', 'linux_64_python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.23.0-py27_0\\n', 'linux_64_python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.23.0-py27_0\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.23.0-py27_0\\n', 'osx_64_python3.10.____cpython: Encountered problems while solving:\\n  - package pyopenssl-19.1.0-py_1 requires cryptography >=2.8, but none of the providers can be installed\\n', 'osx_64_python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.24.0-py27_0\\n', 'osx_64_python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.24.0-py27_0\\n', 'osx_64_python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides distribute needed by m2crypto-0.24.0-py27_0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"cigetcert\" %}\n{% set version = \"1.19\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: db7c3226552d23516aa16a767dfce8031362640fc7a94d87a0a6e90d5c8afb36\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv \"\n  skip: True  # [win]\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n    - lxml\n    - m2crypto\n    - pykerberos  # [not win]\n    - pyopenssl\n    - winkerberos  # [win]\n\ntest:\n  commands:\n    - cigetcert --listinstitutions\n    - test -f ${PREFIX}/share/man/man1/cigetcert.1  # [unix]\n    # if we have man, print the man page\n    - if command -v man; then man -P cat cigetcert; fi  # [unix]\n\nabout:\n  home: https://cdcvs.fnal.gov/redmine/projects/fermitools/wiki/cigetcert\n  doc_url: http://htmlpreview.github.io/?https://github.com/fermitools/cigetcert/blob/master/cigetcert.html\n  dev_url: https://github.com/fermitools/cigetcert\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: COPYING\n  summary: Get an X.509 certificate with SAML ECP and store proxies\n  description: |\n    cigetcert gets an X.509 certificate from a SAML 2.0 Service Provider\n    (SP) such as CILogon using the Enhanced Client or Proxy (ECP)\n    profile. Optionally it can also get a grid proxy certificate and/or\n    transfer a grid proxy to MyProxy. It was developed for the Fermilab\n    Distributed Computing Access with Federated Identities (DCAFI) project\n    but is intended to be usable by other projects.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req": {
  "__set__": true,
  "elements": [
   "lxml",
   "m2crypto",
   "pip",
   "pykerberos",
   "pyopenssl",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lxml",
    "m2crypto",
    "pykerberos",
    "pyopenssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/c/cigetcert/cigetcert-1.19.tar.gz",
 "version": "1.19"
}