{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/276434522.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278064634.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278922987.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/281439202.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/305988735.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/306288924.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/306609962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/342439432.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/353203767.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356730189.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/357556098.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/363222677.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/377426596.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/383105732.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386992878.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395151855.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/406863717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454851759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/466411904.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/471670331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/480536750.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519067387.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "ensmallen",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.15.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "armadillo >=8.400.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "c2123487633f6711180e3b75b78cd78e3b58735bb14bf9ba99efe5ae72e61b0e",
   "url": "https://github.com/mlpack/ensmallen/archive/2.15.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani",
    "marcelotrevisani",
    "marcelotrevisani"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.15.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "armadillo >=8.400.0",
    "libblas",
    "openmp",
    "armadillo >=8.400.0",
    "libblas",
    "openmp",
    "armadillo >=8.400.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp",
    "armadillo",
    "openmp",
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "c2123487633f6711180e3b75b78cd78e3b58735bb14bf9ba99efe5ae72e61b0e",
   "url": "https://github.com/mlpack/ensmallen/archive/2.15.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits",
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits",
    "if not exist %LIBRARY_INC%\\\\ensmallen.hpp exit 1",
    "if not exist %LIBRARY_INC%\\\\ensmallen_bits exit 1"
   ]
  }
 },
 "name": "ensmallen",
 "new_version": "2.15.1",
 "new_version_attempts": {
  "2.12.1": 1,
  "2.13.0": 1,
  "2.14.0": 1,
  "2.14.1": 1,
  "2.14.2": 1,
  "2.15.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.15.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "armadillo >=8.400.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "c2123487633f6711180e3b75b78cd78e3b58735bb14bf9ba99efe5ae72e61b0e",
   "url": "https://github.com/mlpack/ensmallen/archive/2.15.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ensmallen"
  ]
 },
 "pinning_version": "2020.11.10.21.31.03",
 "raw_meta_yaml": "{% set name = \"ensmallen\" %}\n{% set version = \"2.15.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mlpack/ensmallen/archive/{{ version }}.tar.gz\n  sha256: c2123487633f6711180e3b75b78cd78e3b58735bb14bf9ba99efe5ae72e61b0e\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja  # [win]\n  host:\n    - armadillo >=8.400.0\n    - libblas\n    - openmp\n  run:\n    - armadillo\n    - openmp\n\ntest:\n  commands:\n    - test -f $PREFIX/include/ensmallen.hpp                    # [unix]\n    - test -d $PREFIX/include/ensmallen_bits                   # [unix]\n    - if not exist %LIBRARY_INC%\\\\ensmallen.hpp exit 1         # [win]\n    - if not exist %LIBRARY_INC%\\\\ensmallen_bits exit 1        # [win]\nabout:\n  home: http://ensmallen.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: COPYRIGHT.txt\n  summary: ensmallen is a C++ header-only library for mathematical optimization.\n  description: |\n    ensmallen provides a simple set of abstractions for writing an objective \n    function to optimize. It     also provides a large set of standard and \n    cutting-edge optimizers that can be used for virtually any mathematical \n    optimization task. These include full-batch gradient descent techniques, \n    small-batch techniques, gradient-free optimizers, and constrained optimization.\n  doc_url: http://ensmallen.org/docs.html\n  dev_url: https://github.com/mlpack/ensmallen\n\nextra:\n  recipe-maintainers:\n    - marcelotrevisani\n",
 "req": {
  "__set__": true,
  "elements": [
   "armadillo",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "libblas",
   "ninja",
   "openmp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "time": 1568135303.448813,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo >=8.400.0",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/mlpack/ensmallen/archive/ensmallen-1.16.2.tar.gz",
 "version": "2.15.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.15.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "armadillo >=8.400.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "c2123487633f6711180e3b75b78cd78e3b58735bb14bf9ba99efe5ae72e61b0e",
   "url": "https://github.com/mlpack/ensmallen/archive/2.15.1.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%\\\\ensmallen.hpp exit 1",
    "if not exist %LIBRARY_INC%\\\\ensmallen_bits exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}