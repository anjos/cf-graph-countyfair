{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1166086127.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1166095528.json"
   },
   "data": {
    "bot_rerun": 1673504509.9260929,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1166120758.json"
   },
   "data": {
    "bot_rerun": 1673485749.9272208,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1195411066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1197739579.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.27.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: InvalidVersion(\"Invalid version: '3.8.* *_cpython'\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 194, in parse_meta_yaml\n    return _run(use_orig_cbc_path=True)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.8.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 198, in parse_meta_yaml\n    return _run(use_orig_cbc_path=False)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.8.* *_cpython'\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 194, in parse_meta_yaml\n    return _run(use_orig_cbc_path=True)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.8.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 198, in parse_meta_yaml\n    return _run(use_orig_cbc_path=False)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.8.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 200, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: InvalidVersion(\"Invalid version: '3.8.* *_cpython'\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 194, in parse_meta_yaml\n    return _run(use_orig_cbc_path=True)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.8.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 198, in parse_meta_yaml\n    return _run(use_orig_cbc_path=False)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.8.* *_cpython'\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "gymnasium",
 "hash_type": "sha256",
 "name": "gymnasium-split",
 "new_version": "0.27.0",
 "new_version_attempts": {
  "0.27.0": 8
 },
 "new_version_errors": {
  "0.27.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.27.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/g/gym/gym-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gymnasium",
   "gymnasium-all",
   "gymnasium-atari",
   "gymnasium-box2d",
   "gymnasium-classic_control",
   "gymnasium-mujoco",
   "gymnasium-mujoco_py",
   "gymnasium-other",
   "gymnasium-split",
   "gymnasium-toy_text"
  ]
 },
 "pinning_version": "2023.01.14.17.24.24",
 "pre_pr_migrator_attempts": {
  "pypy38": 8,
  "python311": 14
 },
 "pre_pr_migrator_status": {
  "pypy38": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3921535895\">bot CI job</a>): main: ['linux_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py37h22961b7_0 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'linux_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py39he415924_0 requires python_abi 3.9.* *_cp39, but none of the providers can be installed\\n', 'osx_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py37h4ac8cb4_1 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'osx_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py39hd9f5467_1 requires python_abi 3.9.* *_cp39, but none of the providers can be installed\\n', 'win_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py37h5a3837e_0 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'win_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py39hf81c36c_0 requires python_abi 3.9.* *_cp39, but none of the providers can be installed\\n']",
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3929211989\">bot CI job</a>): main: ['linux_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py37h22961b7_0 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'osx_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py37h4ac8cb4_1 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n', 'osx_arm64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py38h542c67c_1 requires python_abi 3.8.* *_cp38, but none of the providers can be installed\\n', 'win_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package mujoco-python-2.2.0-py37h5a3837e_0 requires python_abi 3.7.* *_cp37m, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"0.26.3\" %}\n\npackage:\n  name: gymnasium-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Farama-Foundation/Gymnasium/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: bdb641c4cde0916aca339f736764b89077cdc147ed274a2ea6023c043c8d48e7\n\nbuild:\n  number: 1\n\n# Need these up here for conda-smithy to handle them properly.\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n    - setuptools\n    - wheel\n  run:\n    - python\n\noutputs:\n  - name: gymnasium\n    build:\n      script: {{ PYTHON }} -m pip install . -vv --no-deps\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n      host:\n        - python\n        - pip\n        - cloudpickle >=1.2.0\n        - numpy\n      run:\n        - python\n        - cloudpickle >=1.2.0\n        - gymnasium-notices\n        - numpy\n        - importlib_metadata >=4.8.1  # [py<=39]\n    test:\n      imports:\n        - gymnasium\n\n  - name: gymnasium-all\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        # see below\n        # - {{ pin_subpackage('gymnasium-atari', exact=True) }}\n        - {{ pin_subpackage('gymnasium-box2d', exact=True) }}\n        - {{ pin_subpackage('gymnasium-classic_control', exact=True) }}\n        - {{ pin_subpackage('gymnasium-mujoco', exact=True) }}\n        # see below\n        # - {{ pin_subpackage('gymnasium-mujoco_py', exact=True) }}\n        - {{ pin_subpackage('gymnasium-toy_text', exact=True) }}\n        - {{ pin_subpackage('gymnasium-other', exact=True) }}\n    test:\n      source_files:\n        - tests/\n      requires:\n        - mock\n        - pytest\n        - pip\n      commands:\n        - pip check\n        # TODO: figure out segfaults\n        # - pytest -v tests/\n\n  - name: gymnasium-atari\n    build:\n      # needs some as-yet unsolved packaging shenanigans\n      # to actually install gymnasium.envs.atari\n      skip: true\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - ale-py >=0.8.0,<0.9\n    test:\n      imports:\n        - gymnasium.envs.atari\n\n  - name: gymnasium-box2d\n    requirements:\n      host:\n        - python\n        - swig ==4.*\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - box2d-py ==2.3.*\n        - pygame ==2.1.*\n    test:\n      imports:\n        - gymnasium.envs.box2d\n\n  - name: gymnasium-classic_control\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - pygame ==2.1.*\n    test:\n      imports:\n        - gymnasium.envs.classic_control\n\n  - name: gymnasium-mujoco\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - mujoco-python ==2.2.0\n        - imageio >=2.14.1\n    test:\n      imports:\n        - gymnasium.envs.mujoco\n\n  - name: gymnasium-mujoco_py\n    build:\n      # we currently don't have https://github.com/openai/mujoco-py\n      # in conda-forge, and it'll be replaced by mujoco anyway\n      skip: true\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - mujoco-py >=2.1,<2.2\n        - imageio >=2.14.1\n    test:\n      imports:\n        - gymnasium.envs.mujoco\n\n  - name: gymnasium-toy_text\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - pygame ==2.1.*\n    test:\n      imports:\n        - gymnasium.envs.toy_text\n\n  - name: gymnasium-other\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('gymnasium', exact=True) }}\n        - lz4 >=3.1.0\n        - matplotlib >=3.0\n        - moviepy >=1.0\n        - py-opencv >=3.0\n    test:\n      imports:\n        # There are no tests in the source code for gymnasium-other\n\nabout:\n  home: https://gymnasium.farama.org/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A standard API for reinforcement learning and a diverse set of reference environments (formerly Gym)\n  dev_url: https://github.com/Farama-Foundation/Gymnasium\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n    - pseudo-rnd-thoughts\n    - thewchan\n  feedstock-name: gymnasium\n",
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "url": "https://github.com/Farama-Foundation/Gymnasium/archive/refs/tags/v0.26.3.tar.gz",
 "version": "0.26.3"
}