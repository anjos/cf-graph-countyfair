{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/228149132.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/362846439.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374935443.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "elektronn2",
 "hash_type": "sha256",
 "name": "elektronn2",
 "new_version": "0.6.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "elektronn2"
  ]
 },
 "pinning_version": "2020.02.12",
 "raw_meta_yaml": "{% set name = \"elektronn2\" %}\n{% set version = \"0.6.0\" %}\n{% set sha256 = \"6777f929bdae9101abc25da9518dd47ca13edd975ae57768aa199e1a4fe8b7e0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-v{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/e/{{ name }}/{{ name }}-v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1001\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - python <3.7\n    - pip\n    - setuptools\n\n  run:\n    - python <3.7\n    - theano <0.10\n    - numpy\n    - scipy\n    - matplotlib-base\n    - scikit-learn\n    - scikit-image\n    - h5py\n    - future\n    - tqdm\n    - numba\n    - colorlog\n    - pydotplus\n    - seaborn\n    - prompt_toolkit <2\n    - jedi\n    - psutil\n    - ipython\n\ntest:\n  imports:\n    - elektronn2\n    - elektronn2.data\n    - elektronn2.neuromancer\n    - elektronn2.training\n    - elektronn2.utils\n  commands:\n    - elektronn2-train --help\n\nabout:\n  home: http://elektronn2.readthedocs.io/en/latest/elektronn2.html\n  license: GPLv3\n  license_file: LICENSE.txt\n  summary: 'A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks'\n  doc_url: http://elektronn2.readthedocs.io/en/latest/\n  dev_url: https://github.com/ELEKTRONN/ELEKTRONN2\n\nextra:\n  recipe-maintainers:\n    - mdraw\n",
 "smithy_version": "3.6.8",
 "strong_exports": false,
 "url": "https://pypi.org/packages/source/e/elektronn2/elektronn2-v0.6.0.tar.gz",
 "version": "0.6.0"
}