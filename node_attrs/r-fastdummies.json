{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/299623321.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/346910231.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/385185529.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/414370287.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488280907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/529144871.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652989570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-fastdummies",
 "hash_type": "sha256",
 "name": "r-fastdummies",
 "new_version": "1.6.3",
 "new_version_attempts": {
  "1.6.2": 1,
  "1.6.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-fastdummies"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = \"1.6.3\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-fastdummies\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/fastDummies_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/fastDummies/fastDummies_{{ version }}.tar.gz\n  sha256: bd3934fe19d7dff2723438bbb7b89334118143f8ce151d98477ae964ee5d81df\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-data.table\n    - r-tibble\n    - r-stringr\n  run:\n    - r-base\n    - r-data.table\n    - r-tibble\n    - r-stringr\n\ntest:\n  commands:\n    - $R -e \"library('fastDummies')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('fastDummies')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/jacobkap/fastDummies\n  license: MIT\n  summary: Creates dummy columns from columns that have categorical variables (character or factor types). You can also specify which columns to make dummies out of, or which columns to ignore. Also creates dummy rows from character, factor, and Date columns. This package provides a significant speed increase from creating\n    dummy variables through model.matrix().\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - uday1889\n\n# Package: fastDummies\n# Type: Package\n# Title: Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables\n# Version: 1.5.0\n# Authors@R: c( person(\"Jacob\", \"Kaplan\", email = \"jkkaplan6@gmail.com\", role = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0002-0601-0387\")),  person(\"Benjamin\", \"Schlegel\", email = \"kontakt@benjaminschlegl.ch\", role =  \"ctb\"))\n# Description: Creates dummy columns from columns that have categorical variables (character or factor types). You can also specify which columns to make dummies out of, or which columns to ignore. Also creates dummy rows from character, factor, and Date columns. This package provides a significant speed increase from creating dummy variables through model.matrix().\n# Depends: R (>= 2.10)\n# Imports: data.table, tibble\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# URL: https://github.com/jacobkap/fastDummies\n# BugReports: https://github.com/jacobkap/fastDummies/issues\n# RoxygenNote: 6.1.1\n# Suggests: testthat (>= 2.1.0), knitr, rmarkdown, covr, spelling\n# VignetteBuilder: knitr\n# Language: en-US\n# NeedsCompilation: no\n# Packaged: 2019-09-02 21:52:29 UTC; user\n# Author: Jacob Kaplan [aut, cre] (<https://orcid.org/0000-0002-0601-0387>), Benjamin Schlegel [ctb]\n# Maintainer: Jacob Kaplan <jkkaplan6@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2019-09-02 22:30:05 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/fastDummies_1.6.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/fastDummies/fastDummies_1.6.3.tar.gz",
  "https://cran.r-project.org/src/contrib/fastDummies_1.6.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/fastDummies/fastDummies_1.6.3.tar.gz"
 ],
 "version": "1.6.3"
}