{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/627105947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/627108364.json"
   },
   "data": {
    "bot_rerun": 1619788585.3082635,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/627407211.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705381495.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/742969612.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/810612690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.03"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "codec2",
 "hash_type": "sha256",
 "name": "codec2-split",
 "new_version": "1.03",
 "new_version_attempts": {
  "1.0.0": 1,
  "1.0.1": 1,
  "1.03": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "codec2",
   "libcodec2"
  ]
 },
 "pinning_version": "2021.12.25.08.18.48",
 "raw_meta_yaml": "{% set name = \"codec2\" %}\n{% set version = \"1.0.3\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/drowe67/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 48162d562ea3bf4ca273f3c45df04505a006bd9a2b376006c75706c4de957da7\n  patches:\n    - 0001-Fix-CMake-include-of-GetPrerequisites.patch\n    - 0002-Add-optional-installation-of-command-line-programs.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('cxx') }}  # [not win]\n    # upstream does not support compiling with MSVC\n    - {{ compiler('m2w64_c') }}  # [win]\n    - cmake\n    - ninja\n\noutputs:\n  - name: libcodec2\n    script: install_libcodec2.bat  # [win]\n    script: install_libcodec2.sh  # [not win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libcodec2', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}  # [not win]\n        - {{ compiler('m2w64_c') }}  # [win]\n        - cmake\n        - ninja\n    test:\n      commands:\n        # verify that (some) headers get installed\n        - test -f $PREFIX/include/codec2/codec2.h  # [not win]\n        - test -f $PREFIX/include/codec2/version.h  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\codec2\\\\codec2.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\codec2\\\\version.h exit 1  # [win]\n\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/libcodec2${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\libcodec2.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\libcodec2.dll.a exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\libcodec2.lib exit 1  # [win]\n\n  - name: codec2\n    script: install_codec2.bat  # [win]\n    script: install_codec2.sh  # [not win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libcodec2', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}  # [not win]\n        - {{ compiler('m2w64_c') }}  # [win]\n        - cmake\n        - ninja\n      host:\n        - libcodec2\n      run:\n        - {{ pin_subpackage('libcodec2', exact=True) }}\n    test:\n      commands:\n        # verify that executables can be run\n        # don't test ofdm_demod, ofdm_mod, and tollr\n        # because they don't conform to the pattern (print usage, return 1)\n        {% set cmds = [\"c2dec\", \"c2enc\", \"c2sim\", \"cohpsk_ch\", \"cohpsk_demod\"] %}\n        {% set cmds = cmds + [\"cohpsk_get_test_bits\", \"cohpsk_mod\", \"cohpsk_put_test_bits\"] %}\n        {% set cmds = cmds + [\"deframer\", \"fdmdv_channel\", \"fdmdv_demod\"] %}\n        {% set cmds = cmds + [\"fdmdv_get_test_bits\", \"fdmdv_mod\", \"fdmdv_put_test_bits\"] %}\n        {% set cmds = cmds + [\"fm_demod\", \"fmfsk_demod\", \"fmfsk_mod\", \"framer\"] %}\n        {% set cmds = cmds + [\"freedv_data_raw_rx\", \"freedv_data_raw_tx\"] %}\n        {% set cmds = cmds + [\"freedv_data_rx\", \"freedv_data_tx\"] %}\n        {% set cmds = cmds + [\"freedv_mixed_rx\", \"freedv_mixed_tx\"] %}\n        {% set cmds = cmds + [\"freedv_rx\", \"freedv_tx\"] %}\n        {% set cmds = cmds + [\"fsk_demod\", \"fsk_get_test_bits\", \"fsk_mod\"] %}\n        {% set cmds = cmds + [\"fsk_mod_ext_vco\", \"fsk_put_test_bits\", \"insert_errors\"] %}\n        {% set cmds = cmds + [\"ldpc_dec\", \"ldpc_enc\", \"ldpc_noise\"] %}\n        {% set cmds = cmds + [\"ofdm_get_test_bits\", \"ofdm_put_test_bits\"] %}\n        {% set cmds = cmds + [\"vhf_deframe_c2\", \"vhf_frame_c2\"] %}\n        {% for cmd in cmds %}\n        - {{ cmd }} || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n        - {{ cmd }} || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n        {% endfor %}\n\nabout:\n  home: http://www.rowetel.com/codec2.html\n  license: LGPL-2.1-or-later\n  license_family: LGPL\n  license_file: COPYING\n  summary: An open source low bit rate speech codec\n  description: |\n    Open source speech codec designed for communications quality speech between 450\n    and 3200 bit/s. The main application is low bandwidth HF/VHF digital radio.\n  dev_url: https://github.com/drowe67/codec2\n\nextra:\n  feedstock-name: codec2\n  recipe-maintainers:\n    - ryanvolz\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://github.com/drowe67/codec2/archive/v1.0.3.tar.gz",
 "version": "1.0.3"
}