{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/774782659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gcm_filters",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "**GCM-Filters** is a python package that performs spatial filtering analysis in a flexible and efficient way.\nThe GCM-Filters algorithm applies a discrete Laplacian to smooth a field through an iterative process that resembles\ndiffusion ([Grooms et al., 2021](https://doi.org/10.1029/2021MS002552)). The package can be used for either gridded\nobservational data or gridded data that is produced by General Circulation Models (GCMs) of ocean, weather, and climate.\nSuch GCM data come on complex curvilinear grids, whose geometry is respected by the GCM-Filters Laplacians. Through\nintegration with [dask](https://dask.org/), GCM-Filters enables parallel, out-of-core filter analysis on both CPUs and GPUs.\n",
   "dev_url": "https://github.com/ocean-eddy-cpt/gcm-filters",
   "doc_url": "https://gcm-filters.readthedocs.io/en/latest/",
   "home": "https://github.com/ocean-eddy-cpt/gcm-filters",
   "license": "LGPL-3.0",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "Diffusion-based Spatial Filtering of Gridded Data"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "rabernat",
    "NoraLoose",
    "iangrooms"
   ]
  },
  "package": {
   "name": "gcm_filters",
   "version": "0.1.3"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip"
   ],
   "run": [
    "python >=3.6",
    "dask",
    "scipy",
    "xarray"
   ]
  },
  "source": {
   "sha256": "c33bf22a3e533b24f55f2b82a947559b851d078e57c47c67fa1fbf1df620dfd2",
   "url": "https://pypi.io/packages/source/g/gcm_filters/gcm_filters-0.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "gcm_filters"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "**GCM-Filters** is a python package that performs spatial filtering analysis in a flexible and efficient way.\nThe GCM-Filters algorithm applies a discrete Laplacian to smooth a field through an iterative process that resembles\ndiffusion ([Grooms et al., 2021](https://doi.org/10.1029/2021MS002552)). The package can be used for either gridded\nobservational data or gridded data that is produced by General Circulation Models (GCMs) of ocean, weather, and climate.\nSuch GCM data come on complex curvilinear grids, whose geometry is respected by the GCM-Filters Laplacians. Through\nintegration with [dask](https://dask.org/), GCM-Filters enables parallel, out-of-core filter analysis on both CPUs and GPUs.\n",
   "dev_url": "https://github.com/ocean-eddy-cpt/gcm-filters",
   "doc_url": "https://gcm-filters.readthedocs.io/en/latest/",
   "home": "https://github.com/ocean-eddy-cpt/gcm-filters",
   "license": "LGPL-3.0",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "Diffusion-based Spatial Filtering of Gridded Data"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "rabernat",
    "NoraLoose",
    "iangrooms"
   ]
  },
  "package": {
   "name": "gcm_filters",
   "version": "0.1.3"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip"
   ],
   "run": [
    "python >=3.6",
    "dask",
    "scipy",
    "xarray"
   ]
  },
  "source": {
   "sha256": "c33bf22a3e533b24f55f2b82a947559b851d078e57c47c67fa1fbf1df620dfd2",
   "url": "https://pypi.io/packages/source/g/gcm_filters/gcm_filters-0.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "gcm_filters"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "gcm_filters",
 "new_version": "0.1.3",
 "new_version_attempts": {
  "0.1.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gcm_filters"
  ]
 },
 "pinning_version": "2021.11.05.20.51.02",
 "raw_meta_yaml": "{% set name = \"gcm_filters\" %}\n{% set version = \"0.1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: c33bf22a3e533b24f55f2b82a947559b851d078e57c47c67fa1fbf1df620dfd2\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - dask\n    - scipy\n    - xarray\n\ntest:\n  imports:\n    - gcm_filters\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/ocean-eddy-cpt/gcm-filters\n  license: LGPL-3.0\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: Diffusion-based Spatial Filtering of Gridded Data\n  description: |\n    **GCM-Filters** is a python package that performs spatial filtering analysis in a flexible and efficient way.\n    The GCM-Filters algorithm applies a discrete Laplacian to smooth a field through an iterative process that resembles \n    diffusion ([Grooms et al., 2021](https://doi.org/10.1029/2021MS002552)). The package can be used for either gridded \n    observational data or gridded data that is produced by General Circulation Models (GCMs) of ocean, weather, and climate.\n    Such GCM data come on complex curvilinear grids, whose geometry is respected by the GCM-Filters Laplacians. Through \n    integration with [dask](https://dask.org/), GCM-Filters enables parallel, out-of-core filter analysis on both CPUs and GPUs.\n  doc_url: https://gcm-filters.readthedocs.io/en/latest/\n  dev_url: https://github.com/ocean-eddy-cpt/gcm-filters\n\nextra:\n  recipe-maintainers:\n    - rabernat\n    - NoraLoose\n    - iangrooms\n",
 "req": {
  "__set__": true,
  "elements": [
   "dask",
   "pip",
   "python",
   "scipy",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "python >=3.6",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/g/gcm_filters/gcm_filters-0.1.3.tar.gz",
 "version": "0.1.3"
}