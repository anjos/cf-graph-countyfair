{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199892322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215066442.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/476788277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "tetgen",
 "hash_type": "sha256",
 "name": "tetgen",
 "new_version": "1.6.0",
 "new_version_attempts": {
  "1.6.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tetgen"
  ]
 },
 "pinning_version": "2020.08.29.21.09.48",
 "raw_meta_yaml": "{% set name = \"tetgen\" %}\n{% set version = \"1.6.0\" %}\n{% set sha256 = \"87b5e61ebd3a471fc4f2cdd7124c2b11dd6639f4feb1f941a5d2f5110d05ce39\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: http://wias-berlin.de/software/tetgen/1.5/src/tetgen{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - 0001-Add-cmake-install-directive-for-targets.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >2.8\n    - ninja\n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/tetgen  # [unix]\n    - test -f ${PREFIX}/lib/libtet.a  # [unix]\n    - test -f ${PREFIX}/include/tetgen.h  # [unix]\n    - if not exist %LIBRARY_INC%\\\\tetgen.h exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\tet.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\tetgen.exe exit 1  # [win]\n\nabout:\n  home: http://wias-berlin.de/software/tetgen\n  license: AGPL-3.0-or-later\n  license_file: LICENSE\n  summary: A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator\n  description: |\n    TetGen is a program to generate tetrahedral meshes of any 3D polyhedral\n    domains. TetGen generates exact constrained Delaunay tetrahedralizations,\n    boundary conforming Delaunay meshes, and Voronoi partitions.\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n    - cekees\n    - msarahan\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "url": "http://wias-berlin.de/software/tetgen/1.5/src/tetgen1.6.0.tar.gz",
 "version": "1.6.0"
}