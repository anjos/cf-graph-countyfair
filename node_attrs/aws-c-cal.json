{
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "aws-c-cal",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/awslabs/aws-c-cal",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Aws Crypto Abstraction Layer: Cross-Platform, C99 wrapper for cryptography primitives."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "aws-c-cal"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy"
   ]
  },
  "package": {
   "name": "aws-c-cal",
   "version": "0.4.3"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "ninja"
   ],
   "host": [
    "aws-c-common",
    "openssl"
   ]
  },
  "source": {
   "sha256": "99c3bb86aaa7dfeaa87906cf80bb19a7955ca09736dae626d0d7efd7c0b858c4",
   "url": "https://github.com/awslabs/aws-c-cal/archive/v0.4.3.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libaws-c-cal${SHLIB_EXT}",
    "test -f $PREFIX/include/aws/cal/cal.h"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aws-c-common",
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/awslabs/aws-c-cal",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Aws Crypto Abstraction Layer: Cross-Platform, C99 wrapper for cryptography primitives."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "aws-c-cal",
    "aws-c-cal"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "xhochy"
   ]
  },
  "package": {
   "name": "aws-c-cal",
   "version": "0.4.3"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja"
   ],
   "host": [
    "aws-c-common",
    "openssl",
    "aws-c-common",
    "openssl"
   ]
  },
  "source": {
   "sha256": "99c3bb86aaa7dfeaa87906cf80bb19a7955ca09736dae626d0d7efd7c0b858c4",
   "url": "https://github.com/awslabs/aws-c-cal/archive/v0.4.3.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libaws-c-cal${SHLIB_EXT}",
    "test -f $PREFIX/include/aws/cal/cal.h",
    "if not exist %LIBRARY_INC%\\\\aws\\\\cal\\\\cal.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\aws-c-cal.dll exit 1"
   ]
  }
 },
 "name": "aws-c-cal",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "aws-c-cal"
  ]
 },
 "raw_meta_yaml": "{% set name = \"aws-c-cal\" %}\n{% set version = \"0.4.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/awslabs/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 99c3bb86aaa7dfeaa87906cf80bb19a7955ca09736dae626d0d7efd7c0b858c4\n\nbuild:\n  number: 0\n  skip: True  # [osx], will be done on the feedstocks as it requries macOS 10.12+\n  run_exports:\n    - {{ pin_subpackage(\"aws-c-cal\", max_pin=\"x.x.x\") }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n    - ninja\n  host:\n    - aws-c-common\n    - openssl\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libaws-c-cal${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/include/aws/cal/cal.h  # [unix]\n    - if not exist %LIBRARY_INC%\\\\aws\\\\cal\\\\cal.h exit 1          # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\aws-c-cal.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/awslabs/aws-c-cal\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: \"Aws Crypto Abstraction Layer: Cross-Platform, C99 wrapper for cryptography primitives.\"\n\nextra:\n  recipe-maintainers:\n    - xhochy\n",
 "req": {
  "__set__": true,
  "elements": [
   "aws-c-common",
   "c_compiler_stub",
   "cmake",
   "ninja",
   "openssl"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aws-c-common",
    "c_compiler_stub",
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aws-c-common",
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/awslabs/aws-c-cal/archive/v0.4.3.tar.gz",
 "version": "0.4.3",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/awslabs/aws-c-cal",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Aws Crypto Abstraction Layer: Cross-Platform, C99 wrapper for cryptography primitives."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "aws-c-cal"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy"
   ]
  },
  "package": {
   "name": "aws-c-cal",
   "version": "0.4.3"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "ninja"
   ],
   "host": [
    "aws-c-common",
    "openssl"
   ]
  },
  "source": {
   "sha256": "99c3bb86aaa7dfeaa87906cf80bb19a7955ca09736dae626d0d7efd7c0b858c4",
   "url": "https://github.com/awslabs/aws-c-cal/archive/v0.4.3.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%\\\\aws\\\\cal\\\\cal.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\aws-c-cal.dll exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aws-c-common",
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}