{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228104423.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308024389.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/471974338.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/527907506.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "cling",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "3",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.7"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib"
   ],
   "run": [
    "cxx_compiler_stub",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "sysroot_linux-64"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch"
   ],
   "sha256": "cb72186edd8b1ccc0662542c70b02725891e2405aecd5631066972e421b51259",
   "url": "https://github.com/root-project/cling/archive/v0.7.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "3",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.7"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib"
   ],
   "run": [
    "cxx_compiler_stub",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "sysroot_linux-64"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch"
   ],
   "sha256": "cb72186edd8b1ccc0662542c70b02725891e2405aecd5631066972e421b51259",
   "url": "https://github.com/root-project/cling/archive/v0.7.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "3",
   "run_exports": [
    "cling",
    "cling",
    "cling",
    "cling"
   ],
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr",
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr",
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr",
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.7"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib",
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib",
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib",
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib"
   ],
   "run": [
    "cxx_compiler_stub",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "sysroot_linux-64",
    "cxx_compiler_stub",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "sysroot_linux-64",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch"
   ],
   "sha256": "cb72186edd8b1ccc0662542c70b02725891e2405aecd5631066972e421b51259",
   "url": "https://github.com/root-project/cling/archive/v0.7.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'",
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'",
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'",
    "if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "name": "cling",
 "new_version": "0.7",
 "new_version_attempts": {
  "0.7": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "3",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.7"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib"
   ],
   "run": [
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch"
   ],
   "sha256": "cb72186edd8b1ccc0662542c70b02725891e2405aecd5631066972e421b51259",
   "url": "https://github.com/root-project/cling/archive/v0.7.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cling"
  ]
 },
 "pinning_version": "2020.11.26.07.13.25",
 "raw_meta_yaml": "{% set name = \"cling\" %}\n{% set version = \"0.7\" %}\n{% set sha256 = \"cb72186edd8b1ccc0662542c70b02725891e2405aecd5631066972e421b51259\" %}\n{% set build_number = 3 %}\n{% set clang_version = [5, 0, 0] %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/root-project/cling/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    # Export all symbols on windows to generate import library\n    - patches/0001-Export-all-symbols-on-windows.patch\n    # Do not build Jupyter kernel - use xeus-cling instead\n    - patches/0001-remove-jupyter.patch\n    - patches/0027-conda-packaging.patch\n    # Prevent setting sysroot include directory on OS Xd\n    - patches/0001-Drop-compile-time-sysroot.patch\n    # Include windows.h\n    - patches/0001-windows-include.patch\n    # Enable redefinitions\n    - patches/enable-redefinition-allowed.patch\n\nbuild:\n  number: {{ build_number }}\n  skip: true  # [win and vc<14]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - ninja  # [win]\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - llvmdev {{ clang_version[0] }}\n    - clangdev {{ clang_version|join('.') }}\n    - clang_variant * cling_v{{ version }}\n    - zlib\n  run:\n    # We really depend on the host compiler at runtime:\n    #  - the host compiler STL is one to be used.\n    #  - it is used by cling's runtime compatibility check.\n    - {{ compiler('cxx') }}  # [linux]\n    - clangdev {{ clang_version|join('.') }}\n    - clang_variant * cling_v{{ version }}\n    - sysroot_linux-64  # [linux]\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/cling  # [unix]\n    - if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)  # [win]\n    - cling '2+3; 0'\n    - cling '#include <vector>'\n\nabout:\n  dev_url: https://github.com/root-project/cling\n  doc_url: https://root.cern.ch/cling\n  home: https://root.cern.ch/cling\n  license: NCSA OR LGPL-2.1-only\n  license_file: LICENSE.TXT\n  summary: Cling - The Interactive C++ Interpreter\n  description: Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - gouarin\n    - chrisburr\n",
 "req": {
  "__set__": true,
  "elements": [
   "clang_variant",
   "clangdev",
   "cmake",
   "cxx_compiler_stub",
   "llvmdev",
   "make",
   "ninja",
   "sysroot_linux-64",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "cxx_compiler_stub",
    "linux-sysroot",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "cxx_compiler_stub",
    "linux-sysroot",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang_variant * cling_v0.7",
    "clangdev 5.0.0",
    "llvmdev 5",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang_variant * cling_v0.7",
    "clangdev 5.0.0",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/root-project/cling/archive/v0.7.tar.gz",
 "version": "0.7",
 "win_64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "3",
   "run_exports": [
    "cling"
   ],
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.7"
  },
  "requirements": {
   "build": [
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 5",
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7",
    "zlib"
   ],
   "run": [
    "clangdev 5.0.0",
    "clang_variant * cling_v0.7"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/0001-windows-include.patch",
    "patches/enable-redefinition-allowed.patch"
   ],
   "sha256": "cb72186edd8b1ccc0662542c70b02725891e2405aecd5631066972e421b51259",
   "url": "https://github.com/root-project/cling/archive/v0.7.tar.gz"
  },
  "test": {
   "commands": [
    "if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang_variant",
    "clangdev"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}