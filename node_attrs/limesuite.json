{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/625457201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "soapysdr08"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/642713862.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/642890077.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/991150650.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "wxwidgets32"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "limesuite",
 "hash_type": "sha256",
 "name": "limesuite-split",
 "new_version": "20.10.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "liblimesuite",
   "limesuite",
   "soapysdr-module-lms7"
  ]
 },
 "pinning_version": "2022.07.08.00.07.26",
 "raw_meta_yaml": "{% set name = \"LimeSuite\" %}\n{% set version = \"20.10.0\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/myriadrf/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: f6d79dc67cb52a5aea839d1dc00e65f85367cb2c275d77f149833d32cf79b467\n  patches:\n    - 0001-Modify-build-system-to-use-system-glew-instead-of-th.patch\n    - 0002-ConnectionFX3-Allow-choice-between-libusb-and-CyAPI-.patch\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    # libudev is on its own in CentOS 6, packaged with systemd in CentOS 7\n    - {{ cdt('libudev-devel') }}  # [linux and cdt_name=='cos6']\n    - {{ cdt('systemd-devel') }}  # [linux and cdt_name=='cos7']\n    - ninja\n    # required for OpenGL support\n    # See https://conda-forge.org/docs/maintainer/knowledge_base.html?highlight=cdt#libgl\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libdrm-devel') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libxxf86vm-devel') }}  # [linux]\n    # required for linking with gtk3 (through wxwidgets)\n    - {{ cdt('libx11') }}  # [linux]\n    - {{ cdt('libxau') }}  # [linux]\n    - {{ cdt('libxcomposite') }}  # [linux]\n    - {{ cdt('libxcursor') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxext') }}  # [linux]\n    - {{ cdt('libxfixes') }}  # [linux]\n    - {{ cdt('libxi') }}  # [linux]\n    - {{ cdt('libxinerama') }}  # [linux]\n    - {{ cdt('libxrandr') }}  # [linux]\n    - {{ cdt('libxrender') }}  # [linux]\n    # required for linking with wxwidgets\n    - {{ cdt('libxtst') }}  # [linux]\n  host:\n    - glew\n    - libusb\n    - soapysdr\n    # wxwidgets is not available for osx, otherwise we could ENABLE_GUI\n    - wxwidgets  # [not osx]\n\noutputs:\n  - name: liblimesuite\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    build:\n      run_exports:\n        - {{ pin_subpackage('liblimesuite', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      host:\n        - libusb\n    test:\n      commands:\n        # verify that executables can be run\n        - LimeUtil --info\n\n        # check that all the device connections we want are reported\n        - LimeUtil --info | grep FT601  # [not win]\n        - LimeUtil --info | grep FX3  # [not win]\n        - LimeUtil --info | grep PCIEXillybus  # [not win]\n        - LimeUtil --info | findstr /l FT601  # [win]\n        - LimeUtil --info | findstr /l FX3  # [win]\n        - LimeUtil --info | findstr /l PCIEXillybus  # [win]\n\n        # verify that headers get installed\n        - test -f $PREFIX/include/lime/LimeSuite.h  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\lime\\\\LimeSuite.h exit 1  # [win]\n\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/libLimeSuite${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\LimeSuite.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\LimeSuite.lib exit 1  # [win]\n\n        # verify that udev rule gets installed\n        - test -f $PREFIX/lib/udev/rules.d/64-limesuite.rules  # [linux]\n  - name: soapysdr-module-lms7\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage('liblimesuite', exact=True) }}\n        - soapysdr\n      run:\n        - {{ pin_subpackage('liblimesuite', exact=True) }}\n    test:\n      commands:\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/SoapySDR/modules{{ soapysdr }}/libLMS7Support.so  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\SoapySDR\\\\modules{{ soapysdr }}\\\\LMS7Support.dll exit 1  # [win]\n\n        # show info to see if module is detected\n        - SoapySDRUtil --info\n  - name: limesuite\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n      host:\n        - glew\n        - {{ pin_subpackage('liblimesuite', exact=True) }}\n        - {{ pin_subpackage('soapysdr-module-lms7', exact=True) }}\n        # wxwidgets is not available for osx, otherwise we could ENABLE_GUI\n        - wxwidgets  # [not osx]\n      run:\n        - {{ pin_subpackage('liblimesuite', exact=True) }}\n        - {{ pin_subpackage('soapysdr-module-lms7', exact=True) }}\n    test:\n      commands:\n        # verify that GUI executables get installed\n        - test -f $PREFIX/bin/LimeSuiteGUI  # [linux]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\LimeSuiteGUI.exe exit 1  # [win]\n\n        # verify limesuite dependencies\n        - LimeUtil --info\n\n        # show info to see if module is detected\n        - SoapySDRUtil --info\n\nabout:\n  home: http://wiki.myriadrf.org/Lime_Suite\n  license: Apache-2.0 AND MIT AND BSD-3-Clause\n  license_file:\n    - COPYING\n    - external/cpp-feather-ini-parser/LICENSE\n    - external/kissFFT/COPYING\n  summary: Driver and GUI for LMS7002M-based (Lime) SDR platforms\n  description: |\n    Lime Suite is a collection of software supporting several hardware\n    platforms including the LimeSDR, drivers for the LMS7002M transceiver\n    RFIC, and other tools for developing with LMS7-based hardware.\n    Installing the Lime Suite enables many SDR applications such as GQRX\n    to work with supported hardware through the bundled SoapySDR support\n    module.\n\n    The `liblimesuite` package contains the main library that other\n    packages should develop against. The `soapysdr-module-lms7` package\n    contains the Soapy SDR module that supports Lime devices. The\n    `limesuite` package provides the entire software suite, depending\n    on the previous packages and also providing GUI tools.\n  doc_url: https://wiki.myriadrf.org/Lime_Suite\n  dev_url: https://github.com/myriadrf/LimeSuite\n\nextra:\n  feedstock-name: limesuite\n  recipe-maintainers:\n    - ryanvolz\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/myriadrf/LimeSuite/archive/v20.10.0.tar.gz",
 "version": "20.10.0"
}