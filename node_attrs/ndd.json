{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/524355267.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/524355841.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552695457.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554699656.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683096015.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775070796.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1037594156.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1105759449.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error Signals.SIGTERM\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1073, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1165, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1838, in _get_contents\n    context_processor(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 564, in context_processor\n    environ.update(get_environ(m=initial_metadata, skip_build_id=skip_build_id))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 257, in get_dict\n    m.config._merge_build_host = m.build_is_host\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 2839, in build_is_host\n    and not self.uses_new_style_compiler_activation\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 2132, in uses_new_style_compiler_activation\n    text = self.extract_requirements_text()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 2019, in extract_requirements_text\n    if \"package:\" in self.get_recipe_text(force_top_level=force_top_level):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 2009, in get_recipe_text\n    recipe_text = select_lines(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 238, in select_lines\n    lines.append(line)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/xonsh/built_ins.py\", line 61, in newh\n    sys.exit(sig)\nSystemExit: Signals.SIGTERM\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 241, in _parse_meta_yaml_impl\n    raise RuntimeError(str(e))\nRuntimeError: Signals.SIGTERM\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ndd",
 "hash_type": "sha256",
 "name": "ndd",
 "new_version": "1.10.6",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ndd"
  ]
 },
 "pinning_version": "2022.10.31.14.40.35",
 "raw_meta_yaml": "{% set name = \"ndd\" %}\n{% set version = \"1.10.6\" %}\n{% set sha256 = \"d08d31f297531865f70a130986f0b3d02a9242acbe2c240825f336c0a417a117\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/simomarsili/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: True  # [py<35]\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}              # [not win]\n    - {{ compiler('m2w64_fortran') }}        # [win]\n  host:\n    - pip\n    - python\n    - numpy >=1.13\n  run:\n    - python\n    - numpy >=1.13\n\ntest:\n  imports:\n    - ndd\n\nabout:\n  home: https://github.com/simomarsili/ndd\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'ndd is a Python package for Bayesian entropy estimation from discrete data.'\n\n  description: |\n    ndd is a Python package for Bayesian entropy estimation from discrete data.\n    ndd provides the ndd.entropy function, based on an efficient implementation\n    of the Nemenman-Schafee-Bialek (NSB) algorithm. Remarkably, the NSB\n    algorithm allows entropy estimation when the number of samples is much\n    smaller than the number of classes with non-zero probability.\n  doc_url: https://github.com/simomarsili/ndd/blob/master/README.rst\n  dev_url: https://github.com/simomarsili/ndd\n\nextra:\n  recipe-maintainers:\n    - simomarsili\n",
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "url": "https://github.com/simomarsili/ndd/archive/v1.10.6.tar.gz",
 "version": "1.10.6"
}