{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/649990364.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661033305.json"
   },
   "data": {
    "bot_rerun": 1623345263.6784651,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/667115258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/670738472.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/670738818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/734061096.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "scitokens-cpp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
   "dev_url": "https://github.com/scitokens/scitokens-cpp",
   "home": "https://github.com/scitokens/scitokens-cpp",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A C++ implementation of the SciTokens library with a C library interface"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "scitokens-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "scitokens-cpp",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "source": {
   "sha256": "bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f",
   "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jwt-cpp",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
   "dev_url": "https://github.com/scitokens/scitokens-cpp",
   "home": "https://github.com/scitokens/scitokens-cpp",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A C++ implementation of the SciTokens library with a C library interface"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "scitokens-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "scitokens-cpp",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "source": {
   "sha256": "bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f",
   "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jwt-cpp",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
   "dev_url": "https://github.com/scitokens/scitokens-cpp",
   "home": "https://github.com/scitokens/scitokens-cpp",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A C++ implementation of the SciTokens library with a C library interface"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "scitokens-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "scitokens-cpp",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "source": {
   "sha256": "bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f",
   "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jwt-cpp",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
   "dev_url": "https://github.com/scitokens/scitokens-cpp",
   "home": "https://github.com/scitokens/scitokens-cpp",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A C++ implementation of the SciTokens library with a C library interface"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "scitokens-cpp",
    "scitokens-cpp",
    "scitokens-cpp",
    "scitokens-cpp",
    "scitokens-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "duncanmmacleod",
    "chrisburr",
    "duncanmmacleod",
    "chrisburr",
    "duncanmmacleod",
    "chrisburr",
    "duncanmmacleod",
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "scitokens-cpp",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite",
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite",
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite",
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "openssl",
    "picojson",
    "sqlite",
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "source": {
   "sha256": "bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f",
   "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}",
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}",
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}",
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}",
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
   ]
  }
 },
 "name": "scitokens-cpp",
 "new_version": "0.6.3",
 "new_version_attempts": {
  "0.6.1": 1,
  "0.6.2": 2,
  "0.6.3": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
   "dev_url": "https://github.com/scitokens/scitokens-cpp",
   "home": "https://github.com/scitokens/scitokens-cpp",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A C++ implementation of the SciTokens library with a C library interface"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "scitokens-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "scitokens-cpp",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "source": {
   "sha256": "bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f",
   "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jwt-cpp",
    "libcurl",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
   "dev_url": "https://github.com/scitokens/scitokens-cpp",
   "home": "https://github.com/scitokens/scitokens-cpp",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A C++ implementation of the SciTokens library with a C library interface"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "scitokens-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "scitokens-cpp",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "source": {
   "sha256": "bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f",
   "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/scitokens/scitokens.h",
    "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jwt-cpp",
    "libcurl",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "scitokens-cpp"
  ]
 },
 "pinning_version": "2021.09.14.16.50.33",
 "pre_pr_migrator_status": {
  "openssl3": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1306242854\">bot CI job</a>): master: ['linux_64_openssl3: Encountered problems while solving:\\n  - package jwt-cpp-0.4.0-h695e95d_0 requires openssl >=1.1.1k,<1.1.2a, but none of the providers can be installed\\n', 'linux_aarch64_openssl3: Encountered problems while solving:\\n  - package jwt-cpp-0.4.0-h3c49101_0 requires openssl >=1.1.1k,<1.1.2a, but none of the providers can be installed\\n', 'linux_ppc64le_openssl3: Encountered problems while solving:\\n  - package jwt-cpp-0.4.0-h278a7c5_0 requires openssl >=1.1.1k,<1.1.2a, but none of the providers can be installed\\n', 'osx_64_openssl3: Encountered problems while solving:\\n  - package jwt-cpp-0.4.0-h504443f_0 requires openssl >=1.1.1k,<1.1.2a, but none of the providers can be installed\\n', 'osx_arm64_openssl3: Encountered problems while solving:\\n  - package jwt-cpp-0.4.0-h05e8e0f_0 requires openssl >=1.1.1k,<1.1.2a, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"scitokens-cpp\" %}\n{% set version = \"0.6.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/scitokens/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: bc578434b9bfa524a20952f4f60e4135dfcfc10749044e7abc6c62503e14ed6f\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage(\"scitokens-cpp\", max_pin=\"x\") }}\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n    - ninja  # [not unix]\n    - pkg-config\n  host:\n    - gtest\n    - jwt-cpp 0.4.*\n    - libcurl\n    - libuuid  # [linux]\n    - openssl\n    - picojson\n    - sqlite\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/scitokens/scitokens.h  # [unix]\n    - test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}  # [unix]\n\nabout:\n  home: https://github.com/scitokens/scitokens-cpp\n  dev_url: https://github.com/scitokens/scitokens-cpp\n  summary: A C++ implementation of the SciTokens library with a C library interface\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    SciTokens provide a token format for distributed authorization.\n    The tokens are self-describing, can be verified in a distributed\n    fashion (no need to contact the issuer to determine if the token is\n    valid). This is convenient for a federated environment where several\n    otherwise-independent storage endpoints want to delegate trust for an\n    issuer for managing a storage allocation.\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n    - duncanmmacleod\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "gtest",
   "jwt-cpp",
   "libcurl",
   "libuuid",
   "make",
   "openssl",
   "picojson",
   "pkg-config",
   "sqlite"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "gtest",
    "jwt-cpp",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jwt-cpp 0.4.*",
    "libcurl",
    "libuuid",
    "openssl",
    "picojson",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/scitokens/scitokens-cpp/archive/v0.6.2.tar.gz",
 "version": "0.6.2"
}