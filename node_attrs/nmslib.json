{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/399362491.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/399362864.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404645761.json"
   },
   "data": {
    "bot_rerun": 1603216858.9615474,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502002752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/508735140.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546382293.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546839669.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/550324613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551409076.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551716116.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551758554.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554698834.json"
   },
   "data": {
    "bot_rerun": 1618679137.4400969,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/566176060.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/566393889.json"
   },
   "data": {
    "bot_rerun": 1618693750.0693955,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617328376.json"
   },
   "data": {
    "bot_rerun": 1637609590.2846098,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617355437.json"
   },
   "data": {
    "bot_rerun": 1637609590.2848315,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617381752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775069693.json"
   },
   "data": {
    "bot_rerun": 1637609590.2850332,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/786382403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/786629189.json"
   },
   "data": {
    "bot_rerun": 1650783455.2015173,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910887713.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/919354641.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "nmslib",
 "hash_type": "sha256",
 "name": "nmslib",
 "new_version": "2.1.1",
 "new_version_attempts": {
  "2.0.11": 1,
  "2.0.12": 3,
  "2.0.14": 1,
  "2.0.15": 1,
  "2.0.16": 1,
  "2.0.6": 3,
  "2.0.7": 1,
  "2.0.8": 1,
  "2.0.9": 1,
  "2.1.0": 1,
  "2.1.1": 2
 },
 "new_version_errors": {
  "2.0.12": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.0.12' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "2.0.14": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.0.14' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nmslib"
  ]
 },
 "pinning_version": "2022.04.25.19.26.04",
 "raw_meta_yaml": "{% set name = \"nmslib\" %}\n{% set version = \"2.1.1\" %}\n\npackage:\n  name: nmslib\n  version: {{ version }}\n\nsource:\n  url: https://github.com/nmslib/nmslib/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 1f9cf1b63b5047ac13149abb0a319789db9096f49405020a3322914a151e7dc5\n  patches:\n    - patches/0001-remove-installation-requirements-handled-by-conda.patch\n    # upstream has a cpu-guard that heckles people to compile from source if their\n    # CPU supports more features than the library has been compiled with, see\n    # https://github.com/nmslib/nmslib/blob/v2.1.1/python_bindings/tensorflow/cpu_feature_guard.cc#L158-L161\n    # needless to say, we need to aim for portability here, and want to avoid\n    # people following the instructions to install from pip, which might run\n    # into various problems around ABIs of numpy/C++ etc.\n    # Hopefully, we can provide more specific builds per CPU architecture\n    # in the future, see conda-forge/conda-forge.github.io#1261\n    - patches/0002-silence-log-that-tells-people-to-install-from-pip.patch\n    # backport nmslib/nmslib#488 for compatibility with newer pybind11\n    - patches/0003-Fix-import-on-newer-versions-of-pybind11-fixes-471.patch\n    # some weird interaction with pybind11 + quote escapes;\n    # upstream CI need quotes escaped, we need them unescaped\n    - patches/0004-do-not-escape-quotes-for-VERSION_INFO.patch\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install ./python_bindings -vv\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\n  host:\n    - python\n    - setuptools\n    - psutil\n    - pip\n    - pybind11 >=2.2.3\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - pybind11 >=2.2.3\n    - psutil\n\ntest:\n  imports:\n    - nmslib\n  source_files:\n    - python_bindings/tests\n  requires:\n    - pytest\n  commands:\n    {% set tests_to_skip = \"_not_a_real_test\" %}\n    # skip a test that checks GC-behaviour for PyPy\n    {% set tests_to_skip = tests_to_skip + \" or testMemoryLeak\" %}  # [python_impl == \"pypy\"]\n    - pytest -v python_bindings/tests -k \"not ({{ tests_to_skip }})\"\n\nabout:\n  home: https://github.com/searchivarius/nmslib\n  summary: Non-Metric Space Library (NMSLIB)\n  license: Apache-2.0\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - jzthree\n    - h-vetinari\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/nmslib/nmslib/archive/refs/tags/v2.1.1.tar.gz",
 "version": "2.1.1"
}