{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/383904349.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/468134863.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "python_abi",
 "name": "python_abi",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "python_abi"
  ]
 },
 "pinning_version": "2020.08.14.17.10.59",
 "raw_meta_yaml": "{% set build_num = 2 %}\n{% if python_impl_version is not defined %}\n{% set python_impl_version = \"3.6\" %}\n{% endif %}\n\n\npackage:\n  name: python_abi\n  version: {{ python_version }}\n\nbuild:\n  number: {{ build_num }}\n  string: {{ build_num }}_{{ python_abi_tag }}\n  track_features:  # [python_implementation == \"pypy\"]\n    - pypy         # [python_implementation == \"pypy\"]\n\nrequirements:\n  run:\n    - python {{ python_impl_version }}.*                    # [python_implementation == \"cpython\"]\n    - pypy{{ python_version }} {{ python_impl_version }}.*  # [python_implementation == \"pypy\"]\n  run_constrained:\n    - pypy <0a0                                                                         # [python_implementation == \"cpython\"]\n    - python {{ python_version }}.* *_{{ python_impl_version.replace('.', '') }}_pypy     # [python_implementation == \"pypy\"]\n\ntest:\n  commands:\n    - python --version  # [python_implementation == \"cpython\"]\n    - pypy3 --version   # [python_implementation == \"pypy\"]\n\nabout:\n  home: https://github.com/conda-forge/python_abi-feedstock\n  summary: Metapackage to select python implementation\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "version": "3.8"
}