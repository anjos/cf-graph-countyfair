{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/698698065.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "bazel-toolchain",
 "name": "bazel-toolchain",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bazel-toolchain"
  ]
 },
 "pinning_version": "2021.07.28.08.03.56",
 "raw_meta_yaml": "{% set name = \"bazel-toolchain\" %}\n{% set version = \"0.1.5\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  run_constrained:\n    # This can be used without bazel from conda-forge,\n    # e.g. when bootstrapping bazel itself.\n    - bazel >=4\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - bazel\n\nabout:\n  home: https://github.com/conda-forge/bazel-toolchain-feedstock\n  summary: Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings.\n  description: |\n    This package generates a crosstool toolchain for Bazel that uses the currently\n    activated compilers / linker as defined by the environment variables. It does\n    take various conda(-forge) specifics into account for this. In addition to generating\n    a toolchain, it also sets various environment variables that need to be set for\n    the toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\n    to ensure that cross-compiling also works.\n\n    In build.sh\n\n      source gen-bazel-toolchain\n      bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} \u2026\n\n  license: BSD-3-Clause AND Apache-2.0\n  license_file: LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - xhochy\n    - wolfv\n",
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "version": "0.1.5"
}