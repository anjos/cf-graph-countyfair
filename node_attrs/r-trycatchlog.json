{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/649750486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/651722612.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/765348815.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-trycatchlog",
 "hash_type": "sha256",
 "name": "r-trycatchlog",
 "new_version": "1.3.1",
 "new_version_attempts": {
  "1.2.4": 1,
  "1.3.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-trycatchlog"
  ]
 },
 "pinning_version": "2021.10.22.20.56.07",
 "raw_meta_yaml": "{% set version = \"1.3.1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-trycatchlog\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/tryCatchLog_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/tryCatchLog/tryCatchLog_{{ version }}.tar.gz\n  sha256: 0da89a028d14bb865b9fc17cabdafe3bfafc8b2e10b86965cbaaf28f1151804c\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('tryCatchLog')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('tryCatchLog')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/aryoda/tryCatchLog\n  license: GPL-3.0-only\n  summary: Advanced tryCatch() and try() functions for better error handling (logging, stack trace with source code references and support for post-mortem analysis via dump files).\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - tobiasraabe\n\n# Package: tryCatchLog\n# Title: Advanced 'tryCatch()' and 'try()' Functions\n# Version: 1.2.1\n# Authors@R: c( person(\"Juergen\", \"Altfeld\", email = \"jaltfeld@altfeld-im.de\", role = c(\"aut\", \"cre\", \"cph\")), person(\"Charles\", \"Epaillard\", email = \"charles.epaillard@gmail.com\", role = \"ctb\"), person(\"Brandon\", \"Bertelsen\", email = \"brandon@bertelsen.ca\", role = \"ctb\") )\n# Description: Advanced tryCatch() and try() functions for better error handling (logging, stack trace with source code references and support for post-mortem analysis via dump files).\n# Imports: utils\n# Depends: R (>= 3.1.0)\n# License: GPL-3 | file LICENSE\n# URL: https://github.com/aryoda/tryCatchLog\n# BugReports: https://github.com/aryoda/tryCatchLog/issues\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 7.1.0\n# Suggests: futile.logger, testthat, knitr, rmarkdown, covr\n# VignetteBuilder: knitr\n# NeedsCompilation: no\n# Packaged: 2020-11-24 16:57:02 UTC; juergen\n# Author: Juergen Altfeld [aut, cre, cph], Charles Epaillard [ctb], Brandon Bertelsen [ctb]\n# Maintainer: Juergen Altfeld <jaltfeld@altfeld-im.de>\n# Repository: CRAN\n# Date/Publication: 2020-11-25 05:20:02 UTC\n",
 "smithy_version": "3.14.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/tryCatchLog_1.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tryCatchLog/tryCatchLog_1.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/tryCatchLog_1.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tryCatchLog/tryCatchLog_1.3.1.tar.gz"
 ],
 "version": "1.3.1"
}