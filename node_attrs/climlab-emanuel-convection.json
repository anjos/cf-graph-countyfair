{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/905492300.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906501086.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926494715.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "climlab-emanuel-convection",
 "hash_type": "sha256",
 "name": "climlab-emanuel-convection",
 "new_version": "0.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "climlab-emanuel-convection"
  ]
 },
 "pinning_version": "2022.05.03.05.37.34",
 "raw_meta_yaml": "{% set version = \"0.2\" %}\n\npackage:\n  name: climlab-emanuel-convection\n  version: {{ version }}\n\nsource:\n  url: https://github.com/climlab/climlab-emanuel-convection/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: db367c2b4f99176a242a1c9e9ef34c3563cff43c01b33a48a57ac7ce1d36e8f3\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [py<37]\n  number: 2\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('fortran') }}\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ compiler('c') }}\n  host:\n    - libpython  # [win]\n    - python\n    - setuptools\n    - pip\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  requires:\n    - pytest\n  imports:\n    - climlab_emanuel_convection\n  commands:\n    - pytest -v --pyargs climlab_emanuel_convection\n\nabout:\n  home: https://github.com/climlab/climlab-emanuel-convection\n  summary: 'Standalone Python wrapper for the Emanuel moist convection model'\n  description: |\n    climlab-emanuel-convection makes the Emanuel convection code callable\n    from Python by wrapping using f2py. This is a lightweight wrapper that\n    emulates the Fortran interface as closely as possible. The primary use case\n    is to drive the convection process in climlab, but it can be used as\n    a standalone driver if you are familiar with the Fortran interface.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  dev_url: https://github.com/climlab/climlab-emanuel-convection\n\nextra:\n  recipe-maintainers:\n    - brian-rose\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/climlab/climlab-emanuel-convection/archive/refs/tags/v0.2.tar.gz",
 "version": "0.2"
}