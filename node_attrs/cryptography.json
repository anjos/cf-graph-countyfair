{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/202231811.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/208367878.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220697083.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229994050.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/232526239.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248405476.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255231429.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255770722.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255980567.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256486105.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256709282.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256890265.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/329370960.json"
   },
   "data": {
    "bot_rerun": 1579272528.3989296,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/329419532.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335911735.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/387658791.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/453907068.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/474945257.json"
   },
   "data": {
    "bot_rerun": 1598568466.4610393,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/475001786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488757827.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491936031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502568037.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509746125.json"
   },
   "data": {
    "bot_rerun": 1603735220.1545222,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/510443276.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/511270030.json"
   },
   "data": {
    "bot_rerun": 1603887104.7948465,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513465619.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/534849678.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535603033.json"
   },
   "data": {
    "bot_rerun": 1607600117.4163244,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535875894.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/550722591.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569019213.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569035912.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569085543.json"
   },
   "data": {
    "bot_rerun": 1612822488.5380046,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569780551.json"
   },
   "data": {
    "bot_rerun": 1612828560.6247554,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570068153.json"
   },
   "data": {
    "bot_rerun": 1612883392.853547,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570377183.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570705609.json"
   },
   "data": {
    "bot_rerun": 1612926372.2206388,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570779683.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573017359.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574575975.json"
   },
   "data": {
    "bot_rerun": 1615344003.9734433,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/589251095.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601019619.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683800082.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/718966155.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/746313192.json"
   },
   "data": {
    "bot_rerun": 1633986120.4417496,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "35.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/755780765.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "35.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "cryptography",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12"
   ],
   "run": [
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12"
   ],
   "run": [
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12"
   ],
   "run": [
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl"
   ],
   "run": [
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name": "cryptography",
 "new_version": "35.0.0",
 "new_version_attempts": {
  "2.9": 315,
  "2.9.1": 24,
  "2.9.2": 119,
  "3.0": 1,
  "3.1": 2,
  "3.1.1": 1,
  "3.2": 2,
  "3.2.1": 4,
  "3.3": 1,
  "3.3.1": 2,
  "3.3.2": 1,
  "3.4": 1,
  "3.4.1": 1,
  "3.4.2": 1,
  "3.4.3": 2,
  "3.4.4": 2,
  "3.4.5": 1,
  "3.4.6": 2,
  "3.4.7": 1,
  "3.4.8": 1,
  "35.0.0": 2
 },
 "new_version_errors": {
  "2.9": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 60, column 3:\n      home: https://github.com/pyca/cr ... \n      ^ (line: 60)\nfound duplicate key \"doc_source_url\" with value \"https://github.com/pyca/cryptography/tree/master/docs\" (original value: \"https://github.com/pyca/cryptography/blob/master/docs/index.rst\")\n  in \"<unicode string>\", line 75, column 3:\n      doc_source_url: https://github.c ... \n      ^ (line: 75)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "2.9.1": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 60, column 3:\n      home: https://github.com/pyca/cr ... \n      ^ (line: 60)\nfound duplicate key \"doc_source_url\" with value \"https://github.com/pyca/cryptography/tree/master/docs\" (original value: \"https://github.com/pyca/cryptography/blob/master/docs/index.rst\")\n  in \"<unicode string>\", line 75, column 3:\n      doc_source_url: https://github.c ... \n      ^ (line: 75)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "2.9.2": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 60, column 3:\n      home: https://github.com/pyca/cr ... \n      ^ (line: 60)\nfound duplicate key \"doc_source_url\" with value \"https://github.com/pyca/cryptography/tree/master/docs\" (original value: \"https://github.com/pyca/cryptography/blob/master/docs/index.rst\")\n  in \"<unicode string>\", line 75, column 3:\n      doc_source_url: https://github.c ... \n      ^ (line: 75)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl"
   ],
   "run": [
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12"
   ],
   "run": [
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cryptography"
  ]
 },
 "pinning_version": "2021.10.10.22.03.30",
 "pre_pr_migrator_status": {
  "openssl3": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1345474647\">bot CI job</a>): master: ['linux_64_openssl3python3.7.____73_pypypython_implpypy: Encountered problems while solving:\\n  - package python-3.7.9-4_73_pypy requires pypy3.7 7.3.3.*, but none of the providers can be installed\\n', 'linux_aarch64_openssl3python3.7.____73_pypypython_implpypy: Encountered problems while solving:\\n  - package python-3.7.9-4_73_pypy requires pypy3.7 7.3.3.*, but none of the providers can be installed\\n', 'linux_ppc64le_openssl3python3.7.____73_pypypython_implpypy: Encountered problems while solving:\\n  - package python-3.7.9-4_73_pypy requires pypy3.7 7.3.3.*, but none of the providers can be installed\\n', 'osx_64_openssl3python3.7.____73_pypypython_implpypy: Encountered problems while solving:\\n  - package python-3.7.9-4_73_pypy requires pypy3.7 7.3.3.*, but none of the providers can be installed\\n', 'win_64_openssl3python3.7.____73_pypypython_implpypy: Encountered problems while solving:\\n  - package python-3.7.10-0_73_pypy requires pypy3.7 7.3.5.*, but none of the providers can be installed\\n']",
  "pypy37": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1042, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 222, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 216, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "version": "bot error: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 938, in main\n    hash_type=attrs.get(\"hash_type\", \"sha256\"),\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 215, in run\n    timeout=300,\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 99, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/subprocess.py\", line 444, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"35.0.0\" %}\n\npackage:\n  name: cryptography\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/c/cryptography/cryptography-{{ version }}.tar.gz\n  sha256: 9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d\n\nbuild:\n  number: 0\n  skip: true  # [py<36]\n  script:\n    {% if build_platform != target_platform %}\n    - export PYO3_CROSS_INCLUDE_DIR=$PREFIX/include\n    - export PYO3_CROSS_LIB_DIR=$SP_DIR/../\n    - export PYO3_CROSS_PYTHON_VERSION=$PY_VER\n    - ls $PYO3_CROSS_LIB_DIR\n    - find $PYO3_CROSS_LIB_DIR -name \"_sysconfigdata*.py\" -not -name \"${_CONDA_PYTHON_SYSCONFIGDATA_NAME_BACKUP}.py\" -type f -exec rm -f {} +\n    - ls $PYO3_CROSS_LIB_DIR\n    {% endif %}\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cffi >=1.12                            # [python_impl != \"pypy\" and build_platform != target_platform]\n    - {{ compiler('rust') }}\n  host:\n    - python\n    - setuptools >=40.6.0\n    - pip\n    - setuptools-rust >=0.11.4\n    - openssl\n    - cffi >=1.12   # [python_impl != \"pypy\"]\n  run:\n    - python\n    - openssl\n    - cffi >=1.12   # [python_impl != \"pypy\"]\n\ntest:\n  imports:\n    - cryptography\n    - cryptography.fernet\n    - cryptography.hazmat\n    - cryptography.hazmat.backends\n    - cryptography.hazmat.backends.openssl\n    - cryptography.hazmat.bindings\n    - cryptography.hazmat.bindings.openssl\n    - cryptography.hazmat.primitives\n    - cryptography.hazmat.primitives.asymmetric\n    - cryptography.hazmat.primitives.ciphers\n    - cryptography.hazmat.primitives.kdf\n    - cryptography.hazmat.primitives.twofactor\n    - cryptography.x509\n  requires:\n    - cryptography-vectors {{ version }}\n    - hypothesis\n    - iso8601\n    - pretend\n    - pytest\n    - pytest-subtests\n    - pytz\n  source_files:\n    - tests\n  commands:\n    # run_test.py will check that the correct openssl version is linked\n    - pytest\n\nabout:\n  home: cryptography.io\n  license: Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT\n  license_family: BSD\n  license_file: LICENSE\n  summary: cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.\n  description: |\n    cryptography is a package which provides cryptographic recipes and\n    primitives to Python developers. Our goal is for it to be your\n    \"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\n    cryptography includes both high level recipes and low level interfaces\n    to common cryptographic algorithms such as symmetric ciphers, message\n    digests, and key derivation functions..\n  doc_url: http://cryptography.readthedocs.io/\n  doc_source_url: https://github.com/pyca/cryptography/blob/master/docs/index.rst\n  dev_url: https://github.com/pyca/cryptography\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - ocefpaf\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "cffi",
   "openssl",
   "pip",
   "python",
   "rust_compiler_stub",
   "setuptools",
   "setuptools-rust"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi >=1.12",
    "openssl",
    "pip",
    "python",
    "setuptools >=40.6.0",
    "setuptools-rust >=0.11.4"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi >=1.12",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz",
 "version": "35.0.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your\n\"cryptographic standard library\". It supports Python 3.6+ and PyPy3 7.2+.\ncryptography includes both high level recipes and low level interfaces\nto common cryptographic algorithms such as symmetric ciphers, message\ndigests, and key derivation functions..\n",
   "dev_url": "https://github.com/pyca/cryptography",
   "doc_source_url": "https://github.com/pyca/cryptography/blob/master/docs/index.rst",
   "doc_url": "http://cryptography.readthedocs.io/",
   "home": "cryptography.io",
   "license": "Apache-2.0 AND BSD-3-Clause AND PSF-2.0 AND MIT",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari",
    "jakirkham",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "cryptography",
   "version": "35.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub",
    "rust_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl",
    "cffi >=1.12",
    "python",
    "setuptools >=40.6.0",
    "pip",
    "setuptools-rust >=0.11.4",
    "openssl"
   ],
   "run": [
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl",
    "cffi >=1.12",
    "python",
    "openssl"
   ]
  },
  "source": {
   "sha256": "9933f28f70d0517686bd7de36166dda42094eac49415459d9bdf5e7df3e0086d",
   "url": "https://pypi.io/packages/source/c/cryptography/cryptography-35.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "imports": [
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509",
    "cryptography",
    "cryptography.fernet",
    "cryptography.hazmat",
    "cryptography.hazmat.backends",
    "cryptography.hazmat.backends.openssl",
    "cryptography.hazmat.bindings",
    "cryptography.hazmat.bindings.openssl",
    "cryptography.hazmat.primitives",
    "cryptography.hazmat.primitives.asymmetric",
    "cryptography.hazmat.primitives.ciphers",
    "cryptography.hazmat.primitives.kdf",
    "cryptography.hazmat.primitives.twofactor",
    "cryptography.x509"
   ],
   "requires": [
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz",
    "cryptography-vectors 35.0.0",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "pip",
    "python",
    "setuptools",
    "setuptools-rust"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "openssl",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography-vectors",
    "hypothesis",
    "iso8601",
    "pretend",
    "pytest",
    "pytest-subtests",
    "pytz"
   ]
  }
 }
}