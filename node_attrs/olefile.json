{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199886594.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/214413908.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.46"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "olefile",
 "hash_type": "sha256",
 "name": "olefile",
 "new_version": "0.46",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "olefile"
  ]
 },
 "pinning_version": "2018.08.31",
 "raw_meta_yaml": "{% set version = \"0.46\" %}\n\npackage:\n  name: olefile\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/o/olefile/olefile-{{ version }}.zip\n  sha256: 133b031eaf8fd2c9399b78b8bc5b8fcbe4c31e85295749bb17a87cba8f3c3964\n\nbuild:\n    noarch: python\n    number: 1\n    script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n\n  run:\n    - python\n\ntest:\n  imports:\n    - olefile\n\nabout:\n  home: http://www.decalage.info/python/olefileio\n  license:  BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: >\n    Python package to parse, read and write Microsoft OLE2 files\n    (Structured Storage or Compound Document, Microsoft Office) -\n    Improved version of the OleFileIO module from PIL, the Python\n    Image Library.\n  dev_url: https://github.com/decalage2/olefile\n\nextra:\n  recipe-maintainers:\n    - dgursoy\n    - decarlof\n    - ericdill\n    - licode\n    - ravescovi\n    - tacaswell\n    - ocefpaf\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/o/olefile/olefile-0.46.zip",
 "version": "0.46"
}