{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/197277082.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222651621.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285743473.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "hdf5-1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308392185.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326025149.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339391854.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375025673.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440844715.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/452349260.json"
   },
   "data": {
    "bot_rerun": 1600812306.0278347,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/455346881.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491990000.json"
   },
   "data": {
    "bot_rerun": 1603223662.7056587,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502595489.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507101407.json"
   },
   "data": {
    "bot_rerun": 1617742603.960307,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601067759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/610171231.json"
   },
   "data": {
    "bot_rerun": 1633527772.5599377,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/670055580.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/751120831.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/783236010.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/852717153.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "openmc",
 "hash_type": "sha256",
 "name": "openmc",
 "new_version": "0.13.0",
 "new_version_attempts": {
  "0.12.0": 1,
  "0.12.1": 1,
  "0.12.2": 1,
  "0.13.0": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmc"
  ]
 },
 "pinning_version": "2022.02.14.13.20.49",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set org = \"openmc-dev\" %}\n{% set name = \"openmc\" %}\n{% set version = \"0.13.0\" %}\n{% set sha256 = \"d8ce9c49b398c3e7d99f24d73f8252c77ec764d9230a25e23798c4c4f3a4fb04\" %}\n{% set build = 5 %}\n\n# ensure dagmc is defined (needed for conda-smithy recipe-lint)\n{% set dagmc = dagmc or 'nodagmc' %}\n\n{% if dagmc == 'dagmc' %}\n# prioritize dagmc variant via build number\n{% set build = build + 100 %}\n{% endif %}\n\n# define mpi\n{% set mpi = mpi or 'nompi' %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/{{ org }}/{{ name }}/archive/v{{ version }}.tar.gz\n    fn: {{ name }}-{{ version }}.tar.gz\n    sha256: {{ sha256 }}\n  - url: https://github.com/zeux/pugixml/archive/41b6ff21c455865bb8ef67c5952b7f895b62bacc.tar.gz\n    sha256: b145725a8eb17081783d3e0b7118ec825140f8972da5ab5e15c1d051810c1a93\n    folder: vendor/pugixml\n  - url: https://github.com/martinmoene/gsl-lite/archive/913e86d49c6a1acca980f4e325378f9dc393493a.tar.gz\n    sha256: 1978f9c6a6c3fffebac174c34d907ad145a5805e01f94b2de433aa5b0e6efdf4\n    folder: vendor/gsl-lite\n  - url: https://github.com/xtensor-stack/xtensor/archive/0.21.3.tar.gz\n    sha256: f63c25cafea4bfc268edb26e6f5004a28a2f689e6a852bb3559c553106c8d6bf\n    folder: vendor/xtensor\n  - url: https://github.com/xtensor-stack/xtl/archive/0.6.13.tar.gz\n    sha256: 12bd628dee4a7a55db79bff5a47fb7d96b1a4dba780fbd5c81c3a15becfdd99c\n    folder: vendor/xtl\n  - url: https://github.com/fmtlib/fmt/archive/d141cdbeb0fb422a3fb7173b285fd38e0d1772dc.tar.gz\n    sha256: 8d2cb0daccef71cbf3ee8068a845fdd379545acd289873e67c41fdc1b530bfcd\n    folder: vendor/fmt\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n  skip: true  # [py<35]\n  detect_binary_files_with_prefix: true\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n\n  # add build string so packages can depend on\n  # dagmc or nodagmc variants explicitly:\n  # `openmc * nodagmc_*` for openmc without dagmc\n  # `openmc * dagmc_*` for openmc with dagmc\n  # mpi or nompi variants explicitly:\n  # `openmc * mpi_mpich_*` for mpich\n  # `openmc * mpi_*` for any mpi\n  # `openmc * nompi_*` for no mpi\n\n  string: {{ dagmc }}_{{ mpi_prefix }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}\n\nrequirements:\n  build:\n    - cmake\n    - make\n    - dagmc 3.2.1 {{ mpi_prefix }}_*  # [dagmc == 'dagmc']\n    - pkg-config\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ mpi }}  # [mpi != 'nompi']\n  host:\n    - dagmc 3.2.1 {{ mpi_prefix }}_*  # [dagmc == 'dagmc']\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*\n    - git\n    - setuptools\n    - pip\n    - numpy\n    - cython\n    - matplotlib-base\n    - h5py * {{ mpi_prefix }}_*\n    - python\n    - {{ mpi }}  # [mpi != 'nompi']\n  run:\n    - dagmc 3.2.1 {{ mpi_prefix }}_*  # [dagmc == 'dagmc']\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*\n    - python\n    - {{ pin_compatible('numpy') }}\n    - h5py * {{ mpi_prefix }}_*\n    - scipy\n    - pandas\n    - matplotlib-base\n    - lxml\n    - uncertainties\n    - setuptools\n    - {{ mpi }}  # [mpi != 'nompi']\n    - openssh  # [mpi == 'openmpi']\n    - ipython\n    - njoy2016\n\ntest:\n  commands:\n    - test -f \"${PREFIX}/bin/openmc\"\n    - openmc --version\n    - pip check\n  imports:\n    - openmc\n    - openmc.data\n    - openmc.deplete\n    - openmc.lib\n  requires:\n    - pip\n\n\nabout:\n  home: https://openmc.org\n  license: MIT\n  license_file: LICENSE\n  summary: OpenMC Monte Carlo Code\n  description: |\n    OpenMC is a community-developed Monte Carlo neutron and photon transport\n    simulation code. It is capable of performing fixed source, k-eigenvalue, and\n    subcritical multiplication calculations on models built using either a\n    constructive solid geometry or CAD representation. OpenMC supports both\n    continuous-energy and multigroup transport. The continuous-energy particle\n    interaction data is based on a native HDF5 format that can be generated from\n    ACE files produced by NJOY. Parallelism is enabled via a hybrid MPI and\n    OpenMP programming model.\n  doc_url: https://docs.openmc.org\n  dev_url: https://github.com/openmc-dev/openmc\n\nextra:\n  recipe-maintainers:\n    - scopatz\n    - paulromano\n    - shimwell\n    - kkiesling\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://github.com/openmc-dev/openmc/archive/v0.13.0.tar.gz",
 "version": "0.13.0"
}