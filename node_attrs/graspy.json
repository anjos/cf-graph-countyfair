{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/462903149.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799955808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/870060488.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "graspy",
 "hash_type": "sha256",
 "name": "graspy",
 "new_version": "1.0.0",
 "new_version_attempts": {
  "0.3": 1,
  "0.3.1": 1,
  "1.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "graspy"
  ]
 },
 "pinning_version": "2022.03.02.18.03.40",
 "raw_meta_yaml": "{% set name = \"graspy\" %}\n{% set version = \"0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/neurodata/graspy/archive/v{{ version }}.tar.gz\n  sha256: 00cbd96c19113355c181bd8efa07dd487bbac1ebd9a8bf14d0da1945091a51fb\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3.5\n    - pip\n  run:\n    - python >=3.5\n    - networkx >=2.1\n    - numpy >=1.8.1\n    - scikit-learn >=0.19.1\n    - scipy >=1.1.0\n    - seaborn >=0.9.0\n    - matplotlib-base >=3.0.0\n\ntest:\n  imports:\n    - graspy\n\nabout:\n  home: https://graspy.neurodata.io/\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: 'Python package for graph statistical algorithms.'\n\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    A graph, or network, provides a mathematically intuitive\n    representation of data with some sort of relationship between\n    items. For example, a social network can be represented as a\n    graph by considering all participants in the social network as\n    nodes, with connections representing whether each pair of\n    individuals in the network are friends with one another.\n    Naively, one might apply traditional statistical techniques\n    to a graph, which neglects the spatial arrangement of nodes\n    within the network and is not utilizing all of the information\n    present in the graph. In this package, we provide utilities and\n    algorithms designed for the processing and analysis of graphs\n    with specialized graph statistical algorithms.\n  doc_url: https://graspy.neurodata.io/\n  dev_url: https://github.com/neurodata/graspy\n\nextra:\n  recipe-maintainers:\n    - bdpedigo\n    - j1c\n",
 "smithy_version": "3.17.2",
 "strong_exports": false,
 "url": "https://github.com/neurodata/graspy/archive/v0.2.tar.gz",
 "version": "0.2"
}