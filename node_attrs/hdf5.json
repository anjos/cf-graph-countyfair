{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/196927885.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/210252806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215130350.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221548585.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "id": "e26ab312-ffb7-4be8-b7b7-bda1f0b01b29",
    "merged_at": "fix aarch missing prs",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256471110.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308176471.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356493058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501014393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525058174.json"
   },
   "data": {
    "bot_rerun": 1606174878.6841521,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526021258.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.10.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526022103.json"
   },
   "data": {
    "bot_rerun": 1606184290.6711183,
    "branch": "1.10.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526030598.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.10.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526068623.json"
   },
   "data": {
    "bot_rerun": 1606506369.8310273,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526134331.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.10.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528770999.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554364846.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.10.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openmpi41"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/685552020.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750976124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/793713178.json"
   },
   "data": {
    "bot_rerun": 1638756561.4795866,
    "branch": "1.10.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794907816.json"
   },
   "data": {
    "bot_rerun": 1642549550.5436761,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/795459673.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.10.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/826132354.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/871367508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1027930951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "1.10.x"
   ]
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "hdf5",
 "hash_type": "sha256",
 "name": "hdf5_split",
 "new_version": "1.13.2",
 "new_version_attempts": {
  "1.12.1": 1,
  "1.13.0": 2,
  "1.13.1": 1,
  "1.13.2": 0
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hdf5",
   "hdf5-static",
   "hdf5_split"
  ]
 },
 "pinning_version": "2022.08.16.15.03.11",
 "pre_pr_migrator_attempts": {
  "openmpi41": 1
 },
 "pre_pr_migrator_status": {
  "openmpi41": "not solvable: master: ['osx_arm64_mpimpich: Encountered problems while solving.\\nProblem: nothing provides requested libgfortran5 >=11.0.0.dev0\\n', 'osx_arm64_mpinompi: Encountered problems while solving.\\nProblem: nothing provides requested libgfortran5 >=11.0.0.dev0\\n', 'osx_arm64_mpiopenmpi: Encountered problems while solving.\\nProblem: nothing provides requested libgfortran5 >=11.0.0.dev0\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.12.2\" %}\n{% set maj_min_ver = \".\".join(version.split(\".\")[:2]) %}\n{% set build = 0 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\n{% if mpi != \"nompi\" %}\n{% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n{% set mpi_prefix = \"nompi\" %}\n{% endif %}\n# add build string so packages can depend on\n# mpi or nompi variants\n# dependencies:\n# `hdf5 * mpi_mpich_*` for mpich\n# `hdf5 * mpi_*` for any mpi\n# `hdf5 * nompi_*` for no mpi\n\n# mpi builds require the right mpi\n# non-mpi builds *do not* appear to require non-mpi builds\n# at least not always\n\n{% if mpi != 'nompi' %}\n{% set build_pin = mpi_prefix + '_*' %}\n{% else %}\n{% set build_pin = '' %}\n{% endif %}\n\npackage:\n  name: hdf5_split\n  version: {{ version }}\n\nsource:\n  url: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-{{ maj_min_ver }}/hdf5-{{ version }}/src/hdf5-{{ version }}.tar.gz\n  sha256: 2a89af03d56ce7502dcae18232c241281ad1773561ec00c0f0e8ee2463910f14\n  patches:\n    # Patches the test suite to skip the cache, cache_image, and fheap tests\n    # This test has been found to rather resource intensive.\n    # In particular, it caused Travis CI's Mac builds to hang.\n    # Given that we simply skip the test on all platforms.\n    - patches/test_Makefile.in.patch\n    # same thing, but for parallel tests:\n    - patches/testpar_Makefile.in.patch\n    # ref: http://hdf-forum.184993.n3.nabble.com/HDF5-1-8-14-15-16-with-OpenMPI-1-10-1-and-Intel-16-1-td4028533.html\n    - patches/testpar_pflush.sh.in.openmpi.patch  # [mpi == 'openmpi']\n    # h5diff help output test is flaky with mpi\n    - patches/testh5diff.sh.in.patch  # [mpi != 'nompi']\n    # Enable cross-compiling on osx\n    - patches/osx_cross_configure.patch\n    - patches/osx_cross_src_makefile.patch  # [osx and build_platform != target_platform]\n    - patches/osx_cross_fortran_src_makefile.patch  # [osx and build_platform != target_platform]\n    - patches/osx_cross_hl_fortran_src_makefile.patch  # [osx and build_platform != target_platform]\n\nbuild:\n  number: {{ build }}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\nrequirements:\n  build:\n    - gnuconfig  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}  # [not win]\n    - cmake >=3.2.2              # [win]\n    - libtool                    # [not win]\n    - make                       # [not win]\n    - ninja                      # [win]\n    - {{ mpi }}  # [build_platform != target_platform and mpi != 'nompi']\n    - libgfortran-devel_osx-64  # [build_platform != target_platform and build_platform == 'osx-64']\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - zlib\n    - libcurl\n    - openssl\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n\noutputs:\n  - name: hdf5\n    build:\n      skip: true  # [win and vc<14]\n      run_exports:\n        - {{ pin_subpackage('hdf5', max_pin='x.x.x') }} {{ build_pin }}\n      string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n    script: install.sh  # [not win]\n    script: install.bat  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - cmake >=3.2.2  # [win]\n        - libtool  # [not win]\n        - make                       # [not win]\n        - ninja  # [win]\n        - {{ mpi }}  # [build_platform != target_platform and mpi != 'nompi']\n      host:\n        - {{ mpi }}  # [mpi != 'nompi']\n        - zlib\n        - libcurl\n        - openssl\n      run:\n        - {{ mpi }}  # [mpi != 'nompi']\n\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - pkg-config  # [not win]\n        - m2-grep  # [win]\n      files:\n        - h5_cmprss.c\n        - h5tutr_cmprss.cpp\n        - h5_cmprss.f90\n        - compound_fortran2003.f90\n      commands:\n        # Verify UNIX CLI tools.\n        {% if mpi == 'nompi' %}\n        {% set h5_compilers = [\n            \"h5c++\",\n            \"h5cc\",\n            \"h5fc\",\n        ] %}\n        {% else %}\n        # no p on parallel h5c++!\n        {% set h5_compilers = [\n            \"h5c++\",\n            \"h5pcc\",\n            \"h5pfc\",\n        ] %}\n        {% endif %}\n        {% set hdf5_unix_cmds = h5_compilers + [\n            \"h5redeploy\",\n        ] %}\n        {% if build_platform == target_platform %}\n        {% set hdf5_unix_cmds = hdf5_unix_cmds + [\n            \"h5perf_serial\",\n        ] %}\n        {% endif %}\n        {% for each_hdf5_unix_cmd in hdf5_unix_cmds %}\n        - command -v {{ each_hdf5_unix_cmd }}   # [not win]\n        {% endfor %}\n        # Verify CLI tools.\n        {% set hdf5_cmds = [\n            \"gif2h5\",\n            \"h52gif\",\n            \"h5copy\",\n            \"h5debug\",\n            \"h5diff\",\n            \"h5dump\",\n            \"h5import\",\n            \"h5jam\",\n            \"h5ls\",\n            \"h5mkgrp\",\n            \"h5repack\",\n            \"h5repart\",\n            \"h5stat\",\n            \"h5unjam\"\n        ] %}\n        {% for each_hdf5_cmd in hdf5_cmds %}\n        - command -v {{ each_hdf5_cmd }}  # [not win]\n        - where {{ each_hdf5_cmd }}  # [win]\n        {% endfor %}\n        # Verify libraries.\n        {% set hdf5_libs = [\n            \"hdf5\",\n            \"hdf5_cpp\",\n            \"hdf5_hl\",\n            \"hdf5_hl_cpp\"\n        ] %}\n        {% for each_hdf5_lib in hdf5_libs %}\n        - test -f $PREFIX/lib/lib{{ each_hdf5_lib }}${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_hdf5_lib }}.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_hdf5_lib }}.dll exit 1  # [win]\n        {% endfor %}\n        # Check ros3 driver\n        - h5dump --filedriver=ros3 \"http://s3.amazonaws.com/hdfgroup/data/hdf5demo/tall.h5\" | grep '^HDF5'\n\n  - name: hdf5-static  # [not win]\n    build:   # [not win]\n      string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}  # [not win]\n    requirements:   # [not win]\n      build:   # [not win]\n        - {{ compiler('c') }}                           # [not win]\n        - {{ compiler('cxx') }}                         # [not win]\n        - {{ compiler('fortran') }}                     # [not win]\n      run:   # [not win]\n        - {{ pin_subpackage('hdf5', exact=True) }}      # [not win]\n    script: install-static.sh  # [not win]\n    test:   # [not win]\n      commands:   # [not win]\n        {% set hdf5_libs = [\"hdf5\", \"hdf5_cpp\", \"hdf5_hl\", \"hdf5_hl_cpp\"] %}  # [not win]\n        {% for each_hdf5_lib in hdf5_libs %}            # [not win]\n        - test -f $PREFIX/lib/lib{{ each_hdf5_lib }}.a  # [not win]\n        {% endfor %}                                    # [not win]\n\nabout:\n  home: http://www.hdfgroup.org/HDF5/\n  license: LicenseRef-HDF5\n  license_family: BSD\n  license_file: COPYING\n  summary: HDF5 is a data model, library, and file format for storing and managing data\n  dev_url: https://github.com/HDFGroup/hdf5\n  doc_url: https://portal.hdfgroup.org/display/HDF5/HDF5\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    - jakirkham\n    - gillins\n    - groutr\n    - ocefpaf\n    - astrofrog-conda-forge\n    - marqh\n    - marcelotrevisani\n    - scopatz\n    - davidbrochart\n    - SylvainCorlay\n    - varlackc\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.2/src/hdf5-1.12.2.tar.gz",
 "version": "1.12.2"
}