{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/414607682.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.04"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/436124924.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.05"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502559008.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.06"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "openglider",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/OpenGlider",
   "home": "https://github.com/booya-at/OpenGlider",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "paraglider design"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo"
   ]
  },
  "package": {
   "name": "openglider",
   "version": "0.0.7.1"
  },
  "requirements": {
   "build": [
    "pip",
    "python"
   ],
   "run": [
    "python >=3.8",
    "numpy",
    "svgwrite",
    "ezdxf",
    "lxml",
    "parabem",
    "meshpy",
    "pyexcel-ezodf",
    "matplotlib-base",
    "pyexcel-ods3"
   ]
  },
  "source": {
   "sha256": "d4a6bec0e6931c7c62861343c6a66b5a198b2bd8dc0b4aaad362a48adfae8454",
   "url": "https://github.com/booya-at/OpenGlider/archive/0.0.7.1.tar.gz"
  },
  "test": {
   "imports": [
    "openglider"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "ezdxf",
    "lxml",
    "matplotlib-base",
    "meshpy",
    "numpy",
    "parabem",
    "pyexcel-ezodf",
    "pyexcel-ods3",
    "python",
    "svgwrite"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/OpenGlider",
   "home": "https://github.com/booya-at/OpenGlider",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "paraglider design"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo"
   ]
  },
  "package": {
   "name": "openglider",
   "version": "0.0.7.1"
  },
  "requirements": {
   "build": [
    "pip",
    "python"
   ],
   "run": [
    "python >=3.8",
    "numpy",
    "svgwrite",
    "ezdxf",
    "lxml",
    "parabem",
    "meshpy",
    "pyexcel-ezodf",
    "matplotlib-base",
    "pyexcel-ods3"
   ]
  },
  "source": {
   "sha256": "d4a6bec0e6931c7c62861343c6a66b5a198b2bd8dc0b4aaad362a48adfae8454",
   "url": "https://github.com/booya-at/OpenGlider/archive/0.0.7.1.tar.gz"
  },
  "test": {
   "imports": [
    "openglider"
   ]
  }
 },
 "name": "openglider",
 "new_version": "006",
 "new_version_attempts": {
  "0.04": 1,
  "0.05": 1,
  "0.06": 1,
  "006": 455
 },
 "new_version_errors": {
  "006": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '006' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/booya-at/OpenGlider/archive/{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openglider"
  ]
 },
 "pinning_version": "2020.10.13.15.16.20",
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1610740259\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise\n    raise value\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 193, in _request\n    return request_method(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 171, in request\n    response = super().request(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 201, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 286, in get_repo\n    repo = gh.repository(\"conda-forge\", feedstock_reponame)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 2062, in repository\n    json = self._json(self._get(url), 200)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 208, in _get\n    return self._request(\"get\", url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 198, in _request\n    raise exceptions.ConnectionError(exc)\ngithub3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n"
 },
 "raw_meta_yaml": "{% set name = \"openglider\" %}\n{% set version = \"0.0.7.1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/booya-at/OpenGlider/archive/{{ version }}.tar.gz\n  sha256: d4a6bec0e6931c7c62861343c6a66b5a198b2bd8dc0b4aaad362a48adfae8454\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  noarch: python\n\nrequirements:\n  build:\n    - pip\n    - python\n  run:\n    - python >=3.8\n    - numpy\n    - svgwrite\n    - ezdxf\n    - lxml\n    - parabem\n    - meshpy\n    - pyexcel-ezodf\n    - matplotlib-base\n    - pyexcel-ods3\n\ntest:\n  imports:\n    - openglider\n\nabout:\n  home: https://github.com/booya-at/OpenGlider\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: paraglider design\n  dev_url: https://github.com/booya-at/OpenGlider\n\nextra:\n  recipe-maintainers:\n    - looooo\n",
 "req": {
  "__set__": true,
  "elements": [
   "ezdxf",
   "lxml",
   "matplotlib-base",
   "meshpy",
   "numpy",
   "parabem",
   "pip",
   "pyexcel-ezodf",
   "pyexcel-ods3",
   "python",
   "svgwrite"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "ezdxf",
    "lxml",
    "matplotlib-base",
    "meshpy",
    "numpy",
    "parabem",
    "pyexcel-ezodf",
    "pyexcel-ods3",
    "python",
    "svgwrite"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "ezdxf",
    "lxml",
    "matplotlib-base",
    "meshpy",
    "numpy",
    "parabem",
    "pyexcel-ezodf",
    "pyexcel-ods3",
    "python >=3.8",
    "svgwrite"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/booya-at/OpenGlider/archive/0.0.7.1.tar.gz",
 "version": "0.0.7.1"
}