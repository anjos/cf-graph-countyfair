{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/299100370.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412812392.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562208342.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650715667.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-polycub",
 "hash_type": "sha256",
 "name": "r-polycub",
 "new_version": "0.8.0",
 "new_version_attempts": {
  "0.8.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-polycub"
  ]
 },
 "pinning_version": "2021.05.21.13.51.08",
 "raw_meta_yaml": "{% set version = \"0.8.0\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-polycub\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/polyCub_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/polyCub/polyCub_{{ version }}.tar.gz\n  sha256: f4cd078d6484d1ba1582e23eed49d9cfe193d015aeb4b7616c10a1f4e38cc3b8\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-sp >=1.0_11\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-sp >=1.0_11\n\ntest:\n  commands:\n    - $R -e \"library('polyCub')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('polyCub')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/bastistician/polyCub\n  license: GPL-2.0-only\n  summary: \"Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions),\\\n    \\ adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate.\"\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: polyCub\n# Title: Cubature over Polygonal Domains\n# Version: 0.7.1\n# Date: 2019-02-07\n# Authors@R: c( person(\"Sebastian\", \"Meyer\", email = \"seb.meyer@fau.de\", role = c(\"aut\",\"cre\",\"trl\"), comment = c(ORCID = \"0000-0002-1791-9449\")), person(\"Leonhard\", \"Held\", email = \"Leonhard.Held@uzh.ch\", role = \"ths\"), person(\"Michael\", \"Hoehle\", email = \"hoehle@math.su.se\", role = \"ths\") )\n# Description: Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate.\n# License: GPL-2\n# URL: https://github.com/bastistician/polyCub\n# BugReports: https://github.com/bastistician/polyCub/issues\n# Depends: R (>= 2.15.0), methods\n# Imports: grDevices, graphics, stats, sp (>= 1.0-11)\n# Suggests: spatstat, lattice, testthat, mvtnorm, statmod, rgeos, gpclib, cubature, knitr, rmarkdown, microbenchmark\n# RoxygenNote: 6.1.1\n# VignetteBuilder: knitr, rmarkdown\n# NeedsCompilation: yes\n# Packaged: 2019-02-07 10:20:59 UTC; smeyer\n# Author: Sebastian Meyer [aut, cre, trl] (<https://orcid.org/0000-0002-1791-9449>), Leonhard Held [ths], Michael Hoehle [ths]\n# Maintainer: Sebastian Meyer <seb.meyer@fau.de>\n# Repository: CRAN\n# Date/Publication: 2019-02-07 16:30:02 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.8.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.8.0.tar.gz"
 ],
 "version": "0.8.0"
}