{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/847996496.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "tbb2021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/848003091.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911216403.json"
   },
   "data": {
    "bot_rerun": 1658972584.5187407,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1010287475.json"
   },
   "data": {
    "bot_rerun": 1660050090.30774,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052875745.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1102560301.json"
   },
   "data": {
    "bot_rerun": 1674095079.3703597,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1106526135.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1209625340.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "gtsam",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/borglab/gtsam",
   "license": "BSD-3-Clause",
   "license_file": [
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD"
   ],
   "summary": "GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision"
  },
  "build": {
   "number": "5",
   "run_exports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "gtsam",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip"
   ],
   "run": [
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp"
   ]
  },
  "source": {
   "patches": [
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch"
   ],
   "sha256": "c7b5e6cdad52b141c272778f47baf628975457be3e26ed96a7bc2ae685a00af0",
   "url": "https://github.com/borglab/gtsam/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h"
   ],
   "imports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "numpy",
    "pip",
    "pybind11",
    "pyparsing",
    "python",
    "setuptools",
    "suitesparse",
    "tbb",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/borglab/gtsam",
   "license": "BSD-3-Clause",
   "license_file": [
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD"
   ],
   "summary": "GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision"
  },
  "build": {
   "number": "5",
   "run_exports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "gtsam",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip"
   ],
   "run": [
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp"
   ]
  },
  "source": {
   "patches": [
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch"
   ],
   "sha256": "c7b5e6cdad52b141c272778f47baf628975457be3e26ed96a7bc2ae685a00af0",
   "url": "https://github.com/borglab/gtsam/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)"
   ],
   "imports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  }
 },
 "name": "gtsam",
 "new_version": "4.1.1",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/borglab/gtsam",
   "license": "BSD-3-Clause",
   "license_file": [
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD"
   ],
   "summary": "GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision"
  },
  "build": {
   "number": "5",
   "run_exports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "gtsam",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip"
   ],
   "run": [
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp"
   ]
  },
  "source": {
   "patches": [
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch"
   ],
   "sha256": "c7b5e6cdad52b141c272778f47baf628975457be3e26ed96a7bc2ae685a00af0",
   "url": "https://github.com/borglab/gtsam/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h"
   ],
   "imports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "numpy",
    "pip",
    "pybind11",
    "pyparsing",
    "python",
    "setuptools",
    "suitesparse",
    "tbb",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/borglab/gtsam",
   "license": "BSD-3-Clause",
   "license_file": [
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD"
   ],
   "summary": "GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision"
  },
  "build": {
   "number": "5",
   "run_exports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "gtsam",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip"
   ],
   "run": [
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp"
   ]
  },
  "source": {
   "patches": [
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch"
   ],
   "sha256": "c7b5e6cdad52b141c272778f47baf628975457be3e26ed96a7bc2ae685a00af0",
   "url": "https://github.com/borglab/gtsam/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h",
    "test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake",
    "test -f ${PREFIX}/include/gtsam/base/types.h"
   ],
   "imports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "numpy",
    "pip",
    "pybind11",
    "pyparsing",
    "python",
    "setuptools",
    "suitesparse",
    "tbb",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gtsam"
  ]
 },
 "pinning_version": "2023.01.18.19.16.13",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"gtsam\" %}\n{% set version = \"4.1.1\" %}\n\npackage:\n  name: gtsam\n  version: '{{ version }}'\n\nsource:\n  url: https://github.com/borglab/gtsam/archive/refs/tags/{{ version }}.tar.gz\n  sha256: c7b5e6cdad52b141c272778f47baf628975457be3e26ed96a7bc2ae685a00af0\n  patches:\n    - nobuild-examples-timing.patch\n    - unvendor-findboost.patch\n    - unvendor-findtbb.patch\n    - unvendor-pybind11.patch\n    - fix-boost.patch\n    - fix-metis-lib.patch\n    - 1102.patch\n    - fix-python-build-win.patch  # [win]\nbuild:\n  number: 5\n  run_exports:\n    - '{{ pin_subpackage(name, max_pin=\"x.x\") }}'\n\nrequirements:\n  build:\n    - '{{ compiler(\"c\") }}'\n    - '{{ compiler(\"cxx\") }}'\n    - ninja\n    - cmake\n    - pybind11                               # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - python\n    - boost\n    - boost-cpp\n    - eigen\n    - geographiclib-cpp\n    - metis\n    - suitesparse\n    - tbb\n    - tbb-devel\n    - pybind11\n    - pyparsing\n    - numpy\n    - setuptools\n    - pip\n  run:\n    - python\n    - pyparsing\n    - numpy\n    - boost-cpp\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libgtsam${SHLIB_EXT}  # [not win]\n    - test -f ${PREFIX}/lib/cmake/gtwrap/gtwrapConfig.cmake  # [not win]\n    - test -f ${PREFIX}/lib/cmake/GTSAM/GTSAMConfig.cmake  # [not win]\n    - test -f ${PREFIX}/include/gtsam/base/types.h  # [not win]\n    - if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)  # [win]\n    - if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)  # [win]\n    - if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)  # [win]\n  imports:   # [not win]\n    - gtsam  # [not win]\n\n\nabout:\n  home: https://github.com/borglab/gtsam\n  summary: GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision\n  license: BSD-3-Clause\n  license_file:\n    - LICENSE\n    - LICENSE.BSD\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - ameysutavani\n    - Tobias-Fischer\n    - traversaro\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost",
   "boost-cpp",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "geographiclib-cpp",
   "metis",
   "ninja",
   "numpy",
   "pip",
   "pybind11",
   "pyparsing",
   "python",
   "setuptools",
   "suitesparse",
   "tbb",
   "tbb-devel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "numpy",
    "pip",
    "pybind11",
    "pyparsing",
    "python",
    "setuptools",
    "suitesparse",
    "tbb",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "numpy",
    "pip",
    "pybind11",
    "pyparsing",
    "python",
    "setuptools",
    "suitesparse",
    "tbb",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/borglab/gtsam/archive/refs/tags/4.1.1.tar.gz",
 "version": "4.1.1",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/borglab/gtsam",
   "license": "BSD-3-Clause",
   "license_file": [
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD",
    "LICENSE",
    "LICENSE.BSD"
   ],
   "summary": "GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision"
  },
  "build": {
   "number": "5",
   "run_exports": [
    "gtsam",
    "gtsam",
    "gtsam",
    "gtsam"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro",
    "wolfv",
    "ameysutavani",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "gtsam",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip",
    "python",
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "suitesparse",
    "tbb",
    "tbb-devel",
    "pybind11",
    "pyparsing",
    "numpy",
    "setuptools",
    "pip"
   ],
   "run": [
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp",
    "python",
    "pyparsing",
    "numpy",
    "boost-cpp"
   ]
  },
  "source": {
   "patches": [
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch",
    "nobuild-examples-timing.patch",
    "unvendor-findboost.patch",
    "unvendor-findtbb.patch",
    "unvendor-pybind11.patch",
    "fix-boost.patch",
    "fix-metis-lib.patch",
    "1102.patch",
    "fix-python-build-win.patch"
   ],
   "sha256": "c7b5e6cdad52b141c272778f47baf628975457be3e26ed96a7bc2ae685a00af0",
   "url": "https://github.com/borglab/gtsam/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\gtsam\\\\base\\\\types.h (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\lib\\\\gtsam.lib (exit 0) else (exit 1)",
    "if exist $PREFIX$\\\\Library\\\\bin\\\\gtsam.dll (exit 0) else (exit 1)"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "boost-cpp",
    "eigen",
    "geographiclib-cpp",
    "metis",
    "numpy",
    "pip",
    "pybind11",
    "pyparsing",
    "python",
    "setuptools",
    "suitesparse",
    "tbb",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "pyparsing",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}