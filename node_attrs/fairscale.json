{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/775958570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784262124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/3fbe5f86-aafd-457b-bb8c-c40fceef224a.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/d49cc32e-1da1-4ca5-a1cd-d69f650de6e9.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/807913481.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/823155469.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/2981a467-9c7b-468d-b016-2fb6974ee731.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/840830419.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/875788109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/884743817.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch111"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/885533768.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1007879783.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008104488.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1009105893.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1048343802.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1065861334.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "fairscale",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/facebookresearch/fairscale",
   "doc_url": "https://fairscale.readthedocs.io/",
   "home": "https://github.com/facebookresearch/fairscale",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "PyTorch extensions for high performance and large scale training."
  },
  "build": {
   "number": "5",
   "string": "cpu_py37h1234567_5"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "fairscale",
   "version": "0.4.6"
  },
  "requirements": {
   "build": [
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch"
   ],
   "run": [
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "776b08336a524fb90867365af52307870cc7dc95c3d7b5cf2577f0dcdb647e36",
   "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.6.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests",
    "pytest tests"
   ],
   "imports": [
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim"
   ],
   "requires": [
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "parameterized",
    "pytest",
    "scikit-learn",
    "torchvision"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/facebookresearch/fairscale",
   "doc_url": "https://fairscale.readthedocs.io/",
   "home": "https://github.com/facebookresearch/fairscale",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "PyTorch extensions for high performance and large scale training."
  },
  "build": {
   "number": "5",
   "string": "cpu_py39h1234567_5"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "fairscale",
   "version": "0.4.6"
  },
  "requirements": {
   "build": [
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch"
   ],
   "run": [
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "__cuda",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "776b08336a524fb90867365af52307870cc7dc95c3d7b5cf2577f0dcdb647e36",
   "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.6.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim"
   ],
   "requires": [
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name": "fairscale",
 "new_version": "0.4.12",
 "new_version_attempts": {
  "0.4.10": 1,
  "0.4.2": 1,
  "0.4.3": 1,
  "0.4.4": 1,
  "0.4.5": 1,
  "0.4.6": 1,
  "0.4.7": 1,
  "0.4.8": 1,
  "0.4.9": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/facebookresearch/fairscale",
   "doc_url": "https://fairscale.readthedocs.io/",
   "home": "https://github.com/facebookresearch/fairscale",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "PyTorch extensions for high performance and large scale training."
  },
  "build": {
   "number": "5",
   "string": "cpu_py38h1234567_5"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari",
    "h-vetinari",
    "h-vetinari",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "fairscale",
   "version": "0.4.6"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "776b08336a524fb90867365af52307870cc7dc95c3d7b5cf2577f0dcdb647e36",
   "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.6.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim"
   ],
   "requires": [
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "parameterized",
    "pytest",
    "scikit-learn",
    "torchvision"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/facebookresearch/fairscale",
   "doc_url": "https://fairscale.readthedocs.io/",
   "home": "https://github.com/facebookresearch/fairscale",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "PyTorch extensions for high performance and large scale training."
  },
  "build": {
   "number": "5",
   "string": "cpu_py39h1234567_5"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari",
    "h-vetinari",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "fairscale",
   "version": "0.4.6"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch",
    "python",
    "pip",
    "pytorch"
   ],
   "run": [
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "776b08336a524fb90867365af52307870cc7dc95c3d7b5cf2577f0dcdb647e36",
   "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.6.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim",
    "fairscale",
    "fairscale.nn",
    "fairscale.nn.data_parallel",
    "fairscale.nn.model_parallel",
    "fairscale.nn.pipe",
    "fairscale.nn.pipe.balance",
    "fairscale.nn.pipe.skip",
    "fairscale.optim"
   ],
   "requires": [
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision",
    "pytest",
    "parameterized",
    "scikit-learn",
    "torchvision"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "parameterized",
    "pytest",
    "scikit-learn",
    "torchvision"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fairscale"
  ]
 },
 "pinning_version": "2022.09.23.15.53.14",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"0.4.6\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: fairscale\n  version: {{ version }}\n\nsource:\n  url: https://github.com/facebookresearch/fairscale/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 776b08336a524fb90867365af52307870cc7dc95c3d7b5cf2577f0dcdb647e36\n\nbuild:\n  number: 5\n  # no pytorch on windows in conda-forge, see\n  # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/32\n  skip: true  # [win]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                                # [cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - sysroot_linux-64 2.17                  # [linux]\n    # compilers only needed for CUDA extensions\n    - {{ compiler('cxx') }}                  # [cuda_compiler_version != \"None\"]\n    - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n  host:\n    - python\n    - pip\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*      # [cuda_compiler_version != \"None\"]\n  run:\n    - python\n    - __cuda  # [cuda_compiler_version != \"None\"]\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  requires:\n    - pytest\n    - parameterized\n    - scikit-learn\n    - torchvision\n  source_files:\n    - tests\n  commands:\n    # TODO: re-enable tests for unix\n    - pytest tests  # [linux]\n  imports:\n    - fairscale\n    - fairscale.nn\n    - fairscale.nn.data_parallel\n    - fairscale.nn.model_parallel\n    - fairscale.nn.pipe\n    - fairscale.nn.pipe.balance\n    - fairscale.nn.pipe.skip\n    - fairscale.optim\n\nabout:\n  home: https://github.com/facebookresearch/fairscale\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: PyTorch extensions for high performance and large scale training.\n  dev_url: https://github.com/facebookresearch/fairscale\n  doc_url: https://fairscale.readthedocs.io/\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "__cuda",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "pip",
   "python",
   "pytorch",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "parameterized",
    "pytest",
    "scikit-learn",
    "torchvision"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "parameterized",
    "pytest",
    "scikit-learn",
    "torchvision"
   ]
  }
 },
 "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.6.tar.gz",
 "version": "0.4.6"
}