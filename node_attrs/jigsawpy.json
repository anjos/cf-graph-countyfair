{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/486315963.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/487516339.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499252947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jigsawpy",
 "hash_type": "sha256",
 "name": "jigsawpy",
 "new_version": "0.3.3",
 "new_version_attempts": {
  "0.3.1": 1,
  "0.3.2": 1,
  "0.3.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jigsawpy"
  ]
 },
 "pinning_version": "2020.10.07.09.03.27",
 "raw_meta_yaml": "{% set name = \"jigsawpy\" %}\n{% set version = \"0.3.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dengwirda/jigsaw-python/archive/v{{ version }}.tar.gz\n  sha256: 5744e992c0e68392213e4c6a6490a19b97bd5cc852dec06cd42d9eaa995e05c2\n  patches:\n    - 0001-remove-pathlib-requirement.patch\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - jigsaw 0.9.14\n    - numpy\n    - pathlib\n\ntest:\n  requires:\n    - matplotlib-base\n    - pip\n  source_files:\n    - files/*.msh\n    - tests/*.py\n    - example.py\n    - cache/.keep\n  commands:\n    - pip check\n    - python example.py --IDnumber 0\n    - python example.py --IDnumber 1\n    - python example.py --IDnumber 2\n    - python example.py --IDnumber 3\n    - python example.py --IDnumber 4\n    - python example.py --IDnumber 5\n    - python example.py --IDnumber 6\n    - python example.py --IDnumber 7\n    - python example.py --IDnumber 8\n\nabout:\n  home: https://github.com/dengwirda/jigsaw-python\n  license: custom\n  license_file: LICENSE.md\n  summary: |\n    jigsawpy is the python interface to JIGSAW, which is a Delaunay-based\n    unstructured mesh generator for two- and three-dimensional geometries.\n  description: |\n    JIGSAW is a stand-alone mesh generator written in c++, based on the\n    general-purpose meshing package JIGSAW. This toolbox provides a Python\n    based scripting interface, including file I/O, mesh visualisation and\n    post-processing facilities. The underlying JIGSAW library is a collection\n    of unstructured triangle- and tetrahedron-based meshing algorithms,\n    designed to produce high quality Delaunay-based grids for computational\n    simulation. JIGSAW includes both Delaunay-refinement based algorithms for\n    the construction of new meshes, as well as optimisation driven methods for\n    the improvement of existing grids.\n  doc_url: https://github.com/dengwirda/jigsaw-python\n  dev_url: https://github.com/dengwirda/jigsaw-python\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - dengwirda\n",
 "smithy_version": "3.8.0",
 "strong_exports": false,
 "url": "https://github.com/dengwirda/jigsaw-python/archive/v0.3.3.tar.gz",
 "version": "0.3.3"
}