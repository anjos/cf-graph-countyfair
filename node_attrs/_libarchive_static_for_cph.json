{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/317695090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321000614.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/327977639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "zstd-1.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341645112.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "zstd-1.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/357959316.json"
   },
   "data": {
    "bot_rerun": 1600798247.0492156,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374006748.json"
   },
   "data": {
    "bot_rerun": 1600812351.62566,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/420457999.json"
   },
   "data": {
    "bot_rerun": 1600812351.626213,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488826596.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492392085.json"
   },
   "data": {
    "bot_rerun": 1621536287.3345368,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/530198984.json"
   },
   "data": {
    "bot_rerun": 1621536287.3347204,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545649927.json"
   },
   "data": {
    "bot_rerun": 1621536287.3349302,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645376464.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "zstd15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/649310047.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753188396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/842752119.json"
   },
   "data": {
    "bot_rerun": 1647063066.4885917,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878095430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "_libarchive_static_for_cph",
 "hash_type": "sha256",
 "name": "_libarchive_static_for_cph",
 "new_version": "3.6.1",
 "new_version_attempts": {
  "3.4.3": 3,
  "3.5.0": 1,
  "3.5.1": 2,
  "3.5.2": 1,
  "3.5.3": 1,
  "3.6.0": 1
 },
 "new_version_errors": {
  "3.4.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.4.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/libarchive/libarchive/releases/download/v{{ version }}/libarchive-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "_libarchive_static_for_cph"
  ]
 },
 "pinning_version": "2022.03.10.18.35.59",
 "raw_meta_yaml": "{% set version = \"3.3.3\" %}\n# 3.4.0 breaks some symlink stuff on macos.  Holding back for now.\n\n# Recipe for a static libarchive with support for the features needed for\n# conda-package-handling (bzip2, zlib, zstd).\n# This is not a general purpose libarchive\n\npackage:\n  name: _libarchive_static_for_cph\n  version: {{ version }}\n\nsource:\n  url: https://github.com/libarchive/libarchive/releases/download/v{{ version }}/libarchive-{{ version }}.tar.gz\n  sha256: ba7eb1781c9fbbae178c4c6bad1c6eb08edab9a1496c64833d1715d022b30e2e\n  patches:\n    - patches/0001-Add-lib-to-CMAKE_FIND_LIBRARY_PREFIXES-for-lzma.patch\n    - patches/0002-xar-fix-bad-seek-in-move_reading_point.patch\n    - patches/0003-VC9-compatibility-test-for-BCryptDeriveKeyPBKDF2.patch\n    - patches/0004-VC9-compatibility-define-BCRYPT_SUCCESS.patch\n    # This should not be applied in general. It exists so I can build it for\n    # debugging Visual Studio where warnings are errors for some reason.\n    # Hiding warnings is poor practice.\n    # - patches/0005-VC9-compatibility-ignore-some-warnings.patch\n    - patches/0006-VC-openssl-define-inline-as-__inline.patch\n    # These warnings are errors when compiling lz-4 support\n    - patches/0007-CMake-VC9-compatibility-ignore-some-warnings.patch\n    - patches/0008-VC9-compatibility-remove-C99.patch\n    - patches/0009-CMake-Force-Multi-threaded-DLL-runtime.patch\n    # 3.4.0 added official support for symlinks on win\n    - patches/0010-Use-CreateSymbolicLinkW-on-Windows-for-symlinks-WIP.patch\n\nbuild:\n  number: 5\n  ignore_run_exports:\n    - bzip2\n    - libiconv\n    - zlib\n    - zstd\n  # HACK: case-sensitive mismatch in latest conda-build\n  missing_dso_whitelist:\n    - Library/bin/VCRUNTIME140.dll    # [win]\n    - \"*/MSVCR90.dll\"                 # [win]\n    - \"MSVCR90.dll\"                   # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    # Does not work in this recips at present\n    # we manually convert C99 to C89 instead.\n    # - c99-to-c89  # [win and vc<14]\n    - msinttypes  # [win and vc<14]\n    - autoconf    # [unix]\n    - automake    # [unix]\n    - libtool     # [unix]\n    - pkg-config  # [unix]\n    - cmake       # [win]\n    - make        # [unix]\n    - m2-patch    # [win]\n  host:\n    - msinttypes  # [win and vc<14]\n    - bzip2\n    - libiconv    # [osx]\n    - zlib\n    # on win + vc9 a zstd package with a static library is needed,\n    # defaults has one but conda-forge does not (yet).  Use the default\n    # package by specifying the full version and build string\n    - zstd 1.3.7 h1b0e4d7_0  # [win and vc<14]\n    - zstd                   # [not ((win and vc<14) or unix)]\n    - zstd-static            # [unix]    \n\ntest:\n  commands:\n    # Verify headers are in place.\n    - test -f \"${PREFIX}/include/archive.h\"                              # [unix]\n    - test -f \"${PREFIX}/include/archive_entry.h\"                        # [unix]\n    - if not exist %PREFIX%\\Library\\include\\archive.h exit /b 1         # [win]\n    - if not exist %PREFIX%\\Library\\include\\archive_entry.h exit /b 1   # [win]\n\n    # Verify libraries are in place.\n    - test -f \"${PREFIX}/lib/libarchive.a\"                               # [unix]\n    - test -f \"${PREFIX}/lib/libarchive_and_deps.a\"                      # [unix]\n    - if not exist %PREFIX%\\Library\\lib\\archive_static.lib exit /b 1    # [win]\n    - if not exist %PREFIX%\\Library\\lib\\archive_and_deps.lib exit /b 1  # [win]\n\nabout:\n  home: http://www.libarchive.org/\n  summary: a static build of libarchive containing only conda-related parts\n  license: BSD-2-Clause\n  license_file:\n    - static_deps_licenses/bzip2.txt\n    - static_deps_licenses/libarchive.txt\n    - static_deps_licenses/zlib.txt\n    - static_deps_licenses/zstd.txt\n    - static_deps_licenses/msinttypes.txt  # [win and py27]\n    - static_deps_licenses/libiconv.txt    # [osx]\n\nextra:\n  recipe-maintainers:\n    - msarahan\n    - jjhelmus\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://github.com/libarchive/libarchive/releases/download/v3.3.3/libarchive-3.3.3.tar.gz",
 "version": "3.3.3"
}