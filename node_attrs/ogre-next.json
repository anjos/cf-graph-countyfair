{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/981165726.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/981166476.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v2.2",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998819107.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "v2.2"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "ogre-next",
 "hash_type": "sha256",
 "name": "ogre-next",
 "new_version": "2.3.1",
 "new_version_attempts": {
  "2.3.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ogre-next"
  ]
 },
 "pinning_version": "2022.07.16.21.44.50",
 "raw_meta_yaml": "{% set name = \"ogre-next\" %}\n{% set version = \"2.3.1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/OGRECave/ogre-next/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 38dd0d5ba5759ee47c71552c5dacf44dad5fe61868025dcbd5ea6a6bdb6bc8e4\n    patches:\n      - add_OGRE_USE_NEW_PROJECT_NAME_cmake_option.patch\n      - disable_cmake_modules_install.patch\n      - change_header_install_from_OGRE_to_OGRE-Next.patch\n      - change_plugin_installs_from_OGRE_to_OGRE-Next.patch\n      - fix_pc_files_generation.patch\n      - backport_hlms_bugfix.patch\n      - add_suffix_in_install_also_for_runtime.patch\n\nbuild:\n  number: 1\n  run_exports:\n    # See https://salsa.debian.org/ogre-team/ogre-next/-/blob/a27f70cd8c6b82e3fc207fefe557b43bc49634b4/debian/README.Debian\n    - {{ pin_subpackage(name, max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - pkg-config\n    - ninja\n    - make  # [not win]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n    - {{ cdt('libxext') }}     # [linux]\n  host:\n    - xorg-libxfixes  # [linux]\n    - xorg-libxt  # [linux]\n    - xorg-libxaw  # [linux]\n    - xorg-libxrandr  # [linux]\n    - xorg-libx11  # [linux]\n    - freeimage\n    - freetype\n    - rapidjson\n    - zlib\n    - zziplib\n  run:\n    # workaround for https://github.com/conda-forge/xorg-libx11-feedstock/issues/15\n    - xorg-libxfixes  # [linux]\n    - xorg-libxt  # [linux]\n    - xorg-libxaw  # [linux]\n    - xorg-libxrandr  # [linux]\n    - xorg-libx11  # [linux]\n    - xorg-libx11  # [linux]\n\n# The path are compatible with the ogre-next Ubuntu package:\n# See https://packages.ubuntu.com/source/jammy/amd64/ogre-next\ntest:\n  commands:\n    - test -f $PREFIX/include/OGRE-Next/OgreRoot.h  # [unix]\n    - test -f $PREFIX/lib/pkgconfig/OGRE-Next.pc  # [unix]\n    - test -f $PREFIX/lib/libOgreNextMain${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/lib/OGRE-Next//RenderSystem_NULL${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_INC%\\\\OGRE-Next\\\\OgreRoot.h exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\OGRE-Next.pc exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\OgreNextMain.dll exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\OGRE-Next\\\\RenderSystem_NULL.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/OGRECave/ogre-next\n  license: MIT\n  license_file: COPYING\n  summary: aka ogre v2 - scene-oriented, flexible 3D C++ engine\n\nextra:\n  recipe-maintainers:\n    - traversaro\n    - wolfv\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/OGRECave/ogre-next/archive/refs/tags/v2.3.1.tar.gz",
 "version": "2.3.1"
}