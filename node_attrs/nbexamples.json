{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/201502702.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220470106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "nbexamples",
 "hash_type": "sha256",
 "name": "nbexamples",
 "new_version": "0.3.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nbexamples"
  ]
 },
 "pinning_version": "2018.10.01",
 "raw_meta_yaml": "{% set version = \"0.3.1\" %}\n\npackage:\n  name: nbexamples\n  version: {{ version }}\n\nsource:\n  url: https://github.com/danielballan/nbexamples/archive/v{{ version }}.tar.gz\n  sha256: ec2d08f618ad40718932a1fe1f2ca019c8bcd9b845f4eab360e69464b76a7c99\n\nbuild:\n  number: 1\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - notebook >=4.2.0\n    - python\n    - pip\n  run:\n    - nbconvert\n    - nbformat\n    - notebook >=4.2.0\n    - python\n\ntest:\n  imports:\n    - nbexamples\n\nabout:\n  home: https://github.com/danielballan/nbexamples\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Jupyter Notebook extension that shows a list of example notebooks for users to preview and clone\n\nextra:\n  recipe-maintainers:\n    - danielballan\n    - ericdill\n    - mariusvniekerk\n    - parente\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://github.com/danielballan/nbexamples/archive/v0.3.1.tar.gz",
 "version": "0.3.1"
}