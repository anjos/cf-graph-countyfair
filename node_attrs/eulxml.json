{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "eulxml",
 "hash_type": "sha256",
 "name": "eulxml",
 "new_version": "1.1.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "eulxml"
  ]
 },
 "raw_meta_yaml": "{% set name = \"eulxml\" %}\n{% set version = \"1.1.3\" %}\n{% set file_ext = \"tar.gz\" %}\n{% set hash_value = \"a2df44fc91428db2d1089d399789f5d36dcc6cbef24c3149c65672fcb81beca3\" %}\n\npackage:\n  name: 'eulxml'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.{{ file_ext }}'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: '{{ hash_value }}'\n  patches:\n    - optimize.patch\n\nbuild:\n  number: 1\n  noarch: python\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n    - ply >=3.8\n    - lxml >=3.4\n    - six >=1.10\n  run:\n    - python\n    - ply >=3.8\n    - lxml >=3.4\n    - six >=1.10\n    - setuptools\n\ntest:\n  imports:\n    - eulxml\n    - eulxml.utils\n    - eulxml.xmlmap\n    - eulxml.xpath\n\nabout:\n  home: https://github.com/emory-libraries/eulxml\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: APACHE-LICENSE-2.0.txt\n  summary: 'XPath-based XML data binding'\n  description: |\n    eulxml is an extensible library for reading and writing XML documents in\n    idiomatic Python. It allows developers to map predictable XML node\n    structures to XmlObject subclasses, using field definitions to map XPath\n    expressions directly to Python attributes.\n    For projects using Django, it also provides utilities for exposing\n    XmlObject instances to web users with XmlObjectForm. As a bonus, EULxml\n    happens to include an XPath parser in eulxml.xpath.\n  doc_url: 'https://eulxml.readthedocs.io/en/latest/'\n  dev_url: 'https://github.com/emory-libraries/eulxml'\n\nextra:\n  recipe-maintainers: \n    - marcelotrevisani\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/e/eulxml/eulxml-1.1.3.tar.gz",
 "version": "1.1.3"
}