{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/948633967.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "deepface",
 "hash_type": "sha256",
 "name": "deepface",
 "new_version": "0.0.75",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "deepface"
  ]
 },
 "pinning_version": "2022.05.25.19.48.06",
 "raw_meta_yaml": "{% set name = \"deepface\" %}\n{% set version = \"0.0.75\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/deepface-{{ version }}.tar.gz\n  sha256: cb1513b2c78ccbf50ae2d2f612397fe87acafc79bf25cabd4586c08d44d7187c\n\nbuild:\n  entry_points:\n    - deepface = deepface.DeepFace:cli\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n  skip: True  # [win]\n  # https://github.com/serengil/deepface/issues/486\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - fire >=0.4.0\n    - flask >=1.1.2\n    - gdown >=3.10.1\n    - keras >=2.2.0\n    - mtcnn >=0.1.0\n    - numpy >=1.14.0\n    - opencv >=4.5.5\n    - pandas >=0.23.4\n    - pillow >=5.2.0\n    - python\n    - retina-face >=0.0.1\n    - tensorflow >=1.9.0\n    - tqdm >=4.30.0\n\ntest:\n  imports:\n    - deepface\n  commands:\n    - deepface --help\n  # Upstream uses python-opencv which is a wrapper around opencv which is provided by conda-forge already.\n  # This has a slightly different version though which is why pip check fails.\n\nabout:\n  home: https://github.com/serengil/deepface\n  summary: A Lightweight Face Recognition and Facial Attribute Analysis Framework (Age, Gender, Emotion, Race) for Python\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - serengil\n    - BastianZim\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/d/deepface/deepface-0.0.75.tar.gz",
 "version": "0.0.75"
}