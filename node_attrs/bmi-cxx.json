{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/350235760.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/353721361.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bmi-cxx",
 "hash_type": "sha256",
 "name": "bmi-cxx",
 "new_version": "2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bmi-cxx"
  ]
 },
 "pinning_version": "2019.12.02",
 "raw_meta_yaml": "{% set name = \"bmi-cxx\" %}\n{% set version = \"2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/csdms/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 49444c1b45b1bf5d8af48a17afc559a1552f4cbef15549edb4eb0453c41ada02\n\nbuild:\n  number: 1\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -f $PREFIX/include/bmi.hxx          # [unix]\n    - test -f $PREFIX/lib/pkgconfig/bmicxx.pc  # [unix]\n    - if not exist %LIBRARY_INC%\\\\bmi.hxx exit 1               # [win]\n    - if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\bmicxx.pc exit 1  # [win]\n\nabout:\n  home: https://bmi.readthedocs.io\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'C++ specification for the Basic Model Interface'\n  description: |\n    C++ bindings for the CSDMS Basic Model Interface (BMI). This package\n    includes a header file with an interface to be implemented by a\n    model developer when they add a BMI to their model.\n  doc_url: https://bmi.readthedocs.io\n  dev_url: https://github.com/csdms/bmi-cxx\n\nextra:\n  recipe-maintainers:\n    - mdpiper\n    - mcflugen\n",
 "smithy_version": "3.6.5",
 "strong_exports": false,
 "url": "https://github.com/csdms/bmi-cxx/archive/v2.0.tar.gz",
 "version": "2.0"
}