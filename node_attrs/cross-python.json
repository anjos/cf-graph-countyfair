{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/519042406.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543463145.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "cross-python",
 "name": "cross-python_osx-64",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cross-python_osx-64"
  ]
 },
 "pinning_version": "2020.12.21.11.21.41",
 "raw_meta_yaml": "{% set build_number = 27 %}\n{% if cross_target_platform is undefined %}\n{% set cross_target_platform = \"linux-64\" %}\n{% endif %}\n\npackage:\n  name: cross-python_{{ cross_target_platform }}\n  version: {{ version }}\n\nbuild:\n  number: {{ build_number }}\n  string: {{ build_number }}_{{ py_impl }}\n  skip: True  # [win]\n  skip: True  # [cross_target_platform == target_platform]\n  skip: True  # [cross_target_platform == \"osx-arm64\" and (py_impl == \"73_pypy\" or version == \"3.7\")]\n  run_exports:\n    strong:\n      - python {{ version }}.* *_{{ py_impl }}\n\nrequirements:\n  run:\n    - python {{ version }}.* *_{{ py_impl }}\n    - crossenv >=1.0\n    - rsync\n    - sed\n{% if cross_target_platform.startswith(\"osx-\") %}\n    - clang_{{ cross_target_platform }}\n{% endif %}\n{% if cross_target_platform.startswith(\"linux-\") %}\n    - gcc_{{ cross_target_platform }}\n{% endif %}\n\n{% if cross_target_platform.startswith(\"linux-\") and version != \"3.9\" %}\ntest:\n  commands:\n    - test -f $PREFIX/etc/conda/activate.d/activate_z-cross-python_{{ cross_target_platform }}.sh\n{% endif %}\n\nabout:\n  home: https://github.com/conda-forge/cross-python-feedstock\n  license: LicenseRef-OTHER\n  summary: 'A meta-package to set up a cross compiling env for python in conda-build'\n\nextra:\n  recipe-maintainers:\n    - isuruf\n  feedstock-name: cross-python\n",
 "smithy_version": "3.8.5",
 "strong_exports": true,
 "version": "3.7"
}