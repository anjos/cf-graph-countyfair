{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/421575819.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472187668.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535320407.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/564612753.json"
   },
   "data": {
    "bot_rerun": 1637101044.739041,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/580041537.json"
   },
   "data": {
    "bot_rerun": 1637101044.7392504,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/580483055.json"
   },
   "data": {
    "bot_rerun": 1637101044.7393613,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/583152627.json"
   },
   "data": {
    "bot_rerun": 1637101044.7394543,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/591200476.json"
   },
   "data": {
    "bot_rerun": 1637101044.7395456,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/671812847.json"
   },
   "data": {
    "bot_rerun": 1637101044.7396348,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/781278702.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/782251097.json"
   },
   "data": {
    "bot_rerun": 1658767366.641627,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888824925.json"
   },
   "data": {
    "bot_rerun": 1658767366.641814,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906015850.json"
   },
   "data": {
    "bot_rerun": 1658767366.6419158,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926550193.json"
   },
   "data": {
    "bot_rerun": 1658767366.642004,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1031374981.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1111926802.json"
   },
   "data": {
    "bot_rerun": 1668100525.275502,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1118138084.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1172920159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1200643213.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyrad_arm",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss Pyrad. Pyrad is an open source Python\nmodule for weather radar data processing. The module controls the\ndata flow. The inputs and outputs are specified using config files.\nMost of the core data processing is performed using Py-ART, originally\ndeveloped in the framework of the Atmospheric Radiation Measurement (ARM)\nClimate Research Facility for working with data from a number of\nprecipitation and cloud radars. This package is provided for convenience\nto the Py-ART comunity. If you would like to get the full functionality of\nPyrad please use pyrad_mch, which runs with the MeteoSwiss version of\nPy-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyrad",
   "doc_url": "https://pyrad-mch.readthedocs.io/en/stable/",
   "home": "https://pyrad-mch.readthedocs.io/en/stable/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss Pyrad, Python tool for radar data processing."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyrad_arm",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart"
   ]
  },
  "source": {
   "sha256": "863cc3be4ee289a8f1725adf6ae0c01e781513f614e5641e003abe135de57cbe",
   "url": "https://pypi.io/packages/source/p/pyrad_mch/pyrad_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arm_pyart",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss Pyrad. Pyrad is an open source Python\nmodule for weather radar data processing. The module controls the\ndata flow. The inputs and outputs are specified using config files.\nMost of the core data processing is performed using Py-ART, originally\ndeveloped in the framework of the Atmospheric Radiation Measurement (ARM)\nClimate Research Facility for working with data from a number of\nprecipitation and cloud radars. This package is provided for convenience\nto the Py-ART comunity. If you would like to get the full functionality of\nPyrad please use pyrad_mch, which runs with the MeteoSwiss version of\nPy-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyrad",
   "doc_url": "https://pyrad-mch.readthedocs.io/en/stable/",
   "home": "https://pyrad-mch.readthedocs.io/en/stable/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss Pyrad, Python tool for radar data processing."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyrad_arm",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart"
   ]
  },
  "source": {
   "sha256": "863cc3be4ee289a8f1725adf6ae0c01e781513f614e5641e003abe135de57cbe",
   "url": "https://pypi.io/packages/source/p/pyrad_mch/pyrad_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad"
   ]
  }
 },
 "name": "pyrad_arm",
 "new_version": "1.6.2",
 "new_version_attempts": {
  "0.5.0": 1,
  "0.6.1": 1,
  "0.6.2": 1,
  "0.6.3": 1,
  "0.6.5": 1,
  "0.6.6": 1,
  "1.0.0": 1,
  "1.1.0": 1,
  "1.1.1": 1,
  "1.2.0": 17,
  "1.4.5": 0,
  "1.6.0": 1,
  "1.6.2": 1
 },
 "new_version_errors": {
  "1.2.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.2.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/p/pyrad_arm/pyrad_arm-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss Pyrad. Pyrad is an open source Python\nmodule for weather radar data processing. The module controls the\ndata flow. The inputs and outputs are specified using config files.\nMost of the core data processing is performed using Py-ART, originally\ndeveloped in the framework of the Atmospheric Radiation Measurement (ARM)\nClimate Research Facility for working with data from a number of\nprecipitation and cloud radars. This package is provided for convenience\nto the Py-ART comunity. If you would like to get the full functionality of\nPyrad please use pyrad_mch, which runs with the MeteoSwiss version of\nPy-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyrad",
   "doc_url": "https://pyrad-mch.readthedocs.io/en/stable/",
   "home": "https://pyrad-mch.readthedocs.io/en/stable/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss Pyrad, Python tool for radar data processing."
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyrad_arm",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart",
    "python",
    "numpy",
    "arm_pyart"
   ]
  },
  "source": {
   "sha256": "863cc3be4ee289a8f1725adf6ae0c01e781513f614e5641e003abe135de57cbe",
   "url": "https://pypi.io/packages/source/p/pyrad_mch/pyrad_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyrad",
    "pyrad",
    "pyrad",
    "pyrad"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arm_pyart",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyrad_arm"
  ]
 },
 "pinning_version": "2023.01.17.14.17.22",
 "pre_pr_migrator_attempts": {
  "pypy38": 5,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "pypy38": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3952891184\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 340, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "python39": "not solvable: master: ['linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package arm_pyart-1.8.0-np112py36_0 requires python 3.6*, but none of the providers can be installed\\n', 'osx_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package arm_pyart-1.8.0-np112py36_0 requires python 3.6*, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pyrad_arm\" %}\n{% set version = \"1.6.0\" %}\n{% set sha256 = \"863cc3be4ee289a8f1725adf6ae0c01e781513f614e5641e003abe135de57cbe\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pyrad_mch/pyrad_mch-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [py2k or win]\n  script:\n    - {{ PYTHON }} -m pip install . --no-deps -vvv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n\n  host:\n    - python\n    - pip\n    - numpy\n\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - arm_pyart\n\ntest:\n  imports:\n    - pyrad\n\nabout:\n  home: https://pyrad-mch.readthedocs.io/en/stable/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: MeteoSwiss Pyrad, Python tool for radar data processing.\n  description: |\n    This is the MeteoSwiss Pyrad. Pyrad is an open source Python\n    module for weather radar data processing. The module controls the\n    data flow. The inputs and outputs are specified using config files.\n    Most of the core data processing is performed using Py-ART, originally\n    developed in the framework of the Atmospheric Radiation Measurement (ARM)\n    Climate Research Facility for working with data from a number of\n    precipitation and cloud radars. This package is provided for convenience\n    to the Py-ART comunity. If you would like to get the full functionality of\n    Pyrad please use pyrad_mch, which runs with the MeteoSwiss version of\n    Py-ART.\n  doc_url: https://pyrad-mch.readthedocs.io/en/stable/\n  dev_url: https://github.com/MeteoSwiss/pyrad\n\nextra:\n  recipe-maintainers:\n    - meteoswiss-mdr\n",
 "req": {
  "__set__": true,
  "elements": [
   "arm_pyart",
   "c_compiler_stub",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arm_pyart",
    "c_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arm_pyart",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pyrad_mch/pyrad_mch-1.6.0.tar.gz",
 "version": "1.6.0"
}