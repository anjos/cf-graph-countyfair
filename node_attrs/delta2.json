{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/841046966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "delta2",
 "hash_type": "sha256",
 "name": "delta2",
 "new_version": "2.0.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "delta2"
  ]
 },
 "pinning_version": "2022.02.06.08.21.47",
 "raw_meta_yaml": "{% set name = \"delta\" %}\n{% set version = \"2.0.5\" %}\n\npackage:\n  name: {{ name|lower }}2\n  version: {{ version }}\n\nsource:\n  url: https://files.pythonhosted.org/packages/1c/79/4151bd97bb6e50cb47eb752ce2b28a08cfcab5ae5ad304148512f9e0de94/delta2-2.0.5.tar.gz\n  sha256: c99c8e14e54caf691b28138d039f1d46759156714c707820685efae7f41a4d2d\n\nbuild:\n  number: 1\n  skip: true  # [win]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - numpy >=1.20 \n    - scikit-image >=0.18\n    - opencv >=4.1\n    - tensorflow >=2\n    - ffmpeg-python\n    - requests\n\ntest:\n  imports:\n    - delta\n\nabout:\n  home: https://gitlab.com/dunloplab/delta\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'DeLTA (Deep Learning for Time-lapse Analysis) is a deep learning-based image processing pipeline for segmenting and tracking single cells in time-lapse microscopy movies'\n  description: |\n    DeLTA can process movies of rod-shaped bacteria growing in 2D setups such as\n    agarose pads, as well as movies of E. coli cells trapped in a microfluidic\n    device known as a mother machine. The pipeline is centered around two U-Net\n    neural networks that are used for binary segmnetation and tracking cells\n    frame to frame.\n  dev_url: https://gitlab.com/dunloplab/delta\n\nextra:\n  recipe-maintainers:\n    - jblugagne\n    - owen24819\n    - Armavica\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://files.pythonhosted.org/packages/1c/79/4151bd97bb6e50cb47eb752ce2b28a08cfcab5ae5ad304148512f9e0de94/delta2-2.0.5.tar.gz",
 "version": "2.0.5"
}