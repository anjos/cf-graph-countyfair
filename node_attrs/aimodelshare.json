{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/846237601.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.95"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/931835630.json"
   },
   "data": {
    "bot_rerun": 1656021970.4293447,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.98"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/956212588.json"
   },
   "data": {
    "bot_rerun": 1656021970.4295707,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.99"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/971039926.json"
   },
   "data": {
    "bot_rerun": 1656013510.678665,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.100"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/977573773.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.101"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/981801058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.102"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/981932022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.103"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/993538452.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.104"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008101818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.107"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1020696266.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.108"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "aimodelshare",
 "hash_type": "sha256",
 "name": "aimodelshare",
 "new_version": "0.0.108",
 "new_version_attempts": {
  "0.0.100": 1,
  "0.0.101": 1,
  "0.0.102": 1,
  "0.0.103": 1,
  "0.0.104": 1,
  "0.0.107": 1,
  "0.0.108": 1,
  "0.0.95": 1,
  "0.0.98": 1,
  "0.0.99": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "aimodelshare"
  ]
 },
 "pinning_version": "2022.08.08.17.05.41",
 "raw_meta_yaml": "{% set name = \"aimodelshare\" %}\n{% set version = \"0.0.108\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 368512e8fe75e2994106f0c93c96d54bc27be2ef9751505cdec748a75b81f54c\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - absl-py\n    - astunparse ==1.6.3\n    - boto3 ==1.18.2\n    - botocore ==1.21.2\n    - dill\n    - docker-py ==5.0.0\n    - ipython\n    - jinja2\n    - keras2onnx >=1.7.0\n    - networkx ==2.6.3\n    - onnx >=1.9.0\n    - onnxconverter-common >=1.7.0\n    - onnxmltools >=1.6.1\n    - onnxruntime >=1.7.0\n    - pathlib >=1.0.1\n    - psutil >=5.9.1\n    - pydot ==1.3.0\n    - pyjwt ==2.4.0\n    - pympler ==0.9\n    - python >=3.7\n    - python-wget ==3.2\n    - pytorch >=1.8.1\n    - regex\n    - requests\n    - scikit-learn ==0.24.2\n    - seaborn >=0.11.2\n    - shortuuid >=1.0.8\n    - skl2onnx >=1.8.0\n    - tensorflow >=2.5.0\n    - tf2onnx\n    - urllib3 ==1.25.11\n    - xgboost >=0.90\n\ntest:\n  imports:\n    - aimodelshare\n    - aimodelshare.custom_approach\n    - aimodelshare.main\n    - aimodelshare.sam\n\nabout:\n  home: https://www.modelshare.org\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Deploy locally saved machine learning models to a live rest API and web-dashboard.  Share it with the world via modelshare.org\n  doc_url: https://github.com/AIModelShare/aimodelshare/blob/master/README.md\n  dev_url: https://github.com/AIModelShare/aimodelshare\n\nextra:\n  recipe-maintainers:\n    - VijayKalmath\n    - raudipra\n    - mikedparrott\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/aimodelshare/aimodelshare-0.0.108.tar.gz",
 "version": "0.0.108"
}