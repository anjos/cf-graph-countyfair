{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/561453265.json"
   },
   "data": {
    "bot_rerun": 1611634279.8302288,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/f5490c9f-a498-4b4a-b2e6-c9c43a2d8814.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/561535937.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/577169170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/748021352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/0d6a643b-a32d-4c15-8e0e-dd4d7ca0c33b.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda_112_ppc64le_aarch64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995634377.json"
   },
   "data": {
    "bot_rerun": 1669692285.503047,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1138386557.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1138727307.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1153496396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: ValueError(\"variant config in /tmp/tmpt3oqu08u/conda_build_config.yaml is ambiguous because it\\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\\nor specifies a subspace that is not fully implemented (To be clear:\\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpt3oqu08u/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpt3oqu08u/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: ValueError(\"variant config in /tmp/tmpt3oqu08u/conda_build_config.yaml is ambiguous because it\\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\\nor specifies a subspace that is not fully implemented (To be clear:\\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpt3oqu08u/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9', '9'] from {'c_compiler_version': ['8', '9', '9', '9'], 'cxx_compiler_version': ['8', '9', '9', '9'], 'fortran_compiler_version': ['8', '9', '9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['10.2', '11.0', '11.1', '11.2'], 'cudnn': ['8', 'undefined', 'undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7', 'cos7', 'cos7']} in c_compiler_version:['8']).\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "cutensor",
 "hash_type": "sha256",
 "name": "cutensor",
 "new_version": "1.6.2.3",
 "new_version_attempts": {
  "1.6.0.3": 1,
  "1.6.1.5": 1,
  "1.6.2.3": 2
 },
 "new_version_errors": {
  "1.6.0.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.6.0.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}.{{ patch_version }}-archive.tar.xz'\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}.{{ patch_version }}-archive.zip'\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}.{{ patch_version }}-archive.tar.xz'\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}.{{ patch_version }}-archive.tar.xz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cutensor"
  ]
 },
 "pinning_version": "2022.12.07.18.34.25",
 "pre_pr_migrator_attempts": {
  "cuda111_112": 1
 },
 "pre_pr_migrator_status": {
  "cuda111_112": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/586903599\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1082, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 225, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 224, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 448, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"1.6.2.3\" %}\n\npackage:\n  name: cutensor\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}-archive.tar.xz  # [linux64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}-archive.tar.xz  # [ppc64le]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}-archive.tar.xz  # [aarch64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}-archive.zip  # [win64]\n\n  sha256: 0f2745681b1d0556f9f46ff6af4937662793498d7367b5f8f6b8625ac051629e  # [linux64]\n  sha256: 558329fa05409f914ebbe218a1cf7c9ccffdb7aa2642b96db85fd78b5ad534d1  # [ppc64le]\n  sha256: 7d4d9088c892bb692ffd70750b49625d1ccbb85390f6eb7c70d6cf582df6d935  # [aarch64]\n  sha256: 07cb312d7cafc7bb2f33d775e1ef5fffd1703d5c6656e785a7a8f0f01939907e  # [win64]\n\nbuild:\n  number: 0\n  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+\n  skip: true  # [win32 or cuda_compiler_version not in (\"10.2\", \"11.0\", \"11.1\")]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n  script:\n    - mkdir -p $PREFIX/include                                             # [linux]\n    - mv include/* $PREFIX/include/                                        # [linux]\n    - mkdir -p $PREFIX/lib                                                 # [linux]\n    - mv lib/{{ cuda_compiler_version }}/*.so* $PREFIX/lib/                # [linux and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - mv lib/11/*.so* $PREFIX/lib/                                         # [linux and cuda_compiler_version == \"11.1\"]\n    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so        # [ppc64le]\n\n    - copy include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\                           # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                        # [win64]\n    - copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - del lib\\\\{{ cuda_compiler_version }}\\\\*static*                       # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.dll %LIBRARY_BIN%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.lib %LIBRARY_LIB%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - del lib\\\\11\\\\*static*                                                # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n  missing_dso_whitelist:\n    # suppress warning, as these are included in the run dependency\n    - '*/libcublasLt.so*'  # [linux and cuda_compiler_version in (\"11.0\", \"11.1\")]\n    - '*/cublasLt64*.dll'  # [win64 and cuda_compiler_version in (\"11.0\", \"11.1\")]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - patchelf >=0.12  # [linux]\n  run:\n    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - cudatoolkit >=11.1,<12                   # [cuda_compiler_version == \"11.1\"]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: LicenseRef-cuTENSOR-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: LICENSE\n  summary: Tensor Linear Algebra on NVIDIA GPUs\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - JeremyWangNVDA\n    - leofang\n    - jakirkham\n    - mtjrider\n",
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.6.2.3-archive.zip",
 "version": "1.6.2.3"
}