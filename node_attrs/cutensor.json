{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/561453265.json"
   },
   "data": {
    "bot_rerun": 1611634279.8302288,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/f5490c9f-a498-4b4a-b2e6-c9c43a2d8814.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/561535937.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/577169170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/748021352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/0d6a643b-a32d-4c15-8e0e-dd4d7ca0c33b.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda_112_ppc64le_aarch64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995634377.json"
   },
   "data": {
    "bot_rerun": 1669692285.503047,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1138386557.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1138727307.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Command 'git diff --name-only 38ef830b63e9f00f5f75d624828f04b3a3b04719...HEAD' returned non-zero exit status 128.",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 310, in run",
   "    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd",
   "    c.check_returncode()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode",
   "    raise CalledProcessError(self.returncode, self.args, self.stdout,",
   "subprocess.CalledProcessError: Command 'git diff --name-only 38ef830b63e9f00f5f75d624828f04b3a3b04719...HEAD' returned non-zero exit status 128.",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "cutensor",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit"
   ],
   "missing_dso_whitelist": null,
   "number": "0",
   "run_exports": [
    "cutensor",
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/10.2/*.so* $PREFIX/lib/"
   ],
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.6.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12"
   ],
   "run": [
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12",
    "cudatoolkit 10.2"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "793b425c30ffd423c4f3a2e94acaf4fcb6752264aa73b74695a002dd2fe94b1a",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-1.6.1.5-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c",
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.1",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 10.2"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit"
   ],
   "missing_dso_whitelist": [
    "*/libcublasLt.so*",
    "*/libcublasLt.so*"
   ],
   "number": "0",
   "run_exports": [
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/"
   ],
   "script_env": [
    "CUDA_HOME",
    "CUDA_HOME"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.6.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "patchelf >=0.12",
    "patchelf >=0.12"
   ],
   "run": [
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "f0644bbdca81b890056a7b92714e787333b06a4bd384e4dfbdc3938fbd132e65",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-1.6.1.5-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.1"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit"
   ],
   "missing_dso_whitelist": [
    "*/libcublasLt.so*",
    "*/libcublasLt.so*"
   ],
   "number": "0",
   "run_exports": [
    "cutensor",
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/10.2/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so"
   ],
   "script_env": [
    "CUDA_HOME",
    "CUDA_HOME",
    "CUDA_HOME"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.6.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12"
   ],
   "run": [
    "cudatoolkit 10.2",
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "e895476ab13c4a28bdf018f23299746968564024783c066a2602bc0f09b86e47",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-1.6.1.5-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c",
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 10.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.1"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit"
   ],
   "missing_dso_whitelist": null,
   "number": "0",
   "run_exports": [
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/10.2/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/10.2/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11.0\\\\*static*",
    "copy lib\\\\11.0\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11.0\\\\*.lib %LIBRARY_LIB%\\\\",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11\\\\*static*",
    "copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\10.2\\\\*static*",
    "copy lib\\\\10.2\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\10.2\\\\*.lib %LIBRARY_LIB%\\\\"
   ],
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.6.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12",
    "patchelf >=0.12"
   ],
   "run": [
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12",
    "cudatoolkit 10.2",
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12",
    "cudatoolkit 10.2",
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12",
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12",
    "cudatoolkit 10.2"
   ],
   "run_constrained": null
  },
  "source": {
   "sha256": "36eac790df7b2c7bb4578cb355f1df65d17965ffc9b4f6218d1cdb82f87ab866",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.6.1.5-archive.zip"
  },
  "test": {
   "files": null,
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.1",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 10.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.1",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 10.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.1",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 11.1",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 10.2"
   ]
  }
 },
 "name": "cutensor",
 "new_version": "1.6.2.3",
 "new_version_attempts": {
  "1.6.0.3": 1,
  "1.6.1.5": 1,
  "1.6.2.3": 1
 },
 "new_version_errors": {
  "1.6.0.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.6.0.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}.{{ patch_version }}-archive.tar.xz'\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}.{{ patch_version }}-archive.zip'\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}.{{ patch_version }}-archive.tar.xz'\n - could not hash URL template 'https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}.{{ patch_version }}-archive.tar.xz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cutensor"
  ]
 },
 "pinning_version": "2022.11.27.15.56.36",
 "pre_pr_migrator_attempts": {
  "cuda111_112": 1,
  "version": 1
 },
 "pre_pr_migrator_status": {
  "cuda111_112": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/586903599\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1082, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 225, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 224, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 448, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3643644441\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 310, in run\n    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'git diff --name-only 38ef830b63e9f00f5f75d624828f04b3a3b04719...HEAD' returned non-zero exit status 128.\n"
 },
 "raw_meta_yaml": "{% set version = \"1.6.1.5\" %}\n\npackage:\n  name: cutensor\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}-archive.tar.xz  # [linux64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}-archive.tar.xz  # [ppc64le]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}-archive.tar.xz  # [aarch64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}-archive.zip  # [win64]\n\n  sha256: 793b425c30ffd423c4f3a2e94acaf4fcb6752264aa73b74695a002dd2fe94b1a  # [linux64]\n  sha256: e895476ab13c4a28bdf018f23299746968564024783c066a2602bc0f09b86e47  # [ppc64le]\n  sha256: f0644bbdca81b890056a7b92714e787333b06a4bd384e4dfbdc3938fbd132e65  # [aarch64]\n  sha256: 36eac790df7b2c7bb4578cb355f1df65d17965ffc9b4f6218d1cdb82f87ab866  # [win64]\n\nbuild:\n  number: 0\n  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+\n  skip: true  # [win32 or cuda_compiler_version not in (\"10.2\", \"11.0\", \"11.1\")]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n  script:\n    - mkdir -p $PREFIX/include                                             # [linux]\n    - mv include/* $PREFIX/include/                                        # [linux]\n    - mkdir -p $PREFIX/lib                                                 # [linux]\n    - mv lib/{{ cuda_compiler_version }}/*.so* $PREFIX/lib/                # [linux and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - mv lib/11/*.so* $PREFIX/lib/                                         # [linux and cuda_compiler_version == \"11.1\"]\n    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so        # [ppc64le]\n\n    - copy include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\                           # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                        # [win64]\n    - copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - del lib\\\\{{ cuda_compiler_version }}\\\\*static*                       # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.dll %LIBRARY_BIN%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.lib %LIBRARY_LIB%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - del lib\\\\11\\\\*static*                                                # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n  missing_dso_whitelist:\n    # suppress warning, as these are included in the run dependency\n    - '*/libcublasLt.so*'  # [linux and cuda_compiler_version in (\"11.0\", \"11.1\")]\n    - '*/cublasLt64*.dll'  # [win64 and cuda_compiler_version in (\"11.0\", \"11.1\")]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - patchelf >=0.12  # [linux]\n  run:\n    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - cudatoolkit >=11.1,<12                   # [cuda_compiler_version == \"11.1\"]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: LicenseRef-cuTENSOR-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: LICENSE\n  summary: Tensor Linear Algebra on NVIDIA GPUs\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - JeremyWangNVDA\n    - leofang\n    - jakirkham\n    - mtjrider\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cudatoolkit",
   "patchelf",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "linux-sysroot"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64"
   ]
  }
 },
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "patchelf >=0.12"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudatoolkit 10.2",
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 10.2",
    "cudatoolkit 11.0",
    "cudatoolkit 11.1",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64 2.17"
   ]
  }
 },
 "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.6.1.5-archive.zip",
 "version": "1.6.1.5",
 "win_64_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit"
   ],
   "missing_dso_whitelist": null,
   "number": "0",
   "run_exports": [
    "cutensor",
    "cutensor",
    "cutensor"
   ],
   "script": [
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11.0\\\\*static*",
    "copy lib\\\\11.0\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11.0\\\\*.lib %LIBRARY_LIB%\\\\",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11\\\\*static*",
    "copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\10.2\\\\*static*",
    "copy lib\\\\10.2\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\10.2\\\\*.lib %LIBRARY_LIB%\\\\"
   ],
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.6.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [],
   "run": [
    "cudatoolkit 11.0",
    "cudatoolkit >=11.1,<12",
    "cudatoolkit 10.2"
   ],
   "run_constrained": null
  },
  "source": {
   "sha256": "36eac790df7b2c7bb4578cb355f1df65d17965ffc9b4f6218d1cdb82f87ab866",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.6.1.5-archive.zip"
  },
  "test": {
   "files": null,
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 11.0",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 11.1",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 10.2"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git"
   ]
  }
 }
}