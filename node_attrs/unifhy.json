{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/911498351.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "unifhy",
 "hash_type": "sha256",
 "name": "unifhy",
 "new_version": "0.1.1",
 "new_version_attempts": {
  "0.1.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "unifhy"
  ]
 },
 "pinning_version": "2022.04.17.06.21.01",
 "raw_meta_yaml": "{% set name = \"unifhy\" %}\n{% set version = \"0.1.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/unifhy-org/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: a559044b85a5e8c66e2d93ad8885b32df318ebb659617184b83733999e24ee50\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - cf-python >=3.11.0\n    - cftime\n    - cfunits\n    - esmpy\n    - netcdf4 >=1.5\n    - numpy >=1.16\n    - pyproj >=3.0\n    - python >=3.7\n    - pyyaml >=5.3\n\ntest:\n  imports:\n    - unifhy\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://pypi.org/project/unifhy/\n  summary: Unified Framework for Hydrology\n  description: |\n    The Python package unifhy (Unified Framework for Hydrology) is a hydrological modelling framework \n    which combines interchangeable modelling components for the surface layer, subsurface, and open water \n    parts of the terrestrial water cycle. It is designed to foster collaborations between land surface, \n    hydrological, and groundwater modelling communities.\n  license: BSD-3-Clause\n  license_file: LICENCE.rst\n  doc_url: https://unifhy-org.github.io/unifhy/\n  dev_url: https://github.com/unifhy-org/unifhy\n\nextra:\n  recipe-maintainers:\n    - ThibHlln\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/unifhy-org/unifhy/archive/v0.1.1.tar.gz",
 "version": "0.1.1"
}