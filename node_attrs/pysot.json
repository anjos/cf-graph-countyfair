{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/236936808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248327736.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/294721511.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435556714.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/436223346.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/436861510.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/438143071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pysot",
 "hash_type": "sha256",
 "name": "pysot",
 "new_version": "0.3.3",
 "new_version_attempts": {
  "0.3.0": 1,
  "0.3.1": 1,
  "0.3.2": 1,
  "0.3.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pysot"
  ]
 },
 "pinning_version": "2020.06.16.21.09.39",
 "raw_meta_yaml": "{% set name = \"pySOT\" %}\n{% set version = \"0.3.3\" %}\n{% set sha256 = \"9214b7f47237dedf8b7004488c6fc1d8248ae304a4af596379e8f87d89a71f3d\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  # getting source from GitHub release instead of PyPI because it includes tests (and examples)\n  url: https://github.com/dme65/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script:\n    - {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n    # `numpy` is required to avoid the following error during `pip install`:\n    # RuntimeError: Setuptools downloading is disabled in conda build. Be sure to add all dependencies in the meta.yaml\n    - numpy\n  run:\n    - python\n    - scipy\n    - pydoe2\n    - poap >=0.1.25\n    - py_dempster_shafer\n    - six\n    - dill\n\ntest:\n  imports:\n    - pySOT\n  source_files:\n    - tests\n  requires:\n    - pytest  # even though it is declared as a dependency in setup.py, it is used only by tests\n    - scikit-learn\n  commands:\n    # test_controller.py was removed because it was failing with the message:\n    #     Cannot create a file when that file already exists: 'temp_checkpoint.pysot' -> 'checkpoint.pysot'\n    - pytest tests -k \"not test_checkpoint_serial\"\n\nabout:\n  home: https://github.com/dme65/pySOT\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.rst\n  summary: Surrogate Optimization Toolbox\n  description: |\n    pySOT is an asynchronous parallel optimization toolbox for global deterministic optimization problems. The main purpose of\n    the toolbox is for optimization of computationally expensive black-box objective functions with continuous and/or integer\n    variables where the number of evaluations is limited. If there are several processors available it may make sense to evaluate\n    the objective function using either asynchronous or synchronous parallel. pySOT uses the event-driven framework for\n    asynchronous optimization strategies POAP (https://github.com/dbindel/POAP) to provide this functionality.\n  doc_url: http://http://pysot.readthedocs.io/\n  dev_url: https://github.com/dme65/pySOT\n\nextra:\n  recipe-maintainers:\n    - tadeu\n    - jaimeambrus\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports": false,
 "url": "https://github.com/dme65/pySOT/archive/v0.3.3.tar.gz",
 "version": "0.3.3"
}