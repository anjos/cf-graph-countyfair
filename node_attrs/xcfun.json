{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/539096475.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552324644.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554002106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682996275.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774787900.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906109575.json"
   },
   "data": {
    "bot_rerun": 1650966572.9674883,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/917543380.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/919509499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/951187186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "xcfun",
 "hash_type": "sha256",
 "name": "xcfun",
 "new_version": "2.1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "xcfun"
  ]
 },
 "pinning_version": "2022.05.30.14.59.12",
 "raw_meta_yaml": "{% set name = \"xcfun\" %}\n{% set version = \"2.1.1\" %}\n{% set sha256 = \"8b602df74c7be83d501532565deafd1b7881946d94789122f24c309a669298ab\" %}\n{% set pyver = PY_VER.replace(\".\", \"\") %}\n{% set build = 3 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dftlibs/xcfun/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win and vc<14]\n  binary_relocation: true\n  run_exports:\n    - {{ pin_subpackage('xcfun', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cmake >=3.14\n    - {{ compiler('cxx') }}\n    - pybind11 =*=*py{{ pyver }}*\n    - ninja\n  host:\n    - python\n  run:\n    - numpy\n    - python  # [win]\n\ntest:\n  requires:\n    - numpy\n    - pytest\n  imports:\n    - xcfun\n  commands:\n    # Verify library\n    - test -L $PREFIX/lib/libxcfun$SHLIB_EXT                                # [not win]\n    - test -f $SP_DIR/xcfun/_xcfun*.so                                      # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\xcfun.dll exit 1                 # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\xcfun.lib exit 1                 # [win]\n    - if not exist %PREFIX%\\\\Lib\\\\site-packages\\\\xcfun\\\\_xcfun*.pyd exit 1  # [win]\n    # Inspect linkage\n    - ldd -v $PREFIX/lib/libxcfun$SHLIB_EXT                                 # [linux]\n    - otool -L $PREFIX/lib/libxcfun$SHLIB_EXT                               # [osx]\n    - ls -l $SP_DIR/xcfun                                                   # [not win]\n    - dir %PREFIX%\\\\Lib\\\\site-packages\\\\xcfun                               # [win]\n    - ldd -v $SP_DIR/xcfun/_xcfun*.so                                       # [linux]\n    - otool -L $SP_DIR/xcfun/_xcfun*.so                                     # [osx]\n    # Actually test\n    - python -m pytest --pyargs xcfun\n\noutputs:\n  - name: xcfun\n    files:\n      - include/XCFun              # [not win]\n      - lib/libxcfun*              # [not win]\n      - share/cmake/XCFun          # [not win]\n      - {{ SP_DIR }}/xcfun         # [not win]\n      - Library\\include\\XCFun      # [win]\n      - Library\\bin\\xcfun*         # [win]\n      - Library\\lib\\xcfun*         # [win]\n      - Library\\share\\cmake\\XCFun  # [win]\n      - Lib\\site-packages\\xcfun    # [win]\n\nabout:\n  home: https://github.com/dftlibs/xcfun\n  dev_url: https://github.com/dftlibs/xcfun\n  doc_url: https://xcfun.readthedocs.io\n  doc_source_url: https://github.com/dftlibs/xcfun/blob/master/doc/index.rst\n  license: MPL-2.0\n  license_url: https://opensource.org/licenses/MPL-2.0\n  license_file: LICENSE.md\n  license_family: MOZILLA\n  summary: \"Exchange-Correlation functionals with arbitrary order derivatives.\"\n\nextra:\n  recipe-maintainers:\n    - robertodr\n    - bast\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/dftlibs/xcfun/archive/v2.1.1.tar.gz",
 "version": "2.1.1"
}