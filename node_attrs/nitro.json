{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199628834.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215137717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "nitro",
 "hash_type": "sha256",
 "name": "nitro",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nitro"
  ]
 },
 "pinning_version": "2018.09.11",
 "raw_meta_yaml": "{% set name = \"nitro\" %}\n{% set version = \"2.7.dev6\" %}\n{% set sha256 = \"c3a514c9773f9ffd981e48fd5c4da2797118245b8d1a0e526553c363883450ca\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}.tar.gz\n  url: https://github.com/hobu/{{ name }}/archive/2.7dev-6.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  skip: True  # [win and vc<14]\n  number: 5\n\nrequirements:\n  build:\n    - cmake\n    - make\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n  run:\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libnitf-c.dylib    # [osx]\n    - test -f $PREFIX/lib/libnitf-cpp.dylib  # [osx]\n    - test -f $PREFIX/lib/libnitf-c.so       # [linux]\n    - test -f $PREFIX/lib/libnitf-cpp.so     # [linux]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\nitf-c.lib exit 1    # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\nitf-cpp.lib exit 1  # [win]\n\nabout:\n  home: https://github.com/hobu/nitro\n  summary: \"A GIT Mirror of Nitro NITF project\"\n  license: LGPL-3.0-or-later\n  license_file: COPYING\n\nextra:\n  recipe-maintainers:\n    - chambbj\n    - hobu\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://github.com/hobu/nitro/archive/2.7dev-6.tar.gz",
 "version": "2.7.dev6"
}