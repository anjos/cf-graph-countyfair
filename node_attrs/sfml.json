{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "sfml",
 "hash_type": "sha256",
 "name": "sfml",
 "new_version": "2.5.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "sfml"
  ]
 },
 "raw_meta_yaml": "{% set name = \"sfml\" %}\n{% set version = \"2.5.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/SFML/SFML/archive/{{ version }}.tar.gz\n  sha256: 438c91a917cc8aa19e82c6f59f8714da353c488584a007d401efac8368e1c785\n\nbuild:\n  number: 2\n  skip: True  # [win and vc<14]\n  run_exports:\n    - {{ pin_subpackage('sfml', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}        # [linux]\n    - {{ cdt('libxdamage') }}        # [linux]\n    - {{ cdt('libxxf86vm') }}        # [linux]\n    - {{ cdt('libudev-devel') }}     # [linux]\n    - xorg-libx11                    # [linux]\n    - xorg-libxrandr                 # [linux]\n    - libogg\n    - freetype\n    - libflac\n    - libvorbis\n    - openal-soft\n    - cmake\n    - ninja\n  host:\n    - xorg-libxfixes                 # [linux]\n    - xorg-libx11                    # [linux]\n    - xorg-libxrandr                 # [linux]\n    - libogg\n    - freetype\n    - libflac\n    - libvorbis\n    - openal-soft\n  run:\n    - xorg-libx11                    # [linux]\n    - xorg-libxrandr                 # [linux]\n    - libogg\n    - freetype\n    - libflac\n    - libvorbis\n    - openal-soft\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libsfml-system${SHLIB_EXT}                                # [unix]\n    - test -f $PREFIX/lib/libsfml-window${SHLIB_EXT}                                # [unix]\n    - test -f $PREFIX/lib/libsfml-network${SHLIB_EXT}                               # [unix]\n    - test -f $PREFIX/lib/libsfml-graphics${SHLIB_EXT}                              # [unix]\n    - test -f $PREFIX/lib/libsfml-audio${SHLIB_EXT}                                 # [unix]\n    - test -f ${PREFIX}/lib/cmake/SFML/SFMLConfig.cmake                             # [unix]\n    - test -d ${PREFIX}/include/SFML/Audio                                          # [unix]\n    - test -d ${PREFIX}/include/SFML/Graphics                                       # [unix]\n    - test -d ${PREFIX}/include/SFML/Network                                        # [unix]\n    - test -d ${PREFIX}/include/SFML/System                                         # [unix]\n    - test -d ${PREFIX}/include/SFML/Window                                         # [unix]\n    - if not exist %LIBRARY_LIB%\\\\sfml-system.lib exit 1                            # [win]\n    - if not exist %LIBRARY_LIB%\\\\sfml-main.lib exit 1                              # [win]\n    - if not exist %LIBRARY_LIB%\\\\sfml-window.lib exit 1                            # [win]\n    - if not exist %LIBRARY_LIB%\\\\sfml-network.lib exit 1                           # [win]\n    - if not exist %LIBRARY_LIB%\\\\sfml-graphics.lib exit 1                          # [win]\n    - if not exist %LIBRARY_LIB%\\\\sfml-audio.lib exit 1                             # [win]\n    - if not exist %LIBRARY_BIN%\\\\sfml-system-2.dll exit 1                          # [win]\n    - if not exist %LIBRARY_BIN%\\\\sfml-window-2.dll exit 1                          # [win]\n    - if not exist %LIBRARY_BIN%\\\\sfml-network-2.dll exit 1                         # [win]\n    - if not exist %LIBRARY_BIN%\\\\sfml-graphics-2.dll exit 1                        # [win]\n    - if not exist %LIBRARY_BIN%\\\\sfml-audio-2.dll exit 1                           # [win]\n    - if exist %LIBRARY_LIB%\\\\cmake\\\\SFML\\\\SFMLConfig.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_INC%\\\\SFML\\\\Audio (exit 0) else (exit 1)                    # [win]\n    - if exist %LIBRARY_INC%\\\\SFML\\\\Graphics (exit 0) else (exit 1)                 # [win]\n    - if exist %LIBRARY_INC%\\\\SFML\\\\Network (exit 0) else (exit 1)                  # [win]\n    - if exist %LIBRARY_INC%\\\\SFML\\\\System (exit 0) else (exit 1)                   # [win]\n    - if exist %LIBRARY_INC%\\\\SFML\\\\Window (exit 0) else (exit 1)                   # [win]\n\nabout:\n  home: https://github.com/SFML/SFML\n  license: zlib/libpng\n  license_file: license.md\n  summary: 'Simple and Fast Multimedia Library'\n  description: |\n    SFML is a simple, fast, cross-platform and object-oriented multimedia\n    API. It  provides access to windowing, graphics, audio and network. It\n    is written in C++,  and has bindings for various languages such as C,\n    .Net, Ruby, Python.\n  doc_url: https://www.sfml-dev.org\n  dev_url: https://github.com/SFML/SFML\n\nextra:\n  recipe-maintainers:\n    - martinRenou\n",
 "strong_exports": false,
 "url": "https://github.com/SFML/SFML/archive/2.5.1.tar.gz",
 "version": "2.5.1"
}