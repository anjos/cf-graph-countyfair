{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/546202079.json"
   },
   "data": {
    "bot_rerun": 1609242274.764256,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/582878960.json"
   },
   "data": {
    "bot_rerun": 1617028650.7733576,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/731990005.json"
   },
   "data": {
    "bot_rerun": 1631433358.8918684,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/767347494.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/805234112.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "atom-ml",
 "hash_type": "sha256",
 "name": "atom-ml",
 "new_version": "4.14.1",
 "new_version_attempts": {
  "4.10.0": 1,
  "4.2.0": 1,
  "4.3.0": 1,
  "4.7.3": 1,
  "4.9.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "atom-ml"
  ]
 },
 "pinning_version": "2021.12.16.23.38.36",
 "raw_meta_yaml": "{% set name = \"atom-ml\" %}\n{% set version = \"4.14.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7c639b7228bc5ca3c14a2cf9ecc622947b345639d0a3119bc444cde4b04a9e30\n\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - numpy\n    - scipy\n    - pandas\n    - pandas-profiling\n    - explainerdashboard\n    - dash-table\n    - mlflow\n    - dill\n    - tqdm\n    - joblib\n    - typeguard\n    - scikit-learn\n    - scikit-optimize\n    - nltk\n    - tpot\n    - category_encoders\n    - imbalanced-learn\n    - featuretools\n    - gplearn\n    - zoofs\n    - matplotlib-base\n    - seaborn\n    - shap\n    - wordcloud\n    - schemdraw\n\ntest:\n  requires:\n    - python >=3.7\n    - pip\n    - pytest\n    - pytest-cov\n    - tensorflow\n    - numpy\n    - scipy\n    - pandas\n    - pandas-profiling\n    - explainerdashboard\n    - dash-table\n    - mlflow\n    - dill\n    - tqdm\n    - joblib\n    - typeguard\n    - scikit-learn\n    - scikit-optimize\n    - nltk\n    - tpot\n    - category_encoders\n    - imbalanced-learn\n    - featuretools\n    - gplearn\n    - zoofs\n    - matplotlib-base\n    - seaborn\n    - shap\n    - wordcloud\n    - schemdraw\n    - py-xgboost  # [not win]\n    - lightgbm\n    - catboost\n  source_files:\n    - tests\n  imports:\n    - atom\n  commands:\n    - pytest\n\nabout:\n  home: http://github.com/tvdboom/ATOM\n  license: MIT\n  license_file: LICENSE\n  summary: A Python package for fast exploration of machine learning pipelines\n  description: |\n    During the exploration phase of a machine learning project, a data\n    scientist tries to find the optimal pipeline for his specific use case.\n    This usually involves applying standard data cleaning steps, creating\n    or selecting useful features, trying out different models, etc. Testing\n    multiple pipelines requires many lines of code, and writing it all in\n    the same notebook often makes it long and cluttered. On the other hand,\n    using multiple notebooks makes it harder to compare the results and to\n    keep an overview. On top of that, refactoring the code for every test\n    can be time-consuming. How many times have you conducted the same action\n    to pre-process a raw dataset? How many times have you copy-and-pasted\n    code from an old repository to re-use it in a new use case?\n    ATOM is here to help solve these common issues. The package acts as\n    a wrapper of the whole machine learning pipeline, helping the data\n    scientist to rapidly find a good model for his problem. Avoid\n    endless imports and documentation lookups. Avoid rewriting the same\n    code over and over again. With just a few lines of code, it's now\n    possible to perform basic data cleaning steps, select relevant\n    features and compare the performance of multiple models on a given\n    dataset, providing quick insights on which pipeline performs best\n    for the task at hand.\n  doc_url: https://tvdboom.github.io/ATOM/\n  dev_url: http://github.com/tvdboom/ATOM/tree/development\n\nextra:\n  recipe-maintainers:\n    - tvdboom\n",
 "smithy_version": "3.16.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/atom-ml/atom-ml-4.14.1.tar.gz",
 "version": "4.14.1"
}