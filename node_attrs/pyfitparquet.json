{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/581276091.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp300"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/581276536.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/625383724.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/657445277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp401"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/725098314.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp500"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/777243122.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784233666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp600"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/850016717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp700"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/975055022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp800"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1023644960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp900"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyfitparquet",
 "hash_type": "sha256",
 "name": "pyfitparquet",
 "new_version": "1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyfitparquet"
  ]
 },
 "pinning_version": "2022.08.11.00.12.17",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set pyfit_version = \"1.0\" %}\n{% set fitsdk_version = \"FitCppSDK_21.47.00\" %}\n\n\npackage:\n  name: pyfitparquet\n  version: {{ pyfit_version }}\n\nsource:\n  url: https://github.com/databike-io/pyfitparquet/releases/download/v{{ pyfit_version }}/pyfitparquet-{{ pyfit_version }}.tar.gz\n  sha256: 9050cfafed9cb2ae5cb30efc33dc7b6f7ed74fa18d68b8e209e4e566f9672690\n\nbuild:\n  number: 7\n  skip: true  # [win]\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - python {{ python }}\n    - cmake\n    - make   # [unix]\n  host:\n    - python {{ python }}\n    - boost-cpp {{ boost_cpp }}\n    - arrow-cpp\n    - pybind11\n    - pip\n  run:\n    - python {{ python }}\n    - boost-cpp\n    - boost\n    - pyyaml\n    - defusedxml\n    - pandas\n    - pyarrow\n\ntest:\n  source_files:\n    - test\n\nabout:\n  home: https://github.com/databike-io/pyfitparquet\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: \n    - LICENSE\n    - pyfitparquet/{{ fitsdk_version }}/GARMIN_FIT_SDK_LICENSE\n  summary: 'ETL support of Garmin FIT/TCX files to Apache Parquet'\n  description: |\n    The pyfitparquet package provides support for Garmin [FIT](https://developer.garmin.com/fit/overview/) and \n    [TCX](https://en.wikipedia.org/wiki/Training_Center_XML) file ETL into [Apache Parquet](https://parquet.apache.org/) \n    columnar format. It leverages the fast Garmin SDK CPP decoding interface for FIT files and pure Python for TCX files.\n  doc_url: https://databike-io.github.io/pyfitparquet/\n  dev_url: https://github.com/databike-io/pyfitparquet\n\nextra:\n  recipe-maintainers:\n    - ajdonich\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/databike-io/pyfitparquet/releases/download/v1.0/pyfitparquet-1.0.tar.gz",
 "version": "1.0"
}