{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/317320960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/320463109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/388054278.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410744708.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413092049.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/433814737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501006063.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539653761.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/659406051.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679174394.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "crystals",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "crystals provides data structure to manipulate crystal structures, including parsing\ncrystal files, determining symmetries, and accessing atomic information.\n",
   "dev_url": "https://github.com/LaurentRDC/crystals",
   "doc_url": "https://crystals.readthedocs.io/",
   "home": "https://crystals.readthedocs.io",
   "license": "GPL-3.0-only",
   "license_family": "GPL3",
   "license_file": "LICENSE",
   "summary": "Data structures for crystallography"
  },
  "build": {
   "entry_points": [
    "crystals = crystals.__main__:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "LaurentRDC"
   ]
  },
  "package": {
   "name": "crystals",
   "version": "1.3.2"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "numpy >=1.17, <2",
    "spglib >=1.15, <2",
    "pycifrw >=4.4.1, <5",
    "requests >=2, <3"
   ]
  },
  "source": {
   "fn": "crystals-1.3.2.tar.gz",
   "sha256": "377d15b76373a4a0542750d72ddd3a1cea9cde37c0a683d8b48215090d42b430",
   "url": "https://pypi.io/packages/source/c/crystals/crystals-1.3.2.tar.gz"
  },
  "test": {
   "commands": [
    "crystals --help",
    "pytest --pyargs crystals"
   ],
   "imports": [
    "crystals"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pycifrw",
    "python",
    "requests",
    "spglib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "crystals provides data structure to manipulate crystal structures, including parsing\ncrystal files, determining symmetries, and accessing atomic information.\n",
   "dev_url": "https://github.com/LaurentRDC/crystals",
   "doc_url": "https://crystals.readthedocs.io/",
   "home": "https://crystals.readthedocs.io",
   "license": "GPL-3.0-only",
   "license_family": "GPL3",
   "license_file": "LICENSE",
   "summary": "Data structures for crystallography"
  },
  "build": {
   "entry_points": [
    "crystals = crystals.__main__:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "LaurentRDC"
   ]
  },
  "package": {
   "name": "crystals",
   "version": "1.3.2"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "numpy >=1.17, <2",
    "spglib >=1.15, <2",
    "pycifrw >=4.4.1, <5",
    "requests >=2, <3"
   ]
  },
  "source": {
   "fn": "crystals-1.3.2.tar.gz",
   "sha256": "377d15b76373a4a0542750d72ddd3a1cea9cde37c0a683d8b48215090d42b430",
   "url": "https://pypi.io/packages/source/c/crystals/crystals-1.3.2.tar.gz"
  },
  "test": {
   "commands": [
    "crystals --help",
    "pytest --pyargs crystals"
   ],
   "imports": [
    "crystals"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "name": "crystals",
 "new_version": "1.4.0",
 "new_version_attempts": {
  "1.1.0": 1,
  "1.1.1": 1,
  "1.1.2": 1,
  "1.2.0": 1,
  "1.2.2": 1,
  "1.3.1": 1,
  "1.3.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "crystals"
  ]
 },
 "pinning_version": "2021.06.27.12.20.29",
 "raw_meta_yaml": "{% set version = \"1.3.2\" %}\n\npackage:\n  name: crystals\n  version: {{ version }}\n\nsource:\n  fn: crystals-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/c/crystals/crystals-{{ version }}.tar.gz\n  sha256: 377d15b76373a4a0542750d72ddd3a1cea9cde37c0a683d8b48215090d42b430\n\nbuild:\n  noarch: python\n  number: 0\n  entry_points:\n    - crystals = crystals.__main__:main\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.7 # requires pathlib\n    - pip\n  run:\n    - python >=3.7\n    - numpy >=1.17, <2\n    - spglib >=1.15, <2\n    - pycifrw >=4.4.1, <5\n    - requests >=2, <3\n\ntest:\n  imports:\n    - crystals\n  commands:\n    - crystals --help\n    # crystals does not use pytest to run tests, it uses unittest.\n    # However, the discovery of tests by unittest is lacking when packages are\n    # installed. Since pytest supports running unittest tests, we use it instead.\n    - pytest --pyargs crystals\n  requires:\n    - pytest\n\nabout:\n  home: https://crystals.readthedocs.io\n  license: GPL-3.0-only\n  license_family: GPL3\n  license_file: LICENSE\n  summary: Data structures for crystallography\n  description: |\n    crystals provides data structure to manipulate crystal structures, including parsing \n    crystal files, determining symmetries, and accessing atomic information.\n  doc_url: https://crystals.readthedocs.io/\n  dev_url: https://github.com/LaurentRDC/crystals\n\nextra:\n  recipe-maintainers:\n    - LaurentRDC\n",
 "req": {
  "__set__": true,
  "elements": [
   "numpy",
   "pip",
   "pycifrw",
   "python",
   "requests",
   "spglib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pycifrw",
    "python",
    "requests",
    "spglib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy >=1.17, <2",
    "pycifrw >=4.4.1, <5",
    "python >=3.7",
    "requests >=2, <3",
    "spglib >=1.15, <2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/crystals/crystals-1.3.2.tar.gz",
 "version": "1.3.2"
}