{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/443787111.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/537669019.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "deon",
 "hash_type": "sha256",
 "name": "deon",
 "new_version": "0.3.0",
 "new_version_attempts": {
  "0.2.2": 1,
  "0.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "deon"
  ]
 },
 "pinning_version": "2020.12.11.09.47.37",
 "raw_meta_yaml": "{% set name = \"deon\" %}\n{% set version = \"0.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: ce4a65a3b16a691995780fb586df49c6e48d0ade38d1c9e14a8ec7ac0163412a\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - beautifulsoup4 >=4.6.1\n    - click >=6.7\n    - pyyaml >=3.13\n\ntest:\n  imports:\n    - deon\n  commands:\n    - deon --help\n\nabout:\n  home: http://deon.drivendata.org/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: A command line tool to easily add an ethics checklist to your data science projects.\n  description: |\n    deon is a command line tool that allows you to easily add an ethics\n    checklist to your data science projects. The conversation about ethics in\n    data science, machine learning, and AI is increasingly important. The goal\n    of deon is to push that conversation forward and provide concrete,\n    actionable reminders to the developers that have influence over how data\n    science gets done.\n  doc_url: http://deon.drivendata.org/\n  dev_url: https://github.com/drivendataorg/deon\n\nextra:\n  recipe-maintainers:\n    - ejm714\n    - jayqi\n    - pjbull\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/d/deon/deon-0.3.0.tar.gz",
 "version": "0.3.0"
}