{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199895041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/368793514.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "reg",
 "hash_type": "sha256",
 "name": "reg",
 "new_version": "0.12",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "reg"
  ]
 },
 "pinning_version": "2020.01.27",
 "raw_meta_yaml": "{% set name = \"reg\" %}\n{% set version = \"0.12\" %}\n{% set sha256 = \"e614db46d661d3967657b365fc82aba5f4cd7540d8d81a5fc77dc5adfb5e79f4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.4\n    - setuptools\n\n  run:\n    - python >=3.4\n    - repoze.lru\n\ntest:\n  imports:\n    - reg\n\nabout:\n  home: http://reg.readthedocs.io\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'Clever dispatch'\n  description: |\n    Reg is a Python library that provides generic function support to\n    Python. It help you build powerful registration and configuration APIs for\n    your application, library or framework.\n  doc_url: http://reg.readthedocs.org/\n  dev_url: https://github.com/morepath/reg\n\nextra:\n  recipe-maintainers:\n    - stuertz\n",
 "smithy_version": "3.6.6",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/r/reg/reg-0.12.tar.gz",
 "version": "0.12"
}