{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/740973796.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/740993267.json"
   },
   "data": {
    "bot_rerun": 1634573156.3090382,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/760670724.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/842298498.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920153071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/967837646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1021355723.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "kaolin",
 "hash_type": "sha256",
 "name": "kaolin",
 "new_version": "0.12.0",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.11.0": 1,
  "0.12.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kaolin"
  ]
 },
 "pinning_version": "2022.08.09.07.02.39",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"kaolin\" %}\n{% set version = \"0.9.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/NVIDIAGameWorks/kaolin/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 7fa6b794d83fca9b4a1eb93b13ead60767b42d5a8a25162ee73be3cead1a8c8c\n  patches:\n    - 0001-loosen-version-pins.patch\n\nbuild:\n  number: 2\n  skip: true  # [cuda_compiler_version == \"None\" or cuda_compiler_version == \"10.2\"]\n  skip: true  # [win]\nrequirements:\n  build:\n    - {{ compiler('cuda') }}\n    - {{ compiler('cxx') }}\n  host:\n    - pip\n    - python\n    - cython\n    - numpy\n    - pytorch-gpu\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - pillow\n    - tqdm\n    - pytorch-gpu\n   \ntest:\n  imports:\n    - kaolin\n\nabout:\n  home: https://developer.nvidia.com/nvidia-kaolin \n  license: Apache-2.0 \n  license_family: APACHE\n  license_file: LICENSE\n  summary: 'A Pytorch Library for Accelerating 3D Deep Learning Research '\n  description: |\n      NVIDIA Kaolin library provides a PyTorch API for working with a variety\n      of 3D representations and includes a growing collection of\n      GPU-optimized operations such as modular differentiable rendering,\n      fast conversions between representations, data loading,\n      3D checkpoints and more.\n  dev_url: https://github.com/NVIDIAGameWorks/kaolin\n  doc_url: https://kaolin.readthedocs.io/en/latest/\n\nextra:\n  recipe-maintainers:\n    - JennaLipscomb\n    - mxr-conda\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/NVIDIAGameWorks/kaolin/archive/refs/tags/v0.9.1.tar.gz",
 "version": "0.9.1"
}