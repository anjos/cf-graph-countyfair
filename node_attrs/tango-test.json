{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/852172103.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/994407932.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "tango-test",
 "hash_type": "sha256",
 "name": "tango-test",
 "new_version": "3.5",
 "new_version_attempts": {
  "3.4": 1,
  "3.5": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tango-test"
  ]
 },
 "pinning_version": "2022.07.12.02.03.03",
 "raw_meta_yaml": "{% set name = \"tango-test\" %}\n{% set version = \"3.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/tango-controls/TangoTest/-/archive/{{ version }}/TangoTest-{{ version }}.tar.gz\n  sha256: 0d609d5fca6a98b1621179ff30f2a52831d25a48ffcb10f3b6a30c71b1192a2b\n\nbuild:\n  number: 0\n  skip: true  # [osx]\n\nrequirements:\n  build:\n    - cmake\n    - make                    # [unix]\n    - {{ compiler('cxx') }}\n    - libtool                 # [unix]\n    - pkg-config              # [unix]\n  host:\n    - cppzmq\n    - cpptango\n    - omniorb\n\ntest:\n  commands:\n    # TangoTest --help returns 255, so grep the stderr for test\n    - TangoTest --help 2>&1 | grep usage         # [unix]\n    - TangoTest.exe --help 2>&1 | findstr usage  # [win]\n\nabout:\n  home: https://www.tango-controls.org\n  license: GPL-3.0-or-later\n  license_file: LICENSE\n  summary: TangoTest device server\n  description: |\n    This is the Tango-Controls TangoTest device server.\n    A famous TANGO device server developed for testing.\n    Tango-Controls is a software toolkit for building control systems.\n  dev_url: https://gitlab.com/tango-controls/TangoTest\n  doc_url: https://tango-controls.readthedocs.io/en/latest/tutorials-and-howtos/how-tos/how-to-try-tango.html#play-with-tango-controls\n  doc_source_url: https://gitlab.com/tango-controls/TangoTest/tree/main/doc_html\n\nextra:\n  recipe-maintainers:\n    - beenje\n    - bourtemb\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://gitlab.com/tango-controls/TangoTest/-/archive/3.5/TangoTest-3.5.tar.gz",
 "version": "3.5"
}