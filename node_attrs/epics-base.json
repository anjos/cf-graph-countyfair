{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/335073416.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.15.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/581690171.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939144924.json"
   },
   "data": {
    "bot_rerun": 1653517866.839087,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/947846084.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "epics-base",
 "hash_type": "sha256",
 "name": "epics-base",
 "new_version": "7.0.5",
 "new_version_attempts": {
  "7.0.5": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "epics-base",
   "epics-base-static-libs"
  ]
 },
 "pinning_version": "2022.05.25.19.48.06",
 "raw_meta_yaml": "# Always use 4 numbers in the version to match run_exports!\n# Add .0 if official version is on 3 numbers\n{% set version = \"7.0.6.1\" %}\n\npackage:\n  name: epics-base\n  version: {{ version }}\n\nsource:\n  # Don't use {{ version }} in the url as it can be on 3 numbers only\n  url: https://epics.anl.gov/download/base/base-7.0.6.1.tar.gz\n  sha256: 8ff318f25e2b70df466f933636a2da85e4b0c841504b9e89857652a4786b6387\n  patches:\n    - CONFIG_COMMON_install_permissions.patch\n    - force_readline_commandline_library.patch  # [linux]\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('epics-base', max_pin='x.x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make\n    - perl\n    - m2-patch      # [win]\n    # To run pre-build.py\n    - python >=3.6  # [win]\n  host:\n    - readline      # [unix]\n  run:\n    - perl\n\ntest:\n  source_files:\n    - modules/pva2pva/loopback.conf\n  commands:\n    - caget -h\n    - cainfo -h\n    - caput -h\n    - camonitor -h\n    - pvget -h\n    - pvput -h\n    - pvinfo -h\n    - pvlist -h\n    - softIoc -h\n    - softIocPVA -h\n    # p2p -h exits with 1... Use -C flag to test it instead\n    - p2p -C modules/pva2pva/loopback.conf\n    - test -f ${EPICS_BASE}/bin/${EPICS_HOST_ARCH}/caget                # [not win]\n    - test -f ${EPICS_BASE}/include/epicsVersion.h                      # [not win]\n    - test -f ${EPICS_BASE}/lib/${EPICS_HOST_ARCH}/libCom${SHLIB_EXT}   # [not win]\n    - test -f ${EPICS_BASE}/lib/${EPICS_HOST_ARCH}/libca${SHLIB_EXT}    # [not win]\n    - if not exist %EPICS_BASE%\\bin\\%EPICS_HOST_ARCH%\\caget.exe exit 1  # [win]\n    - if not exist %EPICS_BASE%\\bin\\%EPICS_HOST_ARCH%\\Com.dll exit 1    # [win]\n    - if not exist %EPICS_BASE%\\bin\\%EPICS_HOST_ARCH%\\ca.dll exit 1     # [win]\n    - if not exist %EPICS_BASE%\\include\\epicsVersion.h exit 1           # [win]\n    - if not exist %EPICS_BASE%\\lib\\%EPICS_HOST_ARCH%\\ca.lib exit 1     # [win]\n    - if not exist %EPICS_BASE%\\lib\\%EPICS_HOST_ARCH%\\Com.lib exit 1    # [win]\n\noutputs:\n  - name: epics-base\n    files:\n      - etc\n      - epics/bin\n      - epics/cfg\n      - epics/configure\n      - epics/db\n      - epics/dbd\n      - epics/html\n      - epics/include\n      # windows .dll are under bin\n      - epics/lib/*/*.lib    # [win]\n      - epics/lib/*/*.dylib  # [osx]\n      - epics/lib/*/*.so*    # [linux]\n      - epics/lib/perl\n      - epics/lib/pkgconfig\n      - epics/templates\n\n  - name: epics-base-static-libs                                 # [not win]\n    requirements:                                                # [not win]\n      run:                                                       # [not win]\n        - {{ pin_subpackage('epics-base', exact=True) }}         # [not win]\n    files:                                                       # [not win]\n      - epics/lib/*/*.a                                          # [not win]\n    test:                                                        # [not win]\n      commands:                                                  # [not win]\n        - test -f ${EPICS_BASE}/lib/${EPICS_HOST_ARCH}/libca.a   # [not win]\n        - test -f ${EPICS_BASE}/lib/${EPICS_HOST_ARCH}/libCom.a  # [not win]\n\nabout:\n  home: http://www.aps.anl.gov/epics\n  license: EPICS\n  license_file: LICENSE\n  summary: EPICS Base Library\n\nextra:\n  recipe-maintainers:\n    - beenje\n    - mrakitin\n    - tacaswell\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://epics.anl.gov/download/base/base-7.0.6.1.tar.gz",
 "version": "7.0.6.1"
}