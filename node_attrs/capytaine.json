{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/265312053.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308292362.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/320795697.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339461903.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374842843.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/408547419.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/408622070.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502899144.json"
   },
   "data": {
    "bot_rerun": 1604342011.5539114,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505123865.json"
   },
   "data": {
    "bot_rerun": 1604334795.4344308,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514398227.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/517095784.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560393066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615478946.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705900347.json"
   },
   "data": {
    "bot_rerun": 1633678740.512733,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753408065.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753854902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776543727.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/990373692.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1009129982.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "capytaine",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "1.4.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray"
   ]
  },
  "source": {
   "sha256": "226bddae0a9443a0caeb517c062ee8a8e96189e47dff8ac7cd0edcdd4440ecc3",
   "url": "https://github.com/capytaine/capytaine/archive/v1.4.1.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "1.4.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray"
   ]
  },
  "source": {
   "sha256": "226bddae0a9443a0caeb517c062ee8a8e96189e47dff8ac7cd0edcdd4440ecc3",
   "url": "https://github.com/capytaine/capytaine/archive/v1.4.1.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "name": "capytaine",
 "new_version": "1.4.1.post1",
 "new_version_attempts": {
  "1.2": 1,
  "1.2.1": 1,
  "1.3": 1,
  "1.4": 1,
  "1.4.1": 4,
  "1.4.1.post1": 30
 },
 "new_version_errors": {
  "1.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "1.4.1.post1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.4.1.post1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/capytaine/capytaine/archive/v{{ version }}.post1.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "1.4.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "llvm-openmp"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "llvm-openmp"
   ]
  },
  "source": {
   "sha256": "226bddae0a9443a0caeb517c062ee8a8e96189e47dff8ac7cd0edcdd4440ecc3",
   "url": "https://github.com/capytaine/capytaine/archive/v1.4.1.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "numpy",
    "pandas",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "capytaine"
  ]
 },
 "pinning_version": "2022.07.26.20.23.31",
 "raw_meta_yaml": "{% set version = \"1.4.1\" %}\n{% set hash = \"226bddae0a9443a0caeb517c062ee8a8e96189e47dff8ac7cd0edcdd4440ecc3\" %}\n\npackage:\n  name: capytaine\n  version: {{ version }}\n\nsource:\n  url: https://github.com/capytaine/capytaine/archive/v{{ version }}.post1.tar.gz\n  sha256: {{ hash }}\n\nbuild:\n  skip: true  # [py<36]\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - capytaine = capytaine.ui.cli:main\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - llvm-openmp  # [osx]\n  host:\n    - python\n    - pip\n    - setuptools\n    - numpy\n    - llvm-openmp  # [osx]\n    - m2w64-toolchain  # [win]\n    - libpython  # [win]\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - pandas\n    - xarray\n    - llvm-openmp  # [osx]\n\ntest:\n  imports:\n    - capytaine\n  requires:\n    - pytest\n    - hypothesis\n    - pip\n  source_files:\n    - pytest/*.py\n    - pytest/**/*\n  commands:\n    - pytest\n    - capytaine --help\n\nabout:\n  home: https://github.com/capytaine/capytaine\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A Python-based linear potential flow solver based on Nemoh\n\nextra:\n  recipe-maintainers:\n    - mancellin\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fortran_compiler_stub",
   "libpython",
   "llvm-openmp",
   "m2w64-toolchain",
   "m2w64_c_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "numpy",
   "pandas",
   "pip",
   "python",
   "scipy",
   "setuptools",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "libpython",
    "llvm-openmp",
    "m2w64-toolchain",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "numpy",
    "openmp",
    "pandas",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pip",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libpython",
    "llvm-openmp",
    "m2w64-toolchain",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "numpy",
    "pandas",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/capytaine/capytaine/archive/v1.4.1.post1.tar.gz",
 "version": "1.4.1",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main",
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin",
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "1.4.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "m2w64-toolchain",
    "libpython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray"
   ]
  },
  "source": {
   "sha256": "226bddae0a9443a0caeb517c062ee8a8e96189e47dff8ac7cd0edcdd4440ecc3",
   "url": "https://github.com/capytaine/capytaine/archive/v1.4.1.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help",
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine",
    "capytaine"
   ],
   "requires": [
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip",
    "pytest",
    "hypothesis",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*",
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libpython",
    "m2w64-toolchain",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "pip",
    "pytest"
   ]
  }
 }
}