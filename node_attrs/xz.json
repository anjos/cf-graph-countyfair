{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/215022277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248383360.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400016962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/466343049.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "xz",
 "hash_type": "sha256",
 "name": "xz",
 "new_version": false,
 "new_version_attempts": {
  "5.2.5": 1
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "xz",
   "xz-static"
  ]
 },
 "pinning_version": "2020.08.10.21.36.31",
 "raw_meta_yaml": "{% set version = \"5.2.5\" %}\n\npackage:\n  name: xz\n  version: {{ version }}\n\nsource:\n  url: http://downloads.sourceforge.net/project/lzmautils/xz-{{ version }}.tar.bz2\n  sha256: 5117f930900b341493827d63aa910ff5e011e0b994197c3b71c08a20228a42df\n  patches:\n    - 0001-Add-vs2008-support-via-cmake.patch\n    - 0002-Add-gettimeofday-for-VS2008.patch\n\nbuild:\n  number: 1\n  run_exports:\n    # XZ's track record of backcompat is very good.  Keep default pins (next major version)\n    #    https://abi-laboratory.pro/tracker/timeline/xz/\n    - {{ pin_subpackage('xz') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - c99-to-c89  # [win and vc<14]\n    - cmake  # [win]\n    - ninja  # [win]\n    - make  # [not win]\n    - automake  # [not win]\n    - libtool  # [not win]\n  host:\n    - msinttypes  # [win and vc<14]\n\noutputs:\n  - name: xz\n    script: install.sh   # [unix]\n    script: install.bat  # [win]\n    test:\n      commands:\n        - xz --help  # [not win]\n        - unxz --help  # [not win]\n        - lzma --help  # [not win]\n        - xz.exe --help  # [win]\n        - unxz.exe --help  # [win]\n        - if not exist %LIBRARY_PREFIX%\\bin\\liblzma.dll exit 1  # [win]\n        - if not exist %LIBRARY_PREFIX%\\lib\\liblzma.lib exit 1  # [win]\n        - if exist %LIBRARY_PREFIX%\\lib\\liblzma_static.lib exit 1  # [win]\n        - if not exist %LIBRARY_PREFIX%\\include\\lzma.h exit 1  # [win]\n        - test -f ${PREFIX}/lib/liblzma${SHLIB_EXT}  # [unix]\n        - test ! -f ${PREFIX}/lib/liblzma.a          # [unix]\n        - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n        - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n  - name: xz-static\n    script: install.sh  # [unix]\n    script: install.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - c99-to-c89  # [win and vc<14]\n        - cmake  # [win]\n        - ninja  # [win]\n        - make  # [not win]\n        - automake  # [not win]\n      host:\n        - msinttypes  # [win and vc<14]\n        - {{ pin_subpackage('xz', exact=True) }}\n      run:\n        - {{ pin_subpackage('xz', exact=True) }}\n    test:\n      commands:\n        - if not exist %LIBRARY_PREFIX%\\lib\\liblzma_static.lib exit 1  # [win]\n        - test -f ${PREFIX}/lib/liblzma.a          # [unix]\n\nabout:\n  home: http://tukaani.org/xz/\n  license: LGPL-2.1 and GPL-2.0\n  license_file: COPYING\n  summary: Data compression software with high compression ratio\n  description: |\n    XZ Utils is free general-purpose data compression software with a high\n    compression ratio. XZ Utils were written for POSIX-like systems, but also\n    work on some not-so-POSIX systems.\n  doc_url: http://tukaani.org/xz/\n  doc_source_url: https://github.com/xz-mirror/xz/blob/master/README\n  dev_url: http://git.tukaani.org/\n\nextra:\n  recipe-maintainers:\n    - msarahan\n    - ocefpaf\n    - mingwandroid\n    - nehaljwani\n    - scopatz\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.8",
 "strong_exports": false,
 "url": "http://downloads.sourceforge.net/project/lzmautils/xz-5.2.5.tar.bz2",
 "version": "5.2.5"
}