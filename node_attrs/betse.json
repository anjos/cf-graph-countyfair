{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220969421.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/237051879.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269918836.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/301795053.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "graphviz-2.40"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321554754.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/346072752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375768318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/959892825.json"
   },
   "data": {
    "bot_rerun": 1654595086.5691175,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "betse",
 "hash_type": "sha256",
 "name": "betse",
 "new_version": "1.2.1",
 "new_version_attempts": {
  "1.2.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "betse"
  ]
 },
 "pinning_version": "2022.06.06.01.05.55",
 "raw_meta_yaml": "{% set name = \"betse\" %}\n{% set version = \"1.2.1\" %}\n{% set sha256 = \"a546787eb4782157e334729a899d5a687a8e0754a13170bef91a1ef393f58b88\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  entry_points:\n    - betse = betse.__main__:main\n  script: \"{{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed --no-cache-dir -vvv\"\n  noarch: python\n\nrequirements:\n  build:\n    - python >=3.8\n    - setuptools >=38.2.0\n    - pip\n  run:\n    - python >=3.8\n    - setuptools >=38.2.0\n    - beartype >=0.10.0\n    - dill >=0.2.3\n    - distro >=1.0.4\n    - graphviz >=2.38.0\n    - matplotlib-base >=3.3.4\n    - networkx >=2.0\n    - numpy >=1.22.0\n    - pillow >=5.3.0\n    - pydot >=1.0.28\n    - ruamel.yaml >=0.15.24\n    - scipy >=0.12.0\n    - six >=1.5.2\n    - ffmpeg\n    - pyside2\n\ntest:\n  imports:\n    - betse\n    - betse.cli\n    - betse.lib\n    - betse.util\n  commands:\n    - betse --matplotlib-backend=agg\n    - betse --matplotlib-backend=agg --help\n    - betse --matplotlib-backend=agg --version\n    - betse --matplotlib-backend=agg info\n\nabout:\n  home: https://github.com/betsee/betse\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: BETSE, the BioElectric Tissue Simulation Engine\n  description: |\n    BETSE (BioElectric Tissue Simulation Engine) is an open-source\n    cross-platform finite volume simulator for 2D computational multiphysics\n    problems in the life sciences - including electrodiffusion,\n    electro-osmosis, galvanotaxis, voltage-gated ion channels, gene regulatory\n    networks, and biochemical reaction networks (e.g., metabolism). BETSE is\n    portably implemented in pure Python 3, continuously stress-tested with\n    GitHub Actions + pytest + tox, and permissively distributed under the BSD\n    2-clause license.\n  doc_url: https://www.dropbox.com/s/n8qfms2oks9cvv2/BETSE04_Documentation_Dec1st2016.pdf?dl=0\n  dev_url: https://github.com/betsee/betse\n\nextra:\n  recipe-maintainers:\n    - leycec\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/b/betse/betse-1.2.1.tar.gz",
 "version": "1.2.1"
}