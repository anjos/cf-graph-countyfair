{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/303617724.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/414064017.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652809033.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-metacycle",
 "hash_type": "sha256",
 "name": "r-metacycle",
 "new_version": "1.2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-metacycle"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = '1.2.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-metacycle\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/MetaCycle_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/MetaCycle/MetaCycle_{{ version }}.tar.gz\n  sha256: 1300172b57264c71d0a4fb877a7c102db2a1f01d4896dfa32c179ccfb2ae01d2\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 2\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-gnm\n  run:\n    - r-base\n    - r-gnm\n\ntest:\n  commands:\n    - $R -e \"library('MetaCycle')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('MetaCycle')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=MetaCycle\n  license: GPL-2.0-or-later\n  summary: There are two functions-meta2d and meta3d for detecting rhythmic signals from time-series\n    datasets. For analyzing time-series datasets without individual information, 'meta2d'\n    is  suggested, which could incorporates multiple methods from ARSER,  JTK_CYCLE\n    and Lomb-Scargle in the detection of interested rhythms. For  analyzing time-series\n    datasets with individual information, 'meta3d' is  suggested, which takes use of\n    any one of these three methods to analyze  time-series data individual by individual\n    and gives out integrated values  based on analysis result of each individual.\n  license_family: GPL3\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: MetaCycle\n# Type: Package\n# Title: Evaluate Periodicity in Large Scale Data\n# Version: 1.2.0\n# Authors@R: c( person(\"Gang\", \"Wu\",, email = \"wggucas@gmail.com\", role = c(\"aut\", \"cre\")), person(\"Ron\", \"Anafi\",, email = \"ranafi@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"John\", \"Hogenesch\",, email = \"hogenesch@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"Michael\", \"Hughes\",, email = \"michael.evan.hughes@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"Karl\", \"Kornacker\",, email = \"kornacker@midohio.twcbc.com\", role = c(\"aut\", \"ctb\")), person(\"Xavier\", \"Li\",, email = \"haohan.li.97@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"Matthew\", \"Carlucci\",, email = \"matt.carlucci.96@gmail.com\", role = c(\"aut\", \"ctb\")) )\n# Description: There are two functions-meta2d and meta3d for detecting rhythmic signals from time-series datasets. For analyzing time-series datasets without individual information, 'meta2d' is  suggested, which could incorporates multiple methods from ARSER,  JTK_CYCLE and Lomb-Scargle in the detection of interested rhythms. For  analyzing time-series datasets with individual information, 'meta3d' is  suggested, which takes use of any one of these three methods to analyze  time-series data individual by individual and gives out integrated values  based on analysis result of each individual.\n# Depends: R (>= 3.0.2)\n# Imports: gnm\n# Suggests: knitr, rmarkdown, parallel\n# VignetteBuilder: knitr\n# License: GPL (>= 2)\n# LazyData: true\n# Author: Gang Wu [aut, cre], Ron Anafi [aut, ctb], John Hogenesch [aut, ctb], Michael Hughes [aut, ctb], Karl Kornacker [aut, ctb], Xavier Li [aut, ctb], Matthew Carlucci [aut, ctb]\n# Maintainer: Gang Wu <wggucas@gmail.com>\n# NeedsCompilation: no\n# Repository: CRAN\n# RoxygenNote: 6.1.1\n# Packaged: 2019-04-18 21:27:44 UTC; wug8hn\n# Date/Publication: 2019-04-18 22:00:03 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz"
 ],
 "version": "1.2.0"
}