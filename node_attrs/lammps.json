{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/393039597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393040457.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500968780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501052066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551744095.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/719248917.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/732265705.json"
   },
   "data": {
    "bot_rerun": 1646760322.7876465,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/944a3671-dd52-4213-a679-74ca376a3d29.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/874541612.json"
   },
   "data": {
    "bot_rerun": 1647191439.6935802,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878436592.json"
   },
   "data": {
    "bot_rerun": 1651096078.6771796,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/921156693.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1011036973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "lammps",
 "hash_type": "sha256",
 "name": "lammps",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lammps"
  ]
 },
 "pinning_version": "2022.07.28.08.23.03",
 "raw_meta_yaml": "{% set build = 4 %}\n{% set name = \"lammps\" %}\n{% set version = \"stable_23Jun2022_update1\" %}\n{% set sha256 = \"58e3b2b984f8935bb0db5631e143be2826c45ffd48844f7c394f36624a3e17a2\" %}\n{% set date = datetime.datetime.strptime(version.split('_')[1], \"%d%b%Y\") %}\n{% set conda_version = \"{:%Y.%m.%d}\".format(date) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ conda_version }}\n\nsource:\n  - fn: {{ name }}-{{ conda_version }}.tar.gz\n    url: https://github.com/lammps/lammps/archive/{{ version }}.tar.gz\n    sha256: {{ sha256 }}\n    patches: \n      - macos_install.patch\n      - vcsgc_mtp_n2p2.patch\n      - mliappy.patch\n      - fix-cython.patch\n  - fn: lammps-plugins.tar.gz\n    url: https://github.com/lammps/lammps-plugins/archive/{{ version }}.tar.gz\n    sha256: 6d8bd8bc29cfebfddf215232acce910eaef403032ea8e276745455446875f1ac\n    folder: lammps-plugins\n  - fn: mlip.tar.gz\n    url: https://gitlab.com/ashapeev/interface-lammps-mlip-2/-/archive/dd71d892c590fe79c9800946dc8984de91c05480/interface-lammps-mlip-2-master.tar.gz\n    sha256: ee720576097469e2c66db75625362a5e649a64fff7bddc9d0e36959bce4d72ff\n    folder: mlip\n    patches:\n      - mlip.patch\n    \nbuild:\n  number: {{ build }}\n  string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ mpi }}_{{ build }} \n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - cmake\n    - make\n    - pkg-config\n    - python                                 # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  \n  host:\n    - python\n    - cython\n    - setuptools\n    - pip\n    - {{ mpi }}\n    - zlib\n    - fftw\n    - hdf5\n    - libpng\n    - libcblas  # [linux]\n    - libblas  # [linux]\n    - liblapack  # [linux]\n    - libnetcdf\n    - kim-api\n    - libcurl\n    - mpi4py\n    - mlip  # [linux]\n    - n2p2 =2.1.4  # [linux]\n    - quippy =0.0.1=*_4  # [linux]\n    - voro\n\n  run:\n    - python\n    - setuptools\n    - {{ mpi }}\n    - kim-api\n    - mlip  # [linux]\n    - n2p2 =2.1.4  # [linux]\n    - quippy =0.0.1=*_4  # [linux]\n    - voro\n\ntest:\n  imports:\n    - lammps\n  commands: \n    - lmp_serial -help > help_serial.txt\n    - mpiexec -n 1 lmp_mpi -help > help_mpi.txt  # [mpi == 'mpich']\n\nabout:\n  home: http://lammps.sandia.gov\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'LAMMPS stands for Large-scale Atomic/Molecular Massively Parallel Simulator.'\n\n  description: |\n    LAMMPS is a classical molecular dynamics simulation code designed to\n    run efficiently on parallel computers.  It was developed at Sandia\n    National Laboratories, a US Department of Energy facility, with\n    funding from the DOE.  It is an open-source code, distributed freely\n    under the terms of the GNU Public License (GPL).\n  doc_url: http://lammps.sandia.gov/doc/Manual.html\n  dev_url: https://github.com/lammps/lammps\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - ellio167\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "time": 1568135294.7638352,
 "url": "https://github.com/lammps/lammps/archive/stable_23Jun2022_update1.tar.gz",
 "version": "2022.06.23"
}