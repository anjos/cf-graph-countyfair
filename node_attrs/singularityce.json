{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/796291587.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/800292280.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/819134138.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827052382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/840503201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/876970358.json"
   },
   "data": {
    "bot_rerun": 1646973235.2405367,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877468745.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/887800200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/903254112.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/916844529.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939431478.json"
   },
   "data": {
    "bot_rerun": 1653066684.8007734,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943395039.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000267706.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008016009.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1079311577.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1118062436.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1145829093.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libarchive36"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "singularityce",
 "hash_type": "sha256",
 "name": "singularityce",
 "new_version": "3.10.4",
 "new_version_attempts": {
  "3.10.0": 2,
  "3.10.1": 1,
  "3.10.2": 0,
  "3.10.3": 1,
  "3.10.4": 1,
  "3.9.2": 1,
  "3.9.3": 1,
  "3.9.4": 1,
  "3.9.5": 1,
  "3.9.6": 2,
  "3.9.7": 1,
  "3.9.8": 1,
  "3.9.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "singularityce"
  ]
 },
 "pinning_version": "2022.12.04.19.22.35",
 "raw_meta_yaml": "{% set version = \"3.10.0\" %}\n\npackage:\n  name: singularityce\n  version: {{ version }}\n\nsource:\n  - folder: src/github.com/sylabs/singularityce\n    url: https://github.com/sylabs/singularity/releases/download/v{{ version }}/singularity-ce-{{ version }}.tar.gz\n    sha256: 5e22e6cdad66c331668f6cff4544c83917bb3db90da3cf92403a394c5bf8cc8f\n    patches:\n      - patches/0003-Use-external-CNI.patch\n      - patches/0004-Find-unsquashfs-from-PATH.diff\n      - patches/set-version-from-env.patch\n\nbuild:\n  number: 1\n  skip: true  # [not linux]\n  # The binary is made runtime relocatable using the included patch\n  detect_binary_files_with_prefix: false\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - go >=1.17\n    - sysroot_linux-64 2.17  # [linux64]\n    - make\n    - pkg-config\n    - go-dep\n    - sed\n  host:\n    - libuuid  # [linux]\n    - libarchive\n    - libseccomp  # [linux]\n    - openssl\n    - glib\n  run:\n    # CNI version from singularity/Gopkg.lock\n    - cni-plugins >=0.7.4  # [linux]\n    - squashfs-tools  # [linux]\n  run_constrained:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n    - singularity ==9999999999\n    - apptainer ==9999999999\n\ntest:\n  commands:\n    - singularity --help\n    # disable these tests to ensure verbosity problem isn't from here (ngam)\n    - singularity --version\n\n    # Ensure the version is set correctly\n    - singularity --version | grep {{ version }}\n\n    # Ensure we are using conda's CNI\n    - test ! -d $PREFIX/libexec/singularity/cni\n    - test -d $PREFIX/lib/cni\n\n    - test ! -d $PREFIX/etc/singularity/network\n    - test -f $PREFIX/etc/cni/net.d/00_bridge.conflist\n\n    # UserNS test\n    # ngam 20211115: ppc64le build without --sandbox (otherwise fails with mount problems)\n    # ngam 20211115: likely related to below issue re --privileged\n    - singularity build lolcow docker://godlovedc/lolcow  # [ppc64le]\n    - singularity build --sandbox lolcow docker://godlovedc/lolcow  # [not ppc64le]\n\n    # The remaining tests are disabled on ppc64le due to issues launching docker with --privileged\n    # Either run the container or fail due to user namespaces being disabled\n    - \"singularity --verbose --debug run -u lolcow || (singularity --verbose --debug run -u lolcow 2>&1 | grep 'Failed to create user namespace: user namespace requires to set')\"  # [linux64]\n\n    # # https://github.com/hpcng/singularity/issues/5668\n    # - singularity pull library://alpine  # [linux64]\n    # - singularity --verbose --debug run -u alpine_latest.sif echo \"Hello world\"  # [linux64]\n\nabout:\n  home: https://www.sylabs.io/singularity/\n  license: BSD-3-Clause\n  license_file:\n    - src/github.com/sylabs/singularityce/LICENSE.md\n    - src/github.com/sylabs/singularityce/LICENSE_THIRD_PARTY.md\n    - src/github.com/sylabs/singularityce/LICENSE_DEPENDENCIES.md\n  summary: SingularityCE is the Community Edition of Singularity, an open source container platform designed to be simple, fast, and secure.\n\n  description: |\n    SingularityCE is the Community Edition of Singularity, \n    an open source container platform designed to be \n    simple, fast, and secure.\n\n    Singularity is a container platform focused on supporting \"Mobility of\n    Compute\"\n\n    Mobility of Compute encapsulates the development to compute model where\n    developers can work in an environment of their choosing and creation and\n    when the developer needs additional compute resources, this environment\n    can easily be copied and executed on other platforms. Additionally as the\n    primary use case for Singularity is targeted towards computational\n    portability, many of the barriers to entry of other container solutions do\n    not apply to Singularity making it an ideal solution for users (both\n    computational and non-computational) and HPC centers.\n\n  dev_url: https://github.com/sylabs/singularity\n  doc_url: https://www.sylabs.io/docs/\n\nextra:\n  recipe-maintainers:\n    - ngam\n",
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "url": "https://github.com/sylabs/singularity/releases/download/v3.10.0/singularity-ce-3.10.0.tar.gz",
 "version": "3.10.0"
}