{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/464281554.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/464281986.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/464282110.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/464282245.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "gwframes",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/moble/GWFrames",
   "home": "https://github.com/moble/GWFrames",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Create and manipulate gravitational waveforms"
  },
  "build": {
   "number": "2",
   "script": "cd Code && /usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "moble"
   ]
  },
  "package": {
   "name": "gwframes",
   "version": "1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "swig =3.0.10",
    "libopenblas",
    "libstdcxx-ng",
    "libgcc-ng"
   ],
   "run": [
    "python",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "h5py",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "git_depth": "10",
   "git_rev": "1.0",
   "git_url": "https://github.com/moble/GWFrames.git"
  },
  "test": {
   "imports": [
    "GWFrames"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "gsl",
    "hdf5",
    "libgcc-ng",
    "libopenblas",
    "libstdcxx-ng",
    "numpy",
    "pip",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "gsl",
    "h5py",
    "hdf5",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/moble/GWFrames",
   "home": "https://github.com/moble/GWFrames",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Create and manipulate gravitational waveforms"
  },
  "build": {
   "number": "2",
   "script": "cd Code && /usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "moble",
    "moble"
   ]
  },
  "package": {
   "name": "gwframes",
   "version": "1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "swig =3.0.10",
    "libopenblas",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "pip",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "swig =3.0.10"
   ],
   "run": [
    "python",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "h5py",
    "scipy",
    "matplotlib-base",
    "python",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "h5py",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "git_depth": "10",
   "git_rev": "1.0",
   "git_url": "https://github.com/moble/GWFrames.git"
  },
  "test": {
   "imports": [
    "GWFrames",
    "GWFrames"
   ]
  }
 },
 "name": "gwframes",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/moble/GWFrames",
   "home": "https://github.com/moble/GWFrames",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Create and manipulate gravitational waveforms"
  },
  "build": {
   "number": "2",
   "script": "cd Code && /usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "moble"
   ]
  },
  "package": {
   "name": "gwframes",
   "version": "1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "swig =3.0.10"
   ],
   "run": [
    "python",
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "h5py",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "git_depth": "10",
   "git_rev": "1.0",
   "git_url": "https://github.com/moble/GWFrames.git"
  },
  "test": {
   "imports": [
    "GWFrames"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "gsl",
    "hdf5",
    "numpy",
    "pip",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "gsl",
    "h5py",
    "hdf5",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gwframes"
  ]
 },
 "pinning_version": "2020.08.05.17.02.37",
 "pre_pr_migrator_status": {
  "python39": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/741821951\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 226, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 261, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"GWFrames\" %}\n{% set version = \"1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # we have to use git_url here to get the submodules needed for the\n  # build; see <https://github.com/conda-forge/xgboost-feedstock/issues/22>\n  git_url: https://github.com/moble/{{ name }}.git\n  git_rev: {{ version }}\n  # Mitigate the above by just shallow cloning, while still capturing the tag\n  git_depth: 10\n\nbuild:\n  number: 2\n  script: \"cd Code && {{ PYTHON }} setup.py install\"\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n\n  host:\n    - python\n    - pip\n    - fftw\n    - gsl\n    - hdf5\n    - numpy\n    - swig =3.0.10\n    - libopenblas  # [linux]\n    - libstdcxx-ng  # [linux]\n    - libgcc-ng  # [linux]\n\n  run:\n    - python\n    - fftw\n    - gsl\n    - hdf5\n    - {{ pin_compatible('numpy') }}\n    - h5py\n    - scipy\n    - matplotlib-base\n\ntest:\n  imports:\n    - GWFrames\n\nabout:\n  home: https://github.com/moble/GWFrames\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Create and manipulate gravitational waveforms\n  dev_url: https://github.com/moble/GWFrames\n\nextra:\n  recipe-maintainers:\n    - moble\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "fftw",
   "gsl",
   "h5py",
   "hdf5",
   "libgcc-ng",
   "libopenblas",
   "libstdcxx-ng",
   "matplotlib-base",
   "numpy",
   "pip",
   "python",
   "scipy",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fftw",
    "gsl",
    "hdf5",
    "libgcc-ng",
    "libopenblas",
    "libstdcxx-ng",
    "numpy",
    "pip",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fftw",
    "gsl",
    "h5py",
    "hdf5",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "gsl",
    "hdf5",
    "libgcc-ng",
    "libopenblas",
    "libstdcxx-ng",
    "numpy",
    "pip",
    "python",
    "swig =3.0.10"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "gsl",
    "h5py",
    "hdf5",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": null,
 "version": "1.0"
}