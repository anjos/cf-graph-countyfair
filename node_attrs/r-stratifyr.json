{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-stratifyr",
 "hash_type": "sha256",
 "name": "r-stratifyr",
 "new_version": "1.0_3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-stratifyr"
  ]
 },
 "raw_meta_yaml": "{% set version = '1.0-3' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-stratifyr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/stratifyR_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/stratifyR/stratifyR_{{ version }}.tar.gz\n  sha256: 588397c155d68426e8f4f652adb7ca7bd37fcee0d2bf834fc63920d0a1d777cd\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-actuar\n    - r-fitdistrplus\n    - r-mc2d\n    - r-triangle\n    - r-zipfr\n  run:\n    - r-base\n    - r-actuar\n    - r-fitdistrplus\n    - r-mc2d\n    - r-triangle\n    - r-zipfr\n\ntest:\n  commands:\n    - $R -e \"library('stratifyR')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('stratifyR')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=stratifyR\n  license: GPL-2.0-only\n  summary: The stratification of univariate populations under stratified sampling designs is\n    implemented according to Khan et al. (2002) <doi:10.1177/0008068320020518> and Khan\n    et al. (2015) <doi:10.1080/02664763.2015.1018674> in this library. It determines\n    the Optimum Strata Boundaries (OSB) and Optimum Sample Sizes (OSS) for the study\n    variable, y, using the best-fit frequency distribution of a survey variable (if\n    data is available) or a hypothetical distribution (if data is not available). The\n    method formulates the problem of determining the OSB as mathematical programming\n    problem which is solved by using a dynamic programming technique. If a dataset of\n    the population is available to the surveyor, the method estimates its best-fit distribution\n    and determines the OSB and OSS under Neyman allocation directly. When the dataset\n    is not available, stratification is made based on the assumption that the values\n    of the study variable, y, are available as hypothetical realizations of proxy values\n    of y from recent surveys. Thus, it requires certain distributional assumptions about\n    the study variable. At present, it handles stratification for the populations where\n    the study variable follows a continuous distribution, namely, Pareto, Triangular,\n    Right-triangular, Weibull, Gamma, Exponential, Uniform, Normal, Log-normal and Cauchy\n    distributions.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - mfansler\n\n# Package: stratifyR\n# Type: Package\n# Title: Optimal Stratification of Univariate Populations\n# Version: 1.0-3\n# Date: 2021-11-28\n# Authors@R: c( person(\"Karuna G.\", \"Reddy\",, \"karuna.reddy@usp.ac.fj\", c(\"aut\", \"cre\")), person(\"M. G. M.\", \"Khan\",, \"khan_mg@usp.ac.fj\", \"aut\") )\n# Author: Karuna G. Reddy [aut, cre], M. G. M. Khan [aut]\n# Maintainer: Karuna G. Reddy <karuna.reddy@usp.ac.fj>\n# Description: The stratification of univariate populations under stratified sampling designs is implemented according to Khan et al. (2002) <doi:10.1177/0008068320020518> and Khan et al. (2015) <doi:10.1080/02664763.2015.1018674> in this library. It determines the Optimum Strata Boundaries (OSB) and Optimum Sample Sizes (OSS) for the study variable, y, using the best-fit frequency distribution of a survey variable (if data is available) or a hypothetical distribution (if data is not available). The method formulates the problem of determining the OSB as mathematical programming problem which is solved by using a dynamic programming technique. If a dataset of the population is available to the surveyor, the method estimates its best-fit distribution and determines the OSB and OSS under Neyman allocation directly. When the dataset is not available, stratification is made based on the assumption that the values of the study variable, y, are available as hypothetical realizations of proxy values of y from recent surveys. Thus, it requires certain distributional assumptions about the study variable. At present, it handles stratification for the populations where the study variable follows a continuous distribution, namely, Pareto, Triangular, Right-triangular, Weibull, Gamma, Exponential, Uniform, Normal, Log-normal and Cauchy distributions.\n# LazyData: true\n# License: GPL-2\n# NeedsCompilation: yes\n# Depends: R (>= 3.4.0), fitdistrplus, zipfR, stats, actuar, triangle, mc2d\n# RoxygenNote: 7.1.2\n# Suggests: knitr, rmarkdown\n# VignetteBuilder: knitr\n# Packaged: 2021-12-06 23:42:47 UTC; karunareddy\n# Repository: CRAN\n# Date/Publication: 2021-12-07 08:20:02 UTC\n# Encoding: UTF-8\n",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/stratifyR_1.0-3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/stratifyR/stratifyR_1.0-3.tar.gz",
  "https://cran.r-project.org/src/contrib/stratifyR_1.0-3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/stratifyR/stratifyR_1.0-3.tar.gz"
 ],
 "version": "1.0_3"
}