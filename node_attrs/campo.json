{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/796804941.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "campo",
 "hash_type": "sha256",
 "name": "campo",
 "new_version": "0.3.1",
 "new_version_attempts": {
  "0.3.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "campo"
  ]
 },
 "pinning_version": "2021.12.07.08.05.09",
 "raw_meta_yaml": "{% set version = \"0.3.1\" %}\n\npackage:\n  name: campo\n  version: {{ version }}\n\n\nsource:\n  url: https://campo.computationalgeography.org/download/sources/campo-{{ version }}.tar.bz2\n  sha256: 2c799cb9baa8f9ff5709f8c4ebcaf0fa90c8958db1746fbf20f1eded8669f87d\n\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\n\nrequirements:\n  host:\n    - python  >=3.6\n    - pip\n\n  run:\n    - python  >=3.6\n    - numpy\n    - lue\n    - pcraster\n    - xarray\n    - pandas\n    - gdal\n    - networkx\n\n\nabout:\n  home: https://campo.computationalgeography.org/\n  license: MIT\n  license_file: LICENSE.txt\n  summary: Modelling framework for fields and agents\n  description: |\n    Campo is an environmental modelling framework for the construction of\n    spatio-temporal models with support for field-based and agent-based\n    phenomena. Campo provides the elementary building blocks for the\n    construction and execution of field-agent models: operations accepting\n    both fields and agents as arguments, and operations that are dedicated\n    either to fields or to agents. Campo resembles and extends the map algebra\n    approach to field-agent modelling and allows for the construction of static\n    or dynamic models.\n  doc_url: https://campo.computationalgeography.org/documentation/index.html\n  dev_url: https://github.com/computationalgeography/campo\n\n\nextra:\n  recipe-maintainers:\n    - OliverSchmitz\n    - kordejong\n",
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "url": "https://campo.computationalgeography.org/download/sources/campo-0.3.1.tar.bz2",
 "version": "0.3.1"
}