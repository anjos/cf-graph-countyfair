{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/378370601.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472176186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502610265.json"
   },
   "data": {
    "bot_rerun": 1607537973.9677,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535320926.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535381443.json"
   },
   "data": {
    "bot_rerun": 1656338392.6423004,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559931214.json"
   },
   "data": {
    "bot_rerun": 1656338392.6425006,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/575814693.json"
   },
   "data": {
    "bot_rerun": 1613992675.911201,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/580041133.json"
   },
   "data": {
    "bot_rerun": 1614267201.6277864,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/671813203.json"
   },
   "data": {
    "bot_rerun": 1632939843.8324523,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/744756594.json"
   },
   "data": {
    "bot_rerun": 1648137880.6087995,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779879899.json"
   },
   "data": {
    "bot_rerun": 1648137880.6089833,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888607270.json"
   },
   "data": {
    "bot_rerun": 1656338392.642815,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/927656485.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/979975501.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/980183335.json"
   },
   "data": {
    "bot_rerun": 1660728027.4077168,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1020111119.json"
   },
   "data": {
    "bot_rerun": 1660728027.4080448,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1028051477.json"
   },
   "data": {
    "bot_rerun": 1660728027.408197,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1028410604.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1028608011.json"
   },
   "data": {
    "bot_rerun": 1671622646.7341049,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1172738914.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1174123129.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyart_mch",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss version of Py-ART. Py-ART, is an open source Python\nmodule containing a growing collection of weather radar algorithms\nand utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, process, and analyze data from many\ntypes of weather radars. The MeteoSwiss version contains enhanced\nand experimental functionality. MeteoSwiss regularly contributes back to\nthe ARM-DOE Py-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyart",
   "doc_url": "https://pyart-mch.readthedocs.io/en/stable/",
   "home": "https://github.com/MeteoSwiss/pyart",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss version of Py-ART, the Python ARM Radar Toolkit"
  },
  "build": {
   "number": "0",
   "script": [
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyart_mch",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython"
   ],
   "host": [
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl"
   ]
  },
  "source": {
   "fn": "pyart_mch-1.6.0.tar.gz",
   "sha256": "0d68600eae7f15d39ea2f9aa99fbb57b4160c87f7996c8f4492245da655fb8e1",
   "url": "https://pypi.io/packages/source/p/pyart_mch/pyart_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyart",
    "pyart",
    "pyart"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "trmm_rsl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "trmm_rsl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cftime",
    "cython",
    "fsspec",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "pooch",
    "python",
    "s3fs",
    "scipy",
    "trmm_rsl",
    "versioneer",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss version of Py-ART. Py-ART, is an open source Python\nmodule containing a growing collection of weather radar algorithms\nand utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, process, and analyze data from many\ntypes of weather radars. The MeteoSwiss version contains enhanced\nand experimental functionality. MeteoSwiss regularly contributes back to\nthe ARM-DOE Py-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyart",
   "doc_url": "https://pyart-mch.readthedocs.io/en/stable/",
   "home": "https://github.com/MeteoSwiss/pyart",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss version of Py-ART, the Python ARM Radar Toolkit"
  },
  "build": {
   "number": "0",
   "script": [
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyart_mch",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython"
   ],
   "host": [
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime"
   ]
  },
  "source": {
   "fn": "pyart_mch-1.6.0.tar.gz",
   "sha256": "0d68600eae7f15d39ea2f9aa99fbb57b4160c87f7996c8f4492245da655fb8e1",
   "url": "https://pypi.io/packages/source/p/pyart_mch/pyart_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyart",
    "pyart",
    "pyart",
    "pyart",
    "pyart",
    "pyart",
    "pyart",
    "pyart",
    "pyart"
   ]
  }
 },
 "name": "pyart_mch",
 "new_version": "1.6.1",
 "new_version_attempts": {
  "0.5.0": 1,
  "0.6.0": 1,
  "0.6.1": 1,
  "0.6.5": 1,
  "0.6.6": 1,
  "1.1.2": 1,
  "1.2.0": 1,
  "1.3.0": 1,
  "1.3.1": 1,
  "1.3.2": 1,
  "1.6.0": 1,
  "1.6.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss version of Py-ART. Py-ART, is an open source Python\nmodule containing a growing collection of weather radar algorithms\nand utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, process, and analyze data from many\ntypes of weather radars. The MeteoSwiss version contains enhanced\nand experimental functionality. MeteoSwiss regularly contributes back to\nthe ARM-DOE Py-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyart",
   "doc_url": "https://pyart-mch.readthedocs.io/en/stable/",
   "home": "https://github.com/MeteoSwiss/pyart",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss version of Py-ART, the Python ARM Radar Toolkit"
  },
  "build": {
   "number": "0",
   "script": [
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv",
    "export RSL_PATH=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyart_mch",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython"
   ],
   "host": [
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "trmm_rsl"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "trmm_rsl"
   ]
  },
  "source": {
   "fn": "pyart_mch-1.6.0.tar.gz",
   "sha256": "0d68600eae7f15d39ea2f9aa99fbb57b4160c87f7996c8f4492245da655fb8e1",
   "url": "https://pypi.io/packages/source/p/pyart_mch/pyart_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyart",
    "pyart",
    "pyart"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "trmm_rsl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "trmm_rsl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cftime",
    "cython",
    "fsspec",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "pooch",
    "python",
    "s3fs",
    "scipy",
    "trmm_rsl",
    "versioneer",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyart_mch"
  ]
 },
 "pinning_version": "2022.12.21.17.38.36",
 "pre_pr_migrator_attempts": {
  "python311": 96
 },
 "pre_pr_migrator_status": {
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3753531004\">bot CI job</a>): main: ['win_64_python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested trmm_rsl\\n', 'win_64_python3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested trmm_rsl\\n', 'win_64_python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested trmm_rsl\\n', 'win_64_python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested trmm_rsl\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pyart_mch\" %}\n{% set version = \"1.6.0\" %}\n{% set sha256 = \"0d68600eae7f15d39ea2f9aa99fbb57b4160c87f7996c8f4492245da655fb8e1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script:\n    - export RSL_PATH=$PREFIX    # [not win]\n    - {{ PYTHON }} -m pip install . --no-deps -vvv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - trmm_rsl\n    - cython\n  host:\n    - python\n    - pip\n    - setuptools >=30.3.0\n    - setuptools_scm\n    - numpy >1.18.0\n    - cython\n    - trmm_rsl      # [not win]\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - matplotlib-base\n    - netcdf4\n    - xarray\n    - pooch\n    - cython\n    - versioneer\n    - fsspec\n    - s3fs\n    - cftime\n    - trmm_rsl      # [not win]\n\n\ntest:\n  imports:\n    - pyart\n\nabout:\n  home: https://github.com/MeteoSwiss/pyart\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: MeteoSwiss version of Py-ART, the Python ARM Radar Toolkit\n  description: |\n    This is the MeteoSwiss version of Py-ART. Py-ART, is an open source Python\n    module containing a growing collection of weather radar algorithms\n    and utilities build on top of the Scientific Python stack and\n    distributed under the 3-Clause BSD license. Py-ART is used by the\n    Atmospheric Radiation Measurement (ARM) Climate Research Facility for\n    working with data from a number of precipitation and cloud radars, but\n    has been designed so that it can be used by others in the radar and\n    atmospheric communities to examine, process, and analyze data from many\n    types of weather radars. The MeteoSwiss version contains enhanced\n    and experimental functionality. MeteoSwiss regularly contributes back to\n    the ARM-DOE Py-ART.\n  doc_url: https://pyart-mch.readthedocs.io/en/stable/\n  dev_url: https://github.com/MeteoSwiss/pyart\n\nextra:\n  recipe-maintainers:\n    - meteoswiss-mdr\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cftime",
   "cython",
   "fsspec",
   "matplotlib-base",
   "netcdf4",
   "numpy",
   "pip",
   "pooch",
   "python",
   "s3fs",
   "scipy",
   "setuptools",
   "setuptools_scm",
   "trmm_rsl",
   "versioneer",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "trmm_rsl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "trmm_rsl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cftime",
    "cython",
    "fsspec",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "pooch",
    "python",
    "s3fs",
    "scipy",
    "trmm_rsl",
    "versioneer",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "trmm_rsl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy >1.18.0",
    "pip",
    "python",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "trmm_rsl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cftime",
    "cython",
    "fsspec",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "pooch",
    "python",
    "s3fs",
    "scipy",
    "trmm_rsl",
    "versioneer",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pyart_mch/pyart_mch-1.6.0.tar.gz",
 "version": "1.6.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "This is the MeteoSwiss version of Py-ART. Py-ART, is an open source Python\nmodule containing a growing collection of weather radar algorithms\nand utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, process, and analyze data from many\ntypes of weather radars. The MeteoSwiss version contains enhanced\nand experimental functionality. MeteoSwiss regularly contributes back to\nthe ARM-DOE Py-ART.\n",
   "dev_url": "https://github.com/MeteoSwiss/pyart",
   "doc_url": "https://pyart-mch.readthedocs.io/en/stable/",
   "home": "https://github.com/MeteoSwiss/pyart",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "MeteoSwiss version of Py-ART, the Python ARM Radar Toolkit"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "meteoswiss-mdr",
    "meteoswiss-mdr",
    "meteoswiss-mdr"
   ]
  },
  "package": {
   "name": "pyart_mch",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython",
    "c_compiler_stub",
    "trmm_rsl",
    "cython"
   ],
   "host": [
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "setuptools_scm",
    "numpy >1.18.0",
    "cython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "netcdf4",
    "xarray",
    "pooch",
    "cython",
    "versioneer",
    "fsspec",
    "s3fs",
    "cftime"
   ]
  },
  "source": {
   "fn": "pyart_mch-1.6.0.tar.gz",
   "sha256": "0d68600eae7f15d39ea2f9aa99fbb57b4160c87f7996c8f4492245da655fb8e1",
   "url": "https://pypi.io/packages/source/p/pyart_mch/pyart_mch-1.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyart",
    "pyart",
    "pyart"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "trmm_rsl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cftime",
    "cython",
    "fsspec",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "pooch",
    "python",
    "s3fs",
    "scipy",
    "versioneer",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}