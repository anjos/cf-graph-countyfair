{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/427638932.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427641930.json"
   },
   "data": {
    "bot_rerun": 1591296754.6733031,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427643584.json"
   },
   "data": {
    "bot_rerun": 1591296754.6738586,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428036518.json"
   },
   "data": {
    "bot_rerun": 1591303873.213558,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428037739.json"
   },
   "data": {
    "bot_rerun": 1591303873.2140498,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428087795.json"
   },
   "data": {
    "bot_rerun": 1591325626.8128912,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428091217.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428196976.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501939852.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 1347, in getresponse",
   "    response.begin()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 307, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 268, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into",
   "    return self.read(nbytes, buffer)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read",
   "    return self._sslobj.read(len, buffer)",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 195, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 174, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 167, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 265, in get_repo",
   "    fork_repo = gh.repository(ctx.github_username, feedstock_reponame)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 1986, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 210, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 200, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pysyntect",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Python bindings for the Syntect library. Pysyntect provides a lightweight,\nfast engine to compute syntax highlighting using Sublime Text syntax\ndefinitions and TextMate theme definitions, which are shared by\nmany editors.\n",
   "dev_url": "https://github.com/spyder-ide/pysyntect",
   "home": "https://github.com/spyder-ide/pysyntect",
   "license": "MIT AND Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND MPL-2.0 AND Zlib AND Unlicense",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for the syntect Rust library"
  },
  "build": {
   "binary_relocation": false,
   "missing_dso_whitelist": null,
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12"
   ]
  },
  "package": {
   "name": "pysyntect",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "ab7f973bbfb46212c2603a2e80a16d679226e239ea30e96351e9b0cbcffe53bd",
   "url": "https://pypi.io/packages/source/p/pysyntect/pysyntect-0.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "syntect",
    "syntect",
    "syntect"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Python bindings for the Syntect library. Pysyntect provides a lightweight,\nfast engine to compute syntax highlighting using Sublime Text syntax\ndefinitions and TextMate theme definitions, which are shared by\nmany editors.\n",
   "dev_url": "https://github.com/spyder-ide/pysyntect",
   "home": "https://github.com/spyder-ide/pysyntect",
   "license": "MIT AND Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND MPL-2.0 AND Zlib AND Unlicense",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for the syntect Rust library"
  },
  "build": {
   "binary_relocation": false,
   "missing_dso_whitelist": null,
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12"
   ]
  },
  "package": {
   "name": "pysyntect",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "posix",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "posix",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "posix",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "ab7f973bbfb46212c2603a2e80a16d679226e239ea30e96351e9b0cbcffe53bd",
   "url": "https://pypi.io/packages/source/p/pysyntect/pysyntect-0.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "syntect",
    "syntect",
    "syntect",
    "syntect",
    "syntect",
    "syntect",
    "syntect",
    "syntect",
    "syntect"
   ]
  }
 },
 "name": "pysyntect",
 "new_version": "0.2.0",
 "new_version_attempts": {
  "0.2.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Python bindings for the Syntect library. Pysyntect provides a lightweight,\nfast engine to compute syntax highlighting using Sublime Text syntax\ndefinitions and TextMate theme definitions, which are shared by\nmany editors.\n",
   "dev_url": "https://github.com/spyder-ide/pysyntect",
   "home": "https://github.com/spyder-ide/pysyntect",
   "license": "MIT AND Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND MPL-2.0 AND Zlib AND Unlicense",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for the syntect Rust library"
  },
  "build": {
   "binary_relocation": false,
   "missing_dso_whitelist": [
    "/usr/lib/libresolv.9.dylib",
    "/usr/lib/libresolv.9.dylib",
    "/usr/lib/libresolv.9.dylib"
   ],
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12"
   ]
  },
  "package": {
   "name": "pysyntect",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "ab7f973bbfb46212c2603a2e80a16d679226e239ea30e96351e9b0cbcffe53bd",
   "url": "https://pypi.io/packages/source/p/pysyntect/pysyntect-0.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "syntect",
    "syntect",
    "syntect"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pysyntect"
  ]
 },
 "pinning_version": "2020.10.13.00.03.02",
 "pre_pr_migrator_status": {
  "pypy37": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/727478885\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 1347, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 307, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 268, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 735, in reraise\n    raise value\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 195, in _request\n    return request_method(*args, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 174, in request\n    response = super(GitHubSession, self).request(*args, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 167, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 265, in get_repo\n    fork_repo = gh.repository(ctx.github_username, feedstock_reponame)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 1986, in repository\n    json = self._json(self._get(url), 200)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 210, in _get\n    return self._request(\"get\", url, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 200, in _request\n    raise exceptions.ConnectionError(exc)\ngithub3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n"
 },
 "raw_meta_yaml": "{% set name = \"pysyntect\" %}\n{% set version = \"0.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: ab7f973bbfb46212c2603a2e80a16d679226e239ea30e96351e9b0cbcffe53bd\n\nbuild:\n  number: 3\n  # the distributed binaries are already relocatable\n  binary_relocation: false\n  missing_dso_whitelist:\n    - /usr/lib/libresolv.9.dylib  # [osx]\n\nrequirements:\n  build:\n    - posix  # [win]\n    # - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - clang\n    - llvm\n    - rust =1.45.0.dev20200428\n    - llvmdev\n    - llvm-tools\n    - libclang\n    - maturin\n    - toml\n    - pip\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  # Some packages might need a `test/commands` key to check CLI.\n  # List all the packages/modules that `run_test.py` imports.\n  imports:\n    - syntect\n\nabout:\n  home: https://github.com/spyder-ide/pysyntect\n  license: MIT AND Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND MPL-2.0 AND Zlib AND Unlicense\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Python bindings for the syntect Rust library'\n\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    Python bindings for the Syntect library. Pysyntect provides a lightweight,\n    fast engine to compute syntax highlighting using Sublime Text syntax\n    definitions and TextMate theme definitions, which are shared by\n    many editors.\n  dev_url: https://github.com/spyder-ide/pysyntect\n\nextra:\n  recipe-maintainers:\n    - andfoy\n    - ccordoba12\n",
 "req": {
  "__set__": true,
  "elements": [
   "clang",
   "cxx_compiler_stub",
   "libclang",
   "llvm",
   "llvm-tools",
   "llvmdev",
   "maturin",
   "pip",
   "posix",
   "python",
   "rust",
   "toml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "posix",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "posix",
    "rust =1.45.0.dev20200428",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pysyntect/pysyntect-0.2.0.tar.gz",
 "version": "0.2.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "Python bindings for the Syntect library. Pysyntect provides a lightweight,\nfast engine to compute syntax highlighting using Sublime Text syntax\ndefinitions and TextMate theme definitions, which are shared by\nmany editors.\n",
   "dev_url": "https://github.com/spyder-ide/pysyntect",
   "home": "https://github.com/spyder-ide/pysyntect",
   "license": "MIT AND Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND MPL-2.0 AND Zlib AND Unlicense",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for the syntect Rust library"
  },
  "build": {
   "binary_relocation": false,
   "missing_dso_whitelist": null,
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12",
    "andfoy",
    "ccordoba12"
   ]
  },
  "package": {
   "name": "pysyntect",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "posix",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "posix",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip",
    "posix",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust =1.45.0.dev20200428",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin",
    "toml",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "ab7f973bbfb46212c2603a2e80a16d679226e239ea30e96351e9b0cbcffe53bd",
   "url": "https://pypi.io/packages/source/p/pysyntect/pysyntect-0.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "syntect",
    "syntect",
    "syntect"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "posix",
    "rust",
    "toml"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}