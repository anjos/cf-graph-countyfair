{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/686934902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "threadpoolctl",
 "hash_type": "sha256",
 "name": "threadpoolctl",
 "new_version": "3.1.0",
 "new_version_attempts": {
  "2.2.0": 1,
  "3.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "threadpoolctl"
  ]
 },
 "pinning_version": "2021.10.01.10.31.28",
 "raw_meta_yaml": "{% set version = \"3.1.0\" %}\n\npackage:\n  name: threadpoolctl\n  version: {{ version }}\n\nsource:\n  url: https://github.com/joblib/threadpoolctl/archive/{{ version }}.tar.gz\n  sha256: 449b806f9147a3cf28ed7ec6389dbff9c450331d695873ab75dea79fe661f1e7\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - {{ PYTHON }} -m flit install\n\nrequirements:\n  host:\n    - python >=3.6\n    - flit\n  run:\n    - python >=3.6\n\ntest:\n  requires:\n    - numpy\n  imports:\n    - threadpoolctl\n  commands:\n    - python -m threadpoolctl -i numpy\n\nabout:\n  home: https://github.com/joblib/threadpoolctl\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python helpers to control the threadpools of native libraries\n\n  description: |\n    Python helpers to introspect and limit the number of threads used\n    in native libraries that handle their own internal threadpool\n    (BLAS and OpenMP implementations).\n  doc_url: https://github.com/joblib/threadpoolctl\n  dev_url: https://github.com/joblib/threadpoolctl\n\nextra:\n  recipe-maintainers:\n    - ogrisel\n    - tomMoral\n    - jeremiedbb\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://github.com/joblib/threadpoolctl/archive/3.1.0.tar.gz",
 "version": "3.1.0"
}