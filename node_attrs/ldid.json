{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/514370741.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/538494668.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "ldid",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This program lets you manipulate the signature block in a Mach-O binary.\nUse -S to sign a binary from scratch and allocate its entitlements,\n-s to update the hashes on an existing binary, or -e to dump entitlements\n",
   "dev_url": "https://git.saurik.com/ldid.git",
   "home": "https://cydia.saurik.com/info/ldid/",
   "license": "AGPL-3.0-only",
   "license_file": [
    "COPYING"
   ],
   "summary": "pseudo-codesign Mach-O files"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "package": {
   "name": "ldid",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openssl"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "git://git.saurik.com/ldid.git"
  },
  "test": {
   "commands": [
    "ldid"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "This program lets you manipulate the signature block in a Mach-O binary.\nUse -S to sign a binary from scratch and allocate its entitlements,\n-s to update the hashes on an existing binary, or -e to dump entitlements\n",
   "dev_url": "https://git.saurik.com/ldid.git",
   "home": "https://cydia.saurik.com/info/ldid/",
   "license": "AGPL-3.0-only",
   "license_file": [
    "COPYING"
   ],
   "summary": "pseudo-codesign Mach-O files"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "package": {
   "name": "ldid",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openssl"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "git://git.saurik.com/ldid.git"
  },
  "test": {
   "commands": [
    "ldid"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "This program lets you manipulate the signature block in a Mach-O binary.\nUse -S to sign a binary from scratch and allocate its entitlements,\n-s to update the hashes on an existing binary, or -e to dump entitlements\n",
   "dev_url": "https://git.saurik.com/ldid.git",
   "home": "https://cydia.saurik.com/info/ldid/",
   "license": "AGPL-3.0-only",
   "license_file": [
    "COPYING"
   ],
   "summary": "pseudo-codesign Mach-O files"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "package": {
   "name": "ldid",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openssl"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "git://git.saurik.com/ldid.git"
  },
  "test": {
   "commands": [
    "ldid"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This program lets you manipulate the signature block in a Mach-O binary.\nUse -S to sign a binary from scratch and allocate its entitlements,\n-s to update the hashes on an existing binary, or -e to dump entitlements\n",
   "dev_url": "https://git.saurik.com/ldid.git",
   "home": "https://cydia.saurik.com/info/ldid/",
   "license": "AGPL-3.0-only",
   "license_file": [
    "COPYING",
    "COPYING",
    "COPYING",
    "COPYING",
    "COPYING"
   ],
   "summary": "pseudo-codesign Mach-O files"
  },
  "build": {
   "ignore_run_exports": [
    "libcxx"
   ],
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "isuruf",
    "isuruf",
    "isuruf",
    "isuruf"
   ]
  },
  "package": {
   "name": "ldid",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openssl",
    "openssl",
    "openssl"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "git://git.saurik.com/ldid.git"
  },
  "test": {
   "commands": [
    "ldid",
    "ldid",
    "ldid",
    "ldid",
    "ldid"
   ]
  }
 },
 "name": "ldid",
 "osx_64_meta_yaml": {
  "about": {
   "description": "This program lets you manipulate the signature block in a Mach-O binary.\nUse -S to sign a binary from scratch and allocate its entitlements,\n-s to update the hashes on an existing binary, or -e to dump entitlements\n",
   "dev_url": "https://git.saurik.com/ldid.git",
   "home": "https://cydia.saurik.com/info/ldid/",
   "license": "AGPL-3.0-only",
   "license_file": [
    "COPYING"
   ],
   "summary": "pseudo-codesign Mach-O files"
  },
  "build": {
   "ignore_run_exports": [
    "libcxx"
   ],
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "package": {
   "name": "ldid",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": []
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "git://git.saurik.com/ldid.git"
  },
  "test": {
   "commands": [
    "ldid"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "This program lets you manipulate the signature block in a Mach-O binary.\nUse -S to sign a binary from scratch and allocate its entitlements,\n-s to update the hashes on an existing binary, or -e to dump entitlements\n",
   "dev_url": "https://git.saurik.com/ldid.git",
   "home": "https://cydia.saurik.com/info/ldid/",
   "license": "AGPL-3.0-only",
   "license_file": [
    "COPYING"
   ],
   "summary": "pseudo-codesign Mach-O files"
  },
  "build": {
   "ignore_run_exports": [
    "libcxx"
   ],
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "package": {
   "name": "ldid",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": []
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "git://git.saurik.com/ldid.git"
  },
  "test": {
   "commands": [
    "ldid"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ldid"
  ]
 },
 "pinning_version": "2020.12.12.12.24.07",
 "pre_pr_migrator_status": {
  "openssl3": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1266691030\">bot CI job</a>): master: ['linux_ppc64le_openssl3: Encountered problems while solving:\\n  - nothing provides requested openssl 3.*\\n']"
 },
 "raw_meta_yaml": "{% set name = \"ldid\" %}\n{% set version = \"2.1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  git_url: git://git.saurik.com/ldid.git\n  git_rev: v{{ version }}\n\nbuild:\n  number: 2\n  skip: True  # [win]\n  ignore_run_exports:\n    - libcxx   # [osx]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - openssl  # [not osx]\n\ntest:\n  commands:\n    - ldid\n\nabout:\n  home: https://cydia.saurik.com/info/ldid/\n  license: AGPL-3.0-only\n  license_file:\n    - COPYING\n  summary: 'pseudo-codesign Mach-O files'\n  description: |\n    This program lets you manipulate the signature block in a Mach-O binary.\n    Use -S to sign a binary from scratch and allocate its entitlements,\n    -s to update the hashes on an existing binary, or -e to dump entitlements\n  dev_url: https://git.saurik.com/ldid.git\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "openssl"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openssl"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": null,
 "version": "2.1.2"
}