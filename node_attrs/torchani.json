{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/884096963.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/884494258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch111"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "torchani",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py38h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "wget",
    "unzip",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "wget",
    "unzip",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "wget",
    "unzip",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm",
    "unzip",
    "wget"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py38h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "wget",
    "unzip",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "wget",
    "unzip",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "wget",
    "unzip",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "torchani",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani",
    "torchani",
    "torchani",
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "name": "torchani",
 "new_version": "2.2.2",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py39h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "torchani",
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py38h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "hadim",
    "yueyericardo"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchani"
  ]
 },
 "pinning_version": "2022.03.21.01.01.44",
 "pre_pr_migrator_attempts": {
  "cuda110": 105,
  "cuda111_112": 243,
  "python310": 84
 },
 "pre_pr_migrator_status": {
  "cuda110": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1527933329\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 269, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 271, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "cuda111_112": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1527933329\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 269, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 271, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "python310": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2162674102\">bot CI job</a>): main: ['linux_64_c_compiler_version10cuda_compiler_version11.1cxx_compiler_version10numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.2cxx_compiler_version10numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_c_compiler_version7cuda_compiler_version10.2cxx_compiler_version7numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_c_compiler_version9cuda_compiler_version11.0cxx_compiler_version9numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n']"
 },
 "raw_meta_yaml": "# Notes: this receipt is based on torchvision-feedstock:\n# https://github.com/conda-forge/torchvision-feedstock/blob/master/recipe/meta.yaml\n\n{% set version = \"2.2.2\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\n\npackage:\n  name: torchani\n  version: {{ version }}\n\nsource:\n  url: https://github.com/aiqm/torchani/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f\n\nbuild:\n  number: 3\n  skip: true  # [win]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n  script_env:\n  - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n  script:\n    - \"{{ PYTHON }} -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps\"  # [cuda_compiler_version != \"None\"]\n    - \"{{ PYTHON }} -m pip install . -vvv --no-deps\"                                    # [cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}              # [cuda_compiler_version != \"None\"]\n    - sysroot_linux-64 ==2.17             # [linux64]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - python                              # [build_platform != target_platform]\n    - numpy                               # [build_platform != target_platform]\n    - cython                              # [build_platform != target_platform]\n  host:\n    - python\n    - numpy\n    - pip\n    # TODO pinning setuptools because of https://stackoverflow.com/a/70520199\n    # Can remove pinning when pytorch gets to 1.11\n    - setuptools ==59.5.0\n    - setuptools_scm ==6.3.2\n    - importlib_metadata\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n    # cuda 10.2 does not have cub, which need to be manually downloaded in setup.py\n    - wget                               # [cuda_compiler_version == \"10.2\"]\n    - unzip                              # [cuda_compiler_version == \"10.2\"]\n  run:\n    - python\n    - pip\n    - setuptools ==59.5.0\n    - setuptools_scm ==6.3.2\n    - importlib_metadata\n    - lark-parser\n    - requests\n    - h5py\n    - {{ pin_compatible('numpy') }}\n  run_constrained:\n    # 2022/02/05 hmaarrfk\n    # While conda packaging seems to allow us to specify\n    # constraints on the same package in different lines\n    # the resulting package doesn't have the ability to\n    # be specified in multiples lines\n    # This makes it tricky to use run_exports\n    # we add the GPU constraint in the run_constrained\n    # to allow us to have \"two\" constraints on the\n    # running package\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchani\n    - torchani.cuaev                     # [cuda_compiler_version != \"None\"]\n  source_files:\n    - torchani/resources/*\n    - tests/*\n    - tools/*\n    - download.sh\n    - dataset/*\n    - test_requirements.txt\n  requires:\n    - wget\n    - unzip\n    - tensorboard\n    - tqdm\n    - ase\n    - h5py\n    - pillow\n    - pyyaml\n    - pytest\n    - expecttest\n    - pkbar\n  commands:\n    # download testing datasets\n    - ./download.sh                                                           # [linux64]\n    # broken symlink that got ignored when copying\n    - ln -s ../download/dataset/ani-1x/ dataset/ani-1x                        # [linux64]\n    - ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4      # [linux64]\n    # test\n    - cd tests; python -m pytest -v -s *.py                                   # [linux64]\n\nabout:\n  home: https://github.com/aiqm/torchani\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Accurate Neural Network Potential on PyTorch'\n\nextra:\n  recipe-maintainers:\n    - hadim\n    - yueyericardo\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "h5py",
   "importlib_metadata",
   "lark-parser",
   "numpy",
   "pip",
   "python",
   "pytorch",
   "requests",
   "setuptools",
   "setuptools_scm",
   "sysroot_linux-64",
   "unzip",
   "wget"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "importlib_metadata",
    "linux-sysroot",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm",
    "unzip",
    "wget"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "linux-sysroot",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "unzip",
    "wget"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz",
 "version": "2.2.2"
}