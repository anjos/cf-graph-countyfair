{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/884096963.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/884494258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch111"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910785596.json"
   },
   "data": {
    "bot_rerun": 1651794083.091725,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/929225453.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/999972659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/9093ea3c-07ac-4d1c-8c5f-b0a19c157b4e.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch113"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 449, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 444, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse",
   "    response.begin()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1242, in recv_into",
   "    return self.read(nbytes, buffer)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1100, in read",
   "    return self._sslobj.read(len, buffer)",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 489, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise",
   "    raise value",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 451, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 340, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 201, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 600, in get",
   "    return self.request(\"GET\", url, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 171, in request",
   "    response = super().request(*args, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 587, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 701, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 578, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 211, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 296, in get_repo",
   "    fork_repo = gh.repository(ctx.github_username, feedstock_reponame)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 2062, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 216, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 206, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "torchani",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "7",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py39h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": [
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch"
   ],
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "7",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py310h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": [
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch"
   ],
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani",
    "torchani.cuaev",
    "torchani",
    "torchani",
    "torchani",
    "torchani",
    "torchani",
    "torchani",
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "name": "torchani",
 "new_version": "2.2.2",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "7",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py38h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": [
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch"
   ],
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "7",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2",
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.2"
   ],
   "string": "cpu_py310h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry",
    "hadim",
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "python",
    "pip",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": [
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch",
    "patches/back_port_pr_603.patch",
    "patches/back_port_pr_619.patch"
   ],
   "sha256": "525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py",
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani",
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar",
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt",
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchani"
  ]
 },
 "pinning_version": "2023.01.03.13.13.01",
 "pre_pr_migrator_attempts": {
  "cuda110": 105,
  "cuda111_112": 243,
  "python311": 110
 },
 "pre_pr_migrator_status": {
  "cuda110": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1527933329\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 269, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 271, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "cuda111_112": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1527933329\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 269, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 271, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "python311": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3938454137\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 449, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 444, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1242, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1100, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 489, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise\n    raise value\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 451, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 340, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 201, in _request\n    return request_method(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 600, in get\n    return self.request(\"GET\", url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 171, in request\n    response = super().request(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 587, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 701, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 578, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 211, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 296, in get_repo\n    fork_repo = gh.repository(ctx.github_username, feedstock_reponame)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 2062, in repository\n    json = self._json(self._get(url), 200)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 216, in _get\n    return self._request(\"get\", url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 206, in _request\n    raise exceptions.ConnectionError(exc)\ngithub3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n"
 },
 "raw_meta_yaml": "# Notes: this receipt is based on torchvision-feedstock:\n# https://github.com/conda-forge/torchvision-feedstock/blob/master/recipe/meta.yaml\n\n{% set version = \"2.2.2\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\n\npackage:\n  name: torchani\n  version: {{ version }}\n\nsource:\n  url: https://github.com/aiqm/torchani/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f\n  patches:\n    - patches/back_port_pr_603.patch\n    - patches/back_port_pr_619.patch\n\nbuild:\n  number: 7\n  skip: true  # [win]\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n  script_env:\n  - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n  script:\n    - \"{{ PYTHON }} -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps\"  # [cuda_compiler_version != \"None\"]\n    - \"{{ PYTHON }} -m pip install . -vvv --no-deps\"                                    # [cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}              # [cuda_compiler_version != \"None\"]\n    - sysroot_linux-64 ==2.17             # [linux64]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - python                              # [build_platform != target_platform]\n    - numpy                               # [build_platform != target_platform]\n    - cython                              # [build_platform != target_platform]\n  host:\n    - python\n    - numpy\n    - pip\n    - setuptools\n    - setuptools_scm ==6.3.2\n    - importlib_metadata\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n  run:\n    - python\n    - pip\n    - setuptools ==59.5.0\n    - setuptools_scm ==6.3.2\n    - importlib_metadata\n    - lark-parser\n    - requests\n    - h5py\n    - {{ pin_compatible('numpy') }}\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchani\n    - torchani.cuaev                     # [cuda_compiler_version != \"None\"]\n  source_files:\n    - torchani/resources/*\n    - tests/*\n    - tools/*\n    - download.sh\n    - dataset/*\n    - test_requirements.txt\n  requires:\n    - wget\n    - unzip\n    - tensorboard\n    - tqdm\n    - ase\n    - h5py\n    - pillow\n    - pyyaml\n    - pytest\n    - expecttest\n    - pkbar\n  commands:\n    # download testing datasets\n    - ./download.sh                                                           # [unix]\n    # broken symlink that got ignored when copying\n    - ln -s ../download/dataset/ani-1x/ dataset/ani-1x                        # [unix]\n    - ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4      # [unix]\n    - cd tests; python -m pytest -v -s *.py  # [unix]\nabout:\n  home: https://github.com/aiqm/torchani\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Accurate Neural Network Potential on PyTorch'\n\nextra:\n  recipe-maintainers:\n    - hadim\n    - yueyericardo\n    - mikemhenry\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "h5py",
   "importlib_metadata",
   "lark-parser",
   "numpy",
   "pip",
   "python",
   "pytorch",
   "requests",
   "setuptools",
   "setuptools_scm",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "setuptools",
    "setuptools_scm ==6.3.2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools ==59.5.0",
    "setuptools_scm ==6.3.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.2.tar.gz",
 "version": "2.2.2"
}