{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ctypesgen",
 "hash_type": "sha256",
 "name": "ctypesgen",
 "new_version": "1.0.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ctypesgen"
  ]
 },
 "raw_meta_yaml": "{% set name = \"ctypesgen\" %}\n{% set version = \"1.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/davidjamesca/ctypesgen/archive/{{ name }}-{{ version }}.tar.gz\n  sha256: 409ff3984ecf2aef09008045a713d61031990e95834074bff27957430223b729\n\nbuild:\n  entry_points:\n    - ctypesgen = ctypesgen.main:main\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=2.7\n    - setuptools\n  run:\n    - python >=2.7\n\ntest:\n  requires:\n    - pip\n  commands:\n    - python -m pip check\n    - ctypesgen --help\n\nabout:\n  home: https://github.com/davidjamesca/ctypesgen/\n  dev_url: https://github.com/davidjamesca/ctypesgen.git\n  doc_url: https://github.com/davidjamesca/ctypesgen/wiki\n  license: BSD-2-Clause\n  license_file: LICENSE\n  summary: Python wrapper generator for ctypes\n  description:\n    ctypesgen reads parses c header files and creates a wrapper for\n    libraries based on what it finds.\n    Preprocessor macros are handled in a manner consistent with typical\n    c code.\n    Preprocessor macro functions are translated into Python functions\n    that are then made available to the user of the newly-generated\n    Python wrapper library.\n    ctypesgen can also output JSON, which can be used with Mork, which\n    generates bindings for Lua, using the alien module\n    (which binds libffi to Lua).\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "strong_exports": false,
 "url": "https://github.com/davidjamesca/ctypesgen/archive/ctypesgen-1.0.2.tar.gz",
 "version": "1.0.2"
}