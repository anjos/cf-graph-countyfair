{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/201084037.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643565508.json"
   },
   "data": {
    "bot_rerun": 1635270880.3237278,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779071128.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909477206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/992448859.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1009425481.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1020250931.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jira",
 "hash_type": "sha256",
 "name": "jira",
 "new_version": "3.3.2",
 "new_version_attempts": {
  "3.0.1": 1,
  "3.1.1": 1,
  "3.2.0": 1,
  "3.3.0": 1,
  "3.3.1": 1,
  "3.3.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jira"
  ]
 },
 "pinning_version": "2022.08.08.11.16.33",
 "raw_meta_yaml": "{% set version = \"3.3.2\" %}\n\npackage:\n  name: jira\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/j/jira/jira-{{ version }}.tar.gz\n  sha256: b1812b1778ecfbd1da1c16182d6007516e73e65823a76f316655d3bb26e91edc\n\nbuild:\n  noarch: python\n  entry_points:\n    - jirashell = jira.jirashell:main\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.8\n    - setuptools >=41.0.0\n    - setuptools-scm >=1.15.0\n    - setuptools_scm_git_archive >=1.0\n    - wheel\n\n  run:\n    - defusedxml\n    - keyring\n    - packaging\n    - python >=3.8\n    - requests >=2.10.0\n    - requests-oauthlib >=1.1.0\n    - requests-toolbelt\n    - typing_extensions >=3.7.4.2\n\ntest:\n  requires:\n    - pip\n  imports:\n    - jira\n  commands:\n    - pip check\n    - jirashell --help\n\nabout:\n  home: https://github.com/pycontribs/jira\n  license: BSD-2-Clause\n  license_file: LICENSE\n  summary: Python library for interacting with JIRA via REST APIs.\n  dev_url: https://github.com/pycontribs/jira\n  doc_url: https://jira.readthedocs.io\n  description: |-\n    This library eases the use of the Jira REST API from Python and it has been \n    used in production for years.\n\nextra:\n  recipe-maintainers:\n    - ericdill\n    - parente\n    - bollwyvl\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://pypi.org/packages/source/j/jira/jira-3.3.2.tar.gz",
 "version": "3.3.2"
}