{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/859153314.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911282664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1042634339.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "drm4g",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/SantanderMetGroup/DRM4G",
   "home": "https://github.com/SantanderMetGroup/DRM4G",
   "license": "EUPL-1.1",
   "license_file": "LICENSE",
   "summary": "Meta-scheduling framework for distributed computing infrastructures"
  },
  "build": {
   "entry_points": [
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main",
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main",
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main",
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "cofinoa",
    "cofinoa",
    "cofinoa",
    "cofinoa"
   ]
  },
  "package": {
   "name": "drm4g",
   "version": "3.0.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp",
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp",
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp",
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp"
   ]
  },
  "source": {
   "sha256": "ece23c282d1d8fb82b34a8885166676984fd846da7ff644edc5fc174364de2a0",
   "url": "https://pypi.io/packages/source/d/drm4g/drm4g-3.0.11.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help",
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help",
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help",
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help"
   ],
   "imports": [
    "drm4g",
    "drm4g",
    "drm4g",
    "drm4g"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fabric",
    "paramiko",
    "python",
    "scp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/SantanderMetGroup/DRM4G",
   "home": "https://github.com/SantanderMetGroup/DRM4G",
   "license": "EUPL-1.1",
   "license_file": "LICENSE",
   "summary": "Meta-scheduling framework for distributed computing infrastructures"
  },
  "build": {
   "entry_points": [
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main",
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main",
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main",
    "drm4g=drm4g.commands.main:main",
    "gw_im_mad_drm4g.py=drm4g.core.im_mad:main",
    "gw_em_mad_drm4g.py=drm4g.core.em_mad:main",
    "gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "cofinoa",
    "cofinoa",
    "cofinoa",
    "cofinoa"
   ]
  },
  "package": {
   "name": "drm4g",
   "version": "3.0.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp",
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp",
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp",
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp"
   ]
  },
  "source": {
   "sha256": "ece23c282d1d8fb82b34a8885166676984fd846da7ff644edc5fc174364de2a0",
   "url": "https://pypi.io/packages/source/d/drm4g/drm4g-3.0.11.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help",
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help",
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help",
    "pip check",
    "drm4g --help",
    "gw_im_mad_drm4g.py --help",
    "gw_em_mad_drm4g.py --help",
    "gw_tm_mad_drm4g.py --help"
   ],
   "imports": [
    "drm4g",
    "drm4g",
    "drm4g",
    "drm4g"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "drm4g",
 "new_version": "3.0.13",
 "new_version_attempts": {
  "3.0.13": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "drm4g"
  ]
 },
 "pinning_version": "2022.08.31.15.30.59",
 "raw_meta_yaml": "{% set name = \"drm4g\" %}\n{% set version = \"3.0.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/drm4g-{{ version }}.tar.gz\n  sha256: ece23c282d1d8fb82b34a8885166676984fd846da7ff644edc5fc174364de2a0\n\nbuild:\n  skip: true  # [not linux]\n  entry_points:\n    - drm4g=drm4g.commands.main:main\n    - gw_im_mad_drm4g.py=drm4g.core.im_mad:main\n    - gw_em_mad_drm4g.py=drm4g.core.em_mad:main\n    - gw_tm_mad_drm4g.py=drm4g.core.tm_mad:main\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make\n  host:\n    - pip\n    - python\n  run:\n    - fabric\n    - paramiko >=2.4\n    - python\n    - scp\n\ntest:\n  imports:\n    - drm4g\n  commands:\n    - pip check\n    - drm4g --help\n    - gw_im_mad_drm4g.py --help\n    - gw_em_mad_drm4g.py --help\n    - gw_tm_mad_drm4g.py --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/SantanderMetGroup/DRM4G\n  summary: Meta-scheduling framework for distributed computing infrastructures\n  dev_url: https://github.com/SantanderMetGroup/DRM4G\n  license: EUPL-1.1\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - cofinoa\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fabric",
   "make",
   "paramiko",
   "pip",
   "python",
   "scp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fabric",
    "paramiko",
    "python",
    "scp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fabric",
    "paramiko >=2.4",
    "python",
    "scp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/d/drm4g/drm4g-3.0.11.tar.gz",
 "version": "3.0.11"
}