{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/580507125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/581022378.json"
   },
   "data": {
    "bot_rerun": 1669302916.827358,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/860239999.json"
   },
   "data": {
    "bot_rerun": 1669302916.8275285,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1134654973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "jaeger-browser",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "jaeger-browser helps you submit Jaeger traces from your browser.\nIf you want to use this alongside your Jupyter server, check out jupyter-jaeger.\nThere is an example in that repository of starting a span in a kernel server side and\nthen continuing it on the clien side.\n",
   "dev_url": "https://github.com/Quansight/jaeger-browser",
   "doc_url": "https://github.com/Quansight/jaeger-browser",
   "home": "https://github.com/Quansight/jaeger-browser",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "jaeger-browser helps you submit Jaeger traces from your browser."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "jaeger-browser",
   "version": "1.0.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit"
   ],
   "run": [
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette"
   ]
  },
  "source": {
   "sha256": "75b019c8a3f66254fece0517ddae17064d1e14b90716270eac6039dd23af41d4",
   "url": "https://pypi.io/packages/source/j/jaeger_browser/jaeger_browser-1.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flit",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jaeger",
    "jaeger-client",
    "mypy_extensions",
    "opentracing",
    "python",
    "starlette",
    "typing-extensions",
    "uvicorn",
    "yarn"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "jaeger-browser helps you submit Jaeger traces from your browser.\nIf you want to use this alongside your Jupyter server, check out jupyter-jaeger.\nThere is an example in that repository of starting a span in a kernel server side and\nthen continuing it on the clien side.\n",
   "dev_url": "https://github.com/Quansight/jaeger-browser",
   "doc_url": "https://github.com/Quansight/jaeger-browser",
   "home": "https://github.com/Quansight/jaeger-browser",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "jaeger-browser helps you submit Jaeger traces from your browser."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "jaeger-browser",
   "version": "1.0.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit"
   ],
   "run": [
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette"
   ]
  },
  "source": {
   "sha256": "75b019c8a3f66254fece0517ddae17064d1e14b90716270eac6039dd23af41d4",
   "url": "https://pypi.io/packages/source/j/jaeger_browser/jaeger_browser-1.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser"
   ]
  }
 },
 "name": "jaeger-browser",
 "new_version": "1.0.1",
 "osx_64_meta_yaml": {
  "about": {
   "description": "jaeger-browser helps you submit Jaeger traces from your browser.\nIf you want to use this alongside your Jupyter server, check out jupyter-jaeger.\nThere is an example in that repository of starting a span in a kernel server side and\nthen continuing it on the clien side.\n",
   "dev_url": "https://github.com/Quansight/jaeger-browser",
   "doc_url": "https://github.com/Quansight/jaeger-browser",
   "home": "https://github.com/Quansight/jaeger-browser",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "jaeger-browser helps you submit Jaeger traces from your browser."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "jaeger-browser",
   "version": "1.0.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit",
    "python",
    "pip",
    "flit"
   ],
   "run": [
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette",
    "python",
    "jaeger",
    "yarn",
    "opentracing",
    "mypy_extensions",
    "typing-extensions",
    "jaeger-client",
    "uvicorn",
    "starlette"
   ]
  },
  "source": {
   "sha256": "75b019c8a3f66254fece0517ddae17064d1e14b90716270eac6039dd23af41d4",
   "url": "https://pypi.io/packages/source/j/jaeger_browser/jaeger_browser-1.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser",
    "jaeger_browser"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flit",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jaeger",
    "jaeger-client",
    "mypy_extensions",
    "opentracing",
    "python",
    "starlette",
    "typing-extensions",
    "uvicorn",
    "yarn"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jaeger-browser"
  ]
 },
 "pinning_version": "2022.11.23.19.37.15",
 "pre_pr_migrator_attempts": {
  "pypy38": 2
 },
 "pre_pr_migrator_status": {
  "pypy38": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3936089349\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 340, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"jaeger-browser\" %}\n{% set version = \"1.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/j/jaeger_browser/jaeger_browser-{{ version }}.tar.gz\n  sha256: 75b019c8a3f66254fece0517ddae17064d1e14b90716270eac6039dd23af41d4\n\nbuild:\n  number: 2\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  skip: True  # [win]\n\nrequirements:\n  host:\n    - python\n    - pip\n    - flit\n  run:\n    - python\n    - jaeger\n    - yarn\n    - opentracing\n    - mypy_extensions\n    - typing-extensions\n    - jaeger-client\n    - uvicorn\n    - starlette\n\ntest:\n  imports:\n    - jaeger_browser\n\nabout:\n  home: https://github.com/Quansight/jaeger-browser\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'jaeger-browser helps you submit Jaeger traces from your browser.'\n  description: |\n    jaeger-browser helps you submit Jaeger traces from your browser.\n    If you want to use this alongside your Jupyter server, check out jupyter-jaeger. \n    There is an example in that repository of starting a span in a kernel server side and\n    then continuing it on the clien side.\n  doc_url: https://github.com/Quansight/jaeger-browser\n  dev_url: https://github.com/Quansight/jaeger-browser\n\nextra:\n  recipe-maintainers:\n    - xmnlab\n",
 "req": {
  "__set__": true,
  "elements": [
   "flit",
   "jaeger",
   "jaeger-client",
   "mypy_extensions",
   "opentracing",
   "pip",
   "python",
   "starlette",
   "typing-extensions",
   "uvicorn",
   "yarn"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flit",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jaeger",
    "jaeger-client",
    "mypy_extensions",
    "opentracing",
    "python",
    "starlette",
    "typing-extensions",
    "uvicorn",
    "yarn"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "flit",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jaeger",
    "jaeger-client",
    "mypy_extensions",
    "opentracing",
    "python",
    "starlette",
    "typing-extensions",
    "uvicorn",
    "yarn"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/j/jaeger_browser/jaeger_browser-1.0.1.tar.gz",
 "version": "1.0.1"
}