{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/660935542.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6240"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/723620499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6244"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/727444292.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6246"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/872316940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6260"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910254200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6262"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964046776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6264"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019354395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6266"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gds-root-extensions",
 "hash_type": "sha256",
 "name": "gds-root-extensions",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gds-root-extensions-base",
   "gds-root-extensions-crtools"
  ]
 },
 "pinning_version": "2022.08.06.11.18.30",
 "pre_pr_migrator_attempts": {
  "root_base6244": 1,
  "root_base6246": 1
 },
 "pre_pr_migrator_status": {
  "root_base6244": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1185647848\">bot CI job</a>): master: ['linux_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 2\\n', 'osx_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 3\\n']",
  "root_base6246": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1200524950\">bot CI job</a>): master: ['linux_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 2\\n', 'osx_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 3\\n']"
 },
 "raw_meta_yaml": "{% set name = \"gds-root-extensions\" %}\n{% set version = \"2.19.4\" %}\n\n# dependencies\n{% set gds_base_version = \"2.19.5\" %}\n{% set gds_lsmp_version = \"2.19.7\" %}\n{% set gds_frameio_version = \"2.19.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://software.igwn.org/sources/source/{{ name }}-{{ version }}.tar.gz\n  sha256: 275c43b5e6ad61357e1a1053210fe05522cfae0fa77213fa72a13ae3948b0995\n\nbuild:\n  number: 10\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\n    - pkg-config\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - gds-base >={{ gds_base_version }}\n    - gds-base-crtools >={{ gds_base_version }}\n    - gds-base-gdstrig >={{ gds_base_version }}\n    - gds-frameio-base >={{ gds_frameio_version }}\n    - gds-lsmp >={{ gds_lsmp_version }}\n    - root_base\n\noutputs:\n  - name: gds-root-extensions-base\n    build:\n      ignore_run_exports:\n        # header required, no libraries\n        - gds-base-crtools\n      run_exports:\n        - {{ pin_subpackage(\"gds-root-extensions-base\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base >={{ gds_base_version }}\n        - gds-base-crtools >={{ gds_base_version }}\n        - gds-base-gdstrig >={{ gds_base_version }}\n        - gds-frameio-base >={{ gds_frameio_version }}\n        - gds-lsmp >={{ gds_lsmp_version }}\n        - ldas-tools-al\n        - ldas-tools-framecpp\n        - root_base\n      run:\n        - gds-base >={{ gds_base_version }}\n        - gds-frameio-base >={{ gds_frameio_version }}\n        - gds-lsmp >={{ gds_lsmp_version }}\n        - ldas-tools-al\n        - ldas-tools-framecpp\n        - root_base\n    files:\n      - include/gds/events/*.hh\n      - lib/libgdsevent{{ SHLIB_EXT }}*\n      - lib/libRframefast*\n      - lib/libRframeio*\n      - lib/libRgdsbase*\n      - lib/libRgdsevent*\n      - lib/libRgdscntr*\n      - lib/libRgdsmath*\n      - lib/libRgdstrig*\n      - lib/libRxsil*\n      - lib/pkgconfig/gdsevents.pc\n      - share/gds/setup/root-setup\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libRframeio${SHLIB_EXT}  # [not linux]\n        - root -b -l -x -q -e 'gSystem->Load(\"libRframeio\");'  # [linux]\n        - root -b -l -x -q -e 'gSystem->Load(\"libRgdsevent\");'  # [linux]\n    about:\n      home: https://wiki.ligo.org/Computing/DASWG/DMT\n      dev_url: https://git.ligo.org/gds/gds.git\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS ROOT extensions\n      description: |\n        GDS ROOT extensions\n\n  - name: gds-root-extensions-crtools\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"gds-root-extensions-crtools\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base >={{ gds_base_version }}\n        - root_base\n      run:\n        - gds-base >={{ gds_base_version }}\n        - {{ pin_subpackage(\"gds-root-extensions-base\", exact=True) }}\n        - root_base\n    files:\n      - lib/libRdmtsigp*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libRdmtsigp${SHLIB_EXT}  # [not linux]\n        - root -b -x -q -e 'gSystem->Load(\"libRdmtsigp\")'  # [linux]\n    about:\n      home: https://wiki.ligo.org/Computing/DASWG/DMT\n      dev_url: https://git.ligo.org/gds/gds.git\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS control room tools\n      description: |\n        GDS ROOT extensions for control rooms\n\nabout:\n  home: https://wiki.ligo.org/Computing/DASWG/DMT\n  dev_url: https://git.ligo.org/gds/gds.git\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: GDS ROOT extensions\n  description: |\n    GDS ROOT extensions\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - emaros\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://software.igwn.org/sources/source/gds-root-extensions-2.19.4.tar.gz",
 "version": "2.19.4"
}