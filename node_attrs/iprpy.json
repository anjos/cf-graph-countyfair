{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/955260388.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "iprpy",
 "hash_type": "sha256",
 "name": "iprpy",
 "new_version": "0.11.3",
 "new_version_attempts": {
  "0.11.0": 26,
  "0.11.1": 321,
  "0.11.2": 5,
  "0.11.3": 1
 },
 "new_version_errors": {
  "0.11.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.11.0' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "0.11.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.11.1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "0.11.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.11.2' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "iprpy"
  ]
 },
 "pinning_version": "2022.06.01.21.06.06",
 "raw_meta_yaml": "{% set name = \"iprPy\" %}\n{% set version = \"0.11.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9047fdd5461769924c737e1b28b4d24ebfd1d37495d38cb15a8ae4baee0e70a8\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - iprPy = iprPy.command_line:command_line\n\nrequirements:\n  build:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - pip\n    - datamodeldict\n    - numpy >=1.15\n    - matplotlib-base\n    - scipy\n    - pandas\n    - atomman =1.4.5\n    - requests\n\ntest:\n  imports:\n    - iprPy\n  commands:\n    - pip check\n\nabout:\n  home: https://www.ctcms.nist.gov/potentials/iprPy/\n  license: NIST-PD\n  license_file: LICENSE.TXT\n  summary: NIST Interatomic Potential Repository property calculation tools\n\n  description: |\n    The iprPy framework is a collection of tools and resources supporting the\n    design of scientific calculations that are open source with minimum\n    barriers for usage, have transparent methodologies supporting knowledge\n    transfer and education, produce results that are both human and machine\n    readable, allow investigations into method and parameter sensitivity, and\n    can be integrated into workflows. The framework was originally created to\n    support the NIST Interatomic Potential Repository by evaluating basic\n    materials properties across multiple classical interatomic potentials.\n    Because of this, many of the included calculations and tools are designed\n    towards molecular dynamics simulations.\n  doc_url: https://www.ctcms.nist.gov/potentials/iprPy/\n  dev_url: https://github.com/usnistgov/iprPy\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - lmhale99\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/iprPy/iprPy-0.11.3.tar.gz",
 "version": "0.11.3"
}