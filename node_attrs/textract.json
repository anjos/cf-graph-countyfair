{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335949501.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492717031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519042809.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 1347, in getresponse",
   "    response.begin()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 307, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 268, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into",
   "    return self.read(nbytes, buffer)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read",
   "    return self._sslobj.read(len, buffer)",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 195, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 174, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 167, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 256, in get_repo",
   "    repo = gh.repository(\"conda-forge\", feedstock_reponame)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 1986, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 210, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 200, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "textract",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/deanmalmgren/textract",
   "doc_url": "https://textract.readthedocs.io/en/latest/",
   "home": "https://github.com/deanmalmgren/textract",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Extract text from any document. no muss. no fuss."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "textract",
   "version": "1.5.0"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "argcomplete",
    "chardet",
    "python-pptx >=0.5.1",
    "pdfminer.six",
    "docx2txt",
    "beautifulsoup4",
    "xlrd",
    "ebooklib",
    "speechrecognition >=3.1.0",
    "msg-extractor",
    "six"
   ]
  },
  "source": {
   "fn": "textract-1.5.0.tar.gz",
   "sha256": "0e73dd1679f817bf985dd08e9e8b7e34715bb116d6ec10285a9149a145c457d7",
   "url": "https://pypi.io/packages/source/t/textract/textract-1.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "textract -h"
   ],
   "imports": [
    "textract",
    "textract.cli",
    "textract.colors",
    "textract.exceptions",
    "textract.parsers",
    "textract.parsers.audio",
    "textract.parsers.csv_parser",
    "textract.parsers.doc_parser",
    "textract.parsers.docx_parser",
    "textract.parsers.eml_parser",
    "textract.parsers.epub_parser",
    "textract.parsers.gif_parser",
    "textract.parsers.html_parser",
    "textract.parsers.image",
    "textract.parsers.jpg_parser",
    "textract.parsers.json_parser",
    "textract.parsers.mp3_parser",
    "textract.parsers.msg_parser",
    "textract.parsers.odt_parser",
    "textract.parsers.ogg_parser",
    "textract.parsers.pdf_parser",
    "textract.parsers.png_parser",
    "textract.parsers.pptx_parser",
    "textract.parsers.ps_parser",
    "textract.parsers.rtf_parser",
    "textract.parsers.tiff_parser",
    "textract.parsers.txt_parser",
    "textract.parsers.utils",
    "textract.parsers.wav_parser",
    "textract.parsers.xls_parser",
    "textract.parsers.xlsx_parser"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "beautifulsoup4",
    "chardet",
    "docx2txt",
    "ebooklib",
    "msg-extractor",
    "pdfminer.six",
    "python",
    "python-pptx",
    "six",
    "speechrecognition",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/deanmalmgren/textract",
   "doc_url": "https://textract.readthedocs.io/en/latest/",
   "home": "https://github.com/deanmalmgren/textract",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Extract text from any document. no muss. no fuss."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "pmlandwehr",
    "pmlandwehr",
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "textract",
   "version": "1.5.0"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "argcomplete",
    "chardet",
    "python-pptx >=0.5.1",
    "pdfminer.six",
    "docx2txt",
    "beautifulsoup4",
    "xlrd",
    "ebooklib",
    "speechrecognition >=3.1.0",
    "msg-extractor",
    "six",
    "python",
    "argcomplete",
    "chardet",
    "python-pptx >=0.5.1",
    "pdfminer.six",
    "docx2txt",
    "beautifulsoup4",
    "xlrd",
    "ebooklib",
    "speechrecognition >=3.1.0",
    "msg-extractor",
    "six",
    "python",
    "argcomplete",
    "chardet",
    "python-pptx >=0.5.1",
    "pdfminer.six",
    "docx2txt",
    "beautifulsoup4",
    "xlrd",
    "ebooklib",
    "speechrecognition >=3.1.0",
    "msg-extractor",
    "six"
   ]
  },
  "source": {
   "fn": "textract-1.5.0.tar.gz",
   "sha256": "0e73dd1679f817bf985dd08e9e8b7e34715bb116d6ec10285a9149a145c457d7",
   "url": "https://pypi.io/packages/source/t/textract/textract-1.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "textract -h",
    "textract -h",
    "textract -h"
   ],
   "imports": [
    "textract",
    "textract.cli",
    "textract.colors",
    "textract.exceptions",
    "textract.parsers",
    "textract.parsers.audio",
    "textract.parsers.csv_parser",
    "textract.parsers.doc_parser",
    "textract.parsers.docx_parser",
    "textract.parsers.eml_parser",
    "textract.parsers.epub_parser",
    "textract.parsers.gif_parser",
    "textract.parsers.html_parser",
    "textract.parsers.image",
    "textract.parsers.jpg_parser",
    "textract.parsers.json_parser",
    "textract.parsers.mp3_parser",
    "textract.parsers.msg_parser",
    "textract.parsers.odt_parser",
    "textract.parsers.ogg_parser",
    "textract.parsers.pdf_parser",
    "textract.parsers.png_parser",
    "textract.parsers.pptx_parser",
    "textract.parsers.ps_parser",
    "textract.parsers.rtf_parser",
    "textract.parsers.tiff_parser",
    "textract.parsers.txt_parser",
    "textract.parsers.utils",
    "textract.parsers.wav_parser",
    "textract.parsers.xls_parser",
    "textract.parsers.xlsx_parser",
    "textract",
    "textract.cli",
    "textract.colors",
    "textract.exceptions",
    "textract.parsers",
    "textract.parsers.audio",
    "textract.parsers.csv_parser",
    "textract.parsers.doc_parser",
    "textract.parsers.docx_parser",
    "textract.parsers.eml_parser",
    "textract.parsers.epub_parser",
    "textract.parsers.gif_parser",
    "textract.parsers.html_parser",
    "textract.parsers.image",
    "textract.parsers.jpg_parser",
    "textract.parsers.json_parser",
    "textract.parsers.mp3_parser",
    "textract.parsers.msg_parser",
    "textract.parsers.odt_parser",
    "textract.parsers.ogg_parser",
    "textract.parsers.pdf_parser",
    "textract.parsers.png_parser",
    "textract.parsers.pptx_parser",
    "textract.parsers.ps_parser",
    "textract.parsers.rtf_parser",
    "textract.parsers.tiff_parser",
    "textract.parsers.txt_parser",
    "textract.parsers.utils",
    "textract.parsers.wav_parser",
    "textract.parsers.xls_parser",
    "textract.parsers.xlsx_parser",
    "textract",
    "textract.cli",
    "textract.colors",
    "textract.exceptions",
    "textract.parsers",
    "textract.parsers.audio",
    "textract.parsers.csv_parser",
    "textract.parsers.doc_parser",
    "textract.parsers.docx_parser",
    "textract.parsers.eml_parser",
    "textract.parsers.epub_parser",
    "textract.parsers.gif_parser",
    "textract.parsers.html_parser",
    "textract.parsers.image",
    "textract.parsers.jpg_parser",
    "textract.parsers.json_parser",
    "textract.parsers.mp3_parser",
    "textract.parsers.msg_parser",
    "textract.parsers.odt_parser",
    "textract.parsers.ogg_parser",
    "textract.parsers.pdf_parser",
    "textract.parsers.png_parser",
    "textract.parsers.pptx_parser",
    "textract.parsers.ps_parser",
    "textract.parsers.rtf_parser",
    "textract.parsers.tiff_parser",
    "textract.parsers.txt_parser",
    "textract.parsers.utils",
    "textract.parsers.wav_parser",
    "textract.parsers.xls_parser",
    "textract.parsers.xlsx_parser"
   ]
  }
 },
 "name": "textract",
 "new_version": "1.6.3",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/deanmalmgren/textract",
   "doc_url": "https://textract.readthedocs.io/en/latest/",
   "home": "https://github.com/deanmalmgren/textract",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Extract text from any document. no muss. no fuss."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "textract",
   "version": "1.5.0"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "argcomplete",
    "chardet",
    "python-pptx >=0.5.1",
    "pdfminer.six",
    "docx2txt",
    "beautifulsoup4",
    "xlrd",
    "ebooklib",
    "speechrecognition >=3.1.0",
    "msg-extractor",
    "six"
   ]
  },
  "source": {
   "fn": "textract-1.5.0.tar.gz",
   "sha256": "0e73dd1679f817bf985dd08e9e8b7e34715bb116d6ec10285a9149a145c457d7",
   "url": "https://pypi.io/packages/source/t/textract/textract-1.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "textract -h"
   ],
   "imports": [
    "textract",
    "textract.cli",
    "textract.colors",
    "textract.exceptions",
    "textract.parsers",
    "textract.parsers.audio",
    "textract.parsers.csv_parser",
    "textract.parsers.doc_parser",
    "textract.parsers.docx_parser",
    "textract.parsers.eml_parser",
    "textract.parsers.epub_parser",
    "textract.parsers.gif_parser",
    "textract.parsers.html_parser",
    "textract.parsers.image",
    "textract.parsers.jpg_parser",
    "textract.parsers.json_parser",
    "textract.parsers.mp3_parser",
    "textract.parsers.msg_parser",
    "textract.parsers.odt_parser",
    "textract.parsers.ogg_parser",
    "textract.parsers.pdf_parser",
    "textract.parsers.png_parser",
    "textract.parsers.pptx_parser",
    "textract.parsers.ps_parser",
    "textract.parsers.rtf_parser",
    "textract.parsers.tiff_parser",
    "textract.parsers.txt_parser",
    "textract.parsers.utils",
    "textract.parsers.wav_parser",
    "textract.parsers.xls_parser",
    "textract.parsers.xlsx_parser"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "beautifulsoup4",
    "chardet",
    "docx2txt",
    "ebooklib",
    "msg-extractor",
    "pdfminer.six",
    "python",
    "python-pptx",
    "six",
    "speechrecognition",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "textract"
  ]
 },
 "pinning_version": "2020.11.10.21.31.03",
 "pre_pr_migrator_status": {
  "pypy37": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/812296991\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 1347, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 307, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/http/client.py\", line 268, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 735, in reraise\n    raise value\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 195, in _request\n    return request_method(*args, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 174, in request\n    response = super(GitHubSession, self).request(*args, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 167, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 256, in get_repo\n    repo = gh.repository(\"conda-forge\", feedstock_reponame)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/github.py\", line 1986, in repository\n    json = self._json(self._get(url), 200)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 210, in _get\n    return self._request(\"get\", url, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 200, in _request\n    raise exceptions.ConnectionError(exc)\ngithub3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n",
  "python39": "not solvable: master: ['No `.ci_support/*.yaml` files found! This can happen when a rerender results in no builds for a recipe (e.g., a recipe is python 2.7 only). This attempted migration is being reported as not solvable.']"
 },
 "raw_meta_yaml": "{%set name = \"textract\" %}\n{%set version = \"1.5.0\" %}\n{%set compress_type = \"tar.gz\" %}\n{%set hash_type = \"sha256\" %}\n{%set hash_val = \"0e73dd1679f817bf985dd08e9e8b7e34715bb116d6ec10285a9149a145c457d7\" %}\n{%set build_num = \"1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ compress_type }}\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ compress_type }}\n  {{ hash_type }}: {{ hash_val }}\n\nbuild:\n  skip: True  # [py3k]\n  number: {{ build_num }}\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - argcomplete\n    - chardet\n    - python-pptx >=0.5.1\n    - pdfminer.six\n    - docx2txt\n    - beautifulsoup4\n    - xlrd\n    - ebooklib\n    - speechrecognition >=3.1.0\n    - msg-extractor\n    - six\n\ntest:\n  imports:\n    - textract\n    - textract.cli\n    - textract.colors\n    - textract.exceptions\n    - textract.parsers\n    - textract.parsers.audio\n    - textract.parsers.csv_parser\n    - textract.parsers.doc_parser\n    - textract.parsers.docx_parser\n    - textract.parsers.eml_parser\n    - textract.parsers.epub_parser\n    - textract.parsers.gif_parser\n    - textract.parsers.html_parser\n    - textract.parsers.image\n    - textract.parsers.jpg_parser\n    - textract.parsers.json_parser\n    - textract.parsers.mp3_parser\n    - textract.parsers.msg_parser\n    - textract.parsers.odt_parser\n    - textract.parsers.ogg_parser\n    - textract.parsers.pdf_parser\n    - textract.parsers.png_parser\n    - textract.parsers.pptx_parser\n    - textract.parsers.ps_parser\n    - textract.parsers.rtf_parser\n    - textract.parsers.tiff_parser\n    - textract.parsers.txt_parser\n    - textract.parsers.utils\n    - textract.parsers.wav_parser\n    - textract.parsers.xls_parser\n    - textract.parsers.xlsx_parser\n\n  commands:\n    - textract -h\n\nabout:\n  home: https://github.com/deanmalmgren/textract\n  license_file: LICENSE\n  license: MIT\n  license_family: MIT\n  summary: Extract text from any document. no muss. no fuss.\n  doc_url: https://textract.readthedocs.io/en/latest/\n  dev_url: https://github.com/deanmalmgren/textract\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n",
 "req": {
  "__set__": true,
  "elements": [
   "argcomplete",
   "beautifulsoup4",
   "chardet",
   "docx2txt",
   "ebooklib",
   "msg-extractor",
   "pdfminer.six",
   "python",
   "python-pptx",
   "setuptools",
   "six",
   "speechrecognition",
   "xlrd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "beautifulsoup4",
    "chardet",
    "docx2txt",
    "ebooklib",
    "msg-extractor",
    "pdfminer.six",
    "python",
    "python-pptx",
    "six",
    "speechrecognition",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "beautifulsoup4",
    "chardet",
    "docx2txt",
    "ebooklib",
    "msg-extractor",
    "pdfminer.six",
    "python",
    "python-pptx >=0.5.1",
    "six",
    "speechrecognition >=3.1.0",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/textract/textract-1.5.0.tar.gz",
 "version": "1.5.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/deanmalmgren/textract",
   "doc_url": "https://textract.readthedocs.io/en/latest/",
   "home": "https://github.com/deanmalmgren/textract",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Extract text from any document. no muss. no fuss."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "textract",
   "version": "1.5.0"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "argcomplete",
    "chardet",
    "python-pptx >=0.5.1",
    "pdfminer.six",
    "docx2txt",
    "beautifulsoup4",
    "xlrd",
    "ebooklib",
    "speechrecognition >=3.1.0",
    "msg-extractor",
    "six"
   ]
  },
  "source": {
   "fn": "textract-1.5.0.tar.gz",
   "sha256": "0e73dd1679f817bf985dd08e9e8b7e34715bb116d6ec10285a9149a145c457d7",
   "url": "https://pypi.io/packages/source/t/textract/textract-1.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "textract -h"
   ],
   "imports": [
    "textract",
    "textract.cli",
    "textract.colors",
    "textract.exceptions",
    "textract.parsers",
    "textract.parsers.audio",
    "textract.parsers.csv_parser",
    "textract.parsers.doc_parser",
    "textract.parsers.docx_parser",
    "textract.parsers.eml_parser",
    "textract.parsers.epub_parser",
    "textract.parsers.gif_parser",
    "textract.parsers.html_parser",
    "textract.parsers.image",
    "textract.parsers.jpg_parser",
    "textract.parsers.json_parser",
    "textract.parsers.mp3_parser",
    "textract.parsers.msg_parser",
    "textract.parsers.odt_parser",
    "textract.parsers.ogg_parser",
    "textract.parsers.pdf_parser",
    "textract.parsers.png_parser",
    "textract.parsers.pptx_parser",
    "textract.parsers.ps_parser",
    "textract.parsers.rtf_parser",
    "textract.parsers.tiff_parser",
    "textract.parsers.txt_parser",
    "textract.parsers.utils",
    "textract.parsers.wav_parser",
    "textract.parsers.xls_parser",
    "textract.parsers.xlsx_parser"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "beautifulsoup4",
    "chardet",
    "docx2txt",
    "ebooklib",
    "msg-extractor",
    "pdfminer.six",
    "python",
    "python-pptx",
    "six",
    "speechrecognition",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}