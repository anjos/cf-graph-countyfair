{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196933259.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222703464.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339439045.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395387562.json"
   },
   "data": {
    "bot_rerun": 1600812303.8980768,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492045844.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513600836.json"
   },
   "data": {
    "bot_rerun": 1607197477.6333354,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528793708.json"
   },
   "data": {
    "bot_rerun": 1607197477.6335893,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533083786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533085999.json"
   },
   "data": {
    "bot_rerun": 1607280130.3723326,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533249861.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560158931.json"
   },
   "data": {
    "bot_rerun": 1646870265.7784383,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776362109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/870977031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1037848324.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "lightfm",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "2",
   "script": [
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.16"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "41950fd8affde192c10b517148aa7f6d016ae2f75a2ec1187335f1c4d21876ac",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.16.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "2",
   "script": [
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "set LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv",
    "set LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv",
    "set LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.16"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "41950fd8affde192c10b517148aa7f6d016ae2f75a2ec1187335f1c4d21876ac",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.16.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "name": "lightfm",
 "new_version": "1.16",
 "new_version_attempts": {
  "1.16": 2
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "2",
   "script": [
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.16"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "41950fd8affde192c10b517148aa7f6d016ae2f75a2ec1187335f1c4d21876ac",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.16.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "2",
   "script": [
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
    "export LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.16"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "41950fd8affde192c10b517148aa7f6d016ae2f75a2ec1187335f1c4d21876ac",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.16.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lightfm"
  ]
 },
 "pinning_version": "2022.08.26.08.26.25",
 "pre_pr_migrator_attempts": {
  "python311": 2,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3365009401\">bot CI job</a>): main: ['linux_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package numpy-base-1.23.1-py38ha15fc14_0 requires python >=3.8,<3.9.0a0, but none of the providers can be installed\\n', 'osx_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package numpy-base-1.23.1-py38h3b1a694_0 requires python >=3.8,<3.9.0a0, but none of the providers can be installed\\n', 'osx_arm64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package scipy-1.7.1-py39h2f0f56f_1 requires python >=3.9,<3.10.0a0, but none of the providers can be installed\\n', 'win_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package scipy-0.19.1-py27h069396b_3 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']",
  "python39": "not solvable: ['win_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package scipy-0.19.1-py27h069396b_3 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.16\" %}\n\npackage:\n  name: lightfm\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lightfm/lightfm-{{ version }}.tar.gz\n  sha256: 41950fd8affde192c10b517148aa7f6d016ae2f75a2ec1187335f1c4d21876ac\n\nbuild:\n  number: 2\n  script: \n    # LIGHTFM_NO_CFLAGS is set to build without -march=nativ and -ffast-math as defined in setup.py\n    - export LIGHTFM_NO_CFLAGS=1 && {{ PYTHON }} -m pip install . --no-deps -vv  # [unix]\n    - set LIGHTFM_NO_CFLAGS=1 && {{ PYTHON }} -m pip install . --no-deps -vv  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n    - scipy >=0.17\n    - requests\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.17\n    - requests\n\ntest:\n  imports:\n    # ensure OpenMP backend is used on linux\n    - lightfm._lightfm_fast_openmp  # [linux]\n    - lightfm\n    - lightfm.lightfm\n\nabout:\n  home: https://github.com/lyst/lightfm\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: A Python implementation of LightFM, a hybrid recommendation algorithm.\n  description: |\n    LightFM is a Python implementation of a number of popular recommendation\n    algorithms for both implicit and explicit feedback, including efficient\n    implementation of BPR and WARP ranking losses. It's easy to use,\n    fast (via multithreaded model estimation), and produces high quality results.\n  doc_url: http://lyst.github.io/lightfm/docs/home.html\n  dev_url: https://github.com/lyst/lightfm\n\nextra:\n  recipe-maintainers:\n    - SimonCW\n    - maciejkula\n    - rth\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python",
   "requests",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy >=0.17"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy >=0.17"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.16.tar.gz",
 "version": "1.16",
 "win_64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "2",
   "script": [
    "set LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv",
    "set LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv",
    "set LIGHTFM_NO_CFLAGS=1 && /usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth",
    "SimonCW",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.16"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "41950fd8affde192c10b517148aa7f6d016ae2f75a2ec1187335f1c4d21876ac",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.16.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}