{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/680816277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/c36cbde8-4540-4851-97e5-97f2c1d0936f.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680846536.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "libastra",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://www.astra-toolbox.com",
   "license": "GPL-3.0-only",
   "license_file": [
    "COPYING",
    "lib/licenses/rapidxml.txt",
    "COPYING",
    "lib/licenses/rapidxml.txt",
    "COPYING",
    "lib/licenses/rapidxml.txt",
    "COPYING",
    "lib/licenses/rapidxml.txt"
   ],
   "summary": "libastra is a C++ library of high-performance GPU primitives for 2D and 3D tomography."
  },
  "build": {
   "number": "1",
   "run_exports": [
    "libastra",
    "libastra",
    "libastra",
    "libastra"
   ],
   "script": "cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ${CMAKE_ARGS} ${SRC_DIR} && ninja install",
   "string": "cuda10.2h1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "carterbox",
    "carterbox",
    "carterbox",
    "carterbox"
   ]
  },
  "package": {
   "name": "libastra",
   "version": "1.9.9"
  },
  "requirements": {
   "build": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost-cpp",
    "cudatoolkit",
    "boost-cpp",
    "cudatoolkit",
    "boost-cpp",
    "cudatoolkit",
    "boost-cpp",
    "cudatoolkit"
   ]
  },
  "source": {
   "sha256": "fc8c1bc2553cd93e570e1991b44df301c89ce7d9521033672f2d9d421af94beb",
   "url": "https://github.com/tomopy/astra-toolbox/archive/refs/tags/1.9.9.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest"
   ],
   "requires": [
    "boost-cpp",
    "boost-cpp",
    "boost-cpp",
    "boost-cpp"
   ],
   "source_files": [
    "tests/astratest",
    "tests/astratest",
    "tests/astratest",
    "tests/astratest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cudatoolkit"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "boost-cpp"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://www.astra-toolbox.com",
   "license": "GPL-3.0-only",
   "license_file": [
    "COPYING",
    "lib/licenses/rapidxml.txt",
    "COPYING",
    "lib/licenses/rapidxml.txt",
    "COPYING",
    "lib/licenses/rapidxml.txt",
    "COPYING",
    "lib/licenses/rapidxml.txt"
   ],
   "summary": "libastra is a C++ library of high-performance GPU primitives for 2D and 3D tomography."
  },
  "build": {
   "number": "1",
   "run_exports": [
    "libastra",
    "libastra",
    "libastra",
    "libastra"
   ],
   "script": "cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ${CMAKE_ARGS} ${SRC_DIR} && ninja install",
   "string": "cuda10.2h1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "carterbox",
    "carterbox",
    "carterbox",
    "carterbox"
   ]
  },
  "package": {
   "name": "libastra",
   "version": "1.9.9"
  },
  "requirements": {
   "build": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost-cpp",
    "cudatoolkit",
    "boost-cpp",
    "cudatoolkit",
    "boost-cpp",
    "cudatoolkit",
    "boost-cpp",
    "cudatoolkit"
   ]
  },
  "source": {
   "sha256": "fc8c1bc2553cd93e570e1991b44df301c89ce7d9521033672f2d9d421af94beb",
   "url": "https://github.com/tomopy/astra-toolbox/archive/refs/tags/1.9.9.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest"
   ],
   "requires": [
    "boost-cpp",
    "boost-cpp",
    "boost-cpp",
    "boost-cpp"
   ],
   "source_files": [
    "tests/astratest",
    "tests/astratest",
    "tests/astratest",
    "tests/astratest"
   ]
  }
 },
 "name": "libastra",
 "new_version": "1.9.9-1",
 "new_version_attempts": {
  "1.9.9-1": 3
 },
 "new_version_errors": {
  "1.9.9-1": "We found a problem parsing the recipe for version '1.9.9-1': \n\nParserError('while parsing a block mapping',   in \"<unicode string>\", line 12, column 3:\n      run_exports:\n      ^ (line: 12), \"expected <block end>, but found '<scalar>'\",   in \"<unicode string>\", line 15, column 16:\n      string: \"<{ \"cuda\" + cuda_compiler_version|st ... \n                   ^ (line: 15))\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 502, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 120, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 76, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 99, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 223, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 216, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 146, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 611, in parse_block_mapping_key\n    raise ParserError(\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libastra"
  ]
 },
 "pinning_version": "2021.06.30.05.52.22",
 "raw_meta_yaml": "{% set version = \"1.9.9\" %}\n\npackage:\n  name: libastra\n  version: {{ version }}\n\nsource:\n  url: https://github.com/tomopy/astra-toolbox/archive/refs/tags/{{ version }}.tar.gz\n  sha256: fc8c1bc2553cd93e570e1991b44df301c89ce7d9521033672f2d9d421af94beb\n\nbuild:\n  run_exports:\n    - {{ pin_subpackage('libastra', max_pin='x.x.x') }}\n  number: 1\n  string: \"{{ \"cuda\" + cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\"\n  skip: true  # [(not linux) or cuda_compiler_version == \"None\"]\n  script:\n    cmake\n    -G Ninja\n    -DCMAKE_BUILD_TYPE=Release\n    ${CMAKE_ARGS} ${SRC_DIR} && ninja install\n\nrequirements:\n  build:\n    - {{ compiler('cuda') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost-cpp\n    - cudatoolkit\n\ntest:\n  requires:\n  # libastra uses header-only from Boost, but the unit tests actually link to libboost_unit_test_framework.so\n    - boost-cpp\n  source_files:\n    - tests/astratest\n  commands:\n    - test -f $PREFIX/lib/libastra${SHLIB_EXT}\n    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.{{ version }}\n    - \"LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest\"\n\nabout:\n  home: http://www.astra-toolbox.com\n  license: GPL-3.0-only\n  license_file:\n    - COPYING\n    - lib/licenses/rapidxml.txt\n  summary: 'libastra is a C++ library of high-performance GPU primitives for 2D\n  and 3D tomography.'\n\nextra:\n  recipe-maintainers:\n    - carterbox\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost-cpp",
   "cmake",
   "cuda_compiler_stub",
   "cudatoolkit",
   "cxx_compiler_stub",
   "ninja"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boost-cpp"
   ]
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cudatoolkit"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "boost-cpp"
   ]
  }
 },
 "url": "https://github.com/tomopy/astra-toolbox/archive/refs/tags/1.9.9.tar.gz",
 "version": "1.9.9"
}