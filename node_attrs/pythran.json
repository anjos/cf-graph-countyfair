{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/222682965.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/245999822.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248913621.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/276012780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308544795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/310712147.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/312949494.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/334602944.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.4.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336077906.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341158630.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.4.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392398139.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/461396962.json"
   },
   "data": {
    "bot_rerun": 1600812329.352374,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501539036.json"
   },
   "data": {
    "bot_rerun": 1607586449.716343,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535505886.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535740195.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/537609792.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.8.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553901173.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/606232402.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/636297084.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650758403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/663055008.json"
   },
   "data": {
    "bot_rerun": 1623085196.0734208,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/668956777.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/669594239.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682807178.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689430357.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689947178.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.12.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/733447982.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/738698705.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RebuildBroken",
    "migrator_version": 2,
    "name": "rebuild-broken"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/742872535.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RebuildBroken",
    "migrator_version": 3,
    "name": "rebuild-broken"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773760177.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802171574.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905157442.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1069838517.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1100533303.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1198002916.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "pythran",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "cxx_compiler_stub",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "cxx_compiler_stub",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "cxx_compiler_stub",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "name": "pythran",
 "new_version": "0.12.1",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.11.0": 1,
  "0.12.0": 1,
  "0.12.1": 1,
  "0.9.10": 1,
  "0.9.11": 1,
  "0.9.12": 1,
  "0.9.12.post1": 1,
  "0.9.6": 5,
  "0.9.8": 1,
  "0.9.8.post2": 1,
  "0.9.9": 1
 },
 "new_version_errors": {
  "0.9.6": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.9.6' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/p/pythran/pythran-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "cxx_compiler_stub",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "cxx_compiler_stub",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "omp",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "cxx_compiler_stub",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pythran"
  ]
 },
 "pinning_version": "2023.01.15.02.58.09",
 "pre_pr_migrator_attempts": {
  "armosxaddition": 1,
  "python39": 1,
  "rebuild-broken": 1
 },
 "pre_pr_migrator_status": {
  "armosxaddition": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/931826936\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1132, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 192, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/arch.py\", line 266, in migrate\n    y = safe_load(f)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 1118, in safe_load\n    return load(stream, SafeLoader, version)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 1071, in load\n    return loader._constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 122, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 132, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 722, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 446, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 264, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"conda-forge.yml\", line 1, column 1\nfound duplicate key \"provider\" with value \"{}\" (original value: \"{}\")\n  in \"conda-forge.yml\", line 4, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n\n",
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package numpy-1.14.6-py27h0d21db5_1201 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']",
  "rebuild-broken": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1265438560\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1175, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 196, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/broken_rebuild.py\", line 361, in migrate\n    self.set_build_number(os.path.join(recipe_dir, \"meta.yaml\"))\nNameError: name 'os' is not defined\n"
 },
 "raw_meta_yaml": "{% set version = \"0.12.1\" %}\n\npackage:\n  name: pythran\n  version: {{ version }}\n\nsource:\n  url: https://github.com/serge-sans-paille/pythran/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93\n\nbuild:\n  number: 0\n  script:\n    # prevent d1trimfile option being added which clang-cl does not understand.\n    # d1trimfile option is added by a patch and disabled by unsetting SRC_DIR\n    # https://github.com/conda-forge/python-feedstock/blob/e7ea437a819f8f06dcbc3769f6e46dc026070c44/recipe/patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch\n    - set \"SRC_DIR=\"   # [win]\n    # unvendor xsimd; use version packaged by conda-forge\n    - python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"\n    - \"python -c \\\"with open('setup.cfg', 'w') as s: s.write('[build_py]\\\\nno_xsimd=True')\\\"\"\n    # on windows, pythran wrongly sets %PREFIX\\include instead of %PREFIX%\\Library\\include;\n    # pythran-win32.cfg already exists and has [compiler].include_dirs; we replace it on the fly;\n    # conda will detect the written environment-path and replace it as appropriate for user installs;\n    # note that we need r'...' for this due to paths like D:\\bld\\... where python would interpret \\b.\n    - \"python -c \\\"with open('pythran\\\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\\\"\"  # [win]\n    # sanity check to ensure this is set correctly\n    - type pythran\\pythran-win32.cfg  # [win]\n    - python -m pip install . --no-deps -vv\n  entry_points:\n    - pythran = pythran.run:run\n    - pythran-config = pythran.config:run\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('cxx') }}  # [not win]\n    - clang                  # [win]\n    - clangxx                # [win]\n  host:\n    - python\n    - pip\n    - numpy\n  run:\n    # To ensure ABI compatibility, we install the same version of the C++\n    # compiler that was used when building. This is probably not necessary and\n    # could be replaced with something like\n    # {{ cxx_compiler }}_{{ target_platform }}\n    - {{ compiler('cxx') }}  # [not win]\n    - clang                  # [win]\n    - clangxx                # [win]\n    - python\n    - {{ pin_compatible('numpy') }}\n    - decorator\n    - gast 0.5.*\n    - ply >=3.4\n    - beniget 0.4.*\n    - xsimd >=8.0.5,<8.1\n\ntest:\n  files:\n    - dprod.py\n    - simple_numexpr.py\n  commands:\n    - set \"SRC_DIR=\"  # [win]\n    - pythran -v dprod.py\n    - python -c \"import dprod\"\n    - pythran -v simple_numexpr.py -DUSE_XSIMD -march=native  # [not (ppc64le or (osx and arm64))]\n    - pythran -v simple_numexpr.py -DUSE_XSIMD                # [osx and arm64]\n    - pythran -v simple_numexpr.py                            # [ppc64le]\n    - python -c \"import simple_numexpr\"\n  imports:\n    - omp  # [not win]\n    - pythran\n    - pythran.analyses\n    - pythran.optimizations\n    - pythran.transformations\n    - pythran.types\n\nabout:\n  home: http://github.com/serge-sans-paille/pythran\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: a claimless python to c++ converter\n\n  description: |\n    Pythran is an ahead of time compiler for a subset of the Python language,\n    with a focus on scientific computing. It takes a Python module annotated\n    with a few interface description and turns it into a native Python module\n    with the same interface, but (hopefully) faster.\n  doc_url: https://pythran.readthedocs.io/\n  dev_url: https://github.com/serge-sans-paille/pythran\n\nextra:\n  recipe-maintainers:\n    - saraedum\n    - serge-sans-paille\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "beniget",
   "clang",
   "clangxx",
   "cxx_compiler_stub",
   "decorator",
   "gast",
   "numpy",
   "pip",
   "ply",
   "python",
   "xsimd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "clangxx",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "clang",
    "clangxx",
    "cxx_compiler_stub",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "clangxx",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget 0.4.*",
    "clang",
    "clangxx",
    "cxx_compiler_stub",
    "decorator",
    "gast 0.5.*",
    "numpy",
    "ply >=3.4",
    "python",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz",
 "version": "0.12.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
   "dev_url": "https://github.com/serge-sans-paille/pythran",
   "doc_url": "https://pythran.readthedocs.io/",
   "home": "http://github.com/serge-sans-paille/pythran",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a claimless python to c++ converter"
  },
  "build": {
   "entry_points": [
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run",
    "pythran = pythran.run:run",
    "pythran-config = pythran.config:run"
   ],
   "number": "0",
   "script": [
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv",
    "set \"SRC_DIR=\"",
    "python -c \"import os, shutil; shutil.rmtree(os.path.join('third_party', 'xsimd'))\"",
    "python -c \"with open('setup.cfg', 'w') as s: s.write('[build_py]\\nno_xsimd=True')\"",
    "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
    "type pythran\\pythran-win32.cfg",
    "python -m pip install . --no-deps -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari",
    "saraedum",
    "serge-sans-paille",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "pythran",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx",
    "clang",
    "clangxx"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1",
    "clang",
    "clangxx",
    "python",
    "numpy",
    "decorator",
    "gast 0.5.*",
    "ply >=3.4",
    "beniget 0.4.*",
    "xsimd >=8.0.5,<8.1"
   ]
  },
  "source": {
   "sha256": "6aef4ca34eb4823c25aa52a8b8a6467a6b6f163bb52d9db8f1e20a2d62fc7e93",
   "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\"",
    "set \"SRC_DIR=\"",
    "pythran -v dprod.py",
    "python -c \"import dprod\"",
    "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
    "python -c \"import simple_numexpr\""
   ],
   "files": [
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py",
    "dprod.py",
    "simple_numexpr.py"
   ],
   "imports": [
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types",
    "pythran",
    "pythran.analyses",
    "pythran.optimizations",
    "pythran.transformations",
    "pythran.types"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "clangxx"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "beniget",
    "clang",
    "clangxx",
    "decorator",
    "gast",
    "numpy",
    "ply",
    "python",
    "xsimd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}