{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/427024543.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505591634.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542918552.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650271580.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/847896770.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1079336776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r-base42"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "r-tmvnsim",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\""
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\""
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "merge_build_host": true,
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "gcc-libs",
    "r-base",
    "gcc-libs"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\"",
    "\"%R%\" -e \"library('tmvnsim')\"",
    "\"%R%\" -e \"library('tmvnsim')\""
   ]
  }
 },
 "name": "r-tmvnsim",
 "new_version": "1.0_2",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('tmvnsim')\"",
    "$R -e \"library('tmvnsim')\""
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-tmvnsim"
  ]
 },
 "pinning_version": "2022.10.05.18.50.28",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = '1.0-2' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-tmvnsim\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/tmvnsim_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/tmvnsim/tmvnsim_{{ version }}.tar.gz\n  sha256: 97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 3\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('fortran') }}        # [not win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('tmvnsim')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('tmvnsim')\\\"\"  # [win]\n\nabout:\n  home: https://www.r-project.org\n  license: GPL-2.0-only\n  summary: Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane)\n    simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region\n    depending on initial values, this package allows truncation based on disjoint regions\n    that are created by truncation of absolute values. The GHK algorithm uses simple\n    Cholesky transformation followed by recursive simulation of univariate truncated\n    normals hence there are also no convergence issues. Importance sample is returned\n    along with sampling weights, based on which, one can calculate integrals over truncated\n    regions for multivariate normals.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: tmvnsim\n# Version: 1.0-2\n# Date: 2016-12-14\n# Title: Truncated Multivariate Normal Simulation\n# Author: Samsiddhi Bhattacjarjee <sb1@nibmg.ac.in>\n# Maintainer: Samsiddhi Bhattacharjee <sb1@nibmg.ac.in>\n# Description: Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals.\n# License: GPL-2\n# Repository: CRAN\n# URL: https://www.r-project.org\n# NeedsCompilation: yes\n# Packaged: 2016-12-14 12:02:07 UTC; sb1\n# Date/Publication: 2016-12-15 09:05:14\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "coreutils",
   "filesystem",
   "fortran_compiler_stub",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "make",
   "r-base",
   "sed",
   "zip"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
 ],
 "version": "1.0_2",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://www.r-project.org",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Importance sampling from the truncated multivariate normal using the GHK (Geweke-Hajivassiliou-Keane) simulator. Unlike Gibbs sampling which can get stuck in one truncation sub-region depending on initial values, this package allows truncation based on disjoint regions that are created by truncation of absolute values. The GHK algorithm uses simple Cholesky transformation followed by recursive simulation of univariate truncated normals hence there are also no convergence issues. Importance sample is returned along with sampling weights, based on which, one can calculate integrals over truncated regions for multivariate normals."
  },
  "build": {
   "merge_build_host": true,
   "number": "3",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-tmvnsim",
   "version": "1.0_2"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "gcc-libs",
    "r-base",
    "gcc-libs"
   ]
  },
  "source": {
   "sha256": "97f63d0bab3b240cc7bdbe6e6e74e90ad25a4382a345ee51a26fe3959edeba0f",
   "url": [
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/tmvnsim_1.0-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tmvnsim/tmvnsim_1.0-2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "\"%R%\" -e \"library('tmvnsim')\"",
    "\"%R%\" -e \"library('tmvnsim')\""
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}