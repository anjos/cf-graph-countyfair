{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/969427403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gromacs",
 "hash_type": "sha256",
 "name": "gromacs",
 "new_version": "2022.2",
 "new_version_attempts": {
  "2022.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gromacs"
  ]
 },
 "pinning_version": "2022.06.16.11.24.12",
 "raw_meta_yaml": "# Update from download page, e.g. https://manual.gromacs.org/documentation/2021/download.html\n# For latest release, see\n# https://manual.gromacs.org/documentation/\n{% set name = \"gromacs\" %}\n{% set version = \"2022.2\" %}\n{% set build = 0 %}\n{% set build = build + 100 %}  # [mpi == 'nompi' and double == 'no' and cuda_compiler_version == \"None\"]\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://ftp.gromacs.org/gromacs/gromacs-{{ version }}.tar.gz\n  sha256: 656404f884d2fa2244c97d2a5b92af148d0dbea94ad13004724b3fcbf45e01bf\n\nbuild:\n  number: {{ build }}\n  string: >-\n    nompi_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi == 'nompi' and double == 'no' and cuda_compiler_version == \"None\"] \n    mpi_{{ mpi }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi != 'nompi' and double == 'no' and cuda_compiler_version == \"None\"] \n    nompi_dblprec_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi == 'nompi' and double == 'yes' and cuda_compiler_version == \"None\"]\n    mpi_{{ mpi }}_dblprec_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi != 'nompi' and double == 'yes' and cuda_compiler_version == \"None\"] \n    nompi_cuda_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi == 'nompi' and double == 'no' and cuda_compiler_version != \"None\"]\n  skip: true  # [win or cuda_compiler_version not in (\"11.2\", \"None\")]\n  skip: true  # [mpi == \"openmpi\" and cuda_compiler_version != \"None\"]\n  skip: true  # [double == \"yes\" and cuda_compiler_version != \"None\"]\n\nrequirements:\n  build:\n    - make\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - cmake >3.13\n    - pocl\n    - python >3.5\n    - perl\n    - libgomp  # [linux]\n    - llvm-openmp  # [osx]\n    - coreutils  # [cuda_compiler_version != \"None\"]\n  host:\n    - ocl-icd  # [linux and cuda_compiler_version == \"None\"]\n    - khronos-opencl-icd-loader  # [osx]\n    - libhwloc 2.*\n    - fftw\n    - {{ mpi }}  # [mpi != 'nompi']\n  run:\n    - ocl-icd  # [linux and cuda_compiler_version == \"None\"]\n    - khronos-opencl-icd-loader  # [osx]\n    - ocl_icd_wrapper_apple  # [osx]\n    - fftw\n    - libhwloc 2.*\n    - {{ mpi }}  # [mpi != 'nompi']\n    - __cuda  # [not osx and cuda_compiler_version != \"None\"]\n\ntest:\n  commands:\n    - gmx -version  # [mpi == 'nompi' and double == 'no']\n    - gmx_d -version  # [mpi == 'nompi' and double == 'yes']\n    - export OMPI_MCA_plm=isolated  # [mpi == \"openmpi\" and linux]\n    - export OMPI_MCA_btl_vader_single_copy_mechanism=none  # [mpi == \"openmpi\" and linux]\n    - export OMPI_MCA_rmaps_base_oversubscribe=yes  # [mpi == \"openmpi\" and linux]\n    - gmx_mpi -version  # [mpi != 'nompi' and double == 'no']\n    - gmx_mpi_d -version  # [mpi != 'nompi' and double == 'yes']:\n\nabout:\n  home: https://www.gromacs.org/\n  license: LGPL-2.1-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: GROMACS is a versatile package to perform molecular dynamics.\n  description: |\n    GROMACS is a versatile package to perform molecular dynamics, i.e. \n    simulate the Newtonian equations of motion for systems with hundreds \n    to millions of particles. It is primarily designed for biochemical \n    molecules like proteins, lipids and nucleic acids that have a lot of\n    complicated bonded interactions, but since GROMACS is extremely fast\n    at calculating the nonbonded interactions (that usually dominate\n    simulations) many groups are also using it for research on\n    non-biological systems, e.g. polymers.\n  doc_url: https://www.gromacs.org\n  dev_url: https://github.com/gromacs/gromacs\n\nextra:\n  recipe-maintainers:\n    - douglowe\n    - jan-janssen\n    - mabraham\n    - simonbray\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://ftp.gromacs.org/gromacs/gromacs-2022.2.tar.gz",
 "version": "2022.2"
}