{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/969427403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1044887746.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1125126430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gromacs",
 "hash_type": "sha256",
 "name": "gromacs",
 "new_version": "2022.4",
 "new_version_attempts": {
  "2022.2": 1,
  "2022.3": 1,
  "2022.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gromacs"
  ]
 },
 "pinning_version": "2022.11.16.16.13.51",
 "raw_meta_yaml": "# Update from download page, e.g. https://manual.gromacs.org/documentation/2021/download.html\n# For latest release, see\n# https://manual.gromacs.org/documentation/\n{% set name = \"gromacs\" %}\n{% set version = \"2022.3\" %}\n{% set build = 0 %}\n{% set build = build + 100 %}  # [mpi == 'nompi' and double == 'no' and cuda_compiler_version == \"None\"]\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://ftp.gromacs.org/gromacs/gromacs-{{ version }}.tar.gz\n  sha256: 14cfb130ddaf8f759a3af643c04f5a0d0d32b09bc3448b16afa5b617f5e35dae\n\nbuild:\n  number: {{ build }}\n  string: >-\n    nompi_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi == 'nompi' and double == 'no' and cuda_compiler_version == \"None\"]\n    mpi_{{ mpi }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi != 'nompi' and double == 'no' and cuda_compiler_version == \"None\"]\n    nompi_dblprec_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi == 'nompi' and double == 'yes' and cuda_compiler_version == \"None\"]\n    mpi_{{ mpi }}_dblprec_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi != 'nompi' and double == 'yes' and cuda_compiler_version == \"None\"]\n    nompi_cuda_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [mpi == 'nompi' and double == 'no' and cuda_compiler_version != \"None\"]\n  skip: true  # [win or cuda_compiler_version not in (\"11.2\", \"None\")]\n  skip: true  # [mpi == \"openmpi\" and cuda_compiler_version != \"None\"]\n  skip: true  # [double == \"yes\" and cuda_compiler_version != \"None\"]\n\nrequirements:\n  build:\n    - make\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - cmake >3.13\n    - pocl\n    - python >3.5\n    - perl\n    - libgomp  # [linux]\n    - llvm-openmp  # [osx]\n    - coreutils  # [cuda_compiler_version != \"None\"]\n  host:\n    - ocl-icd  # [linux and cuda_compiler_version == \"None\"]\n    - khronos-opencl-icd-loader  # [osx]\n    - libhwloc 2.*\n    - fftw\n    - {{ mpi }}  # [mpi != 'nompi']\n  run:\n    - ocl-icd  # [linux and cuda_compiler_version == \"None\"]\n    - khronos-opencl-icd-loader  # [osx]\n    - ocl_icd_wrapper_apple  # [osx]\n    - fftw\n    - libhwloc 2.*\n    - {{ mpi }}  # [mpi != 'nompi']\n    - __cuda  # [not osx and cuda_compiler_version != \"None\"]\n\ntest:\n  commands:\n    - gmx -version  # [mpi == 'nompi' and double == 'no']\n    - gmx_d -version  # [mpi == 'nompi' and double == 'yes']\n    - export OMPI_MCA_plm=isolated  # [mpi == \"openmpi\" and linux]\n    - export OMPI_MCA_btl_vader_single_copy_mechanism=none  # [mpi == \"openmpi\" and linux]\n    - export OMPI_MCA_rmaps_base_oversubscribe=yes  # [mpi == \"openmpi\" and linux]\n    - gmx_mpi -version  # [mpi != 'nompi' and double == 'no']\n    - gmx_mpi_d -version  # [mpi != 'nompi' and double == 'yes']:\n\nabout:\n  home: https://www.gromacs.org/\n  license: LGPL-2.1-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: GROMACS is a versatile package to perform molecular dynamics.\n  description: |\n    GROMACS is a versatile package to perform molecular dynamics, i.e. \n    simulate the Newtonian equations of motion for systems with hundreds \n    to millions of particles. It is primarily designed for biochemical \n    molecules like proteins, lipids and nucleic acids that have a lot of\n    complicated bonded interactions, but since GROMACS is extremely fast\n    at calculating the nonbonded interactions (that usually dominate\n    simulations) many groups are also using it for research on\n    non-biological systems, e.g. polymers.\n  doc_url: https://www.gromacs.org\n  dev_url: https://github.com/gromacs/gromacs\n\nextra:\n  recipe-maintainers:\n    - douglowe\n    - jan-janssen\n    - mabraham\n    - simonbray\n",
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "url": "https://ftp.gromacs.org/gromacs/gromacs-2022.3.tar.gz",
 "version": "2022.3"
}