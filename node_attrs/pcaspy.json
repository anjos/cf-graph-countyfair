{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/335861341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392540484.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501192556.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/504186944.json"
   },
   "data": {
    "bot_rerun": 1603150592.1671438,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506488518.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553901645.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/755601247.json"
   },
   "data": {
    "bot_rerun": 1642689604.6995635,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774688075.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906114145.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/955512360.json"
   },
   "data": {
    "bot_rerun": 1655671986.7372706,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pcaspy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
   "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
   "doc_url": "https://pcaspy.readthedocs.io/",
   "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Portable Channel Access Server in Python"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "pcaspy",
   "version": "0.7.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig"
   ],
   "run": [
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "82f72f21293dc450bea5bec7beb69da6e5232425c1dc07524c3dba8a096bd555",
   "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.3.tar.gz"
  },
  "test": {
   "commands": [
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py"
   ],
   "imports": [
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools"
   ],
   "requires": [
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy"
   ],
   "source_files": [
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "epics-base",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
   "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
   "doc_url": "https://pcaspy.readthedocs.io/",
   "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Portable Channel Access Server in Python"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "pcaspy",
   "version": "0.7.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig"
   ],
   "run": [
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python"
   ]
  },
  "source": {
   "patches": [
    "readline.patch",
    "readline.patch",
    "readline.patch",
    "readline.patch",
    "readline.patch",
    "readline.patch"
   ],
   "sha256": "82f72f21293dc450bea5bec7beb69da6e5232425c1dc07524c3dba8a096bd555",
   "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.3.tar.gz"
  },
  "test": {
   "commands": [
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py"
   ],
   "imports": [
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools"
   ],
   "requires": [
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy"
   ],
   "source_files": [
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py"
   ]
  }
 },
 "name": "pcaspy",
 "new_version": "0.7.3",
 "new_version_attempts": {
  "0.7.3": 2
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
   "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
   "doc_url": "https://pcaspy.readthedocs.io/",
   "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Portable Channel Access Server in Python"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "pcaspy",
   "version": "0.7.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig"
   ],
   "run": [
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "82f72f21293dc450bea5bec7beb69da6e5232425c1dc07524c3dba8a096bd555",
   "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.3.tar.gz"
  },
  "test": {
   "commands": [
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py"
   ],
   "imports": [
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools"
   ],
   "requires": [
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy"
   ],
   "source_files": [
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "epics-base",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pcaspy"
  ]
 },
 "pinning_version": "2022.06.02.02.17.23",
 "pre_pr_migrator_attempts": {
  "armosxaddition": 1
 },
 "pre_pr_migrator_status": {
  "armosxaddition": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2525224304\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 278, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 287, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 900 seconds\n"
 },
 "raw_meta_yaml": "{% set version = \"0.7.3\" %}\n\npackage:\n  name: pcaspy\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pcaspy/pcaspy-{{ version }}.tar.gz\n  sha256: 82f72f21293dc450bea5bec7beb69da6e5232425c1dc07524c3dba8a096bd555\n  patches:\n    # the pypi tarball is built by conda-build on linux, so we need to undo a patch\n    # that should only have been applied for linux builds, see\n    # https://github.com/paulscherrerinstitute/pcaspy/blob/69fa94055838e8a7fbbc6dffaf97f535493dbf85/conda-recipe/readline.patch\n    - readline.patch  # [win]\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv  # [not win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - epics-base 3\n    - pip\n    - python\n    - setuptools\n    - swig\n  run:\n    - epics-base\n    - python\n\ntest:\n  imports:\n    - pcaspy\n    - pcaspy.alarm\n    - pcaspy.cas\n    - pcaspy.driver\n    - pcaspy.tools\n  requires:\n    - numpy\n  source_files:\n    - test/gddTest.py\n  commands:\n    - python test/gddTest.py\n\nabout:\n  home: https://github.com/paulscherrerinstitute/pcaspy/wiki\n  doc_url: https://pcaspy.readthedocs.io/\n  dev_url: https://github.com/paulscherrerinstitute/pcaspy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Portable Channel Access Server in Python\n  description: |\n    PCASpy provides not only the low level python binding to\n    EPICS Portable Channel Access Server but also the necessary\n    high level abstraction to ease the server tool programming.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "epics-base",
   "pip",
   "python",
   "setuptools",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "epics-base",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy"
   ]
  }
 },
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "epics-base",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.3.tar.gz",
 "version": "0.7.3",
 "win_64_meta_yaml": {
  "about": {
   "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
   "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
   "doc_url": "https://pcaspy.readthedocs.io/",
   "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Portable Channel Access Server in Python"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "pcaspy",
   "version": "0.7.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base 3",
    "pip",
    "python",
    "setuptools",
    "swig"
   ],
   "run": [
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python"
   ]
  },
  "source": {
   "patches": [
    "readline.patch",
    "readline.patch",
    "readline.patch",
    "readline.patch",
    "readline.patch",
    "readline.patch"
   ],
   "sha256": "82f72f21293dc450bea5bec7beb69da6e5232425c1dc07524c3dba8a096bd555",
   "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.3.tar.gz"
  },
  "test": {
   "commands": [
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py"
   ],
   "imports": [
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools"
   ],
   "requires": [
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy",
    "numpy"
   ],
   "source_files": [
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "epics-base",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy"
   ]
  }
 }
}