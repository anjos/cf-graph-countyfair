{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/823266053.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "openmm-setup",
 "hash_type": "sha256",
 "name": "openmm-setup",
 "new_version": "1.3",
 "new_version_attempts": {
  "1.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmm-setup"
  ]
 },
 "pinning_version": "2022.01.14.22.50.49",
 "raw_meta_yaml": "{% set name = \"openmm-setup\" %}\n{% set version = \"1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openmm/openmm-setup/archive/v{{ version }}.tar.gz\n  sha256: 1b6a1b3066418a9266b9fbf93cff0dfc2cb11c2875943770578c35d28691432c\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv --no-deps\n  entry_points:\n    - openmm-setup = openmmsetup.openmmsetup:main\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python >=3.6\n    - flask\n    - openmm >=7.5\n    - pdbfixer >=1.5\n\ntest:\n  imports:\n    - openmmsetup\n\nabout:\n  home: http://openmm.org/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: User interface for preparing and running OpenMM simulations\n  description: |\n    This is an application for configuring and running simulations with OpenMM.\n    It provides a graphical interface for selecting input files, cleaning up PDB structures,\n    and setting simulation options. It can then either save a script for running the\n    simulation later, or directly run the simulation itself.\n  doc_url: http://docs.openmm.org/\n  dev_url: https://github.com/openmm/openmm-setup\n\nextra:\n  recipe-maintainers:\n    - jaimergp\n    - peastman\n    - jchodera\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://github.com/openmm/openmm-setup/archive/v1.3.tar.gz",
 "version": "1.3"
}