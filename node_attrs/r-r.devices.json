{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/203009240.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/232891847.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299554732.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/331874584.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413645295.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557784455.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/651796627.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/974488119.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.17.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-r.devices",
 "hash_type": "sha256",
 "name": "r-r.devices",
 "new_version": "2.17.1",
 "new_version_attempts": {
  "2.17.0": 1,
  "2.17.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-r.devices"
  ]
 },
 "pinning_version": "2022.06.21.18.05.41",
 "raw_meta_yaml": "{% set version = \"2.17.1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-r.devices\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/R.devices_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/R.devices/R.devices_{{ version }}.tar.gz\n  sha256: 3b7e57039311c034ff87ccebef4f16410d59985693c47949ecefa49a166c9c09\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-r.methodss3 >=1.8.1\n    - r-r.oo >=1.24.0\n    - r-r.utils >=2.10.1\n    - r-base64enc >=0.1_2\n  run:\n    - r-base\n    - r-r.methodss3 >=1.8.1\n    - r-r.oo >=1.24.0\n    - r-r.utils >=2.10.1\n    - r-base64enc >=0.1_2\n\ntest:\n  commands:\n    - $R -e \"library('R.devices')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('R.devices')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/HenrikBengtsson/R.devices\n  license: LGPL-2.1-or-later\n  summary: Functions for creating plots and image files in a unified way regardless of output format (EPS, PDF, PNG, SVG, TIFF, WMF, etc.). Default device options as well as scales and aspect ratios are controlled in a uniform way across all device types. Switching output format requires minimal changes in code. This package\n    is ideal for large-scale batch processing, because it will never leave open graphics devices or incomplete image files behind, even on errors or user interrupts.\n  license_family: LGPL\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/LGPL-2.1\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: R.devices\n# Version: 2.16.1\n# Depends: R (>= 2.14.0)\n# Imports: grDevices, R.methodsS3 (>= 1.7.1), R.oo (>= 1.21.0), R.utils (>= 2.6.0), base64enc (>= 0.1-2)\n# Suggests: digest (>= 0.6.13), Cairo (>= 1.5-9), R.rsp\n# VignetteBuilder: R.rsp\n# Authors@R: c(person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"), email = \"henrikb@braju.com\"))\n# Author: Henrik Bengtsson [aut, cre, cph]\n# Maintainer: Henrik Bengtsson <henrikb@braju.com>\n# Title: Unified Handling of Graphics Devices\n# Description: Functions for creating plots and image files in a unified way regardless of output format (EPS, PDF, PNG, SVG, TIFF, WMF, etc.). Default device options as well as scales and aspect ratios are controlled in a uniform way across all device types. Switching output format requires minimal changes in code. This package is ideal for large-scale batch processing, because it will never leave open graphics devices or incomplete image files behind, even on errors or user interrupts.\n# License: LGPL (>= 2.1)\n# URL: https://github.com/HenrikBengtsson/R.devices\n# BugReports: https://github.com/HenrikBengtsson/R.devices/issues\n# LazyLoad: TRUE\n# NeedsCompilation: no\n# Packaged: 2019-10-23 04:00:55 UTC; hb\n# Repository: CRAN\n# Date/Publication: 2019-10-24 06:00:03 UTC\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/R.devices_2.17.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/R.devices/R.devices_2.17.1.tar.gz",
  "https://cran.r-project.org/src/contrib/R.devices_2.17.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/R.devices/R.devices_2.17.1.tar.gz"
 ],
 "version": "2.17.1"
}