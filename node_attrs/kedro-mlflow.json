{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/897652340.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/936876324.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/971372150.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/989517728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "kedro-mlflow",
 "hash_type": "sha256",
 "name": "kedro-mlflow",
 "new_version": "0.11.1",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.11.0": 1,
  "0.11.1": 1,
  "0.9.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kedro-mlflow"
  ]
 },
 "pinning_version": "2022.07.06.01.52.02",
 "raw_meta_yaml": "{% set name = \"kedro-mlflow\" %}\n{% set version = \"0.11.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name|replace(\"-\", \"_\") }}-{{ version }}.tar.gz\n  sha256: e1e764230fa770dc4e3a82feabc1a57ed9e98a53cc35edf4de310dca704dddc5\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.7,<3.11\n    - pip\n  run:\n    - python >=3.7,<3.11\n    - kedro >=0.18.1,<0.19.0\n    - mlflow >=1.0.0,<2.0.0\n    - pydantic >=1.0.0,<2.0.0\n\ntest:\n  imports:\n    - kedro_mlflow\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/Galileo-Galilei/kedro-mlflow\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE.txt\n  summary: A Kedro plugin to use mlflow in your Kedro projects\n  description: |\n    kedro-mlflow is a Kedro plugin for lightweight and portable integration of mlflow capabilities inside kedro projects.\n    It enforces Kedro principles to make mlflow usage as production ready as possible. \n    Its core functionalities are versioning and model packaging.\n  doc_url: https://kedro-mlflow.readthedocs.io/\n  dev_url: https://github.com/Galileo-Galilei/kedro-mlflow\n\nextra:\n  recipe-maintainers:\n    - Galileo-Galilei\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/k/kedro-mlflow/kedro_mlflow-0.11.1.tar.gz",
 "version": "0.11.1"
}