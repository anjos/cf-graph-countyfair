{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/7d109b13-5aa0-4af8-80b7-1438f1ad997d.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "fleur",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The FLAPW-Method is an all-electron method which within density functional theory is universally applicable to all atoms of the periodic table and to systems with compact as well as open structures. It is widely considered to be the most precise electronic structure method in solid state physics.\nan optional C extension for a serious speed boost.\n",
   "dev_url": "https://iffgit.fz-juelich.de/fleur/fleur",
   "doc_url": "https://www.flapw.de/",
   "home": "https://www.flapw.de/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A feature-full, freely available FLAPW (full-potential linearized augmented planewave) code, based on density-functional theory"
  },
  "build": {
   "number": "4"
  },
  "extra": {
   "recipe-maintainers": [
    "ltalirz",
    "janssenhenning"
   ]
  },
  "package": {
   "name": "fleur",
   "version": "6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "cmake",
    "make",
    "git",
    "doxygen"
   ],
   "host": [
    "openmpi <=4.1.2",
    "scalapack",
    "openblas * *openmp*",
    "liblapack",
    "libgomp",
    "libxml2",
    "fftw",
    "hdf5 * *openmpi*"
   ],
   "run": [
    "openmpi <=4.1.2",
    "scalapack",
    "libblas * *openblas",
    "openblas * *openmp*"
   ]
  },
  "source": {
   "patches": "remove_nul_characters_compileinfo.patch",
   "sha256": "b022793360c198e18f269541152a04189990c0bf8326939f0f24bb8ca2adf757",
   "url": "https://iffgit.fz-juelich.de/fleur/fleur/-/archive/MaX-R6.0/fleur-MaX-R6.0.tar.gz"
  },
  "test": {
   "commands": [
    "inpgen -h",
    "test -f $PREFIX/bin/fleur_MPI"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "doxygen",
    "fortran_compiler_stub",
    "git",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5",
    "libgomp",
    "liblapack",
    "libxml2",
    "openblas",
    "openmpi",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "openblas",
    "openmpi",
    "scalapack"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The FLAPW-Method is an all-electron method which within density functional theory is universally applicable to all atoms of the periodic table and to systems with compact as well as open structures. It is widely considered to be the most precise electronic structure method in solid state physics.\nan optional C extension for a serious speed boost.\n",
   "dev_url": "https://iffgit.fz-juelich.de/fleur/fleur",
   "doc_url": "https://www.flapw.de/",
   "home": "https://www.flapw.de/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A feature-full, freely available FLAPW (full-potential linearized augmented planewave) code, based on density-functional theory"
  },
  "build": {
   "number": "4"
  },
  "extra": {
   "recipe-maintainers": [
    "ltalirz",
    "janssenhenning"
   ]
  },
  "package": {
   "name": "fleur",
   "version": "6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "cmake",
    "make",
    "git",
    "doxygen"
   ],
   "host": [
    "openmpi <=4.1.2",
    "scalapack",
    "openblas * *openmp*",
    "liblapack",
    "libgomp",
    "libxml2",
    "fftw",
    "hdf5 * *openmpi*"
   ],
   "run": [
    "openmpi <=4.1.2",
    "scalapack",
    "libblas * *openblas",
    "openblas * *openmp*"
   ]
  },
  "source": {
   "patches": "remove_nul_characters_compileinfo.patch",
   "sha256": "b022793360c198e18f269541152a04189990c0bf8326939f0f24bb8ca2adf757",
   "url": "https://iffgit.fz-juelich.de/fleur/fleur/-/archive/MaX-R6.0/fleur-MaX-R6.0.tar.gz"
  },
  "test": {
   "commands": [
    "inpgen -h",
    "test -f $PREFIX/bin/fleur_MPI"
   ]
  }
 },
 "name": "fleur",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fleur"
  ]
 },
 "pinning_version": "2022.07.28.19.34.36",
 "raw_meta_yaml": "{% set name = \"fleur\" %}\n{% set version = \"6.0\" %}\n{% set version_long = \"MaX-R\" + version %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://iffgit.fz-juelich.de/{{ name }}/{{ name }}/-/archive/{{ version_long }}/{{ name }}-{{ version_long }}.tar.gz\n  sha256: b022793360c198e18f269541152a04189990c0bf8326939f0f24bb8ca2adf757\n  patches:\n    remove_nul_characters_compileinfo.patch\n\nbuild:\n  number: 4\n  skip: True  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - cmake\n    - make\n    - git\n    - doxygen\n  host:\n    - openmpi <=4.1.2\n    - scalapack\n    - openblas * *openmp*\n    - liblapack\n    - libgomp\n    - libxml2\n    - fftw\n    - hdf5 * *openmpi*\n  run:\n    - openmpi <=4.1.2\n    - scalapack\n    - libblas * *openblas  # [linux]\n    - openblas * *openmp*  # [linux]\n\ntest:\n  commands:\n    - inpgen -h    \n    - test -f $PREFIX/bin/fleur_MPI  # [unix]\nabout:\n  home: https://www.flapw.de/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A feature-full, freely available FLAPW (full-potential linearized augmented planewave) code, based on density-functional theory\n  description: |\n    The FLAPW-Method is an all-electron method which within density functional theory is universally applicable to all atoms of the periodic table and to systems with compact as well as open structures. It is widely considered to be the most precise electronic structure method in solid state physics.\n    an optional C extension for a serious speed boost.\n  doc_url: https://www.flapw.de/\n  dev_url: https://iffgit.fz-juelich.de/fleur/fleur\n\nextra:\n  recipe-maintainers:\n    - ltalirz\n    - janssenhenning\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "doxygen",
   "fftw",
   "fortran_compiler_stub",
   "git",
   "hdf5",
   "libblas",
   "libgomp",
   "liblapack",
   "libxml2",
   "make",
   "openblas",
   "openmpi",
   "scalapack"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "doxygen",
    "fortran_compiler_stub",
    "git",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fftw",
    "fortran_compiler_stub",
    "hdf5",
    "libgomp",
    "liblapack",
    "libxml2",
    "openblas",
    "openmpi",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libblas",
    "openblas",
    "openmpi",
    "scalapack"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "doxygen",
    "fortran_compiler_stub",
    "git",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5 * *openmpi*",
    "libgomp",
    "liblapack",
    "libxml2",
    "openblas * *openmp*",
    "openmpi <=4.1.2",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas * *openblas",
    "openblas * *openmp*",
    "openmpi <=4.1.2",
    "scalapack"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://iffgit.fz-juelich.de/fleur/fleur/-/archive/MaX-R6.0/fleur-MaX-R6.0.tar.gz",
 "version": "6.0"
}