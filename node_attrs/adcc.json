{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/848011586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939957472.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "adcc",
 "hash_type": "sha256",
 "name": "adcc",
 "new_version": "0.15.14",
 "new_version_attempts": {
  "0.15.14": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "adcc"
  ]
 },
 "pinning_version": "2022.05.18.07.20.58",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"0.15.14\" %}\n\npackage:\n  name: adcc\n  version: {{ version }}\n\nsource:\n  url: https://github.com/adc-connect/adcc/archive/v{{ version }}.tar.gz\n  sha256: 597ed23976aded30ad124952dc18cb6bb010421a99603528a58d2e65d25828b5\n\nbuild:\n  number: 0\n  skip: true  # [win or py<37]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkgconfig\n    - wget\n  host:\n    - python\n    - setuptools\n    - libtensorlight >=3.0.1\n    - pybind11 >=2.6\n  run:\n    - python\n    - setuptools\n    - libtensorlight >=3.0.1\n    - numpy >=1.14\n    - h5py >=2.9\n    - scipy >=1.2\n    - tqdm >=4.30\n    - opt_einsum >=3.0\n\ntest:\n  requires:\n    - pytest\n    - pip\n  imports:\n    - adcc\n  commands:\n    - export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`\n    - test -f $PREFIX/lib/python{{ PY_VER }}/site-packages/libadcc$PYLIB_EXT\n\nabout:\n  home: https://adc-connect.org\n  dev_url: https://github.com/adc-connect/adcc\n  doc_url: https://adc-connect.org\n  license: GPL-3.0-or-later\n  license_family: GPL3\n  license_file: LICENSE\n  summary: 'adcc: Seamlessly connect your program to ADC'\n  description: |\n    adcc (**ADC-connect**) is a python-based framework for performing\n    the calculation of molecular spectra and electronically excited states\n    based upon the algebraic-diagrammatic construction (ADC) approach.\n    Arbitrary host programs may be used to supply a\n    self-consistent field (SCF) reference to start off the ADC calculation.\n    Currently adcc comes with ready-to-use interfaces to four programs,\n    namely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\n    starting a calculation from\n    statically computed data can be easily achieved.\n\nextra:\n  recipe-maintainers:\n    - maxscheurer\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/adc-connect/adcc/archive/v0.15.14.tar.gz",
 "version": "0.15.14"
}