{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/986822955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/987482870.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/990756090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/990910061.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1005871315.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "pythae",
 "hash_type": "sha256",
 "name": "pythae",
 "new_version": "0.0.6",
 "new_version_attempts": {
  "0.0.2": 1,
  "0.0.3": 1,
  "0.0.4": 1,
  "0.0.5": 1,
  "0.0.6": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pythae"
  ]
 },
 "pinning_version": "2022.07.22.12.54.13",
 "raw_meta_yaml": "{% set reqfile = \"requirements.txt\" %}\n{% set name = \"pythae\" %}\n{% set version = \"0.0.6\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pythae-{{ version }}.tar.gz\n  sha256: 3695f53953bbdd148848b5d507e34a8db0282c96cef591f79e6e44385a6ba3cb\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n    - dataclasses >=0.6\n    - dill >=0.3.3\n    - imageio\n    - numpy >=1.19\n    - pydantic >=1.8.2\n    - scipy >=1.7.1\n    - scikit-learn\n    - pytorch >=1.10.1\n    - tqdm\n    - typing-extensions\n\ntest:\n  imports:\n    - pythae\n  # commands:\n  #   - pip check\n  # requires:\n  #   - pip\n\nabout:\n  home: https://github.com/clementchadebec/benchmark_VAE\n  summary: Unifying Generative Autoencoders in Python\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    This library implements some of the most common (Variational) Autoencoder models. \n    In particular it provides the possibility to perform benchmark experiments and \n    comparisons by training the models with the same autoencoding neural network \n    architecture. The feature *make your own autoencoder* allows you to train any of \n    these models with your own data and own Encoder and Decoder neural networks.\n\n    PyPI: [https://pypi.org/project/pythae](https://pypi.org/project/pythae)\n\n  doc_url: https://pythae.readthedocs.io/en/latest/\n  dev_url: https://github.com/clementchadebec/benchmark_VAE\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pythae/pythae-0.0.6.tar.gz",
 "version": "0.0.6"
}