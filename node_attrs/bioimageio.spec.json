{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/690793575.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/700443160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/702348318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/703643667.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/730883571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2.post3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/734737675.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/736376412.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/742349205.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/746945274.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/754079264.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/759657188.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/761847701.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/763441180.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775475759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3.post7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779069781.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779687276.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/787912893.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/790092081.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/793224204.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794029668.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794559775.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797540188.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/798168967.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0.post3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/801765087.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802389689.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802753165.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802884964.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/808557338.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/808711614.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/809451809.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1.post6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/819788585.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/820434104.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/821556263.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/826084844.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2.post3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831819804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2.post4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/832482640.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/859696809.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/862708568.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/conda-forge/bioimageio.spec-feedstock (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)'))",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 174, in _new_conn",
   "    conn = connection.create_connection(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/connection.py\", line 95, in create_connection",
   "    raise err",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/connection.py\", line 85, in create_connection",
   "    sock.connect(sa)",
   "socket.timeout: timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request",
   "    self._validate_conn(conn)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1040, in _validate_conn",
   "    conn.connect()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 358, in connect",
   "    conn = self._new_conn()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 179, in _new_conn",
   "    raise ConnectTimeoutError(",
   "urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)')",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 440, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 785, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 592, in increment",
   "    raise MaxRetryError(_pool, url, error or ResponseError(cause))",
   "urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/conda-forge/bioimageio.spec-feedstock (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)'))",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 202, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 305, in get_repo",
   "    _sync_default_branches(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 327, in _sync_default_branches",
   "    default_branch = gh.get_repo(f\"conda-forge/{reponame}\").default_branch",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo",
   "    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck",
   "    *self.requestJson(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson",
   "    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode",
   "    status, responseHeaders, output = self.__requestRaw(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw",
   "    response = cnx.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse",
   "    r = verb(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 529, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 645, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 507, in send",
   "    raise ConnectTimeout(e, request=request)",
   "requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/conda-forge/bioimageio.spec-feedstock (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)'))",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bioimageio.spec",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/bioimage-io/spec-bioimage-io",
   "home": "https://github.com/bioimage-io/spec-bioimage-io",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Parser and validator library for BioImage.IO specifications"
  },
  "build": {
   "entry_points": [
    "bioimageio = bioimageio.spec.__main__:app"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "constantinpape",
    "FynnBe",
    "k-dominik",
    "oeway"
   ]
  },
  "package": {
   "name": "bioimageio.spec",
   "version": "0.4.4"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "imageio >=2.5",
    "marshmallow >=3.6.0,<4.0",
    "marshmallow-jsonschema",
    "marshmallow-union",
    "python >=3.7",
    "python-stdnum",
    "pyyaml >=5.2",
    "requests",
    "ruamel.yaml",
    "tqdm",
    "typer",
    "typing-extensions"
   ]
  },
  "source": {
   "sha256": "1baf7a13c74815211b09e156e1c4c42d3bb3c5da02635a6ae4ca06539bd0d454",
   "url": "https://pypi.io/packages/source/b/bioimageio.spec/bioimageio.spec-0.4.4.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "bioimageio --help"
   ],
   "imports": [
    "bioimageio",
    "bioimageio.spec"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "imageio",
    "marshmallow",
    "marshmallow-jsonschema",
    "marshmallow-union",
    "python",
    "python-stdnum",
    "pyyaml",
    "requests",
    "ruamel.yaml",
    "tqdm",
    "typer",
    "typing-extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/bioimage-io/spec-bioimage-io",
   "home": "https://github.com/bioimage-io/spec-bioimage-io",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Parser and validator library for BioImage.IO specifications"
  },
  "build": {
   "entry_points": [
    "bioimageio = bioimageio.spec.__main__:app"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "constantinpape",
    "FynnBe",
    "k-dominik",
    "oeway"
   ]
  },
  "package": {
   "name": "bioimageio.spec",
   "version": "0.4.4"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "imageio >=2.5",
    "marshmallow >=3.6.0,<4.0",
    "marshmallow-jsonschema",
    "marshmallow-union",
    "python >=3.7",
    "python-stdnum",
    "pyyaml >=5.2",
    "requests",
    "ruamel.yaml",
    "tqdm",
    "typer",
    "typing-extensions"
   ]
  },
  "source": {
   "sha256": "1baf7a13c74815211b09e156e1c4c42d3bb3c5da02635a6ae4ca06539bd0d454",
   "url": "https://pypi.io/packages/source/b/bioimageio.spec/bioimageio.spec-0.4.4.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "bioimageio --help"
   ],
   "imports": [
    "bioimageio",
    "bioimageio.spec"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "bioimageio.spec",
 "new_version": "0.4.4.post1",
 "new_version_attempts": {
  "0.3.2": 1,
  "0.3.2.post0": 1,
  "0.3.2.post1": 1,
  "0.3.2.post2": 1,
  "0.3.2.post3": 1,
  "0.3.3": 1,
  "0.3.3.post0": 1,
  "0.3.3.post1": 1,
  "0.3.3.post2": 1,
  "0.3.3.post3": 1,
  "0.3.3.post4": 1,
  "0.3.3.post5": 1,
  "0.3.3.post6": 1,
  "0.3.3.post7": 1,
  "0.3.4": 1,
  "0.3.4.post0": 1,
  "0.3.4.post1": 1,
  "0.3.4.post2": 1,
  "0.4.0": 1,
  "0.4.0.post0": 1,
  "0.4.0.post1": 1,
  "0.4.0.post2": 1,
  "0.4.0.post3": 1,
  "0.4.1.post0": 1,
  "0.4.1.post1": 1,
  "0.4.1.post2": 1,
  "0.4.1.post3": 1,
  "0.4.1.post4": 1,
  "0.4.1.post5": 1,
  "0.4.1.post6": 1,
  "0.4.2": 1,
  "0.4.2.post1": 1,
  "0.4.2.post2": 1,
  "0.4.2.post3": 1,
  "0.4.2.post4": 1,
  "0.4.3": 1,
  "0.4.3.post1": 1,
  "0.4.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bioimageio.spec"
  ]
 },
 "pinning_version": "2022.02.24.15.28.03",
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1910212150\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 174, in _new_conn\n    conn = connection.create_connection(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/connection.py\", line 95, in create_connection\n    raise err\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/connection.py\", line 85, in create_connection\n    sock.connect(sa)\nsocket.timeout: timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1040, in _validate_conn\n    conn.connect()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 358, in connect\n    conn = self._new_conn()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 179, in _new_conn\n    raise ConnectTimeoutError(\nurllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 440, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 785, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/conda-forge/bioimageio.spec-feedstock (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)'))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 202, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 305, in get_repo\n    _sync_default_branches(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 327, in _sync_default_branches\n    default_branch = gh.get_repo(f\"conda-forge/{reponame}\").default_branch\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo\n    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck\n    *self.requestJson(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson\n    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode\n    status, responseHeaders, output = self.__requestRaw(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw\n    response = cnx.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse\n    r = verb(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 529, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 645, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 507, in send\n    raise ConnectTimeout(e, request=request)\nrequests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/conda-forge/bioimageio.spec-feedstock (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7efec73e8670>, 'Connection to api.github.com timed out. (connect timeout=15)'))\n"
 },
 "raw_meta_yaml": "{% set name = \"bioimageio.spec\" %}\n{% set version = \"0.4.4\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/bioimageio.spec-{{ version }}.tar.gz\n  sha256: 1baf7a13c74815211b09e156e1c4c42d3bb3c5da02635a6ae4ca06539bd0d454\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - bioimageio = bioimageio.spec.__main__:app\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - imageio >=2.5\n    - marshmallow >=3.6.0,<4.0\n    - marshmallow-jsonschema\n    - marshmallow-union\n    - python >=3.7\n    - python-stdnum\n    - pyyaml >=5.2\n    - requests\n    - ruamel.yaml\n    - tqdm\n    - typer\n    - typing-extensions\n\ntest:\n  imports:\n    - bioimageio\n    - bioimageio.spec\n  commands:\n    - pip check\n    - bioimageio --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/bioimage-io/spec-bioimage-io\n  summary: Parser and validator library for BioImage.IO specifications\n  dev_url: https://github.com/bioimage-io/spec-bioimage-io\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - constantinpape\n    - FynnBe\n    - k-dominik\n    - oeway\n",
 "req": {
  "__set__": true,
  "elements": [
   "imageio",
   "marshmallow",
   "marshmallow-jsonschema",
   "marshmallow-union",
   "pip",
   "python",
   "python-stdnum",
   "pyyaml",
   "requests",
   "ruamel.yaml",
   "tqdm",
   "typer",
   "typing-extensions"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "imageio",
    "marshmallow",
    "marshmallow-jsonschema",
    "marshmallow-union",
    "python",
    "python-stdnum",
    "pyyaml",
    "requests",
    "ruamel.yaml",
    "tqdm",
    "typer",
    "typing-extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.17.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "imageio >=2.5",
    "marshmallow >=3.6.0,<4.0",
    "marshmallow-jsonschema",
    "marshmallow-union",
    "python >=3.7",
    "python-stdnum",
    "pyyaml >=5.2",
    "requests",
    "ruamel.yaml",
    "tqdm",
    "typer",
    "typing-extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/b/bioimageio.spec/bioimageio.spec-0.4.4.tar.gz",
 "version": "0.4.4"
}