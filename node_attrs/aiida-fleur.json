{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "aiida-fleur",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/JuDFTteam/aiida-fleur",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility"
  },
  "build": {
   "noarch": "python",
   "number": "6"
  },
  "extra": {
   "recipe-maintainers": [
    "chrisjsewell"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "aiida-fleur = aiida_fleur.cmdline:cmd_root"
     ],
     "noarch": "python",
     "script": "python -m pip install . --no-deps --ignore-installed -vvv "
    },
    "name": "aiida-fleur",
    "requirements": {
     "host": [
      "pip",
      "python >=3.7",
      "reentry"
     ],
     "run": [
      "aiida-core.atomic_tools >=1.3.0,<2",
      "future",
      "lxml >=4.8,<5",
      "markupsafe <2.1.0",
      "masci-tools >=0.9.1,<1",
      "more-itertools",
      "numpy >=1.16.4,<2",
      "pyhull",
      "python >=3.7",
      "sqlalchemy <1.4",
      "sympy"
     ],
     "run_constrained": [
      "aiida-fleur.code ==1.3.1"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "aiida_fleur"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "aiida-fleur.code",
    "requirements": {
     "run": [
      "fleur >=1,<7"
     ]
    },
    "test": {
     "commands": [
      "which fleur_MPI"
     ]
    }
   }
  ],
  "package": {
   "name": "aiida-fleur.meta",
   "version": "1.3.1"
  },
  "requirements": {
   "run": [
    "aiida-fleur",
    "aiida-fleur.code"
   ]
  },
  "source": {
   "sha256": "44abdc272d80861942fc0a7f7660541a703e4a45750aff93011477e9c1acc79c",
   "url": "https://pypi.io/packages/source/a/aiida-fleur/aiida-fleur-1.3.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "reentry"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiida-core.atomic_tools",
    "aiida-fleur",
    "aiida-fleur.code",
    "fleur",
    "future",
    "lxml",
    "markupsafe",
    "masci-tools",
    "more-itertools",
    "numpy",
    "pyhull",
    "python",
    "sqlalchemy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/JuDFTteam/aiida-fleur",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility"
  },
  "build": {
   "noarch": "python",
   "number": "6"
  },
  "extra": {
   "recipe-maintainers": [
    "chrisjsewell"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "aiida-fleur = aiida_fleur.cmdline:cmd_root"
     ],
     "noarch": "python",
     "script": "python -m pip install . --no-deps --ignore-installed -vvv "
    },
    "name": "aiida-fleur",
    "requirements": {
     "host": [
      "pip",
      "python >=3.7",
      "reentry"
     ],
     "run": [
      "aiida-core.atomic_tools >=1.3.0,<2",
      "future",
      "lxml >=4.8,<5",
      "markupsafe <2.1.0",
      "masci-tools >=0.9.1,<1",
      "more-itertools",
      "numpy >=1.16.4,<2",
      "pyhull",
      "python >=3.7",
      "sqlalchemy <1.4",
      "sympy"
     ],
     "run_constrained": [
      "aiida-fleur.code ==1.3.1"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "aiida_fleur"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "aiida-fleur.code",
    "requirements": {
     "run": [
      "fleur >=1,<7"
     ]
    },
    "test": {
     "commands": [
      "which fleur_MPI"
     ]
    }
   }
  ],
  "package": {
   "name": "aiida-fleur.meta",
   "version": "1.3.1"
  },
  "requirements": {
   "run": [
    "aiida-fleur",
    "aiida-fleur.code"
   ]
  },
  "source": {
   "sha256": "44abdc272d80861942fc0a7f7660541a703e4a45750aff93011477e9c1acc79c",
   "url": "https://pypi.io/packages/source/a/aiida-fleur/aiida-fleur-1.3.1.tar.gz"
  }
 },
 "name": "aiida-fleur.meta",
 "new_version": "1.3.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "aiida-fleur",
   "aiida-fleur.code",
   "aiida-fleur.meta"
  ]
 },
 "raw_meta_yaml": "{% set name = \"aiida-fleur\" %}\n{% set version = \"1.3.1\" %}\n{% set build = 6 %}\n{% set name_code = name + \".code\" %}\n\npackage:\n  name: {{ name }}.meta\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/aiida-fleur-{{ version }}.tar.gz\n  sha256: 44abdc272d80861942fc0a7f7660541a703e4a45750aff93011477e9c1acc79c\n\nbuild:\n  number: {{ build }}\n  noarch: python\n\nrequirements:\n  run:\n  - {{ pin_subpackage(name, exact=True) }}\n  - {{ pin_subpackage(name_code, exact=True) }}\n\noutputs:\n  - name:  {{ name }}\n    build:\n      noarch: python\n      entry_points:\n        - aiida-fleur = aiida_fleur.cmdline:cmd_root\n      script: 'python -m pip install . --no-deps --ignore-installed -vvv '\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n        - reentry\n      run:\n        - aiida-core.atomic_tools >=1.3.0,<2\n        - future\n        - lxml >=4.8,<5\n        - markupsafe <2.1.0\n        - masci-tools >=0.9.1,<1\n        - more-itertools\n        - numpy >=1.16.4,<2\n        - pyhull\n        - python >=3.7\n        - sqlalchemy <1.4\n        - sympy\n      run_constrained:\n        - {{ name_code }} =={{ version }}\n    test:\n      imports:\n        - aiida_fleur\n      commands:\n        - pip check\n      requires:\n        - pip\n\n  - name: {{ name_code }}\n    build:\n      noarch: python\n    requirements:\n      run:\n        - fleur >=1,<7\n    test:\n      commands:\n        - which fleur_MPI\n\nabout:\n  home: https://github.com/JuDFTteam/aiida-fleur\n  summary: Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - chrisjsewell\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiida-core.atomic_tools",
   "aiida-fleur",
   "aiida-fleur.code",
   "fleur",
   "future",
   "lxml",
   "markupsafe",
   "masci-tools",
   "more-itertools",
   "numpy",
   "pip",
   "pyhull",
   "python",
   "reentry",
   "sqlalchemy",
   "sympy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "reentry"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiida-core.atomic_tools",
    "aiida-fleur",
    "aiida-fleur.code",
    "fleur",
    "future",
    "lxml",
    "markupsafe",
    "masci-tools",
    "more-itertools",
    "numpy",
    "pyhull",
    "python",
    "sqlalchemy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7",
    "reentry"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiida-core.atomic_tools >=1.3.0,<2",
    "aiida-fleur",
    "aiida-fleur.code",
    "fleur >=1,<7",
    "future",
    "lxml >=4.8,<5",
    "markupsafe <2.1.0",
    "masci-tools >=0.9.1,<1",
    "more-itertools",
    "numpy >=1.16.4,<2",
    "pyhull",
    "python >=3.7",
    "sqlalchemy <1.4",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/a/aiida-fleur/aiida-fleur-1.3.1.tar.gz",
 "version": "1.3.1"
}