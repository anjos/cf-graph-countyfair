{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "aiida-fleur",
 "hash_type": "sha256",
 "name": "aiida-fleur.meta",
 "new_version": "1.3.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "aiida-fleur",
   "aiida-fleur.code",
   "aiida-fleur.meta"
  ]
 },
 "raw_meta_yaml": "{% set name = \"aiida-fleur\" %}\n{% set version = \"1.3.1\" %}\n{% set build = 6 %}\n{% set name_code = name + \".code\" %}\n\npackage:\n  name: {{ name }}.meta\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/aiida-fleur-{{ version }}.tar.gz\n  sha256: 44abdc272d80861942fc0a7f7660541a703e4a45750aff93011477e9c1acc79c\n\nbuild:\n  number: {{ build }}\n  noarch: python\n\nrequirements:\n  run:\n  - {{ pin_subpackage(name, exact=True) }}\n  - {{ pin_subpackage(name_code, exact=True) }}\n\noutputs:\n  - name:  {{ name }}\n    build:\n      noarch: python\n      entry_points:\n        - aiida-fleur = aiida_fleur.cmdline:cmd_root\n      script: 'python -m pip install . --no-deps --ignore-installed -vvv '\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n        - reentry\n      run:\n        - aiida-core.atomic_tools >=1.3.0,<2\n        - future\n        - lxml >=4.8,<5\n        - markupsafe <2.1.0\n        - masci-tools >=0.9.1,<1\n        - more-itertools\n        - numpy >=1.16.4,<2\n        - pyhull\n        - python >=3.7\n        - sqlalchemy <1.4\n        - sympy\n      run_constrained:\n        - {{ name_code }} =={{ version }}\n    test:\n      imports:\n        - aiida_fleur\n      commands:\n        - pip check\n      requires:\n        - pip\n\n  - name: {{ name_code }}\n    build:\n      noarch: python\n    requirements:\n      run:\n        - fleur >=1,<7\n    test:\n      commands:\n        - which fleur_MPI\n\nabout:\n  home: https://github.com/JuDFTteam/aiida-fleur\n  summary: Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - chrisjsewell\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/aiida-fleur/aiida-fleur-1.3.1.tar.gz",
 "version": "1.3.1"
}