{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/64b35eae-6049-4eec-8b13-24b7c16e4287.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393667335.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/494433613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501065954.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551743337.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/608337271.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680556157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774266657.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904453888.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libode",
 "hash_type": "sha256",
 "name": "libode",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libode",
   "pyode"
  ]
 },
 "pinning_version": "2022.04.08.23.01.38",
 "raw_meta_yaml": "# defining package and version\n{% set name = \"libode\" %}\n{% set version = \"0.16.2\" %}\n{% set soversion = \"0.16.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://bitbucket.org/odedevs/ode/downloads/ode-{{ version }}.tar.gz\n  sha256: b26aebdcb015e2d89720ef48e0cb2e8a3ca77915f89d853893e7cc861f810f22\n  patches:\n    - add-rt-to-dotpc.patch          # [linux]\n    - modify-dotpc-win.patch         # [win]\n    - fix-pkg-config-setup-py.patch  # [win]\n    - macos-do-not-use-deprecated.patch\n\nbuild:\n  number: 10\n  run_exports:\n    # No ABI docs or ABI Laboratory history, better be conservative\n    - {{ pin_subpackage(name, max_pin='x.x.x') }}\n\n  # add libode to the whitelist; it can apparently not be found yet when\n  # pyode is built\n  missing_dso_whitelist:\n    - lib/libode*\n    - $RPATH/librt.*                      # [linux]\n    - $RPATH/libpthread.*                 # [linux]\n    - $RPATH/libc.*                       # [linux]\n    - $RPATH/libpython.*                  # [linux]\n    - /lib*/librt.*                       # [linux]\n    - /lib*/libpthread.*                  # [linux]\n    - /lib*/libc.*                        # [linux]\n  \nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - gnuconfig  # [unix]\n    - {{ compiler('cxx') }}          # stage 1, library\n    - cmake\n    - {{ compiler('c') }}            # stage 2, generate bindings\n    - pkg-config\n    - m2-patch                       # [win]\n    - make                           # [unix]\n  host:\n    - python\n    - cython\n\noutputs:\n  - name: {{ name }}\n    build:\n      run_exports:\n        # No ABI docs or ABI Laboratory history, better be conservative\n        - {{ pin_subpackage(name, max_pin='x.x.x') }}\n    requirements:\n      run:\n        - pthread-stubs                                              # [unix]\n        - libstdcxx-ng                                               # [linux]\n        - libgcc-ng                                                  # [linux]\n        - libcxx                                                     # [osx]\n        - vs2015_runtime                                             # [win]\n    files:\n      - lib/libode*                                                  # [unix]\n      - lib/pkgconfig/ode.pc                                         # [unix]\n      - lib/cmake/ode-{{ soversion }}                                # [unix]\n      - bin/ode-config                                               # [unix]\n      - include/ode                                                  # [unix]\n      - Library/lib/ode_double.lib                                   # [win]\n      - Library/bin/ode_double.dll                                   # [win]\n      - Library/lib/pkgconfig/ode.pc                                 # [win]\n      - Library/lib/cmake/ode-{{ soversion }}                        # [win]\n      - Library/include/ode                                          # [win]\n\n    test:\n      commands:\n        - test -f $PREFIX/lib/libode${SHLIB_EXT}                     # [unix]\n        - test -f $PREFIX/lib/libode${SHLIB_EXT}.{{ soversion }}     # [linux]\n        - test -f $PREFIX/lib/libode.{{ soversion }}${SHLIB_EXT}     # [osx]\n        - test -f $PREFIX/include/ode/ode.h                          # [unix]\n        - test -f $PREFIX/lib/pkgconfig/ode.pc                       # [unix]\n        - test -f $PREFIX/lib/cmake/ode-{{ soversion }}/ode-config.cmake  # [unix]\n        - if not exist %PREFIX%\\Library\\lib\\ode_double.lib exit 1    # [win]\n        - if not exist %PREFIX%\\Library\\bin\\ode_double.dll exit 1    # [win]\n        - if not exist %PREFIX%\\Library\\lib\\pkgconfig\\ode.pc exit 1   # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\ode-{{ soversion }}\\\\ode-config.cmake exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\ode\\\\ode.h exit 1  # [win]\n\n  - name: pyode\n    build:\n      run_exports:\n        # No ABI docs or ABI Laboratory history, better be conservative\n        - {{ pin_subpackage(name, max_pin='x.x.x') }}\n    requirements:\n      run:\n        - libode\n    files:\n      - lib/python{{ PY_VER }}/site-packages/ode.*                   # [unix]\n      - lib/python{{ PY_VER }}/site-packages/Open_Dynamics_Engine*egg-info  # [unix]\n      - Lib/site-packages/ode.*.pyd                                  # [win]\n      - Lib/site-packages/Open_Dynamics_Engine*egg-info              # [win]\n    test:\n      imports:\n        - ode\n\nabout:\n  home: https://www.ode.org/\n  license: LGPL-2.1-or-later OR BSD-4-Clause\n  summary: Open Dynamics Engine, dynamics simulation\n  license_file:\n    - LICENSE.TXT\n    - LICENSE-BSD.TXT\n\nextra:\n  recipe-maintainers:\n    - repagh\n    - traversaro\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://bitbucket.org/odedevs/ode/downloads/ode-0.16.2.tar.gz",
 "version": "0.16.2"
}