{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/339438179.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375616040.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/436860833.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/445120458.json"
   },
   "data": {
    "bot_rerun": 1605083356.9317772,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/478268147.json"
   },
   "data": {
    "bot_rerun": 1605083356.9321496,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502874449.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519051713.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519602132.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560156783.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722981622.json"
   },
   "data": {
    "bot_rerun": 1636842107.0651033,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779943749.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "metaknowledge",
 "hash_type": "sha256",
 "name": "metaknowledge",
 "new_version": "3.4.1",
 "new_version_attempts": {
  "3.3.3.2": 1,
  "3.4": 1,
  "3.4.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "metaknowledge"
  ]
 },
 "pinning_version": "2021.11.13.09.50.22",
 "raw_meta_yaml": "{% set name = \"metaknowledge\" %}\n{% set version = \"3.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 6adcc028b71488c946dbde80711ec6a8b0ba21f8673d5dad7e8739f1301fbdf2\n\nbuild:\n  number: 1\n  skip: true  # [py2k]\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - metaknowledge = metaknowledge.bin:mkCLI\n    - metaknowledge-mdToNb = metaknowledge.bin:mkMdToNb\n    - metaknowledge-DocsGen = metaknowledge.bin:mkDocs\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - networkx >=2.0\n    - pyreadline  # [win]\n    - matplotlib-base\n    - scipy\n    - numpy\n\ntest:\n  imports:\n    - metaknowledge\n    - metaknowledge.tests\n  commands:\n    - metaknowledge --help\n\nabout:\n  home: https://github.com/networks-lab/metaknowledge\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A Python library for doing bibliometric and network analysis in science and health policy research\n\n  description: |\n    metaknowledge is a Python3 library that simplifies bibliometric research using data\n    from various sources. It reads a directory of plain text files containing meta-data\n    on publications and citations, and writes to a variety of data structures that are\n    suitable for quantitative, network, and text analyses. It handles large datasets\n    (e.g. several million records) efficiently.\n  doc_url: https://metaknowledge.readthedocs.io/\n  dev_url: https://github.com/networks-lab/metaknowledge\n\nextra:\n  recipe-maintainers:\n    - vtraag\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/metaknowledge/metaknowledge-3.4.1.tar.gz",
 "version": "3.4.1"
}