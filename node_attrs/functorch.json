{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/998237058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998328520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998349127.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/50235e5e-cb33-4742-909b-96fcb90ad716.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019194084.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "functorch",
 "hash_type": "sha256",
 "name": "functorch",
 "new_version": "0.2.1",
 "new_version_attempts": {
  "0.2.0": 1,
  "0.2.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "functorch"
  ]
 },
 "pinning_version": "2022.08.04.07.32.40",
 "raw_meta_yaml": "{% set version = \"0.2.1\" %}\n\npackage:\n  name: functorch\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pytorch/functorch/archive/v{{ version }}.tar.gz\n  sha256: ea6aa67c32250040295d0e50c06444b829787f5474586e29381fe8c7989bb87e\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n  skip: true  # [win]\n  # functorch doesn't require cuda the compiler\n  # in the future, it may be necessary to build against cu1xx versions\n  skip: true  # [cuda_compiler_version != \"None\"]\n  detect_binary_files_with_prefix: false\n  missing_dso_whitelist:\n    # conda-forge::pytorch provides these libs\n    - $RPATH/libc10_cuda.so\n    - $RPATH/libtorch_python.so\n    - $RPATH/libtorch_cpu.so\n    - $RPATH/libc10.so\n    - $RPATH/libc10_cuda.dylib\n    - $RPATH/libtorch_python.dylib\n    - $RPATH/libtorch_cpu.dylib\n    - $RPATH/libc10.dylib\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - python                                   # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}       # [build_platform != target_platform]\n    - pytorch                                  # [build_platform != target_platform]\n\n  host:\n    - pip\n    - python\n    - pytorch\n  run:\n    - python\n    # we rely on global pinning to resolve pytorch\n    # functorch 0.1.x requires pytorch 1.11.x\n    # functorch 0.2.x requires pytorch 1.12.x\n    - pytorch\n\ntest:\n  source_files:\n    - test\n  requires:\n    - pip\n    - pytest\n    - expecttest\n    - pyyaml\n  imports:\n    - functorch\n  commands:\n    - pip check\n    # adding two tests from readme besides the sanity check in run_test.py\n    - pytest test/test_vmap.py -v\n    - pytest test/test_eager_transforms.py -v\n\nabout:\n  home: https://github.com/pytorch/functorch\n  summary: functorch is JAX-like composable function transforms for PyTorch\n  license: BSD-3-Clause\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - ngam\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/pytorch/functorch/archive/v0.2.1.tar.gz",
 "version": "0.2.1"
}