{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/998237058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998328520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998349127.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "functorch",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/functorch",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "functorch is JAX-like composable function transforms for PyTorch"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "missing_dso_whitelist": [
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ngam",
    "ngam",
    "ngam",
    "ngam"
   ]
  },
  "package": {
   "name": "functorch",
   "version": "0.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch"
   ],
   "run": [
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch"
   ]
  },
  "source": {
   "sha256": "3b297f4acf1d61fd95b86bd2ec1805bc9c236bb0fb341a42c2300a4b3d497fbd",
   "url": "https://github.com/pytorch/functorch/archive/v0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v"
   ],
   "imports": [
    "functorch",
    "functorch",
    "functorch",
    "functorch"
   ],
   "requires": [
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "pip",
    "pytest",
    "torchvision"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/functorch",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "functorch is JAX-like composable function transforms for PyTorch"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "missing_dso_whitelist": [
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam",
    "ngam"
   ]
  },
  "package": {
   "name": "functorch",
   "version": "0.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch"
   ],
   "run": [
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch"
   ]
  },
  "source": {
   "sha256": "3b297f4acf1d61fd95b86bd2ec1805bc9c236bb0fb341a42c2300a4b3d497fbd",
   "url": "https://github.com/pytorch/functorch/archive/v0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v"
   ],
   "imports": [
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch",
    "functorch"
   ],
   "requires": [
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "name": "functorch",
 "new_version": "0.2.0",
 "new_version_attempts": {
  "0.2.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/functorch",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "functorch is JAX-like composable function transforms for PyTorch"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "missing_dso_whitelist": [
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ngam",
    "ngam",
    "ngam",
    "ngam"
   ]
  },
  "package": {
   "name": "functorch",
   "version": "0.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch"
   ],
   "run": [
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch"
   ]
  },
  "source": {
   "sha256": "3b297f4acf1d61fd95b86bd2ec1805bc9c236bb0fb341a42c2300a4b3d497fbd",
   "url": "https://github.com/pytorch/functorch/archive/v0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v"
   ],
   "imports": [
    "functorch",
    "functorch",
    "functorch",
    "functorch"
   ],
   "requires": [
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "pip",
    "pytest",
    "torchvision"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/functorch",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "functorch is JAX-like composable function transforms for PyTorch"
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "missing_dso_whitelist": [
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib",
    "$RPATH/libc10_cuda.so",
    "$RPATH/libtorch_python.so",
    "$RPATH/libtorch_cpu.so",
    "$RPATH/libc10.so",
    "$RPATH/libc10_cuda.dylib",
    "$RPATH/libtorch_python.dylib",
    "$RPATH/libtorch_cpu.dylib",
    "$RPATH/libc10.dylib"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ngam",
    "ngam",
    "ngam"
   ]
  },
  "package": {
   "name": "functorch",
   "version": "0.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch",
    "pip",
    "python",
    "pytorch"
   ],
   "run": [
    "python",
    "pytorch",
    "python",
    "pytorch",
    "python",
    "pytorch"
   ]
  },
  "source": {
   "sha256": "3b297f4acf1d61fd95b86bd2ec1805bc9c236bb0fb341a42c2300a4b3d497fbd",
   "url": "https://github.com/pytorch/functorch/archive/v0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v",
    "pip check",
    "pytest test/test_vmap.py -v",
    "pytest test/test_eager_transforms.py -v"
   ],
   "imports": [
    "functorch",
    "functorch",
    "functorch"
   ],
   "requires": [
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision",
    "pip",
    "pytest",
    "expecttest",
    "torchvision"
   ],
   "source_files": [
    "test",
    "test",
    "test"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "pip",
    "pytest",
    "torchvision"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "functorch"
  ]
 },
 "pinning_version": "2022.07.16.03.13.38",
 "raw_meta_yaml": "{% set version = \"0.1.1\" %}\n\npackage:\n  name: functorch\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pytorch/functorch/archive/v{{ version }}.tar.gz\n  sha256: 3b297f4acf1d61fd95b86bd2ec1805bc9c236bb0fb341a42c2300a4b3d497fbd\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n  skip: true  # [win]\n  # functorch doesn't require cuda the compiler\n  # in the future, it may be necessary to build against cu1xx versions\n  skip: true  # [cuda_compiler_version != \"None\"]\n  detect_binary_files_with_prefix: false\n  missing_dso_whitelist:\n    # conda-forge::pytorch provides these libs\n    - \"$RPATH/libc10_cuda.so\"\n    - \"$RPATH/libtorch_python.so\"\n    - \"$RPATH/libtorch_cpu.so\"\n    - \"$RPATH/libc10.so\"\n    - \"$RPATH/libc10_cuda.dylib\"\n    - \"$RPATH/libtorch_python.dylib\"\n    - \"$RPATH/libtorch_cpu.dylib\"\n    - \"$RPATH/libc10.dylib\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - python                                   # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}       # [build_platform != target_platform]\n    - pytorch                                  # [build_platform != target_platform]\n\n  host:\n    - pip\n    - python\n    - pytorch\n  run:\n    - python\n    # we rely on global pinning to resolve pytorch\n    # functorch 0.1.x requires pytorch 1.11.x\n    # functorch 0.2.x requires pytorch 1.12.x\n    - pytorch\n\ntest:\n  source_files:\n    - test\n  requires:\n    - pip\n    - pytest\n    - expecttest\n    # torchvision isn't needed really, but some tests softly depend on it\n    - torchvision\n  imports:\n    - functorch\n  commands:\n    - pip check\n    # adding two tests from readme besides the sanity check in run_test.py\n    - pytest test/test_vmap.py -v\n    - pytest test/test_eager_transforms.py -v\n\nabout:\n  home: https://github.com/pytorch/functorch\n  summary: functorch is JAX-like composable function transforms for PyTorch\n  license: BSD-3-Clause\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - ngam\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "pip",
   "python",
   "pytorch"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "pip",
    "pytest",
    "torchvision"
   ]
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "pip",
    "pytest",
    "torchvision"
   ]
  }
 },
 "url": "https://github.com/pytorch/functorch/archive/v0.1.1.tar.gz",
 "version": "0.1.1"
}