{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/739678319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750675660.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/809421350.json"
   },
   "data": {
    "bot_rerun": 1641857065.3231497,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "250"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/818193402.json"
   },
   "data": {
    "bot_rerun": 1652898343.2411065,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "250"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939474130.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4_c19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943444621.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "250"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943482067.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "251"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/961159006.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "p11kit023"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964464974.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "p11_kit024"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "systemd",
 "hash_type": "sha256",
 "name": "systemd-split",
 "new_version": "251",
 "new_version_attempts": {
  "250": 3,
  "251": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libsystemd",
   "libsystemd0",
   "libudev",
   "libudev1"
  ]
 },
 "pinning_version": "2022.06.10.16.38.37",
 "raw_meta_yaml": "{% set name = \"systemd\" %}\n{% set version = \"249\" %}\n{% set build = 4 %}\n{% set libudev_abi_version = \"1\" %}\n{% set libsystemd_abi_version = \"0\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 174091ce5f2c02123f76d546622b14078097af105870086d18d55c1c2667d855\n  patches:\n    # remove for systemd >= 250\n    - 0001-meson.build-change-operator-combining-bools-from-to-.patch\n\nbuild:\n  number: {{ build }}\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - coreutils\n    - gperf\n    - jinja2\n    - meson\n    - ninja\n    - pkg-config\n    - python *\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - elfutils\n    - libacl\n    - libcap\n    - libgcrypt\n    - lz4-c\n    - p11-kit\n    - libseccomp\n    - openssl\n    - util-linux\n    - xz\n    - zstd\n\noutputs:\n  - name: libudev{{ libudev_abi_version }}\n    files:\n      - lib/libudev.so.{{ libudev_abi_version }}\n      - lib/libudev.so.{{ libudev_abi_version }}.*\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - sysroot_linux-64 2.17  # [linux64]\n    test:\n      commands:\n        # verify that library and its symlink gets installed\n        # symlink\n        - test -h $PREFIX/lib/libudev.so.{{ libudev_abi_version }}\n        # library\n        - test -f $PREFIX/lib/libudev.so.{{ libudev_abi_version }}\n    about:\n      home: https://www.freedesktop.org/wiki/Software/systemd/\n      dev_url: https://github.com/systemd/systemd\n      license: LGPL-2.1-or-later\n      license_file: LICENSE.LGPL2.1\n      summary: Library to access udev device information\n\n  - name: libudev\n    files:\n      - include/libudev.h\n      - lib/pkgconfig/libudev.pc\n      - lib/libudev.so\n    build:\n      # set build string to ensure unique outputs for each build of libudevN\n      string: {{ pin_subpackage('libudev' + libudev_abi_version, exact=True).split(' ')[-1] }}\n      run_exports:\n        - {{ pin_subpackage('libudev' + libudev_abi_version, max_pin='') }}\n    requirements:\n      run:\n        - {{ pin_subpackage('libudev' + libudev_abi_version, exact=True) }}\n    test:\n      commands:\n        # verify that header gets installed\n        - test -f $PREFIX/include/libudev.h\n\n        # verify that pkgconfig files get installed\n        - test -f $PREFIX/lib/pkgconfig/libudev.pc\n\n        # verify that library symlink gets installed and points to the library\n        - test -h $PREFIX/lib/libudev.so\n        - test -f $PREFIX/lib/libudev.so\n    about:\n      home: https://www.freedesktop.org/wiki/Software/systemd/\n      dev_url: https://github.com/systemd/systemd\n      license: LGPL-2.1-or-later\n      license_file: LICENSE.LGPL2.1\n      summary: Development package for the udev library\n\n  - name: libsystemd{{ libsystemd_abi_version }}\n    files:\n      - lib/libsystemd.so.{{ libsystemd_abi_version }}\n      - lib/libsystemd.so.{{ libsystemd_abi_version }}.*\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - libcap\n        - libgcrypt\n        - lz4-c\n        - xz\n        - zstd\n    test:\n      commands:\n        # verify that library and its symlink gets installed\n        # symlink\n        - test -h $PREFIX/lib/libsystemd.so.{{ libsystemd_abi_version }}\n        # library\n        - test -f $PREFIX/lib/libsystemd.so.{{ libsystemd_abi_version }}\n    about:\n      home: https://www.freedesktop.org/wiki/Software/systemd/\n      dev_url: https://github.com/systemd/systemd\n      license: LGPL-2.1-or-later\n      license_file: LICENSE.LGPL2.1\n      summary: Library for interfacing with systemd\n\n  - name: libsystemd\n    files:\n      - include/systemd\n      - lib/pkgconfig/libsystemd.pc\n      - lib/libsystemd.so\n    build:\n      # set build string to ensure unique outputs for each build of libudevN\n      string: {{ pin_subpackage('libsystemd' + libsystemd_abi_version, exact=True).split(' ')[-1] }}\n      run_exports:\n        - {{ pin_subpackage('libsystemd' + libsystemd_abi_version, max_pin='') }}\n    requirements:\n      run:\n        - {{ pin_subpackage('libsystemd' + libsystemd_abi_version, exact=True) }}\n    test:\n      commands:\n        # verify that headers get installed\n        - test -f $PREFIX/include/systemd/_sd-common.h\n        - test -f $PREFIX/include/systemd/sd-bus-protocol.h\n        - test -f $PREFIX/include/systemd/sd-bus-vtable.h\n        - test -f $PREFIX/include/systemd/sd-bus.h\n        - test -f $PREFIX/include/systemd/sd-daemon.h\n        - test -f $PREFIX/include/systemd/sd-device.h\n        - test -f $PREFIX/include/systemd/sd-event.h\n        - test -f $PREFIX/include/systemd/sd-hwdb.h\n        - test -f $PREFIX/include/systemd/sd-id128.h\n        - test -f $PREFIX/include/systemd/sd-journal.h\n        - test -f $PREFIX/include/systemd/sd-login.h\n        - test -f $PREFIX/include/systemd/sd-messages.h\n        - test -f $PREFIX/include/systemd/sd-path.h\n\n        # verify that pkgconfig files get installed\n        - test -f $PREFIX/lib/pkgconfig/libsystemd.pc\n\n        # verify that library gets installed and points to the library\n        - test -h $PREFIX/lib/libsystemd.so\n        - test -f $PREFIX/lib/libsystemd.so\n    about:\n      home: https://www.freedesktop.org/wiki/Software/systemd/\n      dev_url: https://github.com/systemd/systemd\n      license: LGPL-2.1-or-later\n      license_file: LICENSE.LGPL2.1\n      summary: Development package for the systemd library\n\nabout:\n  home: https://www.freedesktop.org/wiki/Software/systemd/\n  license: LGPL-2.1-or-later AND GPL-2.0-or-later\n  license_file:\n    - LICENSE.LGPL2.1\n    - LICENSE.GPL2\n  summary: System and Service Manager\n  description: |\n    systemd is a suite of basic building blocks for a Linux system. It provides\n    a system and service manager that runs as PID 1 and starts the rest of the\n    system.\n\n    systemd provides aggressive parallelization capabilities, uses socket and\n    D-Bus activation for starting services, offers on-demand starting of\n    daemons, keeps track of processes using Linux control groups, maintains\n    mount and automount points, and implements an elaborate transactional\n    dependency-based service control logic. systemd supports SysV and LSB init\n    scripts and works as a replacement for sysvinit.\n\n    Other parts include a logging daemon, utilities to control basic system\n    configuration like the hostname, date, locale, maintain a list of logged-in\n    users and running containers and virtual machines, system accounts, runtime\n    directories and settings, and daemons to manage simple network\n    configuration, network time synchronization, log forwarding, and name\n    resolution.\n  dev_url: https://github.com/systemd/systemd\n\nextra:\n  feedstock-name: {{ name }}\n  recipe-maintainers:\n    - ryanvolz\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://github.com/systemd/systemd/archive/v249.tar.gz",
 "version": "249"
}