{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/968714780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/971122199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "openmm-atmmetaforce-plugin",
 "hash_type": "sha256",
 "name": "openmm-atmmetaforce-plugin",
 "new_version": "0.3.1",
 "new_version_attempts": {
  "0.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmm-atmmetaforce-plugin"
  ]
 },
 "pinning_version": "2022.06.17.10.28.32",
 "raw_meta_yaml": "{% set name = \"openmm-atmmetaforce-plugin\" %}\n{% set version = \"0.3.1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Gallicchio-Lab/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 9404a368c0d7b3e131904f23146b405c7913ede8009ef0584246ae7c889d2652\n\nbuild:\n  number: 0\n  skip: true  # [not linux64]\n  skip: true  # [cuda_compiler_version in (undefined, 'None')]\n  run_exports:\n    # TODO: Relax max_pin at version 1.0 / stable API\n    - {{ pin_subpackage(name, max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [linux]\n    - cmake\n    - swig\n\n  host:\n    - python\n    - openmm\n    - pthread-stubs\n    - lxml\n\n  run:\n    - python\n    - numpy\n    # openmm package is missing a run_export as of 9 June 2022\n    - {{ pin_compatible('openmm') }}\n\ntest:\n  requires:\n    - pocl  # [unix]\n    - pip\n  imports:\n    - simtk\n    - openmm\n    - numpy\n  commands:\n    - pip check\n    - test -f $PREFIX/lib/plugins/libATMMetaForcePluginCUDA$SHLIB_EXT  # [unix]\n    - test -f $PREFIX/lib/plugins/libATMMetaForcePluginOpenCL$SHLIB_EXT  # [unix]\n    - test -f $PREFIX/lib/plugins/libATMMetaForcePluginReference$SHLIB_EXT  # [unix]\n    - test -f $PREFIX/include/ATMMetaForce.h  # [unix]\n    - test -f $PREFIX/include/internal/ATMMetaForceImpl.h  # [unix]\n\nabout:\n  home: https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git\n  license: LGPL-2.0-only\n  license_family: LGPL\n  license_file:\n    - LICENSE\n  summary: The Alchemical Transfer Method Plugin for OpenMM\n  description: |\n    This plugin implements the Alchemical Transfer Potential (ATM) for the calculation\n    of absolute and relative binding free energies of molecular complexes\n    in OpenMM, a high performance toolkit for molecular simulation.\n  doc_url: https://github.com/Gallicchio-Lab/async_re-openmm/tree/master/examples\n  dev_url: https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git\n\nextra:\n  recipe-maintainers:\n    - egallicc\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin/archive/refs/tags/v0.3.1.tar.gz",
 "version": "0.3.1"
}