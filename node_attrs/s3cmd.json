{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/400534427.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/743065638.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "s3cmd",
 "hash_type": "sha256",
 "name": "s3cmd",
 "new_version": "2.2.0",
 "new_version_attempts": {
  "2.1.0": 1,
  "2.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "s3cmd"
  ]
 },
 "pinning_version": "2021.09.26.18.22.49",
 "raw_meta_yaml": "{% set name = \"s3cmd\" %}\n{% set version = \"2.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 6d7a3a49a12048a6c8e5fbb5ef42a83101e2fc69f16013d292b7f37ecfc574a0\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - python-dateutil\n    - python-magic\n\ntest:\n  commands:\n    - s3cmd --help\n\nabout:\n  home: https://s3tools.org/s3cmd\n  license: GPL v2\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'Command line tool for managing Amazon S3 and CloudFront services'\n  description: |\n    S3cmd is a free command line tool and client for uploading, retrieving and\n    managing data in Amazon S3 and other cloud storage service providers that\n    use the S3 protocol, such as Google Cloud Storage or DreamHost DreamObjects.\n    It is best suited for power users who are familiar with command line programs.\n    It is also ideal for batch scripts and automated backup to S3, triggered from\n    cron, etc.\n  doc_url: https://s3tools.org/usage\n  dev_url: https://github.com/s3tools/s3cmd\n\nextra:\n  recipe-maintainers:\n    - scopatz\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/s3cmd/s3cmd-2.0.2.tar.gz",
 "version": "2.0.2"
}