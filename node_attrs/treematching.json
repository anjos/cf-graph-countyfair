{
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "treematching",
 "hash_type": "sha256",
 "name": "treematching",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "treematching"
  ]
 },
 "raw_meta_yaml": "{% set name = \"treematching\" %}\n{% set version = \"0.1a20210513\" %}\n{% set git_tag = \"5ebc2474d8720d87569cf414bd0275010edf8f19\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://github.com/LionelAuroux/{{ name }}/archive/{{ git_tag }}.tar.gz\n  sha256: 6fe70e13b8889811332309bc405185c4e885df3278c80f54551e6af8ffdda2f1\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n\ntest:\n  imports:\n    - treematching\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/LionelAuroux/treematching\n  license: GPL-2.0-Only\n  license_family: GPL\n  license_file: LICENSE\n  summary: \"The module treematching allow you to write patterns to match subtrees in any trees of python objects.\"\n  dev_url: https://github.com/LionelAuroux/treematching\n\nextra:\n  recipe-maintainers:\n    - psortos\n    - oblute\n    - mxr-conda\n",
 "strong_exports": false,
 "url": "https://github.com/LionelAuroux/treematching/archive/5ebc2474d8720d87569cf414bd0275010edf8f19.tar.gz",
 "version": "0.1a20210513"
}