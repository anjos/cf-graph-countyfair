{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/233343052.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/254058238.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274027737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299652734.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/350248394.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/385116632.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/414751253.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652898665.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/897572588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-barcoder",
 "hash_type": "sha256",
 "name": "r-barcoder",
 "new_version": "0.1.7",
 "new_version_attempts": {
  "0.1.7": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-barcoder"
  ]
 },
 "pinning_version": "2022.04.01.12.21.46",
 "raw_meta_yaml": "{% set version = \"0.1.7\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-barcoder\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/baRcodeR_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/baRcodeR/baRcodeR_{{ version }}.tar.gz\n  sha256: dc58b650039f243eb5da8b20b2cd3a4d665197183a1094826ee65f78f96a2ca5\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-dt >=0.3\n    - r-miniui >=0.1.1\n    - r-qrcode\n    - r-rstudioapi\n    - r-shiny >=0.13\n  run:\n    - r-base\n    - r-dt >=0.3\n    - r-miniui >=0.1.1\n    - r-qrcode\n    - r-rstudioapi\n    - r-shiny >=0.13\n\ntest:\n  commands:\n    - $R -e \"library('baRcodeR')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('baRcodeR')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/yihanwu/baRcodeR\n  license: GPL-3.0-only\n  summary: 'Tools to generate unique identifiers and printable barcoded labels for sample management.  The creation of unique ID codes and printable PDF files can be initiated by standard commands,  user prompts, or through a GUI addin for R Studio. Both single-level and hierarchical labels can  be created in the command\n    line interactively or non-interactively. '\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: baRcodeR\n# Title: Labelling, Tracking, and Collecting Data from Biological Samples\n# Version: 0.1.3\n# Authors@R: c(person(\"Yihan\", \"Wu\", role=\"aut\", email = \"yihan.wu@queensu.ca\"), person(\"Robert\", \"Colautti\", email = \"robert.colautti@queensu.ca\", role = c(\"aut\", \"cre\")))\n# Maintainer: Robert Colautti <robert.colautti@queensu.ca>\n# Description: Tools to generate unique identifiers and printable barcoded labels for sample management.  The creation of unique ID codes and printable PDF files can be initiated by standard commands,  user prompts, or through a GUI addin for R Studio. Both single-level and hierarchical labels can  be created in the command line interactively or non-interactively.\n# Depends: R (>= 3.4.0), qrcode\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# Imports: DT (>= 0.3), grDevices, grid, miniUI (>= 0.1.1), shiny (>= 0.13), rstudioapi\n# Suggests: testthat, knitr, rmarkdown\n# RoxygenNote: 6.1.0\n# VignetteBuilder: knitr\n# URL: https://github.com/yihanwu/baRcodeR\n# BugReports: https://github.com/yihanwu/baRcodeR/issues\n# NeedsCompilation: no\n# Packaged: 2019-04-26 19:30:38 UTC; colauttilab\n# Author: Yihan Wu [aut], Robert Colautti [aut, cre]\n# Repository: CRAN\n# Date/Publication: 2019-04-26 19:50:03 UTC\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/baRcodeR_0.1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/baRcodeR/baRcodeR_0.1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/baRcodeR_0.1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/baRcodeR/baRcodeR_0.1.7.tar.gz"
 ],
 "version": "0.1.7"
}