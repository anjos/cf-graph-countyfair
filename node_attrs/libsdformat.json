{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/399972325.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/425471936.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485496894.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485813103.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495247343.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/540771960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554632435.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557017540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560736969.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.3.0",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/575980197.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/606228050.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/628294298.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676680812.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676928540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "tinyxml2-9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676928726.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.3.0",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "tinyxml2-9"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676928913.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v10",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "tinyxml2-9"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677547092.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v10",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/678742038.json"
   },
   "data": {
    "bot_rerun": 1625002622.1942186,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/678742180.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.3.0",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/678742322.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v10",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680296776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680385170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682256123.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/731866564.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747177499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/754734687.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v11",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v11",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/777101793.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/787473397.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/793333954.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "v9.3.0",
    "v10",
    "v11"
   ]
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libsdformat",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12",
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": []
  },
  "source": [
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12",
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": []
  },
  "source": [
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12",
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": []
  },
  "source": [
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12",
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ruby 2.7",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": [
    "__osx >=10.14",
    "__osx >=10.14"
   ]
  },
  "source": [
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "if not exist %LIBRARY_INC%\\\\sdformat-12.0\\\\sdf\\\\sdf.hh exit 1",
    "if not exist %LIBRARY_LIB%\\\\sdformat12.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\sdformat12.dll exit 1",
    "if not exist %LIBRARY_LIB%\\\\cmake\\\\sdformat12\\\\sdformat12-config.cmake exit 1"
   ]
  }
 },
 "name": "libsdformat12",
 "new_version": "12.3.0",
 "new_version_attempts": {
  "10.0.0": 1,
  "10.1.0": 1,
  "10.2.0": 1,
  "10.3.0": 1,
  "11.0.0": 1,
  "11.1.0": 1,
  "11.2.0": 1,
  "11.2.1": 1,
  "11.2.2": 1,
  "11.3.0": 1,
  "12.0.0": 1,
  "12.1.0": 1,
  "12.2.0": 1,
  "12.3.0": 1,
  "9.2.0": 1,
  "9.3.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12",
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": [
    "__osx >=10.14",
    "__osx >=10.14"
   ]
  },
  "source": [
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12",
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": []
  },
  "source": [
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   },
   {
    "patches": [
     "sdformat.patch",
     "skipPoseNoValueTest.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake",
    "test -f ${PREFIX}/include/sdformat-12.0/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat12${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/cmake/sdformat12/sdformat12-config.cmake"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libsdformat12"
  ]
 },
 "pinning_version": "2021.12.01.23.52.30",
 "raw_meta_yaml": "{% set base_name = \"libsdformat\" %}\n{% set version = \"12.0.0\" %}\n{% set major_version = version.split('.')[0] %}\n{% set name = base_name + major_version %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/osrf/sdformat/archive/sdformat{{ major_version }}_{{ version }}.tar.gz\n    sha256: b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8\n    patches:\n      - sdformat.patch\n      - skipPoseNoValueTest.patch  # [osx]\n\nbuild:\n  number: 0\n  skip: false\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - ninja                              # [not win]\n    - ruby                               # [not win]\n    - ruby 2.7                           # [win]\n    - cmake\n    - pkg-config\n  host:\n    - libignition-cmake2\n    - libignition-math6\n    - libignition-tools1\n    - libignition-utils1\n    - urdfdom\n    - tinyxml2\n    - console_bridge\n  run:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/sdformat-{{ version.split('.')[0] }}.{{ version.split('.')[1] }}/sdf/sdf.hh  # [not win]\n    - test -f ${PREFIX}/lib/libsdformat{{ version.split('.')[0] }}${SHLIB_EXT}  # [unix]\n    - test -f ${PREFIX}/lib/cmake/sdformat{{ version.split('.')[0] }}/sdformat{{ version.split('.')[0] }}-config.cmake  # [not win]\n    - if not exist %LIBRARY_INC%\\\\sdformat-{{ version.split('.')[0] }}.{{ version.split('.')[1] }}\\\\sdf\\\\sdf.hh exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\sdformat{{ version.split('.')[0] }}.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\sdformat{{ version.split('.')[0] }}.dll exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\cmake\\\\sdformat{{ version.split('.')[0] }}\\\\sdformat{{ version.split('.')[0] }}-config.cmake exit 1  # [win]\n\nabout:\n  home: http://sdformat.org/\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: |\n    Simulation Description Format (SDF) parser and description files.\n\nextra:\n  recipe-maintainers:\n    - seanyen\n    - j-rivero\n    - conda-forge/ros-core\n    - Tobias-Fischer\n    - traversaro\n",
 "req": {
  "__set__": true,
  "elements": [
   "__osx",
   "c_compiler_stub",
   "cmake",
   "console_bridge",
   "cxx_compiler_stub",
   "libignition-cmake2",
   "libignition-math6",
   "libignition-tools1",
   "libignition-utils1",
   "ninja",
   "pkg-config",
   "ruby",
   "tinyxml2",
   "urdfdom"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "console_bridge",
    "cxx_compiler_stub",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby",
    "ruby 2.7"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx >=10.14"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz",
 "version": "12.0.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://sdformat.org/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Simulation Description Format (SDF) parser and description files.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libsdformat12"
   ],
   "skip": false
  },
  "extra": {
   "recipe-maintainers": [
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "Tobias-Fischer",
    "traversaro"
   ]
  },
  "package": {
   "name": "libsdformat12",
   "version": "12.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ruby 2.7",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "urdfdom",
    "tinyxml2",
    "console_bridge"
   ],
   "run": []
  },
  "source": [
   {
    "patches": [
     "sdformat.patch"
    ],
    "sha256": "b3f44b7bc4530ca40ca120489d791d8ee9295beb30a16406926fb2ae42b3fba8",
    "url": "https://github.com/osrf/sdformat/archive/sdformat12_12.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%\\\\sdformat-12.0\\\\sdf\\\\sdf.hh exit 1",
    "if not exist %LIBRARY_LIB%\\\\sdformat12.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\sdformat12.dll exit 1",
    "if not exist %LIBRARY_LIB%\\\\cmake\\\\sdformat12\\\\sdformat12-config.cmake exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "pkg-config",
    "ruby"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "console_bridge",
    "libignition-cmake2",
    "libignition-math6",
    "libignition-tools1",
    "libignition-utils1",
    "tinyxml2",
    "urdfdom"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}