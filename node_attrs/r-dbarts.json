{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/880c3053-cab0-4dc2-9f37-21b05ee4bf6b.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549495344.json"
   },
   "data": {
    "bot_rerun": 1620119815.1969724,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9_19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/629469762.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/629649854.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9_19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650783110.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753889759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9_20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827445849.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2022"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/893539737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9_22"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-dbarts",
 "hash_type": "sha256",
 "name": "r-dbarts",
 "new_version": "0.9_22",
 "new_version_attempts": {
  "0.9_19": 2,
  "0.9_20": 1,
  "0.9_22": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-dbarts"
  ]
 },
 "pinning_version": "2022.03.28.22.11.58",
 "raw_meta_yaml": "{% set version = \"0.9-22\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-dbarts\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/dbarts_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/dbarts/dbarts_{{ version }}.tar.gz\n  sha256: 68fa2bfe274811c91ea7b67da46c4ffe527eb662d75edbec26ffe934ddc7150a\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed               # [win]\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - liblapack                    # [linux]\n    - libblas                      # [linux]\n    - libopenblas\n    - mkl\n    - r-base\n  run:\n    - liblapack                    # [linux]\n    - libblas                      # [linux]\n    - libopenblas\n    - mkl\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('dbarts')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('dbarts')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/vdorie/dbarts\n  license: GPL-2.0-or-later\n  summary: Fits Bayesian additive regression trees (BART; Chipman, George, and McCulloch (2010) <doi:10.1214/09-AOAS285>) while allowing the updating of predictors or response so that BART can be incorporated as a conditional model in a Gibbs/Metropolis-Hastings sampler. Also serves as a drop-in replacement for package 'BayesTree'.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: dbarts\n# Version: 0.9-18\n# Date: 2020-06-10\n# Title: Discrete Bayesian Additive Regression Trees Sampler\n# Authors@R: c( person(\"Vincent\", \"Dorie\", role = c(\"aut\", \"cre\"), email = \"vdorie@gmail.com\", comment = c(ORCID = \"0000-0002-9576-3064\")), person(\"Hugh\", \"Chipman\", role = \"aut\", email = \"hugh.chipman@gmail.com\"), person(\"Robert\", \"McCulloch\", role = \"aut\", email = \"robert.mcculloch1@gmail.com\"), person(\"Armon\", \"Dadgar\", role = \"ctb\", comment = \"adaptive radix tree\"), person(\"R Core Team\", role = \"ctb\", comment = \"basis of RNG\"), person(\"Guido U\", \"Draheim\", role = \"ctb\", comment = \"ax_check_compile_flag.m4\"), person(\"Maarten\", \"Bosmans\", role = \"ctb\", comment = \"ax_check_compile_flag.m4\"), person(\"Christophe\", \"Tournayre\", role = \"ctb\", comment = \"ax_compiler_ext.m4, ax_ext.m4\"), person(\"Michael\", \"Petch\", role = \"ctb\", comment = \"ax_compiler_ext.m4, ax_ext.m4, ax_gcc_x86_avx_xgetbv.m4, ax_gcc_x86_cpuid.m4\"), person(\"Rafael\", \"de Lucena Valle\", role = \"ctb\", comment = \"ax_compiler_ext.m4, ax_ext.m4\"), person(\"Steven G.\", \"Johnson\", role = \"ctb\", comment = c(\"ax_compiler_vendor.m4, ax_gcc_x86_cpuid.m4, ax_pthread.m4\", ORCID = \"0000-0001-7327-4967\")), person(\"Matteo\", \"Frigo\", role = \"ctb\", comment = \"ax_compiler_vendor.m4, ax_gcc_x86_cpuid.m4\"), person(\"John\", \"Zaitseff\", role = \"ctb\", comment = \"ax_compiler_vendor.m4\"), person(\"Todd\", \"Veldhuizen\", role = \"ctb\", comment = \"ax_cxx_namespace_std.m4\"), person(\"Luc\", \"Maisonobe\", role = \"ctb\", comment = \"ax_cxx_namespace_std.m4\"), person(\"Scott\", \"Pakin\", role = \"ctb\", comment = c(\"ax_func_posix_memalign.m4\", ORCID = \"0000-0002-5220-1985\")), person(\"Daniel\", \"Richard G.\", role = \"ctb\", comment = \"ax_pthread.m4\"))\n# Depends: R (>= 3.1-0)\n# Imports: stats, methods, graphics, parallel\n# Suggests: testthat (>= 0.9-0)\n# Description: Fits Bayesian additive regression trees (BART; Chipman, George, and McCulloch (2010) <doi:10.1214/09-AOAS285>) while allowing the updating of predictors or response so that BART can be incorporated as a conditional model in a Gibbs/Metropolis-Hastings sampler. Also serves as a drop-in replacement for package 'BayesTree'.\n# License: GPL (>= 2)\n# NeedsCompilation: yes\n# Biarch: yes\n# URL: https://github.com/vdorie/dbarts\n# BugReports: https://github.com/vdorie/dbarts/issues\n# Packaged: 2020-06-11 20:37:36 UTC; vdorie\n# Author: Vincent Dorie [aut, cre] (<https://orcid.org/0000-0002-9576-3064>), Hugh Chipman [aut], Robert McCulloch [aut], Armon Dadgar [ctb] (adaptive radix tree), R Core Team [ctb] (basis of RNG), Guido U Draheim [ctb] (ax_check_compile_flag.m4), Maarten Bosmans [ctb] (ax_check_compile_flag.m4), Christophe Tournayre [ctb] (ax_compiler_ext.m4, ax_ext.m4), Michael Petch [ctb] (ax_compiler_ext.m4, ax_ext.m4, ax_gcc_x86_avx_xgetbv.m4, ax_gcc_x86_cpuid.m4), Rafael de Lucena Valle [ctb] (ax_compiler_ext.m4, ax_ext.m4), Steven G. Johnson [ctb] (ax_compiler_vendor.m4, ax_gcc_x86_cpuid.m4, ax_pthread.m4, <https://orcid.org/0000-0001-7327-4967>), Matteo Frigo [ctb] (ax_compiler_vendor.m4, ax_gcc_x86_cpuid.m4), John Zaitseff [ctb] (ax_compiler_vendor.m4), Todd Veldhuizen [ctb] (ax_cxx_namespace_std.m4), Luc Maisonobe [ctb] (ax_cxx_namespace_std.m4), Scott Pakin [ctb] (ax_func_posix_memalign.m4, <https://orcid.org/0000-0002-5220-1985>), Daniel Richard G. [ctb] (ax_pthread.m4)\n# Maintainer: Vincent Dorie <vdorie@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2020-06-12 05:40:02 UTC\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dbarts/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dbarts/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dbarts/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dbarts/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dbarts/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/dbarts_0.9-22.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dbarts/dbarts_0.9-22.tar.gz"
 ],
 "version": "0.9_22"
}