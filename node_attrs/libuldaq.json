{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/885571947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libuldaq",
 "hash_type": "sha256",
 "name": "libuldaq",
 "new_version": "1.2.1",
 "new_version_attempts": {
  "1.2.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libuldaq"
  ]
 },
 "pinning_version": "2022.03.22.00.01.46",
 "raw_meta_yaml": "{% set name = \"libuldaq\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mccdaq/uldaq/archive/v{{ version }}.tar.gz\n  sha256: c28dd995b5392b05b6a32eac18b54173c126e2c575c5a5e46e7e2081f685e1f7\n  patches:\n    - 0001-configure.ac-use-PKG_CHECK_MODULES.patch\n    - 0002-makefile.am-remove-installation-of-udev-rules.patch\n\nbuild:\n  skip: True  # [win]\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - autoconf\n    - automake\n    - libtool\n    - libusb\n    - pkg-config\n  host:\n    - libusb\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libuldaq${SHLIB_EXT}\n\nabout:\n  home: https://github.com/mccdaq/uldaq\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Contains a library to access and control supported Measurement Computing DAQ devices\n  description: The **uldaq** package contains programming libraries and components for developing applications using C/C++ on Linux and macOS Operating Systems. An API (Application Prog    ramming Interface) for interacting with the library in Python is available as an additional installation. This package was created and is supported by MCC.\n\nextra:\n  recipe-maintainers:\n    - jdowner\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://github.com/mccdaq/uldaq/archive/v1.2.0.tar.gz",
 "version": "1.2.0"
}