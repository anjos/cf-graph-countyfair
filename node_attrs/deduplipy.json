{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/873640100.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898270364.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898355160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "deduplipy",
 "hash_type": "sha256",
 "name": "deduplipy",
 "new_version": "0.7.9",
 "new_version_attempts": {
  "0.7.5": 1,
  "0.7.8": 1,
  "0.7.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "deduplipy"
  ]
 },
 "pinning_version": "2022.04.03.14.32.43",
 "raw_meta_yaml": "{% set name = \"DedupliPy\" %}\n{% set version = \"0.7.9\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/DedupliPy-{{ version }}.tar.gz\n  sha256: 8692b1e9ef27c68b118e29d8b4af34a85fc61134c7d1e33ef0a8588426802bdf\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n    - fancyimpute\n    - modal\n    - networkx\n    - numpy\n    - openpyxl\n    - pandas\n    - pyminhash\n    - pytest\n    - python-levenshtein\n    - scikit-learn\n    - scipy\n    - thefuzz\n\ntest:\n  imports:\n    - deduplipy\n    - deduplipy.active_learning\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/fritshermans/deduplipy\n  summary: End-to-end deduplication solution\n  license: MIT\n  license_file: LICENSE\n  description: |\n    <a href=\"https://deduplipy.readthedocs.io/en/latest/\">\n      <img src=\"https://deduplipy.readthedocs.io/en/latest/_images/logo.png\" width=\"15%\" height=\"15%\" align=\"left\" />\n    </a>\n\n    Deduplication is the task to combine different representations of the \n    same real world entity. This package implements deduplication using \n    active learning. Active learning allows for rapid training without \n    having to provide a large, manually labelled dataset.\n\n    DedupliPy is an end-to-end solution with advantages over existing solutions:\n    - active learning; no large manually labelled dataset required\n    - during active learning, the user gets notified when the model \n      converged and training may be finished\n    - works out of the box, advanced users can choose settings as \n      desired (custom blocking rules, custom metrics, interaction features)\n\n    Developed by [Frits Hermans](https://www.linkedin.com/in/frits-hermans-data-scientist/)\n\n    PyPI: [https://pypi.org/project/DedupliPy/](https://pypi.org/project/DedupliPy/)\n\n  doc_url: https://deduplipy.readthedocs.io/en/latest/\n  dev_url: https://github.com/fritshermans/deduplipy\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/D/DedupliPy/DedupliPy-0.7.9.tar.gz",
 "version": "0.7.9"
}