{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199914706.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217514484.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266601250.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335644906.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/389639940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500979463.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551803308.json"
   },
   "data": {
    "bot_rerun": 1637356372.4805617,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/723846184.json"
   },
   "data": {
    "bot_rerun": 1637356372.4812877,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774757376.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775016424.json"
   },
   "data": {
    "bot_rerun": 1637356372.4818826,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784974796.json"
   },
   "data": {
    "bot_rerun": 1637356372.4823368,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904889860.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1103841902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "cogapp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Cog is a file generation tool. It lets you use pieces of Python\ncode as generators in your source files to generate whatever text\nyou need.\n",
   "dev_url": "https://bitbucket.org/ned/cog",
   "doc_url": "http://nedbatchelder.com/code/cog",
   "home": "http://nedbatchelder.com/code/cog",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Cog: A code generator for executing Python snippets in source files."
  },
  "build": {
   "entry_points": [
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main"
   ],
   "number": "5",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad"
   ]
  },
  "package": {
   "name": "cogapp",
   "version": "3.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "1be95183f70282422d594fa42426be6923070a4bd8335621f6347f3aeee81db0",
   "url": "https://pypi.io/packages/source/c/cogapp/cogapp-3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h"
   ],
   "imports": [
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Cog is a file generation tool. It lets you use pieces of Python\ncode as generators in your source files to generate whatever text\nyou need.\n",
   "dev_url": "https://bitbucket.org/ned/cog",
   "doc_url": "http://nedbatchelder.com/code/cog",
   "home": "http://nedbatchelder.com/code/cog",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Cog: A code generator for executing Python snippets in source files."
  },
  "build": {
   "entry_points": [
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main"
   ],
   "number": "5",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad"
   ]
  },
  "package": {
   "name": "cogapp",
   "version": "3.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "1be95183f70282422d594fa42426be6923070a4bd8335621f6347f3aeee81db0",
   "url": "https://pypi.io/packages/source/c/cogapp/cogapp-3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h"
   ],
   "imports": [
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "cogapp",
 "new_version": "3.3.0",
 "new_version_attempts": {
  "3.1.0": 1,
  "3.2.0": 1,
  "3.3.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Cog is a file generation tool. It lets you use pieces of Python\ncode as generators in your source files to generate whatever text\nyou need.\n",
   "dev_url": "https://bitbucket.org/ned/cog",
   "doc_url": "http://nedbatchelder.com/code/cog",
   "home": "http://nedbatchelder.com/code/cog",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Cog: A code generator for executing Python snippets in source files."
  },
  "build": {
   "entry_points": [
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main"
   ],
   "number": "5",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad"
   ]
  },
  "package": {
   "name": "cogapp",
   "version": "3.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "1be95183f70282422d594fa42426be6923070a4bd8335621f6347f3aeee81db0",
   "url": "https://pypi.io/packages/source/c/cogapp/cogapp-3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h"
   ],
   "imports": [
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cogapp"
  ]
 },
 "pinning_version": "2022.10.28.22.34.20",
 "raw_meta_yaml": "{% set name = \"cogapp\" %}\n{% set version = \"3.3.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/cogapp-{{ version }}.tar.gz\n  sha256: 1be95183f70282422d594fa42426be6923070a4bd8335621f6347f3aeee81db0\n\nbuild:\n  number: 5\n  skip: true   # [py<36]\n  entry_points:\n    - cog = cogapp:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - python\n\ntest:\n  imports:\n    - cogapp\n  commands:\n    - pip check\n    - cog -h\n  requires:\n    - pip\n\nabout:\n  home: http://nedbatchelder.com/code/cog\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Cog: A code generator for executing Python snippets in source files.'\n\n  description: |\n    Cog is a file generation tool. It lets you use pieces of Python\n    code as generators in your source files to generate whatever text\n    you need.\n  doc_url: http://nedbatchelder.com/code/cog\n  dev_url: https://bitbucket.org/ned/cog\n\nextra:\n  recipe-maintainers:\n    - johannesring\n    - edisongustavo\n    - kghustad\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/cogapp/cogapp-3.3.0.tar.gz",
 "version": "3.3.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "Cog is a file generation tool. It lets you use pieces of Python\ncode as generators in your source files to generate whatever text\nyou need.\n",
   "dev_url": "https://bitbucket.org/ned/cog",
   "doc_url": "http://nedbatchelder.com/code/cog",
   "home": "http://nedbatchelder.com/code/cog",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Cog: A code generator for executing Python snippets in source files."
  },
  "build": {
   "entry_points": [
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main",
    "cog = cogapp:main"
   ],
   "number": "5",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad",
    "johannesring",
    "edisongustavo",
    "kghustad"
   ]
  },
  "package": {
   "name": "cogapp",
   "version": "3.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "1be95183f70282422d594fa42426be6923070a4bd8335621f6347f3aeee81db0",
   "url": "https://pypi.io/packages/source/c/cogapp/cogapp-3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h",
    "pip check",
    "cog -h"
   ],
   "imports": [
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp",
    "cogapp"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}