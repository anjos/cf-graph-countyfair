{
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "nsearch",
 "hash_type": "sha256",
 "name": "nsearch",
 "new_version": "0.2.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nsearch"
  ]
 },
 "raw_meta_yaml": "{% set name = \"nsearch\" %}\n{% set version = \"0.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/stevschmid/nsearch/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 5fadfb52251359658ae2bc1804a743c4f8bde776f702f0749c1c74c025175559\n\nbuild:\n  number: 0\n  skip: true  # [win and vc>15]\n  missing_dso_whitelist:\n    - \"*/libz.so.1\"  # [unix]\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - zlib\n    - cmake\n    - make  # [not win]\n\ntest:\n  commands:\n    - nsearch --version\n\nabout:\n  home: https://github.com/stevschmid/nsearch\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Next-Generation Sequencing (NGS) Data Processing Tool & Library'\n  description: |\n    nsearch is a NGS data processing command-line tool & library for the \n    rest of us. Written in C++11, nsearch is a command-line tool that performs\n    database search, read merging, and sequence filtering\n  dev_url: https://github.com/stevschmid/nsearch\n\nextra:\n  recipe-maintainers:\n    - jeevannavar\n    - manutamminen\n",
 "strong_exports": false,
 "url": "https://github.com/stevschmid/nsearch/archive/refs/tags/v0.2.1.tar.gz",
 "version": "0.2.1"
}