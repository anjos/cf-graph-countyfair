{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/487229465.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/522664044.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/637841814.json"
   },
   "data": {
    "bot_rerun": 1645051920.4529786,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/854909646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "plasmaboundaries",
 "hash_type": "sha256",
 "name": "plasmaboundaries",
 "new_version": "0.1.8",
 "new_version_attempts": {
  "0.1.7": 1,
  "0.1.8": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "plasmaboundaries"
  ]
 },
 "pinning_version": "2022.02.15.20.00.46",
 "raw_meta_yaml": "{% set name = \"plasmaboundaries\" %}\n{% set version = \"0.1.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 21fd323aaba978fa17efaa0cecf89fdbdf10ef5bee78d2fe7d2212a32a9439d5\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - matplotlib-base\n    - scipy\n    - numpy\n    - sympy\n\ntest:\n  imports:\n    - plasmaboundaries\n\nabout:\n  home: https://github.com/RemiTheWarrior/plasma-boundaries\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Determine plasma flux functions for various plasma parameters and plasma configurations.\n\n  description: |\n    'This code computes and plots analytical solutions of the Grad-Shafranov (GS) equation for studying plasma equilibrium,\n    stability and transport in fusion reactors based on the work of A. Cerfon and J. Freidberg. Details on the method can be\n    found in \"One size fits all\" analytical solutions to the Grad-Shafranov equation, Physics of Plasmas 17 (2010).'\n\n  doc_url: https://plasma-boundaries.readthedocs.io/en/latest/\n  dev_url: https://github.com/RemiTheWarrior/plasma-boundaries\n\nextra:\n  recipe-maintainers:\n    - RemiTheWarrior\n    - RemDelaporteMathurin\n    - shimwell\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/plasmaboundaries/plasmaboundaries-0.1.8.tar.gz",
 "version": "0.1.8"
}