{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/240655744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242821941.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/254456650.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/265883230.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375685508.json"
   },
   "data": {
    "bot_rerun": 1610823081.775746,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/556209499.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562239174.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562927315.json"
   },
   "data": {
    "bot_rerun": 1612046430.4176266,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/564309674.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/564554755.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/579675998.json"
   },
   "data": {
    "bot_rerun": 1615513301.5485954,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/591306077.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601853526.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615640413.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/619735664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/621753574.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661211269.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/693020289.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/725077417.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770961559.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/833957435.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841106545.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/875856083.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/885513429.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/997471206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "allennlp",
 "hash_type": "sha256",
 "name": "allennlp-split",
 "new_version": "2.10.0",
 "new_version_attempts": {
  "1.4.0": 1,
  "2.0.0": 1,
  "2.0.1": 1,
  "2.1.0": 2,
  "2.10.0": 2,
  "2.2.0": 1,
  "2.3.0": 1,
  "2.3.1": 1,
  "2.4.0": 1,
  "2.5.0": 1,
  "2.6.0": 1,
  "2.7.0": 1,
  "2.8.0": 1,
  "2.9.0": 1,
  "2.9.1": 1,
  "2.9.2": 1,
  "2.9.3": 3
 },
 "new_version_errors": {
  "2.10.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.10.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/allenai/allennlp/archive/v{{ version }}.tar.gz'\n",
  "2.9.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.9.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/allenai/allennlp/archive/v{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "allennlp",
   "allennlp-all",
   "allennlp-checklist"
  ]
 },
 "pinning_version": "2022.07.15.01.49.26",
 "raw_meta_yaml": "{% set tests_to_skip = \"_not_a_real_test\" %}\n{% set version = \"2.10.0\" %}\n\n{% set spacy_model = \"en_core_web_sm\" %}\n\npackage:\n  name: allennlp-split\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/allenai/allennlp/archive/v{{ version }}.tar.gz\n    sha256: 4b4d3dcab5686de1218490349d5cf9e9e437625fe24ac0553dfc9a37fb1bf725\n\nbuild:\n  number: 0\n  skip: true  # [win or py<37]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - sysroot_linux-64 ==2.17   # [linux64]\n\noutputs:\n  - name: allennlp-all\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('allennlp', exact=True) }}\n        - {{ pin_subpackage('allennlp-checklist', exact=True) }}\n    test:\n      imports:\n        - allennlp\n\n  - name: allennlp\n    build:\n      script: python -m pip install . --no-deps -vv\n      entry_points:\n        - allennlp=allennlp.__main__:run\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - {{ compiler('c') }}\n      host:\n        - python\n        - pip\n      run:\n        - python\n        # see https://github.com/allenai/allennlp/blame/v{{ version }}/setup.py\n        # (as of 2.10.0, removed pytest & obsolete dataclasses compared\n        # to upstream, plus all their pins to get working versions)\n        - base58\n        - cached_path >=1.1.3,<1.2.0\n        - dill\n        - fairscale ==0.4.6\n        - filelock >=3.3,<3.8\n        - h5py >=3.6\n        - huggingface_hub >=0.0.16\n        - jsonnet >=0.10.0          # [not win]\n        - python-lmdb >=1.2.1\n        - more-itertools >=8.12 \n        - nltk >=3.6.5\n        - numpy\n        - pytorch >=1.8.0,<1.12.0\n        - requests >=2.28\n        - scikit-learn >=1.0.1\n        - scipy >=1.7.3\n        - sentencepiece >=0.1.96\n        - spacy >=2.1.0,<3.4\n        - tensorboardx >=1.2\n        - termcolor =1.1.*\n        - torchvision >=0.8.1,<0.13.0\n        - tqdm >=4.62\n        - transformers >=4.1,<4.21\n        - wandb >=0.10,<0.13\n        # transitive spacy-dep; make sure it's high enough to not be broken\n        - typer >=0.4.1\n\n    # checklist-specific tests in separate output\n    {% set tests_to_skip = \"_not_a_real_test\" %}\n    # some issue with too much forking (but is flaky, doesn't always appear):\n    # `The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...`\n    {% set tests_to_skip = tests_to_skip + \" or test_multiprocess_data_loader\" %}    # [osx]\n    {% set tests_to_skip = tests_to_skip + \" or test_with_multi_process_loading\" %}  # [osx]\n    # fails on osx with `process 0 terminated with signal SIGSEGV` in torch.multiprocess\n    {% set tests_to_skip = tests_to_skip + \" or test_train_model_distributed_without_sharded_reader\" %}  # [osx]\n\n    test:\n      requires:\n        - flaky\n        - git\n        - git-lfs\n        - matplotlib\n        - pytest\n        - responses >=0.12.1\n        - spacy-model-{{ spacy_model }}\n      source_files:\n        - tests/\n        - test_fixtures/\n        # needed by one of the tests\n        - README.md\n      commands:\n        - python -m spacy link {{ spacy_model }} {{ spacy_model }}\n        # test that dummy command works even without checklist package\n        - allennlp checklist\n        - allennlp test-install\n        - pytest tests/ -v -k \"not ({{ tests_to_skip }})\" --ignore-glob=*checklist*\n      imports:\n        - allennlp\n        - allennlp.commands\n        - allennlp.common\n        - allennlp.common.testing\n        - allennlp.data\n        - allennlp.data.dataset_readers\n        - allennlp.data.dataset_readers.dataset_utils\n        - allennlp.data.fields\n        - allennlp.data.samplers\n        - allennlp.data.token_indexers\n        - allennlp.data.tokenizers\n        - allennlp.models\n        - allennlp.modules\n        - allennlp.modules.attention\n        - allennlp.modules.matrix_attention\n        - allennlp.modules.seq2seq_encoders\n        - allennlp.modules.seq2vec_encoders\n        - allennlp.modules.span_extractors\n        - allennlp.modules.text_field_embedders\n        - allennlp.modules.token_embedders\n        - allennlp.nn\n        - allennlp.nn.regularizers\n        - allennlp.predictors\n        - allennlp.tools\n        - allennlp.training\n        - allennlp.training.learning_rate_schedulers\n        - allennlp.training.metrics\n        - allennlp.training.momentum_schedulers\n\n  - name: allennlp-checklist\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('allennlp', exact=True) }}\n        - checklist =0.0.11\n    test:\n      requires:\n        - flaky\n        - git\n        - git-lfs\n        - matplotlib\n        - pytest\n        - responses >=0.12.1\n        - spacy-model-{{ spacy_model }}\n      source_files:\n        - tests/\n        - test_fixtures/\n      commands:\n        # download necessary nltk packages; taken from\n        # https://github.com/allenai/allennlp/blob/v2.9.1/Makefile#L28\n        - python -c 'import nltk; [nltk.download(p) for p in (\"wordnet\", \"wordnet_ic\", \"sentiwordnet\", \"omw\", \"omw-1.4\")]'\n        - allennlp checklist --help\n        - pytest tests/ -v -k \"checklist\"\n\nabout:\n  home: https://allennlp.org/\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: An open-source NLP research library, built on PyTorch.\n  description: |\n    An Apache 2.0 NLP research library, built on PyTorch, for developing state-of-the-art \n    deep learning models on a wide variety of linguistic tasks.\n  doc_url: https://allenai.github.io/allennlp-docs/\n  dev_url: https://github.com/allenai/allennlp\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n    - sodre\n    - h-vetinari\n    - dirkgr\n  feedstock-name: allennlp\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/allenai/allennlp/archive/v2.10.0.tar.gz",
 "version": "2.10.0"
}