{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/961680466.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-ggpointless",
 "hash_type": "sha256",
 "name": "r-ggpointless",
 "new_version": "0.0.2",
 "new_version_attempts": {
  "0.0.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-ggpointless"
  ]
 },
 "pinning_version": "2022.06.08.00.21.30",
 "raw_meta_yaml": "{% set version = \"0.0.2\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-ggpointless\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ggpointless_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ggpointless/ggpointless_{{ version }}.tar.gz\n  sha256: 51734cc07d06a31923651a4c39f2ad414ef9000ed0776b6a1d6b83ec81718d7c\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-ggplot2 >=3.3.0\n  run:\n    - r-base\n    - r-ggplot2 >=3.3.0\n\ntest:\n  commands:\n    - $R -e \"library('ggpointless')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ggpointless')\\\"\"  # [win]\n\nabout:\n  home: https://flrd.github.io/ggpointless/, https://github.com/flrd/ggpointless\n  license: MIT\n  summary: Add minimal emphasis to your plots. 'ggpointless' is a small extension of the 'ggplot2' library making it easy to highlight the first, or last observations, sample minimum and maximum. The goal is to provide additional context. Or just some visual sugar.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/ggpointless_0.0.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ggpointless/ggpointless_0.0.2.tar.gz",
  "https://cran.r-project.org/src/contrib/ggpointless_0.0.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ggpointless/ggpointless_0.0.2.tar.gz"
 ],
 "version": "0.0.2"
}