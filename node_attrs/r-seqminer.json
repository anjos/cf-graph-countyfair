{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/327994522.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "zstd-1.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341645505.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "zstd-1.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/382357113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413311012.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/647243348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "zstd15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661864109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776499290.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841703273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-seqminer",
 "hash_type": "sha256",
 "name": "r-seqminer",
 "new_version": "8.4",
 "new_version_attempts": {
  "8.2": 1,
  "8.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-seqminer"
  ]
 },
 "pinning_version": "2022.02.07.06.12.16",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"8.4\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-seqminer\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/seqminer_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/seqminer/seqminer_{{ version }}.tar.gz\n  sha256: e8856b5896df4bc5ddc09d9f7855699e8a1f9579835805e1f1f9c196380c7dd5\n  patches:\n    - patch  # [not win]\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed               # [win]\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - zstd\n    - zlib\n    - bzip2\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - zstd\n    - zlib\n    - bzip2\n\ntest:\n  commands:\n    - $R -e \"library('seqminer')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('seqminer')\\\"\"  # [win]\n\nabout:\n  home: http://seqminer.genomic.codes\n  license: GPL-2.0-or-later\n  summary: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5)\n    create customized workflow based on Makefile.\n  license_family: GPL\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: seqminer\n# Type: Package\n# Title: Efficiently Read Sequence Data (VCF Format, BCF Format, METAL Format and BGEN Format) into R\n# Version: 7.1\n# Date: 2019-1-7\n# Authors@R: c(person(\"Xiaowei\", \"Zhan\", email = \"zhanxw@gmail.com\", role = c(\"aut\", \"cre\")), person(\"Dajiang\", \"Liu\", email = \"dajiang.liu@gmail.com\", role = \"aut\"), person(\"Attractive Chaos\", email = \"attractor@live.co.uk\", role = \"cph\", comment = \"We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.\"),\t person(\"Broad Institute / Massachusetts Institute of Technology\", role = \"cph\"), person(\"Genome Research Ltd (GRL)\", role = \"cph\"), person(\"Facebook, Inc\", role = \"cph\"))\n# Maintainer: Xiaowei Zhan <zhanxw@gmail.com>\n# Description: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile.\n# Copyright: We have used the following software and made minimal necessary changes: tabix, Heng Li <lh3@live.co.uk> (MIT license), SQLite (Public Domain), Zstandard (MIT license). For tabix, we removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics. For zstandard, we removed compiler (clang, MSVC) specific preprocessing flags.\n# License: GPL | file LICENSE\n# URL: http://seqminer.genomic.codes\n# BugReports: https://github.com/zhanxw/seqminer/issues\n# Packaged: 2019-01-07 21:30:23 UTC; zhanxw\n# Repository: CRAN\n# Suggests: testthat, SKAT\n# SystemRequirements: C++11, zlib headers and libraries, GNU make, optionally also bzip2 and POSIX-compliant regex functions.\n# NeedsCompilation: yes\n# RoxygenNote: 6.1.1\n# Encoding: UTF-8\n# Author: Xiaowei Zhan [aut, cre], Dajiang Liu [aut], Attractive Chaos [cph] (We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.), Broad Institute / Massachusetts Institute of Technology [cph], Genome Research Ltd (GRL) [cph], Facebook, Inc [cph]\n# Date/Publication: 2019-01-08 15:20:03 UTC\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/seqminer_8.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_8.4.tar.gz"
 ],
 "version": "8.4"
}