{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/297366218.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/494574683.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "snapshottest",
 "hash_type": "sha256",
 "name": "snapshottest",
 "new_version": "0.6.0",
 "new_version_attempts": {
  "0.6.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "snapshottest"
  ]
 },
 "pinning_version": "2020.09.29.03.36.00",
 "raw_meta_yaml": "{% set name = \"snapshottest\" %}\n{% set version = \"0.6.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: bbcaf81d92d8e330042e5c928e13d9f035e99e91b314fe55fda949c2f17b653c\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - fastdiff >=0.1.4,<1\n    - python >=3.6\n    - six >=1.10.0\n    - termcolor\n\ntest:\n  requires:\n    - django\n    - nose\n    - pip\n    - pytest\n  commands:\n    - python -m pip check\n\n  imports:\n    - snapshottest\n    - snapshottest.diff\n    - snapshottest.django\n    - snapshottest.error\n    - snapshottest.file\n    - snapshottest.formatter\n    - snapshottest.formatters\n    - snapshottest.generic_repr\n    - snapshottest.module\n    - snapshottest.nose\n    - snapshottest.pytest\n    - snapshottest.reporting\n    - snapshottest.snapshot\n    - snapshottest.sorted_dict\n    - snapshottest.unittest\n\nabout:\n  home: https://github.com/syrusakbary/snapshottest\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Snapshot Testing utils for Python\n\n  # The remaining entries in this section are optional, but recommended\n  description: |\n    Snapshot testing is a way to test your APIs without writing actual test cases.\n\n      1. A snapshot is a single state of your API, saved in a file.\n      2. You have a set of snapshots for your API endpoints.\n      3. Once you add a new feature, you can generate automatically new snapshots\n         for the updated API.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/snapshottest/snapshottest-0.6.0.tar.gz",
 "version": "0.6.0"
}