{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/336094067.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392917746.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501944982.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554377154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683081707.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pyhull",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay\ntriangulation and Voronoi diagram. It is written as a Python C extension, with both high-level and low-level\ninterfaces to qhull.\nPyhull has been tested to scale to 10,000 7D points for convex hull calculations (results in ~ 10 seconds),\nand 10,000 6D points for Delaunay triangulations and Voronoi tesselations (~ 100 seconds). Higher number of\npoints and higher dimensions should be accessible depending on your machine, but may take a significant\namount of time.\n",
   "dev_url": "https://github.com/materialsvirtuallab/pyhull",
   "doc_url": "http://packages.python.org/pyhull/",
   "home": "https://github.com/materialsvirtuallab/pyhull",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.rst",
   "summary": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull"
  },
  "build": {
   "number": "2",
   "script": [
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "pyhull",
   "version": "2015.2.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ],
   "run": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ]
  },
  "source": {
   "patches": [
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch"
   ],
   "sha256": "d2ff0aa3298b548287587609a24f4e2aae7f7b8b1df152a90cd313260abc3a24",
   "url": "https://pypi.io/packages/source/p/pyhull/pyhull-2015.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay\ntriangulation and Voronoi diagram. It is written as a Python C extension, with both high-level and low-level\ninterfaces to qhull.\nPyhull has been tested to scale to 10,000 7D points for convex hull calculations (results in ~ 10 seconds),\nand 10,000 6D points for Delaunay triangulations and Voronoi tesselations (~ 100 seconds). Higher number of\npoints and higher dimensions should be accessible depending on your machine, but may take a significant\namount of time.\n",
   "dev_url": "https://github.com/materialsvirtuallab/pyhull",
   "doc_url": "http://packages.python.org/pyhull/",
   "home": "https://github.com/materialsvirtuallab/pyhull",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.rst",
   "summary": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull"
  },
  "build": {
   "number": "2",
   "script": [
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "pyhull",
   "version": "2015.2.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ],
   "run": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ]
  },
  "source": {
   "patches": [
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch"
   ],
   "sha256": "d2ff0aa3298b548287587609a24f4e2aae7f7b8b1df152a90cd313260abc3a24",
   "url": "https://pypi.io/packages/source/p/pyhull/pyhull-2015.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull"
   ]
  }
 },
 "name": "pyhull",
 "new_version": "2015.2.1",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay\ntriangulation and Voronoi diagram. It is written as a Python C extension, with both high-level and low-level\ninterfaces to qhull.\nPyhull has been tested to scale to 10,000 7D points for convex hull calculations (results in ~ 10 seconds),\nand 10,000 6D points for Delaunay triangulations and Voronoi tesselations (~ 100 seconds). Higher number of\npoints and higher dimensions should be accessible depending on your machine, but may take a significant\namount of time.\n",
   "dev_url": "https://github.com/materialsvirtuallab/pyhull",
   "doc_url": "http://packages.python.org/pyhull/",
   "home": "https://github.com/materialsvirtuallab/pyhull",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.rst",
   "summary": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull"
  },
  "build": {
   "number": "2",
   "script": [
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv",
    "export LIBRARY_PREFIX=$PREFIX",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "pyhull",
   "version": "2015.2.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ],
   "run": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ]
  },
  "source": {
   "patches": [
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch"
   ],
   "sha256": "d2ff0aa3298b548287587609a24f4e2aae7f7b8b1df152a90cd313260abc3a24",
   "url": "https://pypi.io/packages/source/p/pyhull/pyhull-2015.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyhull"
  ]
 },
 "pinning_version": "2021.07.03.17.26.03",
 "raw_meta_yaml": "{% set name = \"pyhull\" %}\n{% set version = \"2015.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d2ff0aa3298b548287587609a24f4e2aae7f7b8b1df152a90cd313260abc3a24\n  patches:\n    - pyhull.patch\n\nbuild:\n  number: 2\n  script:\n    - export LIBRARY_PREFIX=$PREFIX          # [unix]\n    - \"{{ PYTHON }} -m pip install . -vvv\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - numpy\n    - pip\n    - qhull \n  run:\n    - python\n    - numpy\n    - pip\n    - qhull\n\ntest:\n  imports:\n    - pyhull\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/materialsvirtuallab/pyhull\n  license: MIT\n  license_family: MIT\n  license_file: 'LICENSE.rst'\n  summary: 'Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull'\n\n  description: |\n    Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay\n    triangulation and Voronoi diagram. It is written as a Python C extension, with both high-level and low-level\n    interfaces to qhull.\n    Pyhull has been tested to scale to 10,000 7D points for convex hull calculations (results in ~ 10 seconds),\n    and 10,000 6D points for Delaunay triangulations and Voronoi tesselations (~ 100 seconds). Higher number of\n    points and higher dimensions should be accessible depending on your machine, but may take a significant\n    amount of time.\n  doc_url: http://packages.python.org/pyhull/\n  dev_url: https://github.com/materialsvirtuallab/pyhull\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "numpy",
   "pip",
   "python",
   "qhull"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pyhull/pyhull-2015.2.1.tar.gz",
 "version": "2015.2.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay\ntriangulation and Voronoi diagram. It is written as a Python C extension, with both high-level and low-level\ninterfaces to qhull.\nPyhull has been tested to scale to 10,000 7D points for convex hull calculations (results in ~ 10 seconds),\nand 10,000 6D points for Delaunay triangulations and Voronoi tesselations (~ 100 seconds). Higher number of\npoints and higher dimensions should be accessible depending on your machine, but may take a significant\namount of time.\n",
   "dev_url": "https://github.com/materialsvirtuallab/pyhull",
   "doc_url": "http://packages.python.org/pyhull/",
   "home": "https://github.com/materialsvirtuallab/pyhull",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.rst",
   "summary": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull"
  },
  "build": {
   "number": "2",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "pyhull",
   "version": "2015.2.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ],
   "run": [
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull",
    "python",
    "numpy",
    "pip",
    "qhull"
   ]
  },
  "source": {
   "patches": [
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch",
    "pyhull.patch"
   ],
   "sha256": "d2ff0aa3298b548287587609a24f4e2aae7f7b8b1df152a90cd313260abc3a24",
   "url": "https://pypi.io/packages/source/p/pyhull/pyhull-2015.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyhull",
    "pyhull",
    "pyhull",
    "pyhull"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "qhull"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}