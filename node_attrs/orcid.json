{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/201856810.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "orcid",
 "hash_type": "sha256",
 "name": "orcid",
 "new_version": "1.0.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "orcid"
  ]
 },
 "pinning_version": "2018.07.15",
 "raw_meta_yaml": "{% set name = \"orcid\" %}\n{% set version = \"1.0.3\" %}\n{% set sha256 = \"5fe28b6d92aed5abe7145c959e4fa2afb90260be215ff3f36ad31c94ee41d0db\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  script: python -m pip install --no-deps --ignore-installed .\n  noarch: python\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - pip\n  run:\n    - python >=3.3\n    - beautifulsoup4\n    - simplejson\n    - requests\n    - lxml\n    - html5lib\n\ntest:\n  imports:\n    - orcid\n\nabout:\n  home: https://github.com/ORCID/python-orcid\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Python wrapper around ORCID API'\n\n  description: |\n    ORCID is an open, non-profit, community-based effort to provide a registry\n    of unique researcher identifiers and a transparent method of linking research\n    activities and outputs to these identifiers. ORCID is unique in its ability to\n    reach across disciplines, research sectors, and national boundaries and its\n    cooperation with other identifier systems. orcid is a Python wrapper around\n    the ORCID API\n  dev_url: https://github.com/ORCID/python-orcid\n\nextra:\n  recipe-maintainers:\n    - bryanwweber\n",
 "smithy_version": "3.1.6",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/o/orcid/orcid-1.0.3.tar.gz",
 "version": "1.0.3"
}