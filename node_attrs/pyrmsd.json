{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/926040494.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926271828.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default"
  }
 },
 "feedstock_name": "pyrmsd",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "pyRMSD is a small Python package that aims to offer an integrative\nand efficient way of performing RMSD calculations of large sets of\nstructures. It is specially tuned to do fast collective RMSD\ncalculations, as pairwise RMSD matrices.\n\nNote that this package does not currently include any CUDA calculators.\n\nSee [the pyRMSD website](https://github.com/salilab/pyRMSD)\nand the [publication](https://doi.org/10.1093/bioinformatics/btt402)\nfor more details.\n",
   "dev_url": "https://github.com/salilab/pyRMSD",
   "home": "https://github.com/salilab/pyRMSD",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Efficiently calculate RMSDs for large structure sets"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb"
   ]
  },
  "package": {
   "name": "pyrmsd",
   "version": "4.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp"
   ],
   "host": [
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch"
   ],
   "sha256": "7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf",
   "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "pyRMSD is a small Python package that aims to offer an integrative\nand efficient way of performing RMSD calculations of large sets of\nstructures. It is specially tuned to do fast collective RMSD\ncalculations, as pairwise RMSD matrices.\n\nNote that this package does not currently include any CUDA calculators.\n\nSee [the pyRMSD website](https://github.com/salilab/pyRMSD)\nand the [publication](https://doi.org/10.1093/bioinformatics/btt402)\nfor more details.\n",
   "dev_url": "https://github.com/salilab/pyRMSD",
   "home": "https://github.com/salilab/pyRMSD",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Efficiently calculate RMSDs for large structure sets"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb"
   ]
  },
  "package": {
   "name": "pyrmsd",
   "version": "4.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp"
   ],
   "host": [
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch"
   ],
   "sha256": "7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf",
   "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "pyRMSD is a small Python package that aims to offer an integrative\nand efficient way of performing RMSD calculations of large sets of\nstructures. It is specially tuned to do fast collective RMSD\ncalculations, as pairwise RMSD matrices.\n\nNote that this package does not currently include any CUDA calculators.\n\nSee [the pyRMSD website](https://github.com/salilab/pyRMSD)\nand the [publication](https://doi.org/10.1093/bioinformatics/btt402)\nfor more details.\n",
   "dev_url": "https://github.com/salilab/pyRMSD",
   "home": "https://github.com/salilab/pyRMSD",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Efficiently calculate RMSDs for large structure sets"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb"
   ]
  },
  "package": {
   "name": "pyrmsd",
   "version": "4.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "libgomp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch"
   ],
   "sha256": "7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf",
   "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/"
   ]
  }
 },
 "name": "pyrmsd",
 "new_version": "4.3.0",
 "osx_64_meta_yaml": {
  "about": {
   "description": "pyRMSD is a small Python package that aims to offer an integrative\nand efficient way of performing RMSD calculations of large sets of\nstructures. It is specially tuned to do fast collective RMSD\ncalculations, as pairwise RMSD matrices.\n\nNote that this package does not currently include any CUDA calculators.\n\nSee [the pyRMSD website](https://github.com/salilab/pyRMSD)\nand the [publication](https://doi.org/10.1093/bioinformatics/btt402)\nfor more details.\n",
   "dev_url": "https://github.com/salilab/pyRMSD",
   "home": "https://github.com/salilab/pyRMSD",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Efficiently calculate RMSDs for large structure sets"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb"
   ]
  },
  "package": {
   "name": "pyrmsd",
   "version": "4.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch"
   ],
   "sha256": "7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf",
   "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "pyRMSD is a small Python package that aims to offer an integrative\nand efficient way of performing RMSD calculations of large sets of\nstructures. It is specially tuned to do fast collective RMSD\ncalculations, as pairwise RMSD matrices.\n\nNote that this package does not currently include any CUDA calculators.\n\nSee [the pyRMSD website](https://github.com/salilab/pyRMSD)\nand the [publication](https://doi.org/10.1093/bioinformatics/btt402)\nfor more details.\n",
   "dev_url": "https://github.com/salilab/pyRMSD",
   "home": "https://github.com/salilab/pyRMSD",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Efficiently calculate RMSDs for large structure sets"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "benmwebb",
    "benmwebb",
    "benmwebb"
   ]
  },
  "package": {
   "name": "pyrmsd",
   "version": "4.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch"
   ],
   "sha256": "7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf",
   "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyrmsd"
  ]
 },
 "pinning_version": "2022.05.03.00.24.50",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"pyrmsd\" %}\n{% set version = \"4.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/salilab/pyRMSD/archive/v{{ version }}.tar.gz\n  sha256: 7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf\n  patches:\n    - msvc-compile.patch  # [win]\n    - cxx11-narrowing.patch\n    - eigenval-overrun.patch\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 3\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - llvm-openmp   # [osx]\n    - libgomp       # [linux]\n  host:\n    - pip\n    - python\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  source_files:\n    - src/calculators/test/\n    - pyRMSD/test/\n  imports:\n    - pyRMSD.RMSDCalculator\n    - pyRMSD.availableCalculators\n    - pyRMSD.matrixHandler\n    - pyRMSD.utils.proteinReading\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/salilab/pyRMSD\n  summary: Efficiently calculate RMSDs for large structure sets\n  license: MIT\n  license_file: LICENSE\n  description: |\n    pyRMSD is a small Python package that aims to offer an integrative\n    and efficient way of performing RMSD calculations of large sets of\n    structures. It is specially tuned to do fast collective RMSD\n    calculations, as pairwise RMSD matrices.\n\n    Note that this package does not currently include any CUDA calculators.\n\n    See [the pyRMSD website](https://github.com/salilab/pyRMSD)\n    and the [publication](https://doi.org/10.1093/bioinformatics/btt402)\n    for more details.\n  dev_url: https://github.com/salilab/pyRMSD\n\nextra:\n  recipe-maintainers:\n    - benmwebb\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "libgomp",
   "llvm-openmp",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "numpy",
    "openmp",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "numpy",
    "openmp",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz",
 "version": "4.3.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "pyRMSD is a small Python package that aims to offer an integrative\nand efficient way of performing RMSD calculations of large sets of\nstructures. It is specially tuned to do fast collective RMSD\ncalculations, as pairwise RMSD matrices.\n\nNote that this package does not currently include any CUDA calculators.\n\nSee [the pyRMSD website](https://github.com/salilab/pyRMSD)\nand the [publication](https://doi.org/10.1093/bioinformatics/btt402)\nfor more details.\n",
   "dev_url": "https://github.com/salilab/pyRMSD",
   "home": "https://github.com/salilab/pyRMSD",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Efficiently calculate RMSDs for large structure sets"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb",
    "benmwebb"
   ]
  },
  "package": {
   "name": "pyrmsd",
   "version": "4.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch",
    "msvc-compile.patch",
    "cxx11-narrowing.patch",
    "eigenval-overrun.patch"
   ],
   "sha256": "7d3b892e4b6f62f2d1af831eddb597a2066d11a3b6c5c93c1a996d5fb3a9d9bf",
   "url": "https://github.com/salilab/pyRMSD/archive/v4.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading",
    "pyRMSD.RMSDCalculator",
    "pyRMSD.availableCalculators",
    "pyRMSD.matrixHandler",
    "pyRMSD.utils.proteinReading"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/",
    "src/calculators/test/",
    "pyRMSD/test/"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}