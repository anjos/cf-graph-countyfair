{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/248374766.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "toolchain",
 "name": "toolchain",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "m2w64-toolchain_linux-64",
   "m2w64-toolchain_osx-64",
   "m2w64-toolchain_win-64",
   "toolchain"
  ]
 },
 "pinning_version": "2019.01.21",
 "raw_meta_yaml": "package:\n  name: toolchain\n  version: 2.4.0\n\nbuild:\n  number: 0\n\noutputs:\n  - name: toolchain\n    # for windows, this is a placebo package.  The default conda-build activation stuff is all we use.\n    # we just don't want people to have to put selectors on their toolchain dep.\n    script: install-toolchain.sh      # [unix]\n    test:\n      commands:\n        # Verify the scripts are in-place.\n        {% for state in [\"activate\", \"deactivate\"] %}\n        - test -f \"${PREFIX}/etc/conda/{{ state }}.d/toolchain_{{ state }}.sh\"                        # [unix]\n        {% endfor %}\n        - echo \"I'm on windows, and there's nothing to do here.\"                                      # [win]\n{% if unix %}\n        - source ${PREFIX}/etc/conda/activate.d/toolchain_activate.sh\n        - if [ -z ${CC+x} ]; then echo \"CC is unset after activation\" && exit 1; else echo \"CC is set to '$CC'\"; fi\n        - source ${PREFIX}/etc/conda/deactivate.d/toolchain_deactivate.sh\n        - if [ -z ${CC+x} ]; then echo \"CC is unset after deactivation \"; else echo \"CC is set to '$CC' after deactivation\" && exit 1; fi\n\n  - name: toolchain_c_{{ target_platform }}\n    requirements:\n      - {{ pin_subpackage('toolchain', exact=True) }}\n    run_exports:                                                     # [linux]\n      strong:                                                        # [linux]\n        - libgcc-ng >=4.9                                            # [linux]\n\n  - name: toolchain_cxx_{{ target_platform }}\n    requirements:\n      - {{ pin_subpackage('toolchain', exact=True) }}\n    run_exports:                                                     # [linux]\n      strong:                                                        # [linux]\n        - libstdcxx-ng >=4.9                                         # [linux]\n\n  - name: toolchain_fort_{{ target_platform }}\n    requirements:\n      - {{ pin_subpackage('toolchain', exact=True) }}\n      - gcc                                                          # [osx]\n    run_exports:\n      strong:\n        - libgfortran >=3.0  # [unix]\n{% else %}\n  - name: m2w64-toolchain_{{ target_platform }}\n    requirements:\n      - m2w64-toolchain\n    run_exports:\n      strong:\n        - m2w64-gcc-libs\n{% endif %}\n\nabout:\n  home: https://github.com/conda-forge/toolchain-feedstock\n  license: BSD 3-Clause\n  summary: A meta-package to enable the right toolchain.\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - jakirkham\n    - msarahan\n    - patricksnape\n    - pelson\n    - scopatz\n",
 "smithy_version": "3.2.10",
 "strong_exports": false,
 "time": 1568135269.3545477,
 "version": "2.4.0"
}