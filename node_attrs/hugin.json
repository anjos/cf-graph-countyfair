{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/8a8e958a-cf84-4733-bedc-44e34ed0aa59.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/7ec1e419-9f46-481d-9a72-bd3f07bf660c.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519097468.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/538110546.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569884714.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569890461.json"
   },
   "data": {
    "bot_rerun": 1612847013.789527,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570055230.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616906535.json"
   },
   "data": {
    "bot_rerun": 1629160019.5348716,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango148"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/713708255.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "perl5321"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/713843433.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango148"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812434271.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815046501.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/825682476.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pango150"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/902370832.json"
   },
   "data": {
    "bot_rerun": 1649436551.61872,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openexr31"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904120754.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openexr31"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/952944518.json"
   },
   "data": {
    "bot_rerun": 1657255438.8418138,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/991151568.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "wxwidgets32"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/991193659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "hugin",
 "hash_type": "sha256",
 "name": "hugin-base",
 "new_version": "2021.0.0",
 "new_version_attempts": {
  "2020.0.0": 1,
  "2021.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hugin",
   "hugin-base"
  ]
 },
 "pinning_version": "2022.07.08.02.15.19",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: master: ['linux_64_boost_cpp1.72.0python3.6.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0python3.7.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0python3.8.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0python3.9.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0python3.6.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0python3.7.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0python3.8.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0python3.9.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h4d0357a_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0python3.6.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0python3.7.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0python3.8.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0python3.9.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0python3.6.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0python3.7.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0python3.8.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0python3.9.____cpython: Encountered problems while solving.\\nProblem: package enblend-4.3-h7a31c59_0 requires openexr >=2.5.2,<2.6.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"2021.0.0\" %}\n{% set version_major_minor = \".\".join(version.split('.')[:2]) %}\n\npackage:\n  name: hugin-base\n  version: {{ version }}\n\nsource:\n  # url: https://iweb.dl.sourceforge.net/project/hugin/hugin/hugin-{{ version_major_minor }}/hugin-{{ version }}.tar.bz2\n  url: https://sourceforge.net/projects/hugin/files/hugin/hugin-{{ version_major_minor }}/hugin-{{ version }}.tar.bz2\n  sha256: 047aea8a7fa47844b34ef27c19d3b697e84939dcb1fdbbeb2c204621b66eead9\n  patches:\n    - hugin-openexr3.patch\n  # Line endings frustrate me. So I've just vendored the files but documented the patch.\n  #   - windows_unbundle.patch\n  #   - windows_unified_manifest.patch\n\nbuild:\n  number: 7\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - gettext\n    - libgomp      # [linux]\n    - make   # [unix]\n    - ninja  # [win]\n    - cmake\n    - binutils  # [linux]\n    - pkg-config  # [unix]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n    - {{ cdt('libxext') }}     # [linux]\n    # Just taken from wxWidgets\n    - {{ cdt('libice-devel') }}  # [linux]\n    - {{ cdt('libsm-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}  # [linux]\n    - {{ cdt('libxcomposite-devel') }}  # [linux]\n    - {{ cdt('libxcursor-devel') }}  # [linux]\n    - {{ cdt('libxdamage-devel') }}  # [linux]\n    - {{ cdt('libxext-devel') }}  # [linux]\n    - {{ cdt('libxi-devel') }}  # [linux]\n    - {{ cdt('libxinerama-devel') }}  # [linux]\n    - {{ cdt('libxfixes-devel') }}  # [linux]\n    - {{ cdt('libxrandr-devel') }}  # [linux]\n    - {{ cdt('libxrender-devel') }}  # [linux]\n    - {{ cdt('libxtst-devel') }}  # [linux]\n    - {{ cdt('mesa-libEGL-devel') }}  # [linux]\n    - {{ cdt('mesa-libGL-devel') }}  # [linux]\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n  host:\n    - xorg-libxfixes           # [linux]\n    - xorg-libsm               # [linux]\n    - pango\n    - pip\n    - libtiff\n    - libpano13\n    - jpeg\n    - libpng\n    - imath\n    - zlib\n    - openexr\n    - vigra\n    - exiv2\n    - glew\n    - sqlite\n    - lcms2\n    - perl\n    - boost-cpp\n    - fftw\n    # For some reason these are requried by the windows\n    # build system\n    - enblend\n    - pthreads-win32  # [win]\n  run:\n    - boost-cpp\n    - pthreads-win32  # [win]\n    # not sure why run exports isn't working\n    - exiftool\n    - enblend\n    - xorg-libx11  # [linux]\n    - xorg-libsm   # [linux]\n\ntest:\n  commands:\n    - nona -help\n    - cpfind -help\n    - autooptimiser -help\n    - pano_modify -help\n\noutputs:\n  - name: hugin-base\n    script: build_base.sh  # [unix]\n    script: bld_base.bat  # [win]\n  - name: hugin\n    build:\n      skip: true  # [osx]\n    script: build_gui.sh  # [unix]\n    script: bld_gui.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - gettext\n        - libgomp      # [linux]\n        - make   # [unix]\n        - ninja  # [win]\n        - cmake\n        - binutils  # [linux]\n        - pkg-config  # [unix]\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux]\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ cdt('libxdamage') }}  # [linux]\n        - {{ cdt('libxxf86vm') }}  # [linux]\n        - {{ cdt('libxext') }}     # [linux]\n        # Just taken from wxWidgets\n        - {{ cdt('libice-devel') }}  # [linux]\n        - {{ cdt('libsm-devel') }}  # [linux]\n        - {{ cdt('libx11-devel') }}  # [linux]\n        - {{ cdt('libxcomposite-devel') }}  # [linux]\n        - {{ cdt('libxcursor-devel') }}  # [linux]\n        - {{ cdt('libxdamage-devel') }}  # [linux]\n        - {{ cdt('libxext-devel') }}  # [linux]\n        - {{ cdt('libxi-devel') }}  # [linux]\n        - {{ cdt('libxinerama-devel') }}  # [linux]\n        - {{ cdt('libxfixes-devel') }}  # [linux]\n        - {{ cdt('libxrandr-devel') }}  # [linux]\n        - {{ cdt('libxrender-devel') }}  # [linux]\n        - {{ cdt('libxtst-devel') }}  # [linux]\n        - {{ cdt('mesa-libEGL-devel') }}  # [linux]\n        - {{ cdt('mesa-libGL-devel') }}  # [linux]\n        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n      host:\n        - {{ pin_subpackage('hugin-base', exact=True) }}\n        - xorg-libxfixes           # [linux]\n        - xorg-libsm               # [linux]\n        - pango\n        - pip\n        - libtiff\n        - libpano13\n        - jpeg\n        - libpng\n        - imath\n        - zlib\n        - openexr\n        - vigra\n        - exiv2\n        - glew\n        - sqlite\n        - lcms2\n        - perl\n        - boost-cpp\n        - fftw\n        # For some reason these are requried by the windows\n        # build system\n        - enblend\n        - pthreads-win32  # [win]\n        # Warning: With vanially conda, wxwidgets will not work on linux since they\n        # internally code strings as UTF-16 strings on windows\n        # conda-forge has patched conda: https://github.com/conda-forge/conda-feedstock/pull/117\n        # But upstream has rejected a similar patch:\n        # https://github.com/conda/conda/pull/9946\n        # In favor of more time to work on a longer term fix\n        # https://github.com/conda/conda-build/blob/master/tests/test_api_build.py#L240\n        - wxwidgets\n        - libglu  # [linux]\n      run:\n        - {{ pin_subpackage('hugin-base', exact=True) }}\n\nabout:\n  home: http://hugin.sourceforge.net/\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: COPYING.txt\n  summary: Panorama photo stitcher\n\n  description: |\n    An easy to use cross-platform panoramic imaging toolchain based on Panorama Tools.\n\n    With Hugin you can assemble a mosaic of photographs into a complete\n    immersive panorama, stitch any series of overlapping pictures and much\n    more.\n\n  doc_url: http://hugin.sourceforge.net/docs/\n  dev_url: https://sourceforge.net/projects/hugin/\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://sourceforge.net/projects/hugin/files/hugin/hugin-2021.0/hugin-2021.0.0.tar.bz2",
 "version": "2021.0.0"
}