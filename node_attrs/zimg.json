{
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "zimg",
 "hash_type": "sha256",
 "name": "zimg",
 "new_version": "3.0.4",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "zimg"
  ]
 },
 "raw_meta_yaml": "{% set name = \"zimg\" %}\n{% set version = \"3.0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/sekrit-twc/zimg/archive/release-{{ version }}.tar.gz\n  sha256: 219d1bc6b7fde1355d72c9b406ebd730a4aed9c21da779660f0a4c851243e32f\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage('zimg', min_pin='x.x', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}  # [unix]\n    - automake  # [unix]\n    - libtool  # [unix]\n    - autotools_clang_conda  # [win]\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libzimg${SHLIB_EXT}  # [not win]\n    - if not exist %LIBRARY_LIB%\\zimg.lib exit 1  # [win]\n\n    # CFEP 18\n    - test ! -f ${PREFIX}/lib/libzimg.a  # [not win]\n    - if exist %LIBRARY_LIB%\\zimg_static.lib exit 1  # [win]\n\nabout:\n  home: https://github.com/sekrit-twc/zimg\n  summary: 'Scaling, colorspace conversion, and dithering library'\n  description: |\n    The \"z\" library implements the commonly required image processing basics of scaling,\n    colorspace conversion, and depth conversion.\n    A simple API enables conversion between any supported formats\n    to operate with minimal knowledge from the programmer.\n    All library routines were designed from the ground-up\n    with correctness, flexibility, and thread-safety as first priorities.\n    Allocation, buffering, and I/O are cleanly separated from processing,\n    allowing the programmer to adapt \"z\" to many scenarios.\n  license: WTFPL\n  license_family: OTHER\n  license_file: COPYING\n  dev_url: https://github.com/sekrit-twc/zimg\n\nextra:\n  recipe-maintainers:\n    - sshockwave\n",
 "strong_exports": false,
 "url": "https://github.com/sekrit-twc/zimg/archive/release-3.0.4.tar.gz",
 "version": "3.0.4"
}