{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "deno-dom",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/b-fuze/deno-dom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "DENO_DOM_THIRDPARTY_LICENSES.yml"
   ],
   "summary": "An implementation of the browser DOM\u2014primarily for SSR\u2014in Deno"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "msarahan"
   ]
  },
  "package": {
   "name": "deno-dom",
   "version": "0.1.33"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust"
   ],
   "run": [
    "deno >=1.24.2"
   ]
  },
  "source": [
   {
    "sha256": "749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee",
    "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "if [ \"$DENO_DOM_VERSION\" != \"0.1.33-alpha\" ]; then echo \"DENO_DOM_VERSION not set correctly\" && exit 1; fi",
    "test -f $PREFIX/lib/deno_dom.so",
    "if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.so\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi",
    "deno run --unstable --allow-env --allow-ffi test.ts"
   ],
   "files": [
    "test.ts"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "deno"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/b-fuze/deno-dom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "DENO_DOM_THIRDPARTY_LICENSES.yml",
    "LICENSE",
    "DENO_DOM_THIRDPARTY_LICENSES.yml",
    "LICENSE",
    "DENO_DOM_THIRDPARTY_LICENSES.yml"
   ],
   "summary": "An implementation of the browser DOM\u2014primarily for SSR\u2014in Deno"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "msarahan",
    "msarahan",
    "msarahan"
   ]
  },
  "package": {
   "name": "deno-dom",
   "version": "0.1.33"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust",
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust",
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust"
   ],
   "run": [
    "deno >=1.24.2",
    "deno >=1.24.2",
    "deno >=1.24.2"
   ]
  },
  "source": [
   {
    "sha256": "749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee",
    "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz"
   },
   {
    "sha256": "749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee",
    "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz"
   },
   {
    "sha256": "749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee",
    "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "if [ \"$DENO_DOM_VERSION\" != \"0.1.33-alpha\" ]; then echo \"DENO_DOM_VERSION not set correctly\" && exit 1; fi",
    "test -f $PREFIX/lib/deno_dom.so",
    "if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.so\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi",
    "deno run --unstable --allow-env --allow-ffi test.ts",
    "if [ \"$DENO_DOM_VERSION\" != \"0.1.33-alpha\" ]; then echo \"DENO_DOM_VERSION not set correctly\" && exit 1; fi",
    "test -f $PREFIX/lib/deno_dom.dylib",
    "if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.dylib\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi",
    "deno run --unstable --allow-env --allow-ffi test.ts",
    "IF NOT EXIST %LIBRARY_LIB%\\deno_dom.dll exit 1",
    "IF \"%DENO_DOM_PLUGIN:/=\\%\" NEQ \"%LIBRARY_LIB%\\deno_dom.dll\" exit 1",
    "IF \"%DENO_DOM_VERSION%\" NEQ \"0.1.33-alpha\" exit 1",
    "deno run --unstable --allow-env --allow-ffi test.ts"
   ],
   "files": [
    "test.ts",
    "test.ts",
    "test.ts"
   ]
  }
 },
 "name": "deno-dom",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/b-fuze/deno-dom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "DENO_DOM_THIRDPARTY_LICENSES.yml"
   ],
   "summary": "An implementation of the browser DOM\u2014primarily for SSR\u2014in Deno"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "msarahan"
   ]
  },
  "package": {
   "name": "deno-dom",
   "version": "0.1.33"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust"
   ],
   "run": [
    "deno >=1.24.2"
   ]
  },
  "source": [
   {
    "sha256": "749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee",
    "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "if [ \"$DENO_DOM_VERSION\" != \"0.1.33-alpha\" ]; then echo \"DENO_DOM_VERSION not set correctly\" && exit 1; fi",
    "test -f $PREFIX/lib/deno_dom.dylib",
    "if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.dylib\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi",
    "deno run --unstable --allow-env --allow-ffi test.ts"
   ],
   "files": [
    "test.ts"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "deno"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "deno-dom"
  ]
 },
 "raw_meta_yaml": "# versions seem to all include \"alpha\", so I'm leaving that out. You may need to update the URL\n#    below if the project stops including \"alpha\" on all releases.\n{% set version = \"0.1.33\" %}\n\npackage:\n  name: deno-dom\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/b-fuze/deno-dom/archive/refs/tags/v{{ version }}-alpha.tar.gz\n    sha256: 749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - cargo-bundle-licenses\n    - make   # [unix]\n    - rust\n  run:\n    - deno >=1.24.2\n\ntest:\n  files:\n    - test.ts\n  commands:\n    - if [ \"$DENO_DOM_VERSION\" != \"{{ version }}-alpha\" ]; then echo \"DENO_DOM_VERSION not set correctly\" && exit 1; fi             # [unix]\n\n    - test -f $PREFIX/lib/deno_dom.so                        # [linux]\n    - if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.so\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi       # [linux]\n\n    - test -f $PREFIX/lib/deno_dom.dylib                     # [osx]\n    - if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.dylib\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi    # [osx]\n\n    - IF NOT EXIST %LIBRARY_LIB%\\deno_dom.dll exit 1                              # [win]\n    - IF \"%DENO_DOM_PLUGIN:/=\\%\" NEQ \"%LIBRARY_LIB%\\deno_dom.dll\" exit 1    # [win]\n    - IF \"%DENO_DOM_VERSION%\" NEQ \"{{ version }}-alpha\" exit 1              # [win]\n\n    - deno run --unstable --allow-env --allow-ffi test.ts\n\nabout:\n  home: https://github.com/b-fuze/deno-dom\n  license: MIT\n  license_family: MIT\n  license_file:\n    - LICENSE\n    - DENO_DOM_THIRDPARTY_LICENSES.yml\n  summary: An implementation of the browser DOM\u2014primarily for SSR\u2014in Deno\n\nextra:\n  recipe-maintainers:\n    - msarahan\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cargo-bundle-licenses",
   "deno",
   "make",
   "rust"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "deno"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "make",
    "rust"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "deno >=1.24.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz",
 "version": "0.1.33",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/b-fuze/deno-dom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "DENO_DOM_THIRDPARTY_LICENSES.yml"
   ],
   "summary": "An implementation of the browser DOM\u2014primarily for SSR\u2014in Deno"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "msarahan"
   ]
  },
  "package": {
   "name": "deno-dom",
   "version": "0.1.33"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust"
   ],
   "run": [
    "deno >=1.24.2"
   ]
  },
  "source": [
   {
    "sha256": "749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee",
    "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "IF NOT EXIST %LIBRARY_LIB%\\deno_dom.dll exit 1",
    "IF \"%DENO_DOM_PLUGIN:/=\\%\" NEQ \"%LIBRARY_LIB%\\deno_dom.dll\" exit 1",
    "IF \"%DENO_DOM_VERSION%\" NEQ \"0.1.33-alpha\" exit 1",
    "deno run --unstable --allow-env --allow-ffi test.ts"
   ],
   "files": [
    "test.ts"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "deno"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}