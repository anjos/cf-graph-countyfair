{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1020825092.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "deno-dom",
 "hash_type": "sha256",
 "name": "deno-dom",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "deno-dom"
  ]
 },
 "pinning_version": "2022.08.08.19.07.35",
 "raw_meta_yaml": "# versions seem to all include \"alpha\", so I'm leaving that out. You may need to update the URL\n#    below if the project stops including \"alpha\" on all releases.\n{% set version = \"0.1.33\" %}\n\npackage:\n  name: deno-dom\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/b-fuze/deno-dom/archive/refs/tags/v{{ version }}-alpha.tar.gz\n    sha256: 749c3f3f9bba4a32855f52ccc309d8f01c2d2343d94f42196d57b06c3b6903ee\n\nbuild:\n  number: 2\n\nrequirements:\n  build:\n    - {{ compiler(\"rust\") }}\n    - cargo-bundle-licenses\n    - make   # [unix]\n  run:\n    - deno >=1.24.2\n\ntest:\n  files:\n    - test.ts\n  commands:\n    - if [ \"$DENO_DOM_VERSION\" != \"{{ version }}-alpha\" ]; then echo \"DENO_DOM_VERSION not set correctly\" && exit 1; fi             # [unix]\n\n    - test -f $PREFIX/lib/deno_dom.so                        # [linux]\n    - if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.so\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi       # [linux]\n\n    - test -f $PREFIX/lib/deno_dom.dylib                     # [osx]\n    - if [ \"$DENO_DOM_PLUGIN\" != \"$PREFIX/lib/deno_dom.dylib\" ]; then echo \"DENO_DOM_PLUGIN var not set correctly\" && exit 1; fi    # [osx]\n\n    - IF NOT EXIST %LIBRARY_LIB%\\deno_dom.dll exit 1                              # [win]\n    - IF \"%DENO_DOM_PLUGIN:/=\\%\" NEQ \"%LIBRARY_LIB%\\deno_dom.dll\" exit 1    # [win]\n    - IF \"%DENO_DOM_VERSION%\" NEQ \"{{ version }}-alpha\" exit 1              # [win]\n\n    - deno run --unstable --allow-env --allow-ffi test.ts\n\nabout:\n  home: https://github.com/b-fuze/deno-dom\n  license: MIT\n  license_family: MIT\n  license_file:\n    - LICENSE\n    - DENO_DOM_THIRDPARTY_LICENSES.yml\n  summary: An implementation of the browser DOM\u2014primarily for SSR\u2014in Deno\n\nextra:\n  recipe-maintainers:\n    - msarahan\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/b-fuze/deno-dom/archive/refs/tags/v0.1.33-alpha.tar.gz",
 "version": "0.1.33"
}