{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/651822735.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-orcutt",
 "hash_type": "sha256",
 "name": "r-orcutt",
 "new_version": "2.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-orcutt"
  ]
 },
 "pinning_version": "2021.05.24.19.39.56",
 "raw_meta_yaml": "{% set version = '2.3' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-orcutt\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/orcutt_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/orcutt/orcutt_{{ version }}.tar.gz\n  sha256: d3db0a3fa11c177e3dea800b0ae46bc9f4ca95df6a7c6dcbb88f3cb63ebe475e\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-lmtest\n  run:\n    - r-base\n    - r-lmtest\n\ntest:\n  commands:\n    - $R -e \"library('orcutt')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('orcutt')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=orcutt\n  license: GPL-2.0-only\n  summary: Solve first order autocorrelation problems using an iterative method. This procedure\n    estimates both autocorrelation and beta coefficients recursively until we reach\n    the convergence (8th decimal as default). The residuals are computed after estimating\n    Beta using EGLS approach and Rho is estimated using the previous residuals.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - FernandezMathieu\n\n# Package: orcutt\n# Type: Package\n# Title: Estimate Procedure in Case of First Order Autocorrelation\n# Version: 2.3\n# Date: 2018-09-27\n# Authors@R: c(person(\"Stefano\", \"Spada\", role = c(\"aut\", \"cre\"), email = \"lostefanospada@gmail.com\"), person(\"Matteo\", \"Quartagno\", role = \"ctb\", email = \"matteo.quartagno.lshtm.ac.uk\"), person(\"Marco\", \"Tamburini\", role = \"ctb\"), person(\"David\", \"Robinson\", role = \"ctb\", email = \"admiral.david@gmail.com\"))\n# Depends: lmtest\n# Imports: stats\n# Description: Solve first order autocorrelation problems using an iterative method. This procedure estimates both autocorrelation and beta coefficients recursively until we reach the convergence (8th decimal as default). The residuals are computed after estimating Beta using EGLS approach and Rho is estimated using the previous residuals.\n# License: GPL-2\n# NeedsCompilation: no\n# Packaged: 2018-09-27 19:41:51 UTC; Stefano\n# Author: Stefano Spada [aut, cre], Matteo Quartagno [ctb], Marco Tamburini [ctb], David Robinson [ctb]\n# Maintainer: Stefano Spada <lostefanospada@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2018-09-27 22:40:04 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/orcutt_2.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/orcutt/orcutt_2.3.tar.gz",
  "https://cran.r-project.org/src/contrib/orcutt_2.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/orcutt/orcutt_2.3.tar.gz"
 ],
 "version": "2.3"
}