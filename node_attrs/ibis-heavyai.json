{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/934099052.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ibis-heavyai",
 "hash_type": "sha256",
 "name": "ibis-heavyai",
 "new_version": "1.1",
 "new_version_attempts": {
  "1.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ibis-heavyai"
  ]
 },
 "pinning_version": "2022.05.09.07.08.30",
 "raw_meta_yaml": "{% set name = \"ibis-heavyai\" %}\n{% set version = \"1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/ibis-heavyai-{{ version }}.tar.gz\n  sha256: d4dbf1e5f151408d00073812fb62c40285cc3a481d146b44cc63d4c2d4cf81fd\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n    - flit-core\n  run:\n    - python >=3.7\n    - ibis-framework >=2.0, <3\n    - heavyai\n    - rbc >=0.8.0\n    - pyarrow >=3.0.0\n    - regex\n    - pandas\n    - shapely\n    - geopandas\n    - importlib_metadata\n    - packaging\n\ntest:\n  imports:\n    - ibis_heavyai\n\nabout:\n  home: https://github.com/heavyai/ibis-heavyai\n  summary: Ibis HeavyDB backend\n  dev_url: https://github.com/heavyai/ibis-heavyai\n  doc_url: https://github.com/heavyai/ibis-heavyai/docs/heavyai.rst\n  license: Apache-2.0\n  license_file: LICENSE.md\n  description: |\n    Ibis is a Python framework to write data analytics code, in a similar way\n    to pandas. Ibis can execute the queries not only in memory\n    (as pandas does), but in different backends, including SQL databases,\n    and analytics databases, like HeavyDB. HeavyDB is SQL-based, relational,\n    columnar and specifically developed to harness the massive parallelism of\n    modern CPU and GPU hardware. OmniSciDB can query up to billions of rows in\n    milliseconds, and is capable of unprecedented ingestion speeds, making it\n    the ideal SQL engine for the era of big, high-velocity data.\n\nextra:\n  recipe-maintainers:\n    - tupui\n    - pearu\n    - andrewseidl\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/ibis-heavyai/ibis-heavyai-1.1.tar.gz",
 "version": "1.1"
}