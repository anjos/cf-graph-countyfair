{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/221667032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/276371222.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/313697192.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/333401163.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339640751.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/358884044.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/366475102.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "s3contents",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "\nA S3 and GCS backed ContentsManager implementation for Jupyter.\n\nIt aims to a be a transparent, drop-in replacement for Jupyter standard\nfilesystem-backed storage system. With this implementation of a Jupyter\nContents Manager you can save all your notebooks, regular files, directories\nstructure directly to a S3/GCS bucket, this could be on AWS/GCP or a self\nhosted S3 API compatible like minio.\n",
   "dev_url": "https://github.com/danielfrg/s3contents",
   "home": "https://github.com/danielfrg/s3contents",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE.txt",
   "summary": "A S3-backed ContentsManager implementation for Jupyter"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mariusvniekerk",
    "danielfrg",
    "ericdill"
   ]
  },
  "package": {
   "name": "s3contents",
   "version": "0.6.0"
  },
  "requirements": {
   "host": [
    "python >=3",
    "pip",
    "setuptools_scm"
   ],
   "run": [
    "python >=3",
    "notebook",
    "requests",
    "boto3",
    "s3fs >=0.3.4,<0.5.1",
    "gcsfs >=0.2.1",
    "nose"
   ]
  },
  "source": {
   "fn": "s3contents-0.6.0.tar.gz",
   "sha256": "2019a8d2b829dc999ae1a07292bc8de499db03626af750bde51cb31ae2fcd0c3",
   "url": "https://pypi.io/packages/source/s/s3contents/s3contents-0.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "s3contents",
    "s3contents.tests"
   ],
   "requires": [
    "nose",
    "mock"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boto3",
    "gcsfs",
    "nose",
    "notebook",
    "python",
    "requests",
    "s3fs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "nose"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "\nA S3 and GCS backed ContentsManager implementation for Jupyter.\n\nIt aims to a be a transparent, drop-in replacement for Jupyter standard\nfilesystem-backed storage system. With this implementation of a Jupyter\nContents Manager you can save all your notebooks, regular files, directories\nstructure directly to a S3/GCS bucket, this could be on AWS/GCP or a self\nhosted S3 API compatible like minio.\n",
   "dev_url": "https://github.com/danielfrg/s3contents",
   "home": "https://github.com/danielfrg/s3contents",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE.txt",
   "summary": "A S3-backed ContentsManager implementation for Jupyter"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mariusvniekerk",
    "danielfrg",
    "ericdill"
   ]
  },
  "package": {
   "name": "s3contents",
   "version": "0.6.0"
  },
  "requirements": {
   "host": [
    "python >=3",
    "pip",
    "setuptools_scm"
   ],
   "run": [
    "python >=3",
    "notebook",
    "requests",
    "boto3",
    "s3fs >=0.3.4,<0.5.1",
    "gcsfs >=0.2.1",
    "nose"
   ]
  },
  "source": {
   "fn": "s3contents-0.6.0.tar.gz",
   "sha256": "2019a8d2b829dc999ae1a07292bc8de499db03626af750bde51cb31ae2fcd0c3",
   "url": "https://pypi.io/packages/source/s/s3contents/s3contents-0.6.0.tar.gz"
  },
  "test": {
   "imports": [
    "s3contents",
    "s3contents.tests"
   ],
   "requires": [
    "nose",
    "mock"
   ]
  }
 },
 "name": "s3contents",
 "new_version": "0.6.2",
 "new_version_attempts": {
  "0.5.0": 126,
  "0.5.1": 1,
  "0.6.1": 582,
  "0.6.2": 24
 },
 "new_version_errors": {
  "0.6.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.6.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "s3contents"
  ]
 },
 "pinning_version": "2020.01.16",
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/590111443\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1082, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 225, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 224, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 448, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"s3contents\" %}\n{% set version = \"0.6.0\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.tar.gz'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 2019a8d2b829dc999ae1a07292bc8de499db03626af750bde51cb31ae2fcd0c3\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n    - setuptools_scm\n  run:\n    - python >=3\n    - notebook\n    - requests\n    - boto3\n    - s3fs >=0.3.4,<0.5.1\n    - gcsfs >=0.2.1\n    - nose\n\ntest:\n  requires:\n    - nose\n    - mock\n  imports:\n    - s3contents\n    - s3contents.tests\n\nabout:\n  home: https://github.com/danielfrg/s3contents\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: 'LICENSE.txt'\n  summary: A S3-backed ContentsManager implementation for Jupyter\n  description: |\n\n    A S3 and GCS backed ContentsManager implementation for Jupyter.\n\n    It aims to a be a transparent, drop-in replacement for Jupyter standard\n    filesystem-backed storage system. With this implementation of a Jupyter\n    Contents Manager you can save all your notebooks, regular files, directories\n    structure directly to a S3/GCS bucket, this could be on AWS/GCP or a self\n    hosted S3 API compatible like minio.\n  dev_url: 'https://github.com/danielfrg/s3contents'\n\nextra:\n  recipe-maintainers:\n    - mariusvniekerk\n    - danielfrg\n    - ericdill\n",
 "req": {
  "__set__": true,
  "elements": [
   "boto3",
   "gcsfs",
   "nose",
   "notebook",
   "pip",
   "python",
   "requests",
   "s3fs",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boto3",
    "gcsfs",
    "nose",
    "notebook",
    "python",
    "requests",
    "s3fs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "nose"
   ]
  }
 },
 "smithy_version": "3.6.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boto3",
    "gcsfs >=0.2.1",
    "nose",
    "notebook",
    "python >=3",
    "requests",
    "s3fs >=0.3.4,<0.5.1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "nose"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/s3contents/s3contents-0.6.0.tar.gz",
 "version": "0.6.0"
}