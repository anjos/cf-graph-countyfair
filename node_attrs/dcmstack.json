{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/215850968.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/223807167.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340141176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394315629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394323715.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513593656.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/783347792.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "dcmstack",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://dcmstack.readthedocs.io/",
   "license": "MIT",
   "license_file": "COPYING",
   "summary": "This package provides DICOM to Nifti conversion with the added ability to extract and summarize meta data from the source DICOMs."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman"
   ]
  },
  "package": {
   "name": "dcmstack",
   "version": "0.8"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel"
   ],
   "run": [
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel"
   ]
  },
  "source": {
   "fn": "dcmstack-0.8.tar.gz",
   "sha256": "b879e1cb30a7d761476b79d11627b76d937a2637799fae6afb4c0317a42d639e",
   "url": "https://github.com/moloney/dcmstack/archive/v0.8.tar.gz"
  },
  "test": {
   "imports": [
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "nibabel",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://dcmstack.readthedocs.io/",
   "license": "MIT",
   "license_file": "COPYING",
   "summary": "This package provides DICOM to Nifti conversion with the added ability to extract and summarize meta data from the source DICOMs."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman"
   ]
  },
  "package": {
   "name": "dcmstack",
   "version": "0.8"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel"
   ],
   "run": [
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel"
   ]
  },
  "source": {
   "fn": "dcmstack-0.8.tar.gz",
   "sha256": "b879e1cb30a7d761476b79d11627b76d937a2637799fae6afb4c0317a42d639e",
   "url": "https://github.com/moloney/dcmstack/archive/v0.8.tar.gz"
  },
  "test": {
   "imports": [
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack"
   ]
  }
 },
 "name": "dcmstack",
 "new_version": "0.8",
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://dcmstack.readthedocs.io/",
   "license": "MIT",
   "license_file": "COPYING",
   "summary": "This package provides DICOM to Nifti conversion with the added ability to extract and summarize meta data from the source DICOMs."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman"
   ]
  },
  "package": {
   "name": "dcmstack",
   "version": "0.8"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel"
   ],
   "run": [
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel"
   ]
  },
  "source": {
   "fn": "dcmstack-0.8.tar.gz",
   "sha256": "b879e1cb30a7d761476b79d11627b76d937a2637799fae6afb4c0317a42d639e",
   "url": "https://github.com/moloney/dcmstack/archive/v0.8.tar.gz"
  },
  "test": {
   "imports": [
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "nibabel",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dcmstack"
  ]
 },
 "pinning_version": "2021.11.17.15.51.01",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by nibabel-2.0.2-py34_vc10_0\\n']"
 },
 "raw_meta_yaml": "{% set version = \"0.8\" %}\n\npackage:\n  name: dcmstack\n  version: {{ version }}\n\nsource:\n  fn: dcmstack-{{ version }}.tar.gz\n  url: https://github.com/moloney/dcmstack/archive/v{{ version }}.tar.gz\n  sha256: b879e1cb30a7d761476b79d11627b76d937a2637799fae6afb4c0317a42d639e\n\nbuild:\n  number: 1\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - nibabel\n  run:\n    - python\n    - pydicom\n    - nibabel\n\ntest:\n  imports:\n    - dcmstack\n\nabout:\n  home: http://dcmstack.readthedocs.io/\n  license: MIT\n  license_file: COPYING\n  summary: This package provides DICOM to Nifti conversion with the added ability to extract and summarize meta data from the source DICOMs.\n\nextra:\n  recipe-maintainers:\n    - arokem\n    - kastman\n",
 "req": {
  "__set__": true,
  "elements": [
   "nibabel",
   "pydicom",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "nibabel",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "nibabel",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/moloney/dcmstack/archive/v0.8.tar.gz",
 "version": "0.8",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://dcmstack.readthedocs.io/",
   "license": "MIT",
   "license_file": "COPYING",
   "summary": "This package provides DICOM to Nifti conversion with the added ability to extract and summarize meta data from the source DICOMs."
  },
  "build": {
   "number": "1",
   "script": "python setup.py install --single-version-externally-managed --record=record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman",
    "arokem",
    "kastman"
   ]
  },
  "package": {
   "name": "dcmstack",
   "version": "0.8"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel",
    "python",
    "setuptools",
    "nibabel"
   ],
   "run": [
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel",
    "python",
    "pydicom",
    "nibabel"
   ]
  },
  "source": {
   "fn": "dcmstack-0.8.tar.gz",
   "sha256": "b879e1cb30a7d761476b79d11627b76d937a2637799fae6afb4c0317a42d639e",
   "url": "https://github.com/moloney/dcmstack/archive/v0.8.tar.gz"
  },
  "test": {
   "imports": [
    "dcmstack",
    "dcmstack",
    "dcmstack",
    "dcmstack"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "nibabel",
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}