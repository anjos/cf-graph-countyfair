{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/626046874.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/657444366.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/706268549.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/823233027.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/927174814.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "wavespectra",
 "hash_type": "sha256",
 "name": "wavespectra",
 "new_version": "3.11.0",
 "new_version_attempts": {
  "3.10.0": 1,
  "3.11.0": 1,
  "3.9.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "wavespectra"
  ]
 },
 "pinning_version": "2022.05.03.11.39.11",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"wavespectra\" %}\n{% set version = \"3.10.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 498172a5d32a2d7e3b59117fd099c033f54e2ac2b389dbbc31e8170864b1b7c8\n\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    # Compilers are named 'c', 'cxx' and 'fortran'.\n    - {{ compiler('fortran') }}\n  host:\n    - python\n    - pip\n    - numpy\n    - pytest-runner\n  run:\n    - python\n    - click\n    - cmocean\n    - dask\n    - gcsfs\n    - fsspec\n    - matplotlib-base\n    - numpy\n    - pandas\n    - python-dateutil\n    - pyyaml\n    - sortedcontainers\n    - scipy\n    - toolz\n    - xarray\n    - numba\n    - zarr\n    - attrdict\n    - decorator\n    - importlib-metadata\n\ntest:\n  imports:\n    - wavespectra\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/wavespectra/wavespectra\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Python library for ocean wave spectra\n  description: |\n    Wavespectra is an open source project for working with ocean wave spectral data. \n    The library is built on top of xarray, leveraging from xarray\u2019s labelled \n    multi-dimensional arrays and making dealing with wave spectra simple and fast..\n  doc_url: https://wavespectra.readthedocs.io/en/latest/\n  dev_url: https://github.com/wavespectra/wavespectra\n\nextra:\n  recipe-maintainers:\n    - RubendeBruin\n    - rafa-guedes\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/w/wavespectra/wavespectra-3.10.0.tar.gz",
 "version": "3.10.0"
}