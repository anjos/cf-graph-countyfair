{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/774698066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyjams",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "pyjams is a general Python package offering miscellaneous functions in\ndifferent categories, such as reading different file formats, Julian date\nroutines, or calculating Elementary Effects. It has several subpackages\noffering constants or special functions, or objective functions to be\nused with scipy.optimize or similar.\n",
   "dev_url": "https://github.com/mcuntz/pyjams",
   "doc_url": "https://pyjams.readthedocs.io/",
   "home": "https://github.com/mcuntz/pyjams",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "General Python package with miscellaneous utility functions used in several other packages."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mcuntz"
   ]
  },
  "package": {
   "name": "pyjams",
   "version": "1.21"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools >=42",
    "setuptools_scm >=3.5"
   ],
   "run": [
    "python >=3.6",
    "numpy",
    "scipy",
    "matplotlib-base",
    "schwimmbad",
    "netcdf4",
    "xlrd",
    "openpyxl"
   ]
  },
  "source": {
   "sha256": "0047d3125bd68bbf9939e9270cf786d0e933a852753036182ea9fc0e1fc52ba3",
   "url": "https://pypi.io/packages/source/p/pyjams/pyjams-1.21.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pyjams"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "openpyxl",
    "python",
    "schwimmbad",
    "scipy",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "pyjams is a general Python package offering miscellaneous functions in\ndifferent categories, such as reading different file formats, Julian date\nroutines, or calculating Elementary Effects. It has several subpackages\noffering constants or special functions, or objective functions to be\nused with scipy.optimize or similar.\n",
   "dev_url": "https://github.com/mcuntz/pyjams",
   "doc_url": "https://pyjams.readthedocs.io/",
   "home": "https://github.com/mcuntz/pyjams",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "General Python package with miscellaneous utility functions used in several other packages."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mcuntz"
   ]
  },
  "package": {
   "name": "pyjams",
   "version": "1.21"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools >=42",
    "setuptools_scm >=3.5"
   ],
   "run": [
    "python >=3.6",
    "numpy",
    "scipy",
    "matplotlib-base",
    "schwimmbad",
    "netcdf4",
    "xlrd",
    "openpyxl"
   ]
  },
  "source": {
   "sha256": "0047d3125bd68bbf9939e9270cf786d0e933a852753036182ea9fc0e1fc52ba3",
   "url": "https://pypi.io/packages/source/p/pyjams/pyjams-1.21.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pyjams"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "pyjams",
 "new_version": "1.21",
 "new_version_attempts": {
  "1.10": 4,
  "1.11": 15,
  "1.13": 11,
  "1.6": 1,
  "1.9": 4
 },
 "new_version_errors": {
  "1.10": "We found a problem parsing the recipe for version '1.10': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 40, column 3:\n      home: https://github.com/mcuntz/ ... \n      ^ (line: 40), 'found duplicate key \"dev_url\" with value \"https://github.com/mcuntz/pyjams\" (original value: \"https://github.com/mcuntz/pyjams\")',   in \"<unicode string>\", line 52, column 3:\n      dev_url: https://github.com/mcun ... \n      ^ (line: 52), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.11": "We found a problem parsing the recipe for version '1.11': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 40, column 3:\n      home: https://github.com/mcuntz/ ... \n      ^ (line: 40), 'found duplicate key \"dev_url\" with value \"https://github.com/mcuntz/pyjams\" (original value: \"https://github.com/mcuntz/pyjams\")',   in \"<unicode string>\", line 52, column 3:\n      dev_url: https://github.com/mcun ... \n      ^ (line: 52), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.13": "We found a problem parsing the recipe for version '1.13': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 39, column 3:\n      home: https://github.com/mcuntz/ ... \n      ^ (line: 39), 'found duplicate key \"dev_url\" with value \"https://github.com/mcuntz/pyjams\" (original value: \"https://github.com/mcuntz/pyjams\")',   in \"<unicode string>\", line 51, column 3:\n      dev_url: https://github.com/mcun ... \n      ^ (line: 51), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.6": "We found a problem parsing the recipe for version '1.6': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 37, column 3:\n      home: https://github.com/mcuntz/ ... \n      ^ (line: 37), 'found duplicate key \"dev_url\" with value \"https://github.com/mcuntz/pyjams\" (original value: \"https://github.com/mcuntz/pyjams\")',   in \"<unicode string>\", line 49, column 3:\n      dev_url: https://github.com/mcun ... \n      ^ (line: 49), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.9": "We found a problem parsing the recipe for version '1.9': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 40, column 3:\n      home: https://github.com/mcuntz/ ... \n      ^ (line: 40), 'found duplicate key \"dev_url\" with value \"https://github.com/mcuntz/pyjams\" (original value: \"https://github.com/mcuntz/pyjams\")',   in \"<unicode string>\", line 52, column 3:\n      dev_url: https://github.com/mcun ... \n      ^ (line: 52), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyjams"
  ]
 },
 "pinning_version": "2021.11.05.20.51.02",
 "raw_meta_yaml": "{% set name = \"pyjams\" %}\n{% set version = \"1.21\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pyjams-{{ version }}.tar.gz\n  sha256: 0047d3125bd68bbf9939e9270cf786d0e933a852753036182ea9fc0e1fc52ba3\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools >=42\n    - setuptools_scm >=3.5\n  run:\n    - python >=3.6\n    - numpy\n    - scipy\n    - matplotlib-base\n    - schwimmbad\n    - netcdf4\n    - xlrd\n    - openpyxl\n\ntest:\n  imports:\n    - pyjams\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/mcuntz/pyjams\n  summary: 'General Python package with miscellaneous utility functions used in several other packages.'\n  dev_url: https://github.com/mcuntz/pyjams\n  license: MIT\n  license_file: LICENSE\n  description: |\n    pyjams is a general Python package offering miscellaneous functions in\n    different categories, such as reading different file formats, Julian date\n    routines, or calculating Elementary Effects. It has several subpackages\n    offering constants or special functions, or objective functions to be\n    used with scipy.optimize or similar.\n  doc_url: https://pyjams.readthedocs.io/\n  dev_url: https://github.com/mcuntz/pyjams\n\nextra:\n  recipe-maintainers:\n    - mcuntz\n",
 "req": {
  "__set__": true,
  "elements": [
   "matplotlib-base",
   "netcdf4",
   "numpy",
   "openpyxl",
   "pip",
   "python",
   "schwimmbad",
   "scipy",
   "setuptools",
   "setuptools_scm",
   "xlrd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "openpyxl",
    "python",
    "schwimmbad",
    "scipy",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6",
    "setuptools >=42",
    "setuptools_scm >=3.5"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "openpyxl",
    "python >=3.6",
    "schwimmbad",
    "scipy",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pyjams/pyjams-1.21.tar.gz",
 "version": "1.21"
}