{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "rt-eqcorrscan",
 "hash_type": "sha256",
 "name": "rt-eqcorrscan",
 "new_version": "0.1.4",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rt-eqcorrscan"
  ]
 },
 "raw_meta_yaml": "{% set name = \"RT-EQcorrscan\" %}\n{% set version = \"0.1.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 703409204c0cdc7eb1f5e71c722a334ea37b41866d063bacaab3e63b159e8589\n\nbuild:\n  number: 1\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - rteqcorrscan-build-db = rt_eqcorrscan.console_scripts.build_db:main\n    - rteqcorrscan-real-time-match = rt_eqcorrscan.console_scripts.real_time_match:main\n    - rteqcorrscan-reactor = rt_eqcorrscan.console_scripts.reactor:main\n    - rteqcorrscan-simulation = rt_eqcorrscan.console_scripts.simulation:main\n    - rteqcorrscan-config = rt_eqcorrscan.console_scripts.config:main\n    - rteqcorrscan-bench = rt_eqcorrscan.console_scripts.bench:main\n\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - numpy\n  run:\n    - python >=3.6\n    - bokeh\n    - numpy\n    - scipy >=0.18\n    - matplotlib-base >=1.3.0\n    - obspy >=1.0.3\n    - eqcorrscan >=0.4.3\n    - pyproj <2\n    - obsplus >=0.1.0\n    - fftw\n    - pyfftw >=0.12.0\n\ntest:\n  imports:\n    - rt_eqcorrscan\n\nabout:\n  home: https://github.com/eqcorrscan/RT_EQcorrscan\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENCE.txt\n  summary: 'Near-real-time matched-filter detection for rapid generation of dense earthquake catalogues'\n  description: |\n    RT-EQcorrscan is a near-real-time implementation of matched-filtering \n    (template matching) for the rapid generation of dense earthquake catalogues.\n  doc_url: https://rt-eqcorrscan.readthedocs.io/\n  dev_url: https://github.com/eqcorrscan/RT_EQcorrscan\n\nextra:\n  recipe-maintainers:\n    - calum-chamberlain\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/R/RT-EQcorrscan/RT-EQcorrscan-0.1.4.tar.gz",
 "version": "0.1.4"
}