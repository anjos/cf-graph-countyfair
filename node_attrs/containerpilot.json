{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "containerpilot",
 "hash_type": "sha256",
 "name": "containerpilot",
 "new_version": "3.8.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "containerpilot"
  ]
 },
 "raw_meta_yaml": "{% set name = \"containerpilot\" %}\n{% set version = \"3.8.0\" %}\n{% set sha1 = \"84642c13683ddae6ccb63386e6160e8cb2439c26\" %}\n{% set sha256 = \"8fbfb68ef02aefdcadbc414f7a47b8676dd8dc06d33b0eb78b26063d0a3b7bb2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/joyent/{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha1: {{ sha1 }}\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script:\n    - cp {{ name }} $PREFIX/bin\n  skip: True  # [ not linux ]\n\ntest:\n  commands:\n    - containerpilot -version\n\nabout:\n  home: https://www.joyent.com/containerpilot\n  license: MPL-2.0\n  license_family: OTHER\n  summary: 'A service for autodiscovery and configuration of applications running in containers'\n\n  # The remaining entries in this section are optional, but recommended\n  description: |\n      ContainerPilot is an init system designed to live inside the container. It acts as a\n      process supervisor, reaps zombies, run health checks, registers the app in the service\n      catalog, watches the service catalog for changes, and runs your user-specified code at\n      events in the lifecycle of the container to make it all work right. ContainerPilot uses\n      Consul to coordinate global state among the application containers.\n  doc_url: https://www.joyent.com/containerpilot/docs\n  dev_url: https://github.com/joyent/containerpilot\n\nextra:\n  recipe-maintainers:\n    - sodre\n",
 "smithy_version": "3.1.2",
 "strong_exports": false,
 "url": "https://github.com/joyent/containerpilot/releases/download/3.8.0/containerpilot-3.8.0.tar.gz",
 "version": "3.8.0"
}