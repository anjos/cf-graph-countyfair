{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/721442031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "arm-variant",
 "name": "arm-variant",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "arm-variant"
  ]
 },
 "pinning_version": "2021.08.26.14.38.21",
 "raw_meta_yaml": "package:\n  name: arm-variant\n  version: 1.0.0\n\nbuild:\n  number: 0\n  string: \"{{ arm_variant_type }}\"\n  skip: true  # [not aarch64]\n  track_features:\n    - arm_{{ arm_variant_type }}  # [arm_variant_type != arm_variant_type_default]\n\ntest:\n  commands:\n    - exit 0\n\nabout:\n  home: https://github.com/conda-forge/arm-variant-feedstock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'A meta-package to select the ARM variant.'\n  description: |\n    There are a couple of ARM variants that differ based on architecture.\n\n    Currently the main ones are:\n      * SBSA ( Server Base System Architecture ), which is used in clusters, cloud environments, etc.\n      * Tegra ( System on a Chip ), which is used in edge applications like mobile internet devices, streaming systems, etc.\n\n    Mainly these differ as they have 2 different `cudatoolkit`s. So this package is used to select between them.\n\n    The default is SBSA. So Tegra users should make sure to change this if needed.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "version": "1.0.0"
}