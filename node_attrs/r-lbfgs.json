{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/413008187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650766685.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/946757024.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/977332666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-lbfgs",
 "hash_type": "sha256",
 "name": "r-lbfgs",
 "new_version": "1.2.1.2",
 "new_version_attempts": {
  "1.2.1.1": 1,
  "1.2.1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-lbfgs"
  ]
 },
 "pinning_version": "2022.06.22.11.09.47",
 "raw_meta_yaml": "{% set version = \"1.2.1.2\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-lbfgs\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/lbfgs_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/lbfgs/lbfgs_{{ version }}.tar.gz\n  sha256: 7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcpp >=0.11.2\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcpp >=0.11.2\n\ntest:\n  commands:\n    - $R -e \"library('lbfgs')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('lbfgs')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=lbfgs\n  license: GPL-2.0-or-later\n  summary: A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an\n    objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly\n    suited for high-dimensional problems.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: lbfgs\n# Type: Package\n# Title: Limited-memory BFGS Optimization\n# Version: 1.2.1\n# Date: 2014-07-08\n# Authors@R: c(person(\"Antonio\", \"Coppola\", role = c(\"aut\", \"cre\", \"cph\"), email = \"acoppola@college.harvard.edu\"), person(\"Brandon\", \"Stewart\", role = c(\"aut\", \"cph\")), person(\"Naoaki\", \"Okazaki\", role = c(\"aut\", \"cph\")), person(\"David\", \"Ardia\", role = c(\"ctb\", \"cph\")), person(\"Dirk\", \"Eddelbuettel\", role = c(\"ctb\", \"cph\")), person(\"Katharine\", \"Mullen\", role = c(\"ctb\", \"cph\")), person(\"Jorge\", \"Nocedal\", role = c(\"ctb\", \"cph\")))\n# Maintainer: Antonio Coppola <acoppola@college.harvard.edu>\n# Description: A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems.\n# License: GPL (>= 2)\n# Imports: Rcpp (>= 0.11.2)\n# LinkingTo: Rcpp\n# Packaged: 2014-08-30 10:14:37 UTC; antonio12\n# Author: Antonio Coppola [aut, cre, cph], Brandon Stewart [aut, cph], Naoaki Okazaki [aut, cph], David Ardia [ctb, cph], Dirk Eddelbuettel [ctb, cph], Katharine Mullen [ctb, cph], Jorge Nocedal [ctb, cph]\n# NeedsCompilation: yes\n# Repository: CRAN\n# Date/Publication: 2014-08-31 11:23:32\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
 ],
 "version": "1.2.1.2"
}