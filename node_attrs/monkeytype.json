{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "18.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209610288.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "18.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/245397503.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/245960258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278479913.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/342440014.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/348047705.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/398351239.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/398473466.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/419716775.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650564144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/858218143.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "monkeytype",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MonkeyType collects runtime types of function arguments and return values,\nand can automatically generate stub files or even add draft type\nannotations directly to your Python code based on the types collected at\nruntime.\n",
   "doc_source_url": "https://github.com/Instagram/MonkeyType/tree/master/doc",
   "doc_url": "https://monkeytype.readthedocs.io",
   "home": "https://github.com/Instagram/MonkeyType",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "src/LICENSE",
   "summary": "Generating type annotations from sampled production types"
  },
  "build": {
   "entry_points": [
    "monkeytype=monkeytype.cli:entry_point_main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "cd dist && python -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "nehaljwani"
   ]
  },
  "package": {
   "name": "monkeytype",
   "version": "21.5.0"
  },
  "requirements": {
   "build": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "libcst >=0.3.5",
    "mypy_extensions",
    "python >=3.6"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "e47089f032e65f9bc7b4146725285837b75136f28e3025b434d494f6d1b3cb87",
    "url": "https://pypi.io/packages/source/M/MonkeyType/MonkeyType-21.5.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "d546309fdba80022db35c8095c0bc38b03787f45d7b4fecd91de235a8b03e8dc",
    "url": "https://github.com/Instagram/MonkeyType/archive/v21.5.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -m pip check",
    "monkeytype --help",
    "cd src && cd tests",
    "python -m pytest -k \"not test_includes_otherwise\""
   ],
   "imports": [
    "monkeytype"
   ],
   "requires": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest"
   ],
   "source_files": [
    "src/tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcst",
    "mypy_extensions",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MonkeyType collects runtime types of function arguments and return values,\nand can automatically generate stub files or even add draft type\nannotations directly to your Python code based on the types collected at\nruntime.\n",
   "doc_source_url": "https://github.com/Instagram/MonkeyType/tree/master/doc",
   "doc_url": "https://monkeytype.readthedocs.io",
   "home": "https://github.com/Instagram/MonkeyType",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "src/LICENSE",
   "summary": "Generating type annotations from sampled production types"
  },
  "build": {
   "entry_points": [
    "monkeytype=monkeytype.cli:entry_point_main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "cd dist && python -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "nehaljwani"
   ]
  },
  "package": {
   "name": "monkeytype",
   "version": "21.5.0"
  },
  "requirements": {
   "build": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "libcst >=0.3.5",
    "mypy_extensions",
    "python >=3.6"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "e47089f032e65f9bc7b4146725285837b75136f28e3025b434d494f6d1b3cb87",
    "url": "https://pypi.io/packages/source/M/MonkeyType/MonkeyType-21.5.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "d546309fdba80022db35c8095c0bc38b03787f45d7b4fecd91de235a8b03e8dc",
    "url": "https://github.com/Instagram/MonkeyType/archive/v21.5.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -m pip check",
    "monkeytype --help",
    "cd src && cd tests",
    "python -m pytest -k \"not test_includes_otherwise\""
   ],
   "imports": [
    "monkeytype"
   ],
   "requires": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest"
   ],
   "source_files": [
    "src/tests"
   ]
  }
 },
 "name": "monkeytype",
 "new_version": "22.2.0",
 "new_version_attempts": {
  "20.5.0": 1,
  "21.5.0": 1,
  "22.2.0": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "monkeytype"
  ]
 },
 "pinning_version": "2022.02.18.23.56.39",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"MonkeyType\" %}\n{% set version = \"21.5.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: e47089f032e65f9bc7b4146725285837b75136f28e3025b434d494f6d1b3cb87\n  - folder: src\n    url: https://github.com/Instagram/{{ name }}/archive/v{{ version }}.tar.gz\n    sha256: d546309fdba80022db35c8095c0bc38b03787f45d7b4fecd91de235a8b03e8dc\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - monkeytype=monkeytype.cli:entry_point_main\n  script: cd dist && python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - pip\n    - python >=3.6\n  run:\n    - libcst >=0.3.5\n    - mypy_extensions\n    - python >=3.6\n\ntest:\n  source_files:\n    - src/tests\n  requires:\n    - {{ compiler('c') }}\n    - cython\n    - django\n    - pip\n    - pytest\n  imports:\n    - monkeytype\n  commands:\n    - python -m pip check\n    - monkeytype --help\n    - cd src && cd tests\n    - python -m pytest -k \"not test_includes_otherwise\"\n\n\nabout:\n  home: https://github.com/Instagram/MonkeyType\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: src/LICENSE\n  summary: Generating type annotations from sampled production types\n  doc_url: https://monkeytype.readthedocs.io\n  doc_source_url: https://github.com/Instagram/MonkeyType/tree/master/doc\n  description: |\n    MonkeyType collects runtime types of function arguments and return values,\n    and can automatically generate stub files or even add draft type\n    annotations directly to your Python code based on the types collected at\n    runtime.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - nehaljwani\n",
 "req": {
  "__set__": true,
  "elements": [
   "libcst",
   "mypy_extensions",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "libcst",
    "mypy_extensions",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.17.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcst >=0.3.5",
    "mypy_extensions",
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/M/MonkeyType/MonkeyType-21.5.0.tar.gz",
 "version": "21.5.0"
}