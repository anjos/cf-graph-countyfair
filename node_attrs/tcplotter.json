{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/880119645.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "tcplotter",
 "hash_type": "sha256",
 "name": "tcplotter",
 "new_version": "0.2.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tcplotter"
  ]
 },
 "pinning_version": "2022.03.15.07.59.01",
 "raw_meta_yaml": "{% set name = \"tcplotter\" %}\n{% set version = \"0.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/HUGG/tcplotter/archive/v{{ version }}.tar.gz\n  sha256: cba4bceedde3bfec39cbab2391a3c9833ce0331454cb60c9a5e7d94972fcb954\n\nbuild:\n  number: 1\n  # Build only for Python 3.6 and above\n  skip: true  # [py<36]\n \nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('cxx') }}  # [not win]\n    - {{ compiler('m2w64-toolchain') }}  # [win]\n    - cmake\n    - make\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - matplotlib-base\n    - numpy\n    - scipy\n\ntest:\n  imports:\n    - tcplotter\n  requires:\n    - pip\n  commands:\n    - pip check\n    - test -f $PREFIX/bin/RDAAM_He  # [not win]\n    - test -f $PREFIX/bin/ketch_aft  # [not win]\n    - if not exist \"%PREFIX%\\bin\\RDAAM_He.exe\" exit /b 1  # [win]\n    - if not exist \"%PREFIX%\\bin\\ketch_aft.exe\" exit /b 1  # [win]\n    - time-vs-temp -h  # [not win]\n    - eu-vs-radius -h  # [not win]\n    - rate-vs-radius-eu -h  # [not win]\n    - rate-vs-age-tc -h  # [not win]\n\nabout:\n  home: https://github.com/HUGG/tcplotter\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Plots predicted thermochronology age and closure temperatures'\n  description: |\n    tcplotter is a set of functions and command-line utilities for plotting\n    predicted thermochronometer ages and closure temperatures as a function\n    of effective uranium concentration, grain size, and cooling rate. It can\n    be used to generate contour plots showing how these parameters trade off\n    and affect the ages/closure temperatures.\n  doc_url: https://tcplotter.readthedocs.io\n  dev_url: https://github.com/HUGG/tcplotter\n\nextra:\n  recipe-maintainers:\n    - davewhipp\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://github.com/HUGG/tcplotter/archive/v0.2.1.tar.gz",
 "version": "0.2.1"
}