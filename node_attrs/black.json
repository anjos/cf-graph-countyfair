{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/335893024.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543581938.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722040957.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.8b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/733304582.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.9b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770135444.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.10b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/782387624.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.11b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/783390440.json"
   },
   "data": {
    "bot_rerun": 1637356376.9250512,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.11b1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785199182.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.11b1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/795409350.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.12b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/835234466.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/980898936.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019228060.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019236210.json"
   },
   "data": {
    "bot_rerun": 1659766984.7196226,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019287909.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019289992.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "black",
 "hash_type": "sha256",
 "name": "black-recipe",
 "new_version": "22.6.0",
 "new_version_attempts": {
  "21.10b0": 1,
  "21.11b0": 1,
  "21.11b1": 2,
  "21.12b0": 1,
  "21.8b0": 1,
  "21.9b0": 1,
  "22.1.0": 1,
  "22.6.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "black",
   "black-colorama",
   "black-jupyter",
   "blackd"
  ]
 },
 "pinning_version": "2022.08.05.23.22.55",
 "raw_meta_yaml": "{% set name = \"black\" %}\n{% set version = \"22.6.0\" %}\n\npackage:\n  name: {{ name|lower }}-recipe\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 6c6d39e28aed379aec40da1c65434c77d75e65bb59a1e1c283de545fb4e7c6c9\n\nbuild:\n  number: 2\n\noutputs:\n  - name: {{ name }}\n    script: build_base.sh\n    build:\n      skip: true  # [py<36]\n      entry_points:\n        - black = black:patched_main\n    requirements:\n      host:\n        - python\n        - pip\n        - setuptools_scm\n      run:\n        - python\n        - click >=8.0.0\n        - platformdirs >=2\n        - tomli >=1.1.0  # [py<311]\n        - typed-ast >=1.4.2  # [py<38]\n        - pathspec >=0.9\n        - dataclasses >=0.6  # [py<37]\n        - typing_extensions >=3.10  # [py<310]\n        - mypy_extensions >=0.4.3\n    test:\n      requires:\n        - pip\n      commands:\n        - black --help\n        - pip check\n\n  - name: {{ name }}d\n    build:\n      noarch: python\n      entry_points:\n        - blackd = blackd:patched_main\n    requirements:\n      run:\n        - {{ pin_subpackage('black', max_pin='x.x.x') }}\n        - aiohttp >=3.7.4\n    test:\n      commands:\n        - black --help\n        - blackd --help\n\n  - name: {{ name }}-colorama\n    build:\n      noarch: python\n    requirements:\n      run:\n        - {{ pin_subpackage('black', max_pin='x.x.x') }}\n        - colorama  >=0.4.3\n    test:\n      commands:\n        - black --help\n\n  - name: {{ name }}-jupyter\n    build:\n      noarch: python\n    requirements:\n      run:\n        - {{ pin_subpackage('black', max_pin='x.x.x') }}\n        - ipython >=7.8.0\n        - tokenize-rt >=3.2.0\n    test:\n      commands:\n        - black --help\n        - python -c \"import black.handle_ipynb_magics; assert black.handle_ipynb_magics.jupyter_dependencies_are_installed(verbose=True, quiet=False) == True\"\n\nabout:\n  home: https://github.com/psf/black\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: The uncompromising code formatter.\n\n  description: |\n    Black is the uncompromising Python code formatter. By using it, you agree\n    to cease control over minutiae of hand-formatting. In return, Black gives\n    you speed, determinism, and freedom from pycodestyle nagging about\n    formatting. You will save time and mental energy for more important matters.\n  doc_url: https://black.readthedocs.io/\n  dev_url: https://github.com/psf/black\n\nextra:\n  recipe-maintainers:\n    - seanlaw\n    - carlodri\n    - ambv\n    - mariusvniekerk\n    - xhochy\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/b/black/black-22.6.0.tar.gz",
 "version": "22.6.0"
}