{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/600337352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613135881.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613952946.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661375955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661462234.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/670897329.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722941602.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/777219582.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827186979.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827843925.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/851393337.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/851471254.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/914840492.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920525955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/924466765.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "standardebooks",
 "hash_type": "sha256",
 "name": "standardebooks",
 "new_version": "2.3.10",
 "new_version_attempts": {
  "1.9.1": 1,
  "1.9.2": 1,
  "1.9.3": 1,
  "2.0.0": 1,
  "2.0.1": 1,
  "2.1.0": 1,
  "2.2.0": 1,
  "2.3.1": 1,
  "2.3.10": 1,
  "2.3.2": 1,
  "2.3.4": 1,
  "2.3.5": 1,
  "2.3.6": 1,
  "2.3.7": 1,
  "2.3.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "standardebooks"
  ]
 },
 "pinning_version": "2022.04.29.16.52.03",
 "raw_meta_yaml": "{% set name = \"standardebooks\" %}\n{% set version = \"2.3.10\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/standardebooks-{{ version }}.tar.gz\n  sha256: 3b74316ee9b391fd66e806f66e311f3bc324e3ebfb88a97e3dc7337e7fa4bacd\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - se = se.main:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - cairosvg ==2.5.2\n    - chardet ==4.0.0\n    - cssselect ==1.1.0\n    - cssutils ==2.3.0\n    - ftfy ==6.0.3\n    - gitpython ==3.1.11\n    - importlib_resources ==1.0.2\n    - lxml ==4.6.5\n    - natsort ==7.1.1\n    - pillow ==8.4.0\n    - psutil ==5.8.0\n    - pyphen ==0.11.0\n    - python >=3.6\n    - regex ==2021.08.28\n    - requests ==2.26.0\n    - rich ==10.9.0\n    - roman ==3.3.0\n    - selenium ==3.141.0\n    - smartypants ==2.0.1\n    - tinycss2 ==1.1.0\n    - titlecase ==2.3\n    - unidecode ==1.2.0\n\ntest:\n  imports:\n    - se\n    - se.commands\n    - se.data\n    - se.data.epubcheck\n    - se.data.templates\n    - se.data.vnu\n    - se.vendor\n    - se.vendor.kindleunpack\n    - se.vendor.kobo_touch_extended\n    - se.vendor.mobi\n  commands:\n    - se --help\n    - pip list | grep -E '{{ name }}\\s+{{ version }}'\n  requires:\n    - pip\n\nabout:\n  home: https://standardebooks.org\n  summary: The toolset used to produce Standard Ebooks epub ebooks.\n  dev_url: https://github.com/standardebooks/tools/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE.md\n  description: |\n    A collection of tools Standard Ebooks uses to produce its ebooks,\n     including basic setup of ebooks, text processing, and build tools.\n    Installing this toolset using pipx or conda makes the se command\n     line executable available. Its various commands are described below,\n     or you can use se help to list them.\n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/standardebooks/standardebooks-2.3.10.tar.gz",
 "version": "2.3.10"
}