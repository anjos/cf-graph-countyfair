{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/239301591.json"
   },
   "data": {
    "bot_rerun": 1597087690.3997426,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "quest",
 "hash_type": "sha256",
 "name": "quest",
 "new_version": "3.1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "quest"
  ]
 },
 "pinning_version": "2018.12.12",
 "raw_meta_yaml": "{% set name = \"quest\" %}\n{% set version = \"3.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/erdc/quest/archive/{{ version }}.tar.gz\n  sha256: 0c0695267584825d2cc51967c1db53a0f2b1865a0562c98bb70209797c61a0f2\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"PBR_VERSION={{ version }} {{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n    - pbr\n  run:\n    - python >=3\n    - pbr\n    - geojson\n    - pandas\n    - geopandas\n    - numpy\n    - param >=1.9.0\n    - pint\n    - pony\n    - pyyaml\n    - ulmo >=0.8.5\n    - tornado\n    - psutil\n    - distributed >=1.18\n    - girder-client\n    - hs_restclient\n    - cartopy\n    - imageio\n    - rasterio\n    - whitebox_tools\n    - xarray\n\ntest:\n  imports:\n    - quest\n    - quest_provider_plugins\n    - quest_io_plugins\n    - quest_tool_plugins\n    - quest.tools\n\nabout:\n  home: https://github.com/erdc/quest\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python API for downloading and managing data\n  description: |\n    Quest is a Python library that provides the ability to search, publish and\n    download data (both geographical and non-geographical) from multiple data\n    sources, including local repositories and web-based data providers. Quest\n    also provides a suite of tools for manipulating and transforming data once\n    it is downloaded.\n  doc_url: https://quest.readthedocs.io/\n  dev_url: https://github.com/erdc/quest\n\nextra:\n  recipe-maintainers:\n    - AaronV77\n    - sdc50\n    - dharhas\n    - scopatz\n",
 "smithy_version": "3.2.2",
 "strong_exports": false,
 "url": "https://github.com/erdc/quest/archive/3.1.1.tar.gz",
 "version": "3.1.1"
}