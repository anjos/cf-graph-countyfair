{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/545776341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545873501.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546218448.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546585672.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pystreamer",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/Arnoldosmium/pystreamer",
   "home": "https://github.com/Arnoldosmium/pystreamer",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A lazy evaluating, memory efficient, chain-able generator for python; inspired by the syntactical sugar of Java stream"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "Arnoldosmium"
   ]
  },
  "package": {
   "name": "pystreamer",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": {
   "sha256": "523f596dc6472383adbbea9bb63e325b4fe8a377b6dae420a448f9952105266b",
   "url": "https://pypi.org/packages/source/p/pyStreamer/pyStreamer-0.4.0.tar.gz"
  },
  "test": {
   "imports": [
    "streamer"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/Arnoldosmium/pystreamer",
   "home": "https://github.com/Arnoldosmium/pystreamer",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A lazy evaluating, memory efficient, chain-able generator for python; inspired by the syntactical sugar of Java stream"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "Arnoldosmium"
   ]
  },
  "package": {
   "name": "pystreamer",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": {
   "sha256": "523f596dc6472383adbbea9bb63e325b4fe8a377b6dae420a448f9952105266b",
   "url": "https://pypi.org/packages/source/p/pyStreamer/pyStreamer-0.4.0.tar.gz"
  },
  "test": {
   "imports": [
    "streamer"
   ]
  }
 },
 "name": "pystreamer",
 "new_version": "0.4.0",
 "new_version_attempts": {
  "0.2.0": 1,
  "0.3.0": 1,
  "0.3.1": 1,
  "0.4.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pystreamer"
  ]
 },
 "pinning_version": "2020.12.28.19.16.11",
 "raw_meta_yaml": "{% set name = \"pyStreamer\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 523f596dc6472383adbbea9bb63e325b4fe8a377b6dae420a448f9952105266b\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n\ntest:\n  imports:\n    - streamer\n\nabout:\n  home: https://github.com/Arnoldosmium/pystreamer\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A lazy evaluating, memory efficient, chain-able generator for python; inspired by the syntactical sugar of Java stream\n  dev_url: https://github.com/Arnoldosmium/pystreamer\n\nextra:\n  recipe-maintainers:\n    - Arnoldosmium\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.org/packages/source/p/pyStreamer/pyStreamer-0.4.0.tar.gz",
 "version": "0.4.0"
}