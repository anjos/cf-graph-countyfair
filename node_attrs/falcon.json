{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/204242628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/207171225.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1.post-1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219999841.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/273993693.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335818907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/389250927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501059533.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551650597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/609320232.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/638859599.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680603855.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "falcon",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Falcon is a high-performance Python framework for building cloud APIs. It\nencourages the REST architectural style, and tries to do as little as\npossible while remaining highly effective.\n",
   "dev_url": "https://github.com/falconry/falcon/",
   "doc_url": "http://falcon.readthedocs.io/en/stable/",
   "home": "http://falconframework.org",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An unladen web framework for building APIs and app backends."
  },
  "build": {
   "entry_points": [
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri"
   ]
  },
  "package": {
   "name": "falcon",
   "version": "3.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "8d7c3d52ae4590ddfa0b3d9c75d44ab573340a5e78d72ee687712e757ac53929",
   "url": "https://pypi.io/packages/source/f/falcon/falcon-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h"
   ],
   "imports": [
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Falcon is a high-performance Python framework for building cloud APIs. It\nencourages the REST architectural style, and tries to do as little as\npossible while remaining highly effective.\n",
   "dev_url": "https://github.com/falconry/falcon/",
   "doc_url": "http://falcon.readthedocs.io/en/stable/",
   "home": "http://falconframework.org",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An unladen web framework for building APIs and app backends."
  },
  "build": {
   "entry_points": [
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri"
   ]
  },
  "package": {
   "name": "falcon",
   "version": "3.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "8d7c3d52ae4590ddfa0b3d9c75d44ab573340a5e78d72ee687712e757ac53929",
   "url": "https://pypi.io/packages/source/f/falcon/falcon-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h"
   ],
   "imports": [
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi"
   ]
  }
 },
 "name": "falcon",
 "new_version": "3.0.1",
 "new_version_attempts": {
  "3.0.0": 1,
  "3.0.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Falcon is a high-performance Python framework for building cloud APIs. It\nencourages the REST architectural style, and tries to do as little as\npossible while remaining highly effective.\n",
   "dev_url": "https://github.com/falconry/falcon/",
   "doc_url": "http://falcon.readthedocs.io/en/stable/",
   "home": "http://falconframework.org",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An unladen web framework for building APIs and app backends."
  },
  "build": {
   "entry_points": [
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri"
   ]
  },
  "package": {
   "name": "falcon",
   "version": "3.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "8d7c3d52ae4590ddfa0b3d9c75d44ab573340a5e78d72ee687712e757ac53929",
   "url": "https://pypi.io/packages/source/f/falcon/falcon-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h"
   ],
   "imports": [
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "falcon"
  ]
 },
 "pinning_version": "2021.06.29.15.41.36",
 "raw_meta_yaml": "{% set name = \"falcon\" %}\n{% set version = \"3.0.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 8d7c3d52ae4590ddfa0b3d9c75d44ab573340a5e78d72ee687712e757ac53929\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - falcon-bench = falcon.cmd.bench:main\n    - falcon-print-routes = falcon.cmd.inspect_app:route_main\n    - falcon-inspect-app = falcon.cmd.inspect_app:main\n  skip: True  # [py<35]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n  run:\n    - python\n\ntest:\n  imports:\n    - falcon\n    - falcon.cmd\n    - falcon.media\n    - falcon.routing\n    - falcon.testing\n    - falcon.util\n    - falcon.asgi\n  commands:\n    - falcon-bench -h\n    - falcon-print-routes -h\n    - falcon-inspect-app -h\n\nabout:\n  home: http://falconframework.org\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: An unladen web framework for building APIs and app backends.\n  description: |\n    Falcon is a high-performance Python framework for building cloud APIs. It\n    encourages the REST architectural style, and tries to do as little as\n    possible while remaining highly effective.\n  doc_url: http://falcon.readthedocs.io/en/stable/\n  dev_url: https://github.com/falconry/falcon/\n\nextra:\n  recipe-maintainers:\n    - daf\n    - synapticarbors\n    - carlodri\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/f/falcon/falcon-3.0.0.tar.gz",
 "version": "3.0.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "Falcon is a high-performance Python framework for building cloud APIs. It\nencourages the REST architectural style, and tries to do as little as\npossible while remaining highly effective.\n",
   "dev_url": "https://github.com/falconry/falcon/",
   "doc_url": "http://falcon.readthedocs.io/en/stable/",
   "home": "http://falconframework.org",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "An unladen web framework for building APIs and app backends."
  },
  "build": {
   "entry_points": [
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main",
    "falcon-bench = falcon.cmd.bench:main",
    "falcon-print-routes = falcon.cmd.inspect_app:route_main",
    "falcon-inspect-app = falcon.cmd.inspect_app:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri",
    "daf",
    "synapticarbors",
    "carlodri"
   ]
  },
  "package": {
   "name": "falcon",
   "version": "3.0.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "8d7c3d52ae4590ddfa0b3d9c75d44ab573340a5e78d72ee687712e757ac53929",
   "url": "https://pypi.io/packages/source/f/falcon/falcon-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h",
    "falcon-bench -h",
    "falcon-print-routes -h",
    "falcon-inspect-app -h"
   ],
   "imports": [
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi",
    "falcon",
    "falcon.cmd",
    "falcon.media",
    "falcon.routing",
    "falcon.testing",
    "falcon.util",
    "falcon.asgi"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}