{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/574575668.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.18b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601977823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/619735090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643359186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.21b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/664113872.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/694663785.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.23b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/720459771.json"
   },
   "data": {
    "bot_rerun": 1631647488.047534,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.24b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/758041082.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.25b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/761476481.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.25b1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/761778812.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.25b2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779018951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.26b1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/805714935.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.27b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/833181342.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.28b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836137563.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.28b1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877165774.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/912350416.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30b0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/915991122.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30b1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true,
   "check_solvable": true,
   "run_deps_from_wheel": true
  }
 },
 "feedstock_name": "opentelemetry-instrumentation",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/open-telemetry/opentelemetry-python/tree/master/opentelemetry-instrumentation",
   "license": "Apache-2.0",
   "license_file": "LICENSE.txt",
   "summary": "Instrumentation Tools & Auto Instrumentation for OpenTelemetry Python"
  },
  "build": {
   "entry_points": [
    "opentelemetry-instrument = opentelemetry.instrumentation.auto_instrumentation:run",
    "opentelemetry-bootstrap = opentelemetry.instrumentation.bootstrap:run"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "twoodwark",
    "mariusvniekerk"
   ]
  },
  "package": {
   "name": "opentelemetry-instrumentation",
   "version": "0.30b1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.5"
   ],
   "run": [
    "opentelemetry-api ~=1.4",
    "python >=3.5",
    "wrapt <2.0.0,>=1.0.0"
   ]
  },
  "source": {
   "sha256": "4fd93a341f1674291611f0f8601d2a72967f60a8c65dfd9ef381b4c54c541b93",
   "url": "https://pypi.io/packages/source/o/opentelemetry-instrumentation/opentelemetry-instrumentation-0.30b1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "opentelemetry-instrument --help",
    "opentelemetry-bootstrap --help"
   ],
   "imports": [
    "opentelemetry.instrumentation"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "opentelemetry-api",
    "python",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/open-telemetry/opentelemetry-python/tree/master/opentelemetry-instrumentation",
   "license": "Apache-2.0",
   "license_file": "LICENSE.txt",
   "summary": "Instrumentation Tools & Auto Instrumentation for OpenTelemetry Python"
  },
  "build": {
   "entry_points": [
    "opentelemetry-instrument = opentelemetry.instrumentation.auto_instrumentation:run",
    "opentelemetry-bootstrap = opentelemetry.instrumentation.bootstrap:run"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "twoodwark",
    "mariusvniekerk"
   ]
  },
  "package": {
   "name": "opentelemetry-instrumentation",
   "version": "0.30b1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.5"
   ],
   "run": [
    "opentelemetry-api ~=1.4",
    "python >=3.5",
    "wrapt <2.0.0,>=1.0.0"
   ]
  },
  "source": {
   "sha256": "4fd93a341f1674291611f0f8601d2a72967f60a8c65dfd9ef381b4c54c541b93",
   "url": "https://pypi.io/packages/source/o/opentelemetry-instrumentation/opentelemetry-instrumentation-0.30b1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "opentelemetry-instrument --help",
    "opentelemetry-bootstrap --help"
   ],
   "imports": [
    "opentelemetry.instrumentation"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "opentelemetry-instrumentation",
 "new_version": "0.31b0",
 "new_version_attempts": {
  "0.18b0": 1,
  "0.19b0": 1,
  "0.20b0": 1,
  "0.21b0": 1,
  "0.22b0": 1,
  "0.23b0": 1,
  "0.24b0": 1,
  "0.25b0": 1,
  "0.25b1": 1,
  "0.25b2": 1,
  "0.26b1": 1,
  "0.27b0": 1,
  "0.28b0": 1,
  "0.28b1": 1,
  "0.29b0": 1,
  "0.30b0": 1,
  "0.30b1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "opentelemetry-instrumentation"
  ]
 },
 "pinning_version": "2022.04.21.23.08.27",
 "raw_meta_yaml": "{% set name = \"opentelemetry-instrumentation\" %}\n{% set version = \"0.30b1\" %}\n\n# Common to all opentelemetry python libraries\n{% set vsegments = version.split('.') %}\n# not all packages in opentelemetry are at the most recent version\n{% set preoffset = 19 %}\n{% set patchoffset = 1 %} \n{% set is_rel = (vsegments[0] == '1') %}\n{% set canonical_minor_pre = (vsegments[1].split('b')[0] | int) - (preoffset | int) %}\n{% set canonical_minor_rel = (vsegments[1] | int) %}\n\n{% set canonical_patch_pre = (vsegments[1].split('b')[1] | int) if (not is_rel) else -1 %}\n{% set canonical_patch_rel = (vsegments[2] | int) if (is_rel) else -1 %}\n{% set canonical_patch = canonical_patch_rel if (is_rel) else (canonical_patch_pre) %}\n# Since we have the case where\n# 1.4.1 -> 0.23b2, 1.4.0 -> 0.23b0, we assume that there is an offset when non-zero?\n{% set patchoffset = 0 if (canonical_patch == 0) else patchoffset %}\n{% set canonical_patch = canonical_patch_rel if (is_rel) else (canonical_patch_pre - patchoffset) %}\n\n# determine the canonical minor version of the 1.x opentelemetry associated with this package\n{% set canonical_minor = canonical_minor_rel if is_rel else canonical_minor_pre %}\n{% set vpre = '0.{}b{}'.format(canonical_minor + preoffset, canonical_patch + patchoffset) %}\n{% set vrel = '1.{}.{}'.format(canonical_minor, canonical_patch) %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/opentelemetry-instrumentation-{{ version }}.tar.gz\n  sha256: 4fd93a341f1674291611f0f8601d2a72967f60a8c65dfd9ef381b4c54c541b93\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - opentelemetry-instrument = opentelemetry.instrumentation.auto_instrumentation:run\n    - opentelemetry-bootstrap = opentelemetry.instrumentation.bootstrap:run\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.5\n  run:\n    - opentelemetry-api ~=1.4\n    - python >=3.5\n    - wrapt <2.0.0,>=1.0.0\n    # - setuptools >=16.0\n    # - setuptools >=16.0\n    # - setuptools >=16.0\n    # - setuptools >=16.0\n    # - setuptools >=16.0\n    # - setuptools >=16.0\n    # - setuptools >=16.0\n\ntest:\n  imports:\n    - opentelemetry.instrumentation\n  commands:\n    - pip check\n    - opentelemetry-instrument --help\n    - opentelemetry-bootstrap --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/open-telemetry/opentelemetry-python/tree/master/opentelemetry-instrumentation\n  summary: Instrumentation Tools & Auto Instrumentation for OpenTelemetry Python\n  license: Apache-2.0\n  license_file: LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - twoodwark\n    - mariusvniekerk\n",
 "req": {
  "__set__": true,
  "elements": [
   "opentelemetry-api",
   "pip",
   "python",
   "wrapt"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "opentelemetry-api",
    "python",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.5"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "opentelemetry-api ~=1.4",
    "python >=3.5",
    "wrapt <2.0.0,>=1.0.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/o/opentelemetry-instrumentation/opentelemetry-instrumentation-0.30b1.tar.gz",
 "version": "0.30b1"
}