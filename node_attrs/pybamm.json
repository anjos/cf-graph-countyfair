{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/405747559.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405751423.json"
   },
   "data": {
    "bot_rerun": 1597087711.0160503,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/457213302.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/457229903.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.3.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465749297.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/504229134.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/732900108.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/733549642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.8.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/735461163.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.8.post2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/751057175.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776428200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/783697101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/792128675.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812449365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/839835430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/867803754.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/894247502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/927661152.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/951414868.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/983763464.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1018684156.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1041368808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1073242146.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1106342315.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1121029799.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.10.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1122974708.json"
   },
   "data": {
    "bot_rerun": 1668539879.3437798,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1122977904.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1123316715.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1145600240.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1146863260.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pybamm",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pybamm-team/PyBaMM",
   "doc_url": "https://pybamm.readthedocs.io/en/latest",
   "home": "https://github.com/pybamm-team/PyBaMM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python Battery Mathematical Modelling."
  },
  "build": {
   "entry_points": [
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang"
   ]
  },
  "package": {
   "name": "pybamm",
   "version": "22.10.post1"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel"
   ],
   "run": [
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8"
   ]
  },
  "source": {
   "sha256": "884152c7f40617b8cf1d04ffec8626f7cde84f5123b03283e850e163da992da2",
   "url": "https://pypi.io/packages/source/p/pybamm/pybamm-22.10.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help"
   ],
   "imports": [
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anytree",
    "autograd",
    "casadi",
    "imageio",
    "jupyter",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pybtex",
    "python",
    "scikit-fem",
    "scipy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pybamm-team/PyBaMM",
   "doc_url": "https://pybamm.readthedocs.io/en/latest",
   "home": "https://github.com/pybamm-team/PyBaMM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python Battery Mathematical Modelling."
  },
  "build": {
   "entry_points": [
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang"
   ]
  },
  "package": {
   "name": "pybamm",
   "version": "22.10.post1"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel"
   ],
   "run": [
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8"
   ]
  },
  "source": {
   "sha256": "884152c7f40617b8cf1d04ffec8626f7cde84f5123b03283e850e163da992da2",
   "url": "https://pypi.io/packages/source/p/pybamm/pybamm-22.10.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_jax --help",
    "pybamm_install_jax --help"
   ],
   "imports": [
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods"
   ]
  }
 },
 "name": "pybamm",
 "new_version": "22.11",
 "new_version_attempts": {
  "0.2.1": 1,
  "0.2.2": 16,
  "0.2.2.post1": 17,
  "0.2.2.post2": 3,
  "0.2.2.post3": 15,
  "0.2.3": 288,
  "0.2.3.post1": 1,
  "0.2.4": 114,
  "0.2.4.post1": 47,
  "0.2.4.post2": 73,
  "0.2.4.post3": 204,
  "0.3.0": 46,
  "0.3.0.post1": 448,
  "0.4.0": 44,
  "0.4.0.post1": 149,
  "21.10": 3,
  "21.11": 1,
  "21.12": 1,
  "21.8": 1,
  "21.8.post1": 1,
  "21.8.post2": 1,
  "21.9": 2,
  "22.1": 1,
  "22.10": 1,
  "22.10.post1": 2,
  "22.11": 1,
  "22.2": 1,
  "22.3": 1,
  "22.4": 1,
  "22.5": 1,
  "22.6": 1,
  "22.7": 1,
  "22.8": 1,
  "22.9": 1
 },
 "new_version_errors": {
  "0.2.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.2.post1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.2.post1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.2.post2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.2.post2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.2.post3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.2.post3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.4": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.4' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.4.post1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.4.post1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.4.post2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.4.post2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.2.4.post3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.4.post3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.3.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.3.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.3.0.post1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.3.0.post1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.4.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "0.4.0.post1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.0.post1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "21.10": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '21.10' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "21.9": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '21.9' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "22.10.post1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '22.10.post1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pybamm-team/PyBaMM",
   "doc_url": "https://pybamm.readthedocs.io/en/latest",
   "home": "https://github.com/pybamm-team/PyBaMM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python Battery Mathematical Modelling."
  },
  "build": {
   "entry_points": [
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang"
   ]
  },
  "package": {
   "name": "pybamm",
   "version": "22.10.post1"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel"
   ],
   "run": [
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8"
   ]
  },
  "source": {
   "sha256": "884152c7f40617b8cf1d04ffec8626f7cde84f5123b03283e850e163da992da2",
   "url": "https://pypi.io/packages/source/p/pybamm/pybamm-22.10.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help"
   ],
   "imports": [
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anytree",
    "autograd",
    "casadi",
    "imageio",
    "jupyter",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pybtex",
    "python",
    "scikit-fem",
    "scipy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pybamm-team/PyBaMM",
   "doc_url": "https://pybamm.readthedocs.io/en/latest",
   "home": "https://github.com/pybamm-team/PyBaMM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python Battery Mathematical Modelling."
  },
  "build": {
   "entry_points": [
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang"
   ]
  },
  "package": {
   "name": "pybamm",
   "version": "22.10.post1"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel"
   ],
   "run": [
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8"
   ]
  },
  "source": {
   "sha256": "884152c7f40617b8cf1d04ffec8626f7cde84f5123b03283e850e163da992da2",
   "url": "https://pypi.io/packages/source/p/pybamm/pybamm-22.10.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pybamm_install_odes --help",
    "pybamm_install_jax --help",
    "pybamm_install_odes --help",
    "pybamm_install_jax --help"
   ],
   "imports": [
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anytree",
    "autograd",
    "casadi",
    "imageio",
    "jupyter",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pybtex",
    "python",
    "scikit-fem",
    "scipy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pybamm"
  ]
 },
 "pinning_version": "2022.12.04.19.22.35",
 "raw_meta_yaml": "{% set name = \"pybamm\" %}\n{% set version = \"22.10.post1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 884152c7f40617b8cf1d04ffec8626f7cde84f5123b03283e850e163da992da2\n\nbuild:\n  number: 0\n  entry_points:\n    - pybamm_install_odes = pybamm.install_odes:main\n    - pybamm_install_jax = pybamm.util:install_jax\n  script: '{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv '\n  skip: true  # [py<37 or py>=310]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - pip\n    - python\n    - wheel\n  run:\n    - anytree >=2.4.3\n    - autograd >=1.2\n    - casadi >=3.5.0\n    - imageio >=2.9.0\n    - jupyter\n    - matplotlib-base >=2.0\n    - numpy >=1.16\n    - pandas >=0.24\n    - pybtex >=0.24.0\n    - python\n    - scikit-fem >=0.2.0\n    - scipy >=1.3\n    - sympy >=1.8\n\ntest:\n  imports:\n    - pybamm\n    - pybamm.discretisations\n    - pybamm.experiments\n    - pybamm.expression_tree\n    - pybamm.expression_tree.operations\n    - pybamm.expression_tree.printing\n    - pybamm.geometry\n    - pybamm.meshes\n    - pybamm.models\n    - pybamm.models.full_battery_models\n    - pybamm.models.full_battery_models.lead_acid\n    - pybamm.models.full_battery_models.lithium_ion\n    #- pybamm.models.full_battery_models.lithium_metal\n    - pybamm.models.submodels\n    - pybamm.models.submodels.active_material\n    - pybamm.models.submodels.convection\n    - pybamm.models.submodels.convection.through_cell\n    - pybamm.models.submodels.convection.transverse\n    - pybamm.models.submodels.current_collector\n    - pybamm.models.submodels.electrode\n    - pybamm.models.submodels.electrode.ohm\n    - pybamm.models.submodels.electrolyte_conductivity\n    - pybamm.models.submodels.electrolyte_conductivity.surface_potential_form\n    - pybamm.models.submodels.electrolyte_diffusion\n    - pybamm.models.submodels.external_circuit\n    - pybamm.models.submodels.interface\n    - pybamm.models.submodels.interface.interface_utilisation\n    - pybamm.models.submodels.interface.kinetics\n    - pybamm.models.submodels.interface.kinetics.first_order_kinetics\n    - pybamm.models.submodels.interface.kinetics.inverse_kinetics\n    - pybamm.models.submodels.interface.lithium_plating\n    - pybamm.models.submodels.interface.open_circuit_potential\n    - pybamm.models.submodels.interface.sei\n    - pybamm.models.submodels.oxygen_diffusion\n    - pybamm.models.submodels.particle\n    - pybamm.models.submodels.particle_mechanics\n    - pybamm.models.submodels.porosity\n    - pybamm.models.submodels.thermal\n    - pybamm.models.submodels.thermal.pouch_cell\n    - pybamm.models.submodels.transport_efficiency\n    - pybamm.parameters\n    - pybamm.plotting\n    - pybamm.solvers\n    - pybamm.solvers.c_solvers\n    - pybamm.spatial_methods\n  commands:\n    - pybamm_install_odes --help  # [not win]\n    - pybamm_install_jax --help\n\nabout:\n  home: https://github.com/pybamm-team/PyBaMM\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: Python Battery Mathematical Modelling.\n  doc_url: https://pybamm.readthedocs.io/en/latest\n  dev_url: https://github.com/pybamm-team/PyBaMM\n\nextra:\n  recipe-maintainers:\n    - tinosulzer\n    - priyanshuone6\n    - tlestang\n",
 "req": {
  "__set__": true,
  "elements": [
   "anytree",
   "autograd",
   "casadi",
   "imageio",
   "jupyter",
   "matplotlib-base",
   "numpy",
   "pandas",
   "pip",
   "pybtex",
   "python",
   "scikit-fem",
   "scipy",
   "sympy",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anytree",
    "autograd",
    "casadi",
    "imageio",
    "jupyter",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pybtex",
    "python",
    "scikit-fem",
    "scipy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pybamm/pybamm-22.10.post1.tar.gz",
 "version": "22.10.post1",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pybamm-team/PyBaMM",
   "doc_url": "https://pybamm.readthedocs.io/en/latest",
   "home": "https://github.com/pybamm-team/PyBaMM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Python Battery Mathematical Modelling."
  },
  "build": {
   "entry_points": [
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax",
    "pybamm_install_odes = pybamm.install_odes:main",
    "pybamm_install_jax = pybamm.util:install_jax"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra": {
   "recipe-maintainers": [
    "tinosulzer",
    "priyanshuone6",
    "tlestang",
    "tinosulzer",
    "priyanshuone6",
    "tlestang"
   ]
  },
  "package": {
   "name": "pybamm",
   "version": "22.10.post1"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "wheel",
    "pip",
    "python",
    "wheel"
   ],
   "run": [
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8",
    "anytree >=2.4.3",
    "autograd >=1.2",
    "casadi >=3.5.0",
    "imageio >=2.9.0",
    "jupyter",
    "matplotlib-base >=2.0",
    "numpy >=1.16",
    "pandas >=0.24",
    "pybtex >=0.24.0",
    "python",
    "scikit-fem >=0.2.0",
    "scipy >=1.3",
    "sympy >=1.8"
   ]
  },
  "source": {
   "sha256": "884152c7f40617b8cf1d04ffec8626f7cde84f5123b03283e850e163da992da2",
   "url": "https://pypi.io/packages/source/p/pybamm/pybamm-22.10.post1.tar.gz"
  },
  "test": {
   "commands": [
    "pybamm_install_jax --help",
    "pybamm_install_jax --help"
   ],
   "imports": [
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods",
    "pybamm",
    "pybamm.discretisations",
    "pybamm.experiments",
    "pybamm.expression_tree",
    "pybamm.expression_tree.operations",
    "pybamm.expression_tree.printing",
    "pybamm.geometry",
    "pybamm.meshes",
    "pybamm.models",
    "pybamm.models.full_battery_models",
    "pybamm.models.full_battery_models.lead_acid",
    "pybamm.models.full_battery_models.lithium_ion",
    "pybamm.models.submodels",
    "pybamm.models.submodels.active_material",
    "pybamm.models.submodels.convection",
    "pybamm.models.submodels.convection.through_cell",
    "pybamm.models.submodels.convection.transverse",
    "pybamm.models.submodels.current_collector",
    "pybamm.models.submodels.electrode",
    "pybamm.models.submodels.electrode.ohm",
    "pybamm.models.submodels.electrolyte_conductivity",
    "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
    "pybamm.models.submodels.electrolyte_diffusion",
    "pybamm.models.submodels.external_circuit",
    "pybamm.models.submodels.interface",
    "pybamm.models.submodels.interface.interface_utilisation",
    "pybamm.models.submodels.interface.kinetics",
    "pybamm.models.submodels.interface.kinetics.first_order_kinetics",
    "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
    "pybamm.models.submodels.interface.lithium_plating",
    "pybamm.models.submodels.interface.open_circuit_potential",
    "pybamm.models.submodels.interface.sei",
    "pybamm.models.submodels.oxygen_diffusion",
    "pybamm.models.submodels.particle",
    "pybamm.models.submodels.particle_mechanics",
    "pybamm.models.submodels.porosity",
    "pybamm.models.submodels.thermal",
    "pybamm.models.submodels.thermal.pouch_cell",
    "pybamm.models.submodels.transport_efficiency",
    "pybamm.parameters",
    "pybamm.plotting",
    "pybamm.solvers",
    "pybamm.solvers.c_solvers",
    "pybamm.spatial_methods"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anytree",
    "autograd",
    "casadi",
    "imageio",
    "jupyter",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pybtex",
    "python",
    "scikit-fem",
    "scipy",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}