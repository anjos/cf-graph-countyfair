{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/320080931.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340490465.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/415596571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/504188160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/627836264.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815478422.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "fluidfft",
 "hash_type": "sha256",
 "name": "fluidfft",
 "new_version": "0.3.2",
 "new_version_attempts": {
  "0.3.1": 1,
  "0.3.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fluidfft"
  ]
 },
 "pinning_version": "2022.01.05.14.36.24",
 "raw_meta_yaml": "{% set name = \"fluidfft\" %}\n{% set version = \"0.3.2\" %}\n{% set build = 2 %}\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\n{% if mpi == 'nompi' %}\n# prioritize nompi variant via build number\n{% set build = build + 100 %}\n{% endif %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9f1bb551a45a1ad196d8f1f8c81eb0611299f84a0320a1f910e54601e2bae39f\n\nbuild:\n  number: {{ build }}\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  {% if mpi != 'nompi' %}\n\n  run_exports:\n    - {{ name }} * {{ mpi_prefix }}_*\n\n  {% endif %}\n\n  # skip: true  # [win and (mpi != 'nompi')]\n  skip: true  # [py<36 or (osx and py==36)]\n  entry_points:\n    - fluidfft-bench = fluidfft.bench:run\n    - fluidfft-bench-analysis = fluidfft.bench_analysis:run\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - pip\n    - python\n    - {{ mpi }}  # [ mpi != 'nompi' ]\n    - openssh  # [ mpi == 'openmpi' ]\n    - transonic\n    - fftw\n    - fftw * mpi_{{ mpi }}_*  # [mpi != 'nompi']\n    - jinja2\n    - cython\n    - mpi4py  # [ mpi != 'nompi' ]\n    - pythran  # [ not win ]\n    - libblas\n    - libcblas\n  run:\n    - python\n    - {{ mpi }}  # [ mpi != 'nompi' ]\n    - mpi4py  # [ mpi != 'nompi' ]\n    - openssh  # [ mpi == 'openmpi' ]\n    - fluiddyn\n    - pandas\n    - transonic\n    - fftw\n    - fftw * mpi_{{ mpi }}_*  # [mpi != 'nompi']\n    - pyfftw\n\ntest:\n  imports:\n    - fluidfft\n    - fluidfft.bench\n    - fluidfft.bench_analysis\n    - fluidfft.fft2d\n    - fluidfft.fft3d\n    - fluidfft.test_init\n    - fluidfft.util\n    - fluidfft.fft2d.with_fftw2d  # [not win]\n    - fluidfft.fft3d.with_fftw3d  # [not win]\n    - fluidfft.fft2d.mpi_with_fftw1d  # [ mpi != 'nompi' ]\n    - fluidfft.fft3d.mpi_with_fftw1d  # [ mpi != 'nompi' ]\n    - fluidfft.fft2d.mpi_with_fftwmpi2d  # [ mpi != 'nompi' ]\n    - fluidfft.fft3d.mpi_with_fftwmpi3d  # [ mpi != 'nompi' ]\n  commands:\n    - fluidfft-bench\n    - fluidfft-bench-analysis\n    - fluidfft-bench 32 -d 3\n\nabout:\n  home: https://foss.heptapod.net/fluiddyn/fluidfft\n  license: LicenseRef-CeCILL\n  license_file: LICENSE.txt\n  summary: Efficient and easy Fast Fourier Transform (FFT) for Python.\n  description: |\n    Fluidfft provides C++ classes and their Python wrapper classes written in\n    Cython useful to perform Fast Fourier Transform (FFT) with different\n    libraries\n  doc_url: https://fluidfft.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - CyrilleBonamy\n    - paugier\n    - ashwinvis\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/f/fluidfft/fluidfft-0.3.2.tar.gz",
 "version": "0.3.2"
}