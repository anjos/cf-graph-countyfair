{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/200161348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221566403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "opbeat",
 "hash_type": "sha256",
 "name": "opbeat",
 "new_version": "3.6.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "opbeat"
  ]
 },
 "pinning_version": "2018.10.08",
 "raw_meta_yaml": "{% set name = \"opbeat\" %}\n{% set version = \"3.6.1\" %}\n{% set sha256 = \"bd03103d56b53b85d097f01ba72b44c65d2607fcf67f17590878f57fc616eb21\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1000\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  noarch: python\n\nrequirements:\n  host:\n    - python <3.7\n    - pip\n  run:\n    - python <3.7\n    - django >=1.8\n    - urllib3\n    - certifi\n\nabout:\n  home: https://github.com/opbeat/opbeat_python\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Python agent for Opbeat.'\n  description: |\n    It provides full out-of-the-box support for many of the popular frameworks, including Django, \n    and Flask. Opbeat also includes drop-in support for any WSGI-compatible web application.\n    Your application doesn't live on the web? No problem! Opbeat is easy to use in any Python application.\n  doc_url: https://opbeat.com/docs/topics/python/\n  dev_url: https://github.com/opbeat/opbeat_python\n\nextra:\n  recipe-maintainers:\n    - cshaley\n    - sannykr\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/o/opbeat/opbeat-3.6.1.tar.gz",
 "version": "3.6.1"
}