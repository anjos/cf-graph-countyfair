{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/375711199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/422990054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/433815717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465495044.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551045210.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552578555.json"
   },
   "data": {
    "bot_rerun": 1610365220.3489654,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552766555.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "bxa",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Bayesian X-ray Analysis (BXA) allows reliable parameter inference and model comparison in X-ray astronomy.\n\nBXA connects the nested sampling algorithms MultiNest and UltraNest to the X-ray spectral analysis environments\nXspec (https://heasarc.gsfc.nasa.gov/xanadu/xspec/) and Sherpa (http://cxc.cfa.harvard.edu/sherpa/).\n\nThis allows reliable and automatic Bayesian parameter estimation and model comparison.\n",
   "dev_url": "https://github.com/JohannesBuchner/BXA/",
   "doc_url": "https://johannesbuchner.github.io/BXA/",
   "home": "https://johannesbuchner.github.io/BXA/",
   "license": "GPL3",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "BXA enables nested sampling in the X-ray spectral analysis environments Xspec/Sherpa for Bayesian Parameter Estimation and Model comparison."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "JohannesBuchner"
   ]
  },
  "package": {
   "name": "bxa",
   "version": "4.0.1"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "ultranest",
    "h5py",
    "tqdm",
    "joblib",
    "astropy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "8b99bed2a751cf1cf4e422a8c227ca1908560c42338aa10a42521b42815c8575",
   "url": "https://pypi.io/packages/source/b/bxa/bxa-4.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "bxa"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "h5py",
    "joblib",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy",
    "tqdm",
    "ultranest"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Bayesian X-ray Analysis (BXA) allows reliable parameter inference and model comparison in X-ray astronomy.\n\nBXA connects the nested sampling algorithms MultiNest and UltraNest to the X-ray spectral analysis environments\nXspec (https://heasarc.gsfc.nasa.gov/xanadu/xspec/) and Sherpa (http://cxc.cfa.harvard.edu/sherpa/).\n\nThis allows reliable and automatic Bayesian parameter estimation and model comparison.\n",
   "dev_url": "https://github.com/JohannesBuchner/BXA/",
   "doc_url": "https://johannesbuchner.github.io/BXA/",
   "home": "https://johannesbuchner.github.io/BXA/",
   "license": "GPL3",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "BXA enables nested sampling in the X-ray spectral analysis environments Xspec/Sherpa for Bayesian Parameter Estimation and Model comparison."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "JohannesBuchner"
   ]
  },
  "package": {
   "name": "bxa",
   "version": "4.0.1"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "ultranest",
    "h5py",
    "tqdm",
    "joblib",
    "astropy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "8b99bed2a751cf1cf4e422a8c227ca1908560c42338aa10a42521b42815c8575",
   "url": "https://pypi.io/packages/source/b/bxa/bxa-4.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "bxa"
   ]
  }
 },
 "name": "bxa",
 "new_version": "4.0.2",
 "new_version_attempts": {
  "3.4.0": 1,
  "3.4.1": 1,
  "3.4.2": 1,
  "4.0.0": 1,
  "4.0.1": 6,
  "4.0.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bxa"
  ]
 },
 "pinning_version": "2021.01.11.07.23.24",
 "pre_pr_migrator_status": {
  "version": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1042, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 222, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 216, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"bxa\" %}\n{% set version = \"4.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 8b99bed2a751cf1cf4e422a8c227ca1908560c42338aa10a42521b42815c8575\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - numpy\n    - matplotlib-base\n    - ultranest\n    - h5py\n    - tqdm\n    - joblib\n    - astropy\n    - scipy\n\ntest:\n  imports:\n    - bxa\n\nabout:\n  home: https://johannesbuchner.github.io/BXA/\n  license: GPL3\n  license_family: GPL\n  license_file: LICENSE\n  summary: BXA enables nested sampling in the X-ray spectral analysis environments Xspec/Sherpa for Bayesian Parameter Estimation and Model comparison.\n\n  description: |\n    Bayesian X-ray Analysis (BXA) allows reliable parameter inference and model comparison in X-ray astronomy.\n\n    BXA connects the nested sampling algorithms MultiNest and UltraNest to the X-ray spectral analysis environments \n    Xspec (https://heasarc.gsfc.nasa.gov/xanadu/xspec/) and Sherpa (http://cxc.cfa.harvard.edu/sherpa/).\n\n    This allows reliable and automatic Bayesian parameter estimation and model comparison.\n\n  doc_url: https://johannesbuchner.github.io/BXA/\n  dev_url: https://github.com/JohannesBuchner/BXA/\n\nextra:\n  recipe-maintainers:\n    - JohannesBuchner\n",
 "req": {
  "__set__": true,
  "elements": [
   "astropy",
   "h5py",
   "joblib",
   "matplotlib-base",
   "numpy",
   "pip",
   "python",
   "scipy",
   "tqdm",
   "ultranest"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "h5py",
    "joblib",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy",
    "tqdm",
    "ultranest"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "h5py",
    "joblib",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy",
    "tqdm",
    "ultranest"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/b/bxa/bxa-4.0.1.tar.gz",
 "version": "4.0.1"
}