{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/366418954.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386689561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/389587553.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/418810910.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428218602.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428586676.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435508652.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442944989.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/490009713.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509614125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/529019969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542152306.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/550796251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573896144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602187176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/631571905.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689398926.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705339390.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/732377518.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/742604116.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779853943.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812462600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/843425322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/924810676.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1033533919.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1077867613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pandera",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A simple, zero-configuration Python library to help you build\nconfidence in the quality of your dataframe-like containers through\ndata validation and property-based testing.\n",
   "dev_url": "https://github.com/unionai-oss/pandera",
   "doc_url": "https://pandera.readthedocs.io/en/latest/",
   "home": "https://github.com/pandera-dev/pandera",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "The open source framework for precision data testing"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pandera",
   "recipe-maintainers": [
    "cosmicBboy"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pandera-base",
    "requirements": {
     "host": [
      "python >=3.7",
      "pip"
     ],
     "run": [
      "python >=3.7",
      "numpy >=1.9.0",
      "pandas >=1.0",
      "typing_extensions",
      "typing_inspect >=0.6.0",
      "wrapt",
      "packaging >=20.0",
      "pydantic"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera",
    "requirements": {
     "run": [
      "pandera-base"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-strategies",
    "requirements": {
     "run": [
      "pandera-base",
      "hypothesis >=5.41.1"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.strategies"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-hypotheses",
    "requirements": {
     "run": [
      "pandera-base",
      "scipy"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.hypotheses"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-io",
    "requirements": {
     "run": [
      "pandera-base",
      "pyyaml >=5.1",
      "black",
      "frictionless",
      "click <7.2.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.io"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-pyspark",
    "requirements": {
     "run": [
      "pandera-base",
      "pyspark"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.pyspark_accessor",
      "pandera.typing.pyspark"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin",
    "requirements": {
     "run": [
      "pandera-base",
      "modin"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-ray",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-ray"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-dask"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "dask",
      "distributed"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.dask_accessor",
      "pandera.typing.dask"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-mypy",
    "requirements": {
     "run": [
      "pandera-base",
      "mypy",
      "pandas-stubs"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.mypy"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-fastapi",
    "requirements": {
     "run": [
      "pandera-base",
      "fastapi"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.fastapi"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-geopandas",
    "requirements": {
     "run": [
      "pandera-base",
      "geopandas",
      "shapely"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.geopandas"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pandera-suite",
   "version": "0.13.1"
  },
  "source": {
   "sha256": "189d2dd84c6e4484fe67b86701683865bbd07db5f59c9e59bf7e2690806b5465",
   "url": "https://pypi.io/packages/source/p/pandera/pandera-0.13.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "black",
    "click",
    "dask",
    "distributed",
    "fastapi",
    "frictionless",
    "geopandas",
    "hypothesis",
    "modin",
    "modin-dask",
    "modin-ray",
    "mypy",
    "numpy",
    "packaging",
    "pandas",
    "pandas-stubs",
    "pandera-base",
    "pydantic",
    "pyspark",
    "python",
    "pyyaml",
    "scipy",
    "shapely",
    "typing_extensions",
    "typing_inspect",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A simple, zero-configuration Python library to help you build\nconfidence in the quality of your dataframe-like containers through\ndata validation and property-based testing.\n",
   "dev_url": "https://github.com/unionai-oss/pandera",
   "doc_url": "https://pandera.readthedocs.io/en/latest/",
   "home": "https://github.com/pandera-dev/pandera",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "The open source framework for precision data testing"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pandera",
   "recipe-maintainers": [
    "cosmicBboy"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pandera-base",
    "requirements": {
     "host": [
      "python >=3.7",
      "pip"
     ],
     "run": [
      "python >=3.7",
      "numpy >=1.9.0",
      "pandas >=1.0",
      "typing_extensions",
      "typing_inspect >=0.6.0",
      "wrapt",
      "packaging >=20.0",
      "pydantic"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera",
    "requirements": {
     "run": [
      "pandera-base"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-strategies",
    "requirements": {
     "run": [
      "pandera-base",
      "hypothesis >=5.41.1"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.strategies"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-hypotheses",
    "requirements": {
     "run": [
      "pandera-base",
      "scipy"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.hypotheses"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-io",
    "requirements": {
     "run": [
      "pandera-base",
      "pyyaml >=5.1",
      "black",
      "frictionless",
      "click <7.2.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.io"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-pyspark",
    "requirements": {
     "run": [
      "pandera-base",
      "pyspark"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.pyspark_accessor",
      "pandera.typing.pyspark"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin",
    "requirements": {
     "run": [
      "pandera-base",
      "modin"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-ray",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-ray"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-dask"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "dask",
      "distributed"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.dask_accessor",
      "pandera.typing.dask"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-mypy",
    "requirements": {
     "run": [
      "pandera-base",
      "mypy",
      "pandas-stubs"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.mypy"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-fastapi",
    "requirements": {
     "run": [
      "pandera-base",
      "fastapi"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.fastapi"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-geopandas",
    "requirements": {
     "run": [
      "pandera-base",
      "geopandas",
      "shapely"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.geopandas"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pandera-suite",
   "version": "0.13.1"
  },
  "source": {
   "sha256": "189d2dd84c6e4484fe67b86701683865bbd07db5f59c9e59bf7e2690806b5465",
   "url": "https://pypi.io/packages/source/p/pandera/pandera-0.13.1.tar.gz"
  }
 },
 "name": "pandera-suite",
 "new_version": "0.13.2",
 "new_version_attempts": {
  "0.10.0": 3,
  "0.10.1": 3,
  "0.11.0": 1,
  "0.12.0": 1,
  "0.13.1": 1,
  "0.4.0": 1,
  "0.4.1": 1,
  "0.4.2": 1,
  "0.4.3": 1,
  "0.4.4": 1,
  "0.4.5": 1,
  "0.5.0": 1,
  "0.5.1": 1,
  "0.6.0": 1,
  "0.6.1": 1,
  "0.6.2": 1,
  "0.6.3": 1,
  "0.6.4": 1,
  "0.6.5": 1,
  "0.7.0": 1,
  "0.7.1": 1,
  "0.7.2": 1,
  "0.8.0": 1,
  "0.8.1": 1,
  "0.9.0": 1
 },
 "new_version_errors": {
  "0.10.0": "We found a problem parsing the recipe for version '0.10.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 16, column 5:\n      - name: pandera-base\n        ^ (line: 16), 'found duplicate key \"test\" with value \"ordereddict([(\\'imports\\', [\\'pandera\\'])])\" (original value: \"ordereddict([(\\'requires\\', [\\'pip\\']), (\\'imports\\', [\\'pandera\\']), (\\'commands\\', [\\'pip check\\'])])\")',   in \"<unicode string>\", line 45, column 5:\n        test:\n        ^ (line: 45), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1561, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1293, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "0.10.1": "We found a problem parsing the recipe for version '0.10.1': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 16, column 5:\n      - name: pandera-base\n        ^ (line: 16), 'found duplicate key \"test\" with value \"ordereddict([(\\'imports\\', [\\'pandera\\'])])\" (original value: \"ordereddict([(\\'requires\\', [\\'pip\\']), (\\'imports\\', [\\'pandera\\']), (\\'commands\\', [\\'pip check\\'])])\")',   in \"<unicode string>\", line 45, column 5:\n        test:\n        ^ (line: 45), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1561, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1293, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pandera",
   "pandera-base",
   "pandera-dask",
   "pandera-fastapi",
   "pandera-geopandas",
   "pandera-hypotheses",
   "pandera-io",
   "pandera-modin",
   "pandera-modin-dask",
   "pandera-modin-ray",
   "pandera-mypy",
   "pandera-pyspark",
   "pandera-strategies"
  ]
 },
 "pinning_version": "2022.10.05.18.50.28",
 "raw_meta_yaml": "{% set name = \"pandera\" %}\n{% set version = \"0.13.1\" %}\n\npackage:\n  name: pandera-suite\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 189d2dd84c6e4484fe67b86701683865bbd07db5f59c9e59bf7e2690806b5465\n\nbuild:\n  number: 0\n\noutputs:\n  - name: pandera-base\n    build:\n      noarch: python\n      script:\n        - python -m pip install . --no-deps -vv\n\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n      commands:\n        - pip check\n\n    requirements:\n      host:\n        - python >=3.7\n        - pip\n      run:\n        - python >=3.7\n        - numpy >=1.9.0\n        - pandas >=1.0\n        - typing_extensions\n        - typing_inspect >=0.6.0\n        - wrapt\n        - packaging >=20.0\n        - pydantic\n\n  - name: pandera\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n\n  - name: pandera-strategies\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.strategies\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - hypothesis >=5.41.1\n\n  - name: pandera-hypotheses\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.hypotheses\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - scipy\n\n  - name: pandera-io\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.io\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - pyyaml >=5.1\n        - black\n        - frictionless\n        - click <7.2.0  # frictionless dependency, not a pandera dependency\n\n  - name: pandera-pyspark\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.pyspark_accessor\n        - pandera.typing.pyspark\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - pyspark\n\n  - name: pandera-modin\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin\n\n  - name: pandera-modin-ray\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin-ray\n\n  - name: pandera-modin-dask\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin-dask\n\n  - name: pandera-dask\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.dask_accessor\n        - pandera.typing.dask\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - dask\n        - distributed\n\n  - name: pandera-mypy\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.mypy\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - mypy\n        - pandas-stubs\n\n  - name: pandera-fastapi\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.fastapi\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - fastapi\n\n  - name: pandera-geopandas\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.geopandas\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - geopandas\n        - shapely\n\nabout:\n  home: https://github.com/pandera-dev/pandera\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: The open source framework for precision data testing\n  description: |\n    A simple, zero-configuration Python library to help you build\n    confidence in the quality of your dataframe-like containers through\n    data validation and property-based testing.\n  doc_url: https://pandera.readthedocs.io/en/latest/\n  dev_url: https://github.com/unionai-oss/pandera\n\nextra:\n  feedstock-name: pandera\n  recipe-maintainers:\n    - cosmicBboy\n",
 "req": {
  "__set__": true,
  "elements": [
   "black",
   "click",
   "dask",
   "distributed",
   "fastapi",
   "frictionless",
   "geopandas",
   "hypothesis",
   "modin",
   "modin-dask",
   "modin-ray",
   "mypy",
   "numpy",
   "packaging",
   "pandas",
   "pandas-stubs",
   "pandera-base",
   "pip",
   "pydantic",
   "pyspark",
   "python",
   "pyyaml",
   "scipy",
   "shapely",
   "typing_extensions",
   "typing_inspect",
   "wrapt"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "black",
    "click",
    "dask",
    "distributed",
    "fastapi",
    "frictionless",
    "geopandas",
    "hypothesis",
    "modin",
    "modin-dask",
    "modin-ray",
    "mypy",
    "numpy",
    "packaging",
    "pandas",
    "pandas-stubs",
    "pandera-base",
    "pydantic",
    "pyspark",
    "python",
    "pyyaml",
    "scipy",
    "shapely",
    "typing_extensions",
    "typing_inspect",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "black",
    "click <7.2.0",
    "dask",
    "distributed",
    "fastapi",
    "frictionless",
    "geopandas",
    "hypothesis >=5.41.1",
    "modin",
    "modin-dask",
    "modin-ray",
    "mypy",
    "numpy >=1.9.0",
    "packaging >=20.0",
    "pandas >=1.0",
    "pandas-stubs",
    "pandera-base",
    "pydantic",
    "pyspark",
    "python >=3.7",
    "pyyaml >=5.1",
    "scipy",
    "shapely",
    "typing_extensions",
    "typing_inspect >=0.6.0",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pandera/pandera-0.13.1.tar.gz",
 "version": "0.13.1"
}