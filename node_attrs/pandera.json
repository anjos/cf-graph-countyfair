{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/366418954.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386689561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/389587553.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/418810910.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428218602.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428586676.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435508652.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442944989.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/490009713.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509614125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/529019969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542152306.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/550796251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573896144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602187176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/631571905.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689398926.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705339390.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/732377518.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/742604116.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779853943.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812462600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/843425322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/924810676.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pandera",
 "hash_type": "sha256",
 "name": "pandera-suite",
 "new_version": "0.11.0",
 "new_version_attempts": {
  "0.10.0": 3,
  "0.10.1": 3,
  "0.11.0": 1,
  "0.4.0": 1,
  "0.4.1": 1,
  "0.4.2": 1,
  "0.4.3": 1,
  "0.4.4": 1,
  "0.4.5": 1,
  "0.5.0": 1,
  "0.5.1": 1,
  "0.6.0": 1,
  "0.6.1": 1,
  "0.6.2": 1,
  "0.6.3": 1,
  "0.6.4": 1,
  "0.6.5": 1,
  "0.7.0": 1,
  "0.7.1": 1,
  "0.7.2": 1,
  "0.8.0": 1,
  "0.8.1": 1,
  "0.9.0": 1
 },
 "new_version_errors": {
  "0.10.0": "We found a problem parsing the recipe for version '0.10.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 16, column 5:\n      - name: pandera-base\n        ^ (line: 16), 'found duplicate key \"test\" with value \"ordereddict([(\\'imports\\', [\\'pandera\\'])])\" (original value: \"ordereddict([(\\'requires\\', [\\'pip\\']), (\\'imports\\', [\\'pandera\\']), (\\'commands\\', [\\'pip check\\'])])\")',   in \"<unicode string>\", line 45, column 5:\n        test:\n        ^ (line: 45), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1561, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1293, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "0.10.1": "We found a problem parsing the recipe for version '0.10.1': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 16, column 5:\n      - name: pandera-base\n        ^ (line: 16), 'found duplicate key \"test\" with value \"ordereddict([(\\'imports\\', [\\'pandera\\'])])\" (original value: \"ordereddict([(\\'requires\\', [\\'pip\\']), (\\'imports\\', [\\'pandera\\']), (\\'commands\\', [\\'pip check\\'])])\")',   in \"<unicode string>\", line 45, column 5:\n        test:\n        ^ (line: 45), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1561, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1293, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pandera",
   "pandera-base",
   "pandera-dask",
   "pandera-fastapi",
   "pandera-geopandas",
   "pandera-hypotheses",
   "pandera-io",
   "pandera-modin",
   "pandera-modin-dask",
   "pandera-modin-ray",
   "pandera-mypy",
   "pandera-pyspark",
   "pandera-strategies"
  ]
 },
 "pinning_version": "2022.04.29.16.52.03",
 "raw_meta_yaml": "{% set name = \"pandera\" %}\n{% set version = \"0.11.0\" %}\n\npackage:\n  name: pandera-suite\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: ac49604d5f30554ea29913c8a52351bfffa7ba33eb1f68614d77d04e83684167\n\nbuild:\n  number: 1\n\noutputs:\n  - name: pandera-base\n    build:\n      noarch: python\n      script:\n        - python -m pip install . --no-deps -vv\n\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n      commands:\n        - pip check\n\n    requirements:\n      host:\n        - python >=3.7\n        - pip\n      run:\n        - python >=3.7\n        - numpy >=1.9.0\n        - pandas >=1.0\n        - typing_extensions\n        - typing_inspect >=0.6.0\n        - wrapt\n        - packaging >=20.0\n        - pyarrow\n        - pydantic\n\n  - name: pandera\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n\n  - name: pandera-strategies\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.strategies\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - hypothesis >=5.41.1\n\n  - name: pandera-hypotheses\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.hypotheses\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - scipy\n\n  - name: pandera-io\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.io\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - pyyaml >=5.1\n        - black\n        - frictionless\n        - click <7.2.0  # frictionless dependency, not a pandera dependency\n\n  - name: pandera-pyspark\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.pyspark_accessor\n        - pandera.typing.pyspark\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - pyspark\n\n  - name: pandera-modin\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin\n\n  - name: pandera-modin-ray\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin-ray\n\n  - name: pandera-modin-dask\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin-dask\n\n  - name: pandera-dask\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.dask_accessor\n        - pandera.typing.dask\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - dask\n        - distributed\n\n  - name: pandera-mypy\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.mypy\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - mypy\n        - pandas-stubs\n\n  - name: pandera-fastapi\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.fastapi\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - fastapi\n\n  - name: pandera-geopandas\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.geopandas\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - geopandas\n        - shapely\n\nabout:\n  home: https://github.com/pandera-dev/pandera\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Light-weight and flexible validation for pandas data structures\n  description: |\n    A dataframe validation library for scientists, engineers, and analysts\n    seeking correctness. Define schemas so you can be confident in the quality\n    of your data.\n  doc_url: https://pandera.readthedocs.io/en/latest/\n  dev_url: https://github.com/pandera-dev/pandera\n\nextra:\n  feedstock-name: pandera\n  recipe-maintainers:\n    - cosmicBboy\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pandera/pandera-0.11.0.tar.gz",
 "version": "0.11.0"
}