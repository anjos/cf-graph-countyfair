{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/203965860.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220973032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228199621.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231779709.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256309867.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/258078061.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266579852.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268099692.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274397226.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mlconjug",
 "hash_type": "sha256",
 "name": "mlconjug",
 "new_version": "3.4.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mlconjug"
  ]
 },
 "pinning_version": "2019.04.25",
 "raw_meta_yaml": "{% set name = \"mlconjug\" %}\n{% set version = \"3.4.0\" %}\n{% set file_ext = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"be03bdc5757f8207f2faffba127be40229b6b980db53c6ab018ed904395b424e\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.{{ file_ext }}'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  noarch: python\n  number: 0\n  entry_points:\n    - mlconjug=mlconjug.cli:main\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - pip\n    - setuptools\n    - pytest-runner\n    - python\n    - setuptools\n  run:\n    - python\n    - cython\n    - setuptools\n    - click >=6.0\n    - numpy\n    - scipy\n    - scikit-learn\n\ntest:\n  imports:\n    - mlconjug\n\nabout:\n  home: https://github.com/SekouD/mlconjug\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: \"[![pypi](https://img.shields.io/pypi/v/mlconjug.svg)](https://pypi.python.org/pypi/mlconjug)    [![travis](https://img.shields.io/travis/SekouD/mlconjug.svg)](https://travis-ci.org/SekouD/mlconjug)   [![appveyor](https://ci.appveyor.com/api/projects/status/6iatj101xxfehbo8/branch/master?svg=true)](https://ci.appveyor.com/project/SekouD/mlconjug) [![readthedocs](https://readthedocs.org/projects/mlconjug/badge/?version=latest)](https://mlconjug.readthedocs.io/en/latest/?badge=latest)  [![pyup](https://pyup.io/repos/github/SekouD/mlconjug/shield.svg)](https://pyup.io/repos/github/SekouD/mlconjug/)   [![codecov](https://codecov.io/gh/SekouD/mlconjug/branch/master/graph/badge.svg)](https://codecov.io/gh/SekouD/mlconjug)    [![snyk](https://snyk.io/test/github/SekouD/mlconjug/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/SekouD/mlconjug?targetFile=requirements.txt)\\n\\n\n\nA Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques.\\n\\n\n\n\nAny verb in one of the supported language can be conjugated, as the module contains a Machine Learning model of how the verbs behave.\\n\n\nEven completely new or made-up verbs can be successfully conjugated in this manner.\\n\\n\n\n\n* Free software: MIT license\\n\n* Documentation: https://mlconjug.readthedocs.io.\\n\n\nSupported Languages\\n\n-------------------\\n\\n\n\n- French\\n\n- English\\n\n- Spanish\\n\n- Italian\\n\n- Portuguese\\n\n- Romanian\\n\n\n\\n\\n\"\n  doc_url: https://mlconjug.readthedocs.io/en/latest/\n  dev_url: https://github.com/SekouD/mlconjug\n\nextra:\n  recipe-maintainers:\n    - SekouD\n",
 "smithy_version": "3.3.4",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/mlconjug/mlconjug-3.4.0.tar.gz",
 "version": "3.4.0"
}