{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/667405863.json"
   },
   "data": {
    "bot_rerun": 1637630200.3312328,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/786506924.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ondamonitor",
 "hash_type": "sha256",
 "name": "ondamonitor",
 "new_version": "21.5.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ondamonitor"
  ]
 },
 "pinning_version": "2021.11.22.15.24.15",
 "raw_meta_yaml": "{% set name = \"ondamonitor\" %}\n{% set version = \"21.5.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://github.com/omdevteam/om/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 29a9843507cda03d693c54d1bb2aa69efe167e6b64819d80c2e73b2e57fc225f\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  skip: true  # [not linux64]\n\n\nrequirements:\n  build:\n    - {{ compiler(\"cxx\") }}\n    - make\n  host:\n    - python\n    - numpy\n    - setuptools\n    - pip\n  run:\n    - python\n    - numpy\n    - click\n    - fabio\n    - h5py\n    - msgpack-python\n    - mpi4py\n    - mypy_extensions\n    - pyqt\n    - pyqtgraph\n    - pyyaml\n    - pyzmq\n    - scipy\n    - typing\n    - typing_extensions\n\ntest:\n  imports:\n    - om\n    - om.algorithms\n    - om.data_retrieval_layer\n    - om.graphical_interfaces\n    - om.parallelization_layer\n    - om.processing_layer\n    - om.utils\n  commands:\n    - om_monitor.py --help\n\nabout:\n  home: https://www.ondamonitor.com\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'Real-time monitoring of x-ray imaging experiments'\n  description: |\n    OM (OnDA Monitor) is a framework for the development of programs\n    that can monitor x-ray imaging experiments in real-time. It is\n    also a set of ready-to-use monitoring programs. It is the\n    spiritual successor of the OnDA Project and it is maintained\n    mostly by the same team of developers. OM offers a set of stable\n    and efficient real-time monitoring programs for the most common\n    types of x-ray imaging experiments. These can be used immediately\n    without modifications or can be easily adapted to meet the users\u2019\n    requirements. In addition, the project provides a set of modules\n    that can be used to easily develop other monitoring programs,\n    tailored to the characteristics of specific experiments.\n  doc_url: https://www.ondamonitor.com\n  dev_url: https://github.com/omdevteam/om\n\nextra:\n  recipe-maintainers:\n    - valmar\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "https://github.com/omdevteam/om/archive/refs/tags/v21.5.0.tar.gz",
 "version": "21.5.0"
}