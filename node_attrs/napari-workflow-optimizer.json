{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "napari-workflow-optimizer",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/haesleinhuepf/napari-workflow-optimizer",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "Optimize image processing workflows in napari for segmentation quality"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/napari",
    "haesleinhuepf"
   ]
  },
  "package": {
   "name": "napari-workflow-optimizer",
   "version": "0.1.3"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "matplotlib-base",
    "napari-plugin-engine >=0.1.4",
    "napari-time-slicer",
    "napari-workflows",
    "numpy",
    "pyclesperanto-prototype",
    "python >=3.7",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d23705dec28a4758472f95c1a41710d93e26eaa57a5582d8ab8ce19d79f73827",
   "url": "https://pypi.io/packages/source/n/napari-workflow-optimizer/napari-workflow-optimizer-0.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip list"
   ],
   "imports": [
    "napari_workflow_optimizer"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "napari-plugin-engine",
    "napari-time-slicer",
    "napari-workflows",
    "numpy",
    "pyclesperanto-prototype",
    "python",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/haesleinhuepf/napari-workflow-optimizer",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "Optimize image processing workflows in napari for segmentation quality"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/napari",
    "haesleinhuepf"
   ]
  },
  "package": {
   "name": "napari-workflow-optimizer",
   "version": "0.1.3"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "matplotlib-base",
    "napari-plugin-engine >=0.1.4",
    "napari-time-slicer",
    "napari-workflows",
    "numpy",
    "pyclesperanto-prototype",
    "python >=3.7",
    "scikit-learn",
    "scipy"
   ]
  },
  "source": {
   "sha256": "d23705dec28a4758472f95c1a41710d93e26eaa57a5582d8ab8ce19d79f73827",
   "url": "https://pypi.io/packages/source/n/napari-workflow-optimizer/napari-workflow-optimizer-0.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip list"
   ],
   "imports": [
    "napari_workflow_optimizer"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "napari-workflow-optimizer",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "napari-workflow-optimizer"
  ]
 },
 "raw_meta_yaml": "{% set name = \"napari-workflow-optimizer\" %}\n{% set version = \"0.1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/napari-workflow-optimizer-{{ version }}.tar.gz\n  sha256: d23705dec28a4758472f95c1a41710d93e26eaa57a5582d8ab8ce19d79f73827\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - matplotlib-base\n    - napari-plugin-engine >=0.1.4\n    - napari-time-slicer\n    - napari-workflows\n    - numpy\n    - pyclesperanto-prototype\n    - python >=3.7\n    - scikit-learn\n    - scipy\n\ntest:\n  imports:\n    - napari_workflow_optimizer\n  commands:\n    - pip list\n    # - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/haesleinhuepf/napari-workflow-optimizer\n  summary: Optimize image processing workflows in napari for segmentation quality\n  license: BSD-3-Clause\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/napari\n    - haesleinhuepf\n",
 "req": {
  "__set__": true,
  "elements": [
   "matplotlib-base",
   "napari-plugin-engine",
   "napari-time-slicer",
   "napari-workflows",
   "numpy",
   "pip",
   "pyclesperanto-prototype",
   "python",
   "scikit-learn",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "napari-plugin-engine",
    "napari-time-slicer",
    "napari-workflows",
    "numpy",
    "pyclesperanto-prototype",
    "python",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "napari-plugin-engine >=0.1.4",
    "napari-time-slicer",
    "napari-workflows",
    "numpy",
    "pyclesperanto-prototype",
    "python >=3.7",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/n/napari-workflow-optimizer/napari-workflow-optimizer-0.1.3.tar.gz",
 "version": "0.1.3"
}