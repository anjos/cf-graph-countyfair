{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/749763572.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812434032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878433444.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "returns",
 "hash_type": "sha256",
 "name": "returns",
 "new_version": "0.19.0",
 "new_version_attempts": {
  "0.17.0": 1,
  "0.18.0": 1,
  "0.19.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "returns"
  ]
 },
 "pinning_version": "2022.03.13.06.57.35",
 "raw_meta_yaml": "{% set name = \"returns\" %}\n{% set version = \"0.19.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/returns-{{ version }}.tar.gz\n  sha256: 4544bb67849c1ef1bbf7823759d433a773959e5b77a8fd06d01fef6d060f2ac5\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - poetry\n    - python >=3.6\n  run:\n    - python >=3.6\n    - typing_extensions >=4.0\n\ntest:\n  imports:\n    - returns\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/dry-python/returns\n  summary: Make your functions return something meaningful, typed, and safe!\n  license: BSD-2-Clause\n  license_file: LICENSE\n  doc_url: https://returns.readthedocs.io\n  description: |\n    Brings functional programming to Python land by providing a bunch of\n     primitives to write declarative business logic. Also enforces better\n     architecture with fully typed with annotations and checked with mypy.\n     This package is PEP561 compatible and adds emulated Higher Kinded Types\n     support. It also provides type-safe interfaces to create your own data-types\n     with enforced laws, and has a bunch of helpers for better composition. \n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/r/returns/returns-0.19.0.tar.gz",
 "version": "0.19.0"
}