{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/412860831.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/608432052.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1_2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/610116299.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1_3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/610596311.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1_4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650717402.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/884642472.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1_5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-dparser",
 "hash_type": "sha256",
 "name": "r-dparser",
 "new_version": "1.3.1_5",
 "new_version_attempts": {
  "1.3.1_2": 1,
  "1.3.1_3": 1,
  "1.3.1_4": 1,
  "1.3.1_5": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-dparser"
  ]
 },
 "pinning_version": "2022.03.21.04.26.58",
 "raw_meta_yaml": "{% set version = \"1.3.1-5\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-dparser\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/dparser_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/dparser/dparser_{{ version }}.tar.gz\n  sha256: 4c068c140bf10f51301aa1169e424845f140aec14cf7a7b2972159589fac6275\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-digest\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-digest\n\ntest:\n  commands:\n    - $R -e \"library('dparser')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('dparser')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=dparser\n  license: BSD-3-Clause\n  summary: \"A Scannerless GLR parser/parser generator.  Note that GLR standing for \\\"generalized LR\\\", where L stands for \\\"left-to-right\\\" and R stands for \\\"rightmost (derivation)\\\".  For more information see <https://en.wikipedia.org/wiki/GLR_parser>. This parser is based on the Tomita (1987) algorithm. (Paper can be\\\n    \\ found at <http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d3/data/pdf/anthology-PDF/J/J87/J87-1004.pdf>). The original 'dparser' package documentation can be found at <http://dparser.sourceforge.net/>.  This allows you to add mini-languages to R (like RxODE's ODE mini-language Wang, Hallow, and James 2015 <DOI:10.1002/psp4.12052>)\\\n    \\ or to parse other languages like 'NONMEM' to automatically translate them to R code.   To use this in your code, add a LinkingTo dparser in your DESCRIPTION file and instead of using #include <dparse.h> use #include <dparser.h>.  This also provides a R-based port of the make_dparser <http://dparser.sourceforge.net/d/make_dparser.cat>\\\n    \\ command called mkdparser().  Additionally you can parse an arbitrary grammar within R using the dparse() function, which works on most OSes and is mainly for grammar testing.  The fastest parsing, of course, occurs at the C level, and is suggested.\"\n  license_family: BSD\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/BSD_3_clause\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: dparser\n# Title: Port of 'Dparser' Package\n# Version: 0.1.8\n# Authors@R: c(person(\"Matthew\", \"Fidler\", email = \"matthew.fidler@gmail.com\", role = c(\"aut\", \"cre\")), person(\"John\", \"Plevyak\", role = c(\"aut\", \"cph\"), email = \"jplevyak@gmail.com\"))\n# Imports: digest, methods\n# Suggests: rex, covr, testthat, knitr, devtools,\n# Description: A Scannerless GLR parser/parser generator.  Note that GLR standing for \"generalized LR\", where L stands for \"left-to-right\" and R stands for \"rightmost (derivation)\".  For more information see <https://en.wikipedia.org/wiki/GLR_parser>. This parser is based on the Tomita (1987) algorithm. (Paper can be found at <http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d3/data/pdf/anthology-PDF/J/J87/J87-1004.pdf>). The original 'dparser' package documentation can be found at <http://dparser.sourceforge.net/>.  This allows you to add mini-languages to R (like RxODE's ODE mini-language Wang, Hallow, and James 2015 <DOI:10.1002/psp4.12052>) or to parse other languages like 'NONMEM' to automatically translate them to R code.   To use this in your code, add a LinkingTo dparser in your DESCRIPTION file and instead of using #include <dparse.h> use #include <dparser.h>.  This also provides a R-based port of the make_dparser <http://dparser.sourceforge.net/d/make_dparser.cat> command called mkdparser().  Additionally you can parse an arbitrary grammar within R using the dparse() function, which works on most OSes and is mainly for grammar testing.  The fastest parsing, of course, occurs at the C level, and is suggested.\n# Depends: R (>= 3.2.3)\n# License: BSD_3_clause + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 6.0.1\n# NeedsCompilation: yes\n# Packaged: 2017-11-13 16:20:46 UTC; FIDLEMA3\n# Author: Matthew Fidler [aut, cre], John Plevyak [aut, cph]\n# Maintainer: Matthew Fidler <matthew.fidler@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2017-11-13 18:11:18 UTC\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_1.3.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_1.3.1-5.tar.gz"
 ],
 "version": "1.3.1_5"
}