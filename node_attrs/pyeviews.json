{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/336103312.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404846547.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501946786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553163367.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/7c9ba5d7-9a89-494a-8328-64a9b4e4bad8.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/653011725.json"
   },
   "data": {
    "bot_rerun": 1622072086.8816924,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/724116365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error about/license_family 'GPL-3.0-only' not allowed. Allowed families are\nAGPL, APACHE, BSD, CC, GPL, GPL2, GPL3, LGPL, MIT, MOZILLA, NONE,\nOTHER, PROPRIETARY, PSF, and PUBLIC-DOMAIN.\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 231, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 144, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 210, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 926, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1001, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 362, in parse\n    ensure_valid_license_family(res)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/conda_build/license_family.py\", line 111, in ensure_valid_license_family\n    raise RuntimeError(exceptions.indent(\nRuntimeError: about/license_family 'GPL-3.0-only' not allowed. Allowed families are\nAGPL, APACHE, BSD, CC, GPL, GPL2, GPL3, LGPL, MIT, MOZILLA, NONE,\nOTHER, PROPRIETARY, PSF, and PUBLIC-DOMAIN.\n",
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pyeviews",
 "hash_type": "sha256",
 "name": "pyeviews",
 "new_version": "1.0.4",
 "new_version_attempts": {
  "1.0.2": 1,
  "1.0.3": 1,
  "1.0.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyeviews"
  ]
 },
 "pinning_version": "2021.08.31.17.13.10",
 "pre_pr_migrator_status": {
  "pypy37-windows": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1189255923\">bot CI job</a>): master: ['linux_64_numpy1.18python3.6.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'linux_64_numpy1.18python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'linux_64_numpy1.18python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.18python3.6.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.18python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.18python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pyeviews\" %}\n{% set version = \"1.0.4\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: 8a1ee00c1ba7da7b267b5a0607d877d7ba3ecf02a4616059ac0b836e301c750a\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - numpy\n    - pandas\n    - pip\n    - python\n    - setuptools\n  run:\n    - numpy\n    - pandas\n    - python\n    - comtypes\n    - setuptools\n\ntest:\n  imports:\n    - pyeviews\n\napp:\n  summary: \"Data import/export and EViews function calls from Python\"\n  \nabout:\n  home: \"https://github.com/bexer/pyeviews\"\n  license: GNU General Public License v3.0 only\n  license_family: GPL-3.0-only\n  license_file: LICENSE.txt\n  summary: \"Data import/export and EViews function calls from Python\"\n  doc_url: \n  dev_url: \n  description: |\n    The purpose of the pyeviews package is to make it easier for EViews and Python \n    to talk to each other, so Python programmers can use the econometric engine of \n    EViews directly from Python.\n  dev_url: https://github.com/bexer/pyeviews\n \nextra:\n  recipe-maintainers:\n    - bexer\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pyeviews/pyeviews-1.0.3.tar.gz",
 "version": "1.0.3"
}