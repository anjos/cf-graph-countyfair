{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/336103312.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404846547.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501946786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553163367.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/7c9ba5d7-9a89-494a-8328-64a9b4e4bad8.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/653011725.json"
   },
   "data": {
    "bot_rerun": 1622072086.8816924,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/724116365.json"
   },
   "data": {
    "bot_rerun": 1630523549.9109159,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775027642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pyeviews",
 "hash_type": "sha256",
 "meta_yaml": {
  "about": {
   "description": "The purpose of the pyeviews package is to make it easier for EViews and Python\nto talk to each other, so Python programmers can use the econometric engine of\nEViews directly from Python.\n",
   "dev_url": "https://github.com/bexer/pyeviews",
   "doc_url": null,
   "home": "https://github.com/bexer/pyeviews",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Data import/export and EViews function calls from Python"
  },
  "app": {
   "summary": "Data import/export and EViews function calls from Python"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bexer",
    "bexer",
    "bexer",
    "bexer"
   ]
  },
  "package": {
   "name": "pyeviews",
   "version": "1.0.4"
  },
  "requirements": {
   "host": [
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools",
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools",
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools",
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools",
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools",
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools",
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "2e16385e6faa82ccac05de8851f0defbd79e1b4ba30f7051c197e3b5cb0df719",
   "url": "https://pypi.io/packages/source/p/pyeviews/pyeviews-1.0.4.tar.gz"
  },
  "test": {
   "imports": [
    "pyeviews",
    "pyeviews",
    "pyeviews",
    "pyeviews"
   ]
  }
 },
 "name": "pyeviews",
 "new_version": "1.0.5",
 "new_version_attempts": {
  "1.0.2": 1,
  "1.0.3": 1,
  "1.0.4": 1,
  "1.0.5": 3
 },
 "new_version_errors": {
  "1.0.5": "We found a problem parsing the recipe for version '1.0.5': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 39, column 3:\n      home: https://github.com/bexer/p ... \n      ^ (line: 39), 'found duplicate key \"dev_url\" with value \"https://github.com/bexer/pyeviews\" (original value: \"None\")',   in \"<unicode string>\", line 50, column 3:\n      dev_url: https://github.com/bexe ... \n      ^ (line: 50), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyeviews"
  ]
 },
 "pinning_version": "2021.11.07.12.06.04",
 "pre_pr_migrator_attempts": {
  "pypy37-windows": 1
 },
 "pre_pr_migrator_status": {
  "pypy37-windows": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1189255923\">bot CI job</a>): master: ['linux_64_numpy1.18python3.6.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'linux_64_numpy1.18python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'linux_64_numpy1.18python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.18python3.6.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.18python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.18python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n', 'osx_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested pywin32-ctypes\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pyeviews\" %}\n{% set version = \"1.0.4\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: 2e16385e6faa82ccac05de8851f0defbd79e1b4ba30f7051c197e3b5cb0df719\n\nbuild:\n  number: 2\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  skip: True  # [not win]\n\nrequirements:\n  host:\n    - numpy\n    - pandas\n    - pip\n    - python\n    - setuptools\n  run:\n    - numpy\n    - pandas\n    - python\n    - comtypes\n    - setuptools\n\ntest:\n  imports:\n    - pyeviews\n\napp:\n  summary: 'Data import/export and EViews function calls from Python'\n  \nabout:\n  home: https://github.com/bexer/pyeviews\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: 'Data import/export and EViews function calls from Python'\n  doc_url: \n  dev_url: \n  description: |\n    The purpose of the pyeviews package is to make it easier for EViews and Python \n    to talk to each other, so Python programmers can use the econometric engine of \n    EViews directly from Python.\n  dev_url: https://github.com/bexer/pyeviews\n \nextra:\n  recipe-maintainers:\n    - bexer\n",
 "req": {
  "__set__": true,
  "elements": [
   "comtypes",
   "numpy",
   "pandas",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "comtypes",
    "numpy",
    "pandas",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "comtypes",
    "numpy",
    "pandas",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pyeviews/pyeviews-1.0.4.tar.gz",
 "version": "1.0.4",
 "win_64_meta_yaml": {
  "about": {
   "description": "The purpose of the pyeviews package is to make it easier for EViews and Python\nto talk to each other, so Python programmers can use the econometric engine of\nEViews directly from Python.\n",
   "dev_url": "https://github.com/bexer/pyeviews",
   "doc_url": null,
   "home": "https://github.com/bexer/pyeviews",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Data import/export and EViews function calls from Python"
  },
  "app": {
   "summary": "Data import/export and EViews function calls from Python"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bexer",
    "bexer",
    "bexer",
    "bexer"
   ]
  },
  "package": {
   "name": "pyeviews",
   "version": "1.0.4"
  },
  "requirements": {
   "host": [
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools",
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools",
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools",
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools",
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools",
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools",
    "numpy",
    "pandas",
    "python",
    "comtypes",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "2e16385e6faa82ccac05de8851f0defbd79e1b4ba30f7051c197e3b5cb0df719",
   "url": "https://pypi.io/packages/source/p/pyeviews/pyeviews-1.0.4.tar.gz"
  },
  "test": {
   "imports": [
    "pyeviews",
    "pyeviews",
    "pyeviews",
    "pyeviews"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "comtypes",
    "numpy",
    "pandas",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}