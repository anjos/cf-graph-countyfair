{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203952059.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209183259.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375219376.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "skijumpdesign",
 "hash_type": "sha256",
 "name": "skijumpdesign",
 "new_version": "1.4.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "skijumpdesign"
  ]
 },
 "pinning_version": "2020.02.12",
 "raw_meta_yaml": "{% set name = \"skijumpdesign\" %}\n{% set version = \"1.4.0\" %}\n{% set sha256 = \"25432ca21dbe45580e78c5f22cf5f37a04c52d1d5aaaee5a901a05cfb8a8180f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  noarch: python\n  entry_points:\n    - skijumpdesign = skijumpdesign.app:app.run_server\n\nrequirements:\n  build:\n    - pip\n    - python >=3.6\n    - setuptools >=8.0\n  run:\n    - cython >=0.28.5\n    - dash >=0.22.0\n    - dash-core-components\n    - dash-html-components\n    - dash-table\n    - flask >=1.0.2\n    - matplotlib-base >=2.2.3\n    - numpy >=1.13\n    - pandas >=0.24.1\n    - plotly >=3.1.1\n    - python >=3.6\n    - scipy >=1.0\n    - setuptools >=8.0\n    - sympy >=1.2\n    - xlrd >=1.2.0\n\ntest:\n  imports:\n    - skijumpdesign\n    - skijumpdesign.functions\n    - skijumpdesign.skiers\n    - skijumpdesign.surfaces\n    - skijumpdesign.trajectories\n    - skijumpdesign.utils\n  commands:\n    - skijumpdesign -h\n\nabout:\n  home: https://skijumpdesign.info\n  dev_url: https://gitlab.com/moorepants/skijumpdesign\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Ski Jump Design and Analysis Tool For Specified Equivalent Fall Height'\n  description: |\n    A ski jump design and analysis tool for equivalent fall height based on the\n    work presented in Levy, Dean, Mont Hubbard, James A. McNeil, and Andrew\n    Swedberg.  \"A Design Rationale for Safer Terrain Park Jumps That Limit\n    Equivalent Fall Height.\" Sports Engineering 18, no. 4 (December 2015):\n    227\u201339.  https://doi.org/10.1007/s12283-015-0182-6. Includes a library for\n    2D skiing simulations and a graphical web application for designing and\n    analyzing ski jumps. It is written in Python backed by NumPy, SciPy, SymPy,\n    Cython, matplotlib, Pandas, Plotly, and Dash.\nextra:\n  recipe-maintainers:\n    - moorepants\n",
 "smithy_version": "3.6.8",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/skijumpdesign/skijumpdesign-1.4.0.tar.gz",
 "version": "1.4.0"
}