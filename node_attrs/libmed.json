{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/198445589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221009818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/239961372.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285662642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "hdf5-1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308395170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335864322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/391324370.json"
   },
   "data": {
    "bot_rerun": 1597087685.628611,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404434438.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/457826028.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465773234.json"
   },
   "data": {
    "bot_rerun": 1603216843.7533078,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502058966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505391288.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507209578.json"
   },
   "data": {
    "bot_rerun": 1624998121.6497982,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552236695.json"
   },
   "data": {
    "bot_rerun": 1624998121.6499803,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677787711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680344751.json"
   },
   "data": {
    "bot_rerun": 1651040623.2987673,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/61527ef9-ad88-4246-8a3e-db9ebfb1c43f.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770863815.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920584587.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/927515006.json"
   },
   "data": {
    "bot_rerun": 1651932484.8264294,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/930292905.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1012152639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libmed",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "http://www.salome-platform.org/",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig"
   ],
   "host": [
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python"
   ],
   "run": [
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "sha256": "dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0",
   "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "http://www.salome-platform.org/",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig",
    "autoconf",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig"
   ],
   "host": [
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python"
   ],
   "run": [
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.5",
    "python",
    "hdf5 1.10.6",
    "python",
    "hdf5 1.10.3",
    "python",
    "hdf5 1.10.3",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "sha256": "dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0",
   "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "name": "libmed",
 "new_version": "4.1.1",
 "new_version_attempts": {
  "4.1.0": 1,
  "4.1.1": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libmed"
  ]
 },
 "pinning_version": "2022.07.29.13.58.26",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"libmed\" %}\n{% set version = \"4.1.1\" %}\n\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}_{{ version }}.tar.gz\n  url: https://files.salome-platform.org/Salome/other/med-{{ version }}.tar.gz\n  sha256: dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0\n\nbuild:\n  number: 0\n  skip: true  # [py2k or osx or win]\n\nrequirements:\n  build:\n    - ninja    # [win]\n    - cmake    # [win]\n    - autoconf    # [linux]\n    - make    # [linux]\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - swig\n  host:\n    - hdf5 {{ hdf5 }}\n    - python {{ python }}\n  run:\n    - hdf5 {{ hdf5 }}\n    - python {{ python }}\n\ntest:\n  imports:\n    - med\n\nabout:\n  home: https://www.salome-platform.org/user-section/about/med\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: 'MED : interoperable format for data interchange between mesh based solvers.'\n  description: |\n    The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n  doc_url: http://www.salome-platform.org/\n  dev_url: http://www.salome-platform.org/\n\nextra:\n  recipe-maintainers:\n    - looooo\n    - ldallolio-irt\n",
 "req": {
  "__set__": true,
  "elements": [
   "autoconf",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "hdf5",
   "make",
   "python",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "hdf5 1.10.3",
    "hdf5 1.10.5",
    "hdf5 1.10.6",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5 1.10.3",
    "hdf5 1.10.5",
    "hdf5 1.10.6",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz",
 "version": "4.1.1"
}