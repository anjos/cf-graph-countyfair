{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/493648972.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/732897940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "lantz",
 "hash_type": "sha256",
 "name": "lantz",
 "new_version": "0.6.2",
 "new_version_attempts": {
  "0.6": 1,
  "0.6.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lantz"
  ]
 },
 "pinning_version": "2021.09.13.07.45.03",
 "raw_meta_yaml": "{% set name = \"lantz\" %}\n{% set version = \"0.6.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # lantz\n  - url: https://github.com/lantzproject/{{ name }}-core/archive/v{{ version }}.tar.gz\n    sha256: 4d667e17b8db9c4ab6703a53e162b64305d914ab3bddf1b2e2afad833a2484b2\n    folder: .\n  # lantz-sims\n  - url: https://github.com/lantzproject/{{ name }}-sims/archive/v0.6.tar.gz\n    sha256: 250a0bd4f6ed2481fcc180dd624646ff4860f2a40aa487bad7ad4255d8589a66\n    folder: sims\n  # lantz-drivers\n  - url: https://github.com/lantzproject/{{ name }}-drivers/archive/v{{ version }}.tar.gz\n    sha256: 82c1cc268246721a788f317013b3c90733df142a083525424a485ce73ca40798\n    folder: drivers\n  # lantz-qt\n  - url: https://github.com/lantzproject/{{ name }}-qt/archive/v0.6.tar.gz\n    sha256: 97f2a61d888b4682511b757220575ded3ba61cb2d8e641d6276ba8217c3fa7fa\n    folder: qt\n  # lantz-ino\n  - url: https://github.com/lantzproject/{{ name }}-ino/archive/v0.6.tar.gz\n    sha256: 228e7fb14d55926c9687e68ef2bb8dd75436599fdc40ee1eb5b333bf5d1254ce\n    folder: ino\n\nbuild:\n  noarch: python\n  number: 0\n  entry_points:\n    - lantz = lantz.__main__:main\n    - lantz-config = lantz.core.__main__:config\n    - lantz-qtdemo = lantz.qt.__main__:main\n    - lantz-sims = lantz.sims.__main__:main\n    - lantz-ino = lantz.ino.__main__:main\n  script:\n    - {{ PYTHON }} -m pip install . sims/ drivers/ -vv\n    - {{ PYTHON }} -m pip install qt/ -vv\n    - {{ PYTHON }} -m pip install ino/ -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - colorama >=0.4.3\n    - pimpmyclass\n    - pint >=0.15\n    - pyqt >=5.12.3\n    - pyserial\n    - pysignal\n    - pyusb\n    - pyvisa >=1.11.3\n    - pyvisa-py\n    - pyyaml >=5.3.1\n    - qtpy\n    - serialize\n    - sip\n    - stringparser\n\ntest:\n  imports:\n    - lantz\n    - lantz.core\n    - lantz.qt\n    - lantz.qt.blocks\n    - lantz.qt.utils\n    - lantz.qt.widgets\n    - lantz.sims\n    - lantz.drivers\n    - lantz.drivers.aa_opto_electronic\n    - lantz.ino\n    - lantz.ino.templates\n  commands:\n    - lantz --help\n    - lantz-config --help\n    - lantz-qtdemo --help\n    - lantz-sims --help\n    - lantz-ino --help\n\nabout:\n  home: https://github.com/lantzproject/lantz\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Simple yet powerful instrumentation in Python\n\n  description: |\n    lantz is an automation and instrumentation framework with a clean,\n    well-designed and consistent interface. It provides a core of commonly\n    used functionalities for building applications that communicate with\n    scientific instruments allowing rapid application prototyping,\n    development and testing.\n  doc_url: https://lantz.readthedocs.io/\n  dev_url: https://github.com/lantzproject/lantz\n\nextra:\n  recipe-maintainers:\n    - mtsolmn\n    - jacobfeder\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://github.com/lantzproject/lantz-core/archive/v0.6.2.tar.gz",
 "version": "0.6.2"
}