{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/519679612.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.30.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "isa-l",
 "hash_type": "sha256",
 "name": "isa-l",
 "new_version": "2.30.0",
 "new_version_attempts": {
  "2.30.0": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "isa-l"
  ]
 },
 "pinning_version": "2020.11.11.15.57.25",
 "raw_meta_yaml": "{% set version = \"2.30.0\" %}\n\npackage:\n  name: isa-l\n  version: {{ version }}\n\nsource:\n  url: https://github.com/intel/isa-l/archive/v{{ version }}.tar.gz\n  sha256: bcf592c04fdfa19e723d2adf53d3e0f4efd5b956bb618fed54a1108d76a6eb56\n  patches:\n        # Conda adds some CFLAGS to the environment which are not properly \n        # filtered by the original nasm-filter.sh\n        # This patch also makes sure the nasm executable from the BUILD_PREFIX is used.\n    - nasm-filter.patch\n\nbuild:\n  number: 4\n\n\nrequirements:\n  build:\n    # igzip needs to be compiled with 7.5.0 to prevent an issue:\n    # https://github.com/conda-forge/isa-l-feedstock/issues/7\n    - {{ compiler('c') }}  # [not linux]\n    - gcc_linux-64 ==7.5.0  # [linux]\n    - nasm  # [not osx]\n    # Osx needs some flags that are available from 2.14 on\n    - nasm >=2.14  # [osx]\n    - autoconf  # [unix]\n    - automake  # [unix]\n    - libtool   # [unix]\n    - make      # [unix]\n\ntest:\n  files:\n    - LICENSE\n  commands:\n    - igzip --help  # [unix]\n        # Test compression and decompression. \n    - igzip -k LICENSE  # [unix]\n        # Original file should be larger than compressed file.\n    - bash -c '[ $(stat -c %s LICENSE) -gt $(stat -c %s LICENSE.gz) ]'  # [unix]\n    - bash -c '[ \"$(igzip -cd LICENSE.gz)\" == \"$(cat LICENSE)\" ]'  # [unix]\n\nabout:\n  home: https://software.intel.com/content/www/us/en/develop/tools/isa-l.html\n  license: BSD-3-Clause\n  summary: provides tools to minimize disk space use and maximize storage throughput, security, and resilience.\n  license_family: BSD\n  license_file: LICENSE\n\n  description: |\n    ISA-L is a collection of optimized low-level functions targeting storage applications. ISA-L includes:\n    Erasure codes - Fast block Reed-Solomon type erasure codes for any encode/decode matrix in GF(2^8).\n    CRC - Fast implementations of cyclic redundancy check. Six different polynomials supported.\n        iscsi32, ieee32, t10dif, ecma64, iso64, jones64.\n    Raid - calculate and operate on XOR and P+Q parity found in common RAID implementations.\n    Compression - Fast deflate-compatible data compression.\n    De-compression - Fast inflate-compatible data compression.\n    This package includes the igzip program on Linux and MacOS.\n\n  doc_url: https://github.com/intel/isa-l/wiki/\n  dev_url: https://github.com/intel/isa-l\n\nextra:\n  recipe-maintainers:\n    - rhpvorderman\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://github.com/intel/isa-l/archive/v2.30.0.tar.gz",
 "version": "2.30.0"
}