{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/318066662.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/319403527.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/324675896.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336094013.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340648368.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/350324501.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/359194395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/364070174.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/371552852.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl26"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/377688287.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378510446.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/379216598.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392886733.json"
   },
   "data": {
    "bot_rerun": 1597087704.5828934,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/403616552.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405166666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/417426538.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491922349.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491996432.json"
   },
   "data": {
    "bot_rerun": 1603216855.6009433,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501863106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547623290.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/557020927.json"
   },
   "data": {
    "bot_rerun": 1611523214.4265018,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560694578.json"
   },
   "data": {
    "bot_rerun": 1614975165.7009966,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/585857776.json"
   },
   "data": {
    "bot_rerun": 1615051109.8157766,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/586086951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/586103737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pyinterp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Tools for interpolating geo-referenced data used in the field of\ngeosciences. There are other libraries that cover this problem, but written\nentirely in Python, the performance of these projects was not quite\nsufficient for our needs. That is why this project was created.\n",
   "dev_url": "https://github.com/CNES/pangeo-pyinterp",
   "doc_url": "https://pangeo-pyinterp.readthedocs.io/",
   "home": "https://github.com/CNES/pangeo-pyinterp",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python library for optimized geo-referenced interpolation"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv --global-option=build --global-option=\"--mkl=yes\" --global-option=\"--conda-forge\"",
   "string": "mkl_py37h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol"
   ]
  },
  "package": {
   "name": "pyinterp",
   "version": "0.6.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ],
   "run": [
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray"
   ]
  },
  "source": {
   "sha256": "597978940e8ea702d6c5cc62f645e751ae1689ad92ec5fed59952835d42a485d",
   "url": "https://github.com/CNES/pangeo-pyinterp/releases/download/0.6.1/pyinterp-0.6.1.tar.gz"
  },
  "test": {
   "imports": [
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dask",
    "eigen",
    "gsl",
    "mkl",
    "mkl-devel",
    "numpy",
    "openblas",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "libblas",
    "llvm-openmp",
    "numpy",
    "python",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Tools for interpolating geo-referenced data used in the field of\ngeosciences. There are other libraries that cover this problem, but written\nentirely in Python, the performance of these projects was not quite\nsufficient for our needs. That is why this project was created.\n",
   "dev_url": "https://github.com/CNES/pangeo-pyinterp",
   "doc_url": "https://pangeo-pyinterp.readthedocs.io/",
   "home": "https://github.com/CNES/pangeo-pyinterp",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python library for optimized geo-referenced interpolation"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vv --global-option=build --global-option=\"--mkl=yes\" --global-option=\"--conda-forge\"",
   "string": "mkl_py38h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol"
   ]
  },
  "package": {
   "name": "pyinterp",
   "version": "0.6.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake"
   ],
   "host": [
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ],
   "run": [
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray"
   ]
  },
  "source": {
   "sha256": "597978940e8ea702d6c5cc62f645e751ae1689ad92ec5fed59952835d42a485d",
   "url": "https://github.com/CNES/pangeo-pyinterp/releases/download/0.6.1/pyinterp-0.6.1.tar.gz"
  },
  "test": {
   "imports": [
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp"
   ]
  }
 },
 "name": "pyinterp",
 "new_version": "0.6.1",
 "new_version_attempts": {
  "0.3.0": 1,
  "0.3.1": 1,
  "0.3.2": 1,
  "0.5.0": 1,
  "0.6.1": 3
 },
 "new_version_errors": {
  "0.6.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.6.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/CNES/pangeo-{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "Tools for interpolating geo-referenced data used in the field of\ngeosciences. There are other libraries that cover this problem, but written\nentirely in Python, the performance of these projects was not quite\nsufficient for our needs. That is why this project was created.\n",
   "dev_url": "https://github.com/CNES/pangeo-pyinterp",
   "doc_url": "https://pangeo-pyinterp.readthedocs.io/",
   "home": "https://github.com/CNES/pangeo-pyinterp",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python library for optimized geo-referenced interpolation"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv --global-option=build --global-option=\"--mkl=yes\" --global-option=\"--conda-forge\"",
   "string": "mkl_py37h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol"
   ]
  },
  "package": {
   "name": "pyinterp",
   "version": "0.6.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ],
   "run": [
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *mkl",
    "llvm-openmp",
    "xarray"
   ]
  },
  "source": {
   "sha256": "597978940e8ea702d6c5cc62f645e751ae1689ad92ec5fed59952835d42a485d",
   "url": "https://github.com/CNES/pangeo-pyinterp/releases/download/0.6.1/pyinterp-0.6.1.tar.gz"
  },
  "test": {
   "imports": [
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dask",
    "eigen",
    "gsl",
    "mkl",
    "mkl-devel",
    "numpy",
    "openblas",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "libblas",
    "llvm-openmp",
    "numpy",
    "python",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyinterp"
  ]
 },
 "pinning_version": "2021.03.06.03.53.09",
 "pre_pr_migrator_status": {
  "pypy37": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/631345767\">bot CI job</a>): master: ['linux_64_blasopenblasnumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'linux_64_blasopenblasnumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'linux_64_blasopenblasnumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'linux_64_blasopenblasnumpy1.19python3.7.____73_pypy: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'linux_64_blasopenblasnumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'osx_64_blasopenblasnumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'osx_64_blasopenblasnumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'osx_64_blasopenblasnumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'osx_64_blasopenblasnumpy1.19python3.7.____73_pypy: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'osx_64_blasopenblasnumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.5.* needed by libblas-3.8.0-4_openblas\\n', 'win_64_blasopenblasnumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.6 h828a276_2 needed by libblas-3.8.0-10_openblas\\n', 'win_64_blasopenblasnumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.6 h828a276_2 needed by libblas-3.8.0-10_openblas\\n', 'win_64_blasopenblasnumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.6 h828a276_2 needed by libblas-3.8.0-10_openblas\\n', 'win_64_blasopenblasnumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides openblas 0.3.6 h828a276_2 needed by libblas-3.8.0-10_openblas\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pyinterp\" %}\n{% set version = \"0.6.1\" %}\n{% set build = 0 %}\n\n# recipe-lint fails if blas is undefined\n{% set blas = blas or \"openblas\" %}\n{% if blas == \"openblas\" %}\n# prioritize openblas via build number\n{% set build = build + 100 %}\n{% endif %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CNES/pangeo-{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 597978940e8ea702d6c5cc62f645e751ae1689ad92ec5fed59952835d42a485d\n\nbuild:\n  {% if blas == \"openblas\" %}\n  {% set mkl_option = \"no\" %}\n  {% else %}\n  {% set mkl_option = \"yes\" %}\n  {% endif %}\n  number: {{ build }}\n  script: {{ PYTHON }} -m pip install . -vv --global-option=build --global-option=\"--mkl={{ mkl_option }}\" --global-option=\"--conda-forge\"\n  skip: true  # [linux32 or win32 or py<36]\n\n  {% if blas == \"openblas\" %}\n  {% set blas_prefix = \"openblas\" %}\n  {% else %}\n  {% set blas_prefix = \"mkl\" %}\n  {% endif %}\n  string: \"{{ blas_prefix }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}  # [linux or osx]\n    - vs2017_win-64          # [win]\n    - cmake\n  host:\n    - dask\n    - eigen\n    - gsl\n    - boost-cpp\n    - mkl {{ mkl }}  # [blas == \"mkl\"]\n    - mkl-devel {{ mkl }}  # [blas == \"mkl\"]\n    - openblas  # [blas == \"openblas\"]\n    - numpy\n    - pip\n    - pytest\n    - python\n    - setuptools\n    - snappy\n    - xarray\n  run:\n    - {{ pin_compatible('numpy') }}\n    - python\n    - dask\n    - libblas * *mkl  # [(linux or osx) and (blas == \"mkl\")]\n    - mkl  # [win and (blas == \"mkl\")]\n    - libblas * *openblas  # [blas == \"openblas\"]\n    - llvm-openmp  # [(blas == \"mkl\")]\n    - xarray\n\ntest:\n  imports:\n    - pyinterp.core\n    - pyinterp\n\nabout:\n  home: https://github.com/CNES/pangeo-pyinterp\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python library for optimized geo-referenced interpolation\n\n  description: |\n    Tools for interpolating geo-referenced data used in the field of\n    geosciences. There are other libraries that cover this problem, but written\n    entirely in Python, the performance of these projects was not quite\n    sufficient for our needs. That is why this project was created.\n  doc_url: https://pangeo-pyinterp.readthedocs.io/\n  dev_url: https://github.com/CNES/pangeo-pyinterp\n\nextra:\n  recipe-maintainers:\n    - fbriol\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost-cpp",
   "cmake",
   "cxx_compiler_stub",
   "dask",
   "eigen",
   "gsl",
   "libblas",
   "llvm-openmp",
   "mkl",
   "mkl-devel",
   "numpy",
   "openblas",
   "pip",
   "pytest",
   "python",
   "setuptools",
   "snappy",
   "vs2017_win-64",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "vs2017_win-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cxx_compiler_stub",
    "dask",
    "eigen",
    "gsl",
    "mkl",
    "mkl-devel",
    "numpy",
    "openblas",
    "openmp",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "vc",
    "xarray"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "dask",
    "libblas",
    "llvm-openmp",
    "mkl",
    "numpy",
    "openmp",
    "python",
    "vc",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "vs2017_win-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dask",
    "eigen",
    "gsl",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "openblas",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "libblas * *mkl",
    "libblas * *openblas",
    "llvm-openmp",
    "mkl",
    "numpy",
    "python",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/CNES/pangeo-pyinterp/releases/download/0.6.1/pyinterp-0.6.1.tar.gz",
 "version": "0.6.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "Tools for interpolating geo-referenced data used in the field of\ngeosciences. There are other libraries that cover this problem, but written\nentirely in Python, the performance of these projects was not quite\nsufficient for our needs. That is why this project was created.\n",
   "dev_url": "https://github.com/CNES/pangeo-pyinterp",
   "doc_url": "https://pangeo-pyinterp.readthedocs.io/",
   "home": "https://github.com/CNES/pangeo-pyinterp",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python library for optimized geo-referenced interpolation"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vv --global-option=build --global-option=\"--mkl=yes\" --global-option=\"--conda-forge\"",
   "string": "mkl_py38h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol",
    "fbriol"
   ]
  },
  "package": {
   "name": "pyinterp",
   "version": "0.6.1"
  },
  "requirements": {
   "build": [
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake",
    "vs2017_win-64",
    "cmake"
   ],
   "host": [
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "openblas",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray",
    "dask",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl 2020",
    "mkl-devel 2020",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ],
   "run": [
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "libblas * *openblas",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray",
    "numpy",
    "python",
    "dask",
    "mkl",
    "llvm-openmp",
    "xarray"
   ]
  },
  "source": {
   "sha256": "597978940e8ea702d6c5cc62f645e751ae1689ad92ec5fed59952835d42a485d",
   "url": "https://github.com/CNES/pangeo-pyinterp/releases/download/0.6.1/pyinterp-0.6.1.tar.gz"
  },
  "test": {
   "imports": [
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp",
    "pyinterp.core",
    "pyinterp"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "vs2017_win-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dask",
    "eigen",
    "gsl",
    "mkl",
    "mkl-devel",
    "numpy",
    "openblas",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "snappy",
    "xarray"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dask",
    "libblas",
    "llvm-openmp",
    "mkl",
    "numpy",
    "python",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}