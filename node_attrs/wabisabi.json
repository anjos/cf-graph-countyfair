{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/276693653.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "wabisabi",
 "hash_type": "sha256",
 "name": "wabisabi",
 "new_version": "0.2.8",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "wabisabi"
  ]
 },
 "pinning_version": "2019.05.06",
 "raw_meta_yaml": "{% set name = \"wabisabi\" %}\n{% set version = \"0.2.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 00b2a44f1b90d64dd31170d527db60b4fc7ab8927fd9fe2a6c6c585916e92b92\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - wabisabi\n\nabout:\n  home: https://github.com/hmaarrfk/wabisabi\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Deprecate your code effortlessly with decorators. Give useful warnings and docstrings for different deprecations.'\n\n  # The remaining entries in this section are optional, but recommended\n  description: |\n    Breaking things is important! Breaking other's things is just mean!\n\n    The goal of deprecations is to warn other library writers that their code\n    is about to break so you can keep making agressive changes to your own.\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "smithy_version": "3.3.4",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/w/wabisabi/wabisabi-0.2.8.tar.gz",
 "version": "0.2.8"
}