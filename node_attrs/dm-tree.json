{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/523439960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552317014.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553888760.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/578253360.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613708421.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682891220.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773690103.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "dm-tree",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "tree is a library for working with nested data structures.\nIn a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.\n",
   "dev_url": "https://github.com/deepmind/tree",
   "doc_url": "https://tree.readthedocs.io/en/stable/",
   "home": "https://github.com/deepmind/tree",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Tree is a library for working with nested data structures."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov"
   ]
  },
  "package": {
   "name": "dm-tree",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel"
   ],
   "host": [
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0"
   ],
   "run": [
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch"
   ],
   "sha256": "a951d2239111dfcc468071bc8ff792c7b1e3192cab5a3c94d33a8b2bda3127fa",
   "url": "https://pypi.io/packages/source/d/dm-tree/dm-tree-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark"
   ],
   "imports": [
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree"
   ],
   "requires": [
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "absl-py",
    "attrs",
    "numpy",
    "wrapt"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "tree is a library for working with nested data structures.\nIn a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.\n",
   "dev_url": "https://github.com/deepmind/tree",
   "doc_url": "https://tree.readthedocs.io/en/stable/",
   "home": "https://github.com/deepmind/tree",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Tree is a library for working with nested data structures."
  },
  "build": {
   "number": "2",
   "script": "\"%RECIPE_DIR%\\windows.bat\" \"/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe\""
  },
  "extra": {
   "recipe-maintainers": [
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov"
   ]
  },
  "package": {
   "name": "dm-tree",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch"
   ],
   "host": [
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0"
   ],
   "run": [
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch"
   ],
   "sha256": "a951d2239111dfcc468071bc8ff792c7b1e3192cab5a3c94d33a8b2bda3127fa",
   "url": "https://pypi.io/packages/source/d/dm-tree/dm-tree-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark"
   ],
   "imports": [
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree"
   ],
   "requires": [
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt"
   ]
  }
 },
 "name": "dm-tree",
 "new_version": "0.1.6",
 "new_version_attempts": {
  "0.1.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "tree is a library for working with nested data structures.\nIn a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.\n",
   "dev_url": "https://github.com/deepmind/tree",
   "doc_url": "https://tree.readthedocs.io/en/stable/",
   "home": "https://github.com/deepmind/tree",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Tree is a library for working with nested data structures."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov"
   ]
  },
  "package": {
   "name": "dm-tree",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel"
   ],
   "host": [
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0"
   ],
   "run": [
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch"
   ],
   "sha256": "a951d2239111dfcc468071bc8ff792c7b1e3192cab5a3c94d33a8b2bda3127fa",
   "url": "https://pypi.io/packages/source/d/dm-tree/dm-tree-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark"
   ],
   "imports": [
    "tree",
    "tree",
    "tree",
    "tree",
    "tree",
    "tree"
   ],
   "requires": [
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "absl-py",
    "attrs",
    "numpy",
    "wrapt"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dm-tree"
  ]
 },
 "pinning_version": "2021.11.04.14.33.12",
 "raw_meta_yaml": "{% set name = \"dm-tree\" %}\n{% set version = \"0.1.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/dm-tree-{{ version }}.tar.gz\n  sha256: a951d2239111dfcc468071bc8ff792c7b1e3192cab5a3c94d33a8b2bda3127fa\n  patches:\n    - patches/0001-Contain-bazel-root.patch\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . --no-deps -vv  # [not win]\n  script: '\"%RECIPE_DIR%\\windows.bat\" \"{{ PYTHON }}\"'  # [win]\n\n\n# Need these up here for conda-smithy to handle them properly.\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - python\n    - bazel\n    - m2-patch  # [win]\n  host:\n    - pip\n    - python\n    - six >=1.12.0 # needed because we can install by \"python setup.py install\" which has no --no-deps switch\n  run:\n    - python\n    - six >=1.12.0\n\ntest:\n  imports:\n    - tree\n  commands:\n    - python -m unittest tree.tree_test tree.tree_benchmark\n  requires:\n    - attrs\n    - absl-py\n    - numpy\n    - wrapt\n\nabout:\n  home: https://github.com/deepmind/tree\n  summary: Tree is a library for working with nested data structures.\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  description: |\n    tree is a library for working with nested data structures.\n    In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.\n\n  doc_url: https://tree.readthedocs.io/en/stable/\n  dev_url: https://github.com/deepmind/tree\n\nextra:\n  recipe-maintainers:\n    - vnlitvinov\n",
 "req": {
  "__set__": true,
  "elements": [
   "bazel",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "m2-patch",
   "pip",
   "python",
   "six"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "absl-py",
    "attrs",
    "numpy",
    "wrapt"
   ]
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "six >=1.12.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six >=1.12.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "absl-py",
    "attrs",
    "numpy",
    "wrapt"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/d/dm-tree/dm-tree-0.1.5.tar.gz",
 "version": "0.1.5",
 "win_64_meta_yaml": {
  "about": {
   "description": "tree is a library for working with nested data structures.\nIn a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.\n",
   "dev_url": "https://github.com/deepmind/tree",
   "doc_url": "https://tree.readthedocs.io/en/stable/",
   "home": "https://github.com/deepmind/tree",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Tree is a library for working with nested data structures."
  },
  "build": {
   "number": "2",
   "script": "\"%RECIPE_DIR%\\windows.bat\" \"/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe\""
  },
  "extra": {
   "recipe-maintainers": [
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov",
    "vnlitvinov"
   ]
  },
  "package": {
   "name": "dm-tree",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "bazel",
    "m2-patch"
   ],
   "host": [
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0",
    "pip",
    "python",
    "six >=1.12.0"
   ],
   "run": [
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0",
    "python",
    "six >=1.12.0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch",
    "patches/0001-Contain-bazel-root.patch"
   ],
   "sha256": "a951d2239111dfcc468071bc8ff792c7b1e3192cab5a3c94d33a8b2bda3127fa",
   "url": "https://pypi.io/packages/source/d/dm-tree/dm-tree-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark",
    "python -m unittest tree.tree_test tree.tree_benchmark"
   ],
   "imports": [
    "tree",
    "tree",
    "tree",
    "tree"
   ],
   "requires": [
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt",
    "attrs",
    "absl-py",
    "numpy",
    "wrapt"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "absl-py",
    "attrs",
    "numpy",
    "wrapt"
   ]
  }
 }
}