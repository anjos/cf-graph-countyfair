{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/213239363.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/230225664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "b224af03-6863-4c48-a951-6b4e01027291",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513630506.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/575305617.json"
   },
   "data": {
    "bot_rerun": 1636484422.0062366,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776352094.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "thermotools",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
   "dev_url": "https://github.com/markovmodel/thermotools",
   "home": "http://github.com/markovmodel/thermotools",
   "license": "LGPL3+",
   "license_file": "COPYING.LESSER",
   "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
  },
  "build": {
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer"
   ]
  },
  "package": {
   "name": "thermotools",
   "version": "0.2.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4"
   ]
  },
  "source": {
   "fn": "thermotools-0.2.7.tar.gz",
   "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
   "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
  },
  "test": {
   "imports": [
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "msmtools",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
   "dev_url": "https://github.com/markovmodel/thermotools",
   "home": "http://github.com/markovmodel/thermotools",
   "license": "LGPL3+",
   "license_file": "COPYING.LESSER",
   "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
  },
  "build": {
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer"
   ]
  },
  "package": {
   "name": "thermotools",
   "version": "0.2.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4"
   ]
  },
  "source": {
   "fn": "thermotools-0.2.7.tar.gz",
   "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
   "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
  },
  "test": {
   "imports": [
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools"
   ]
  }
 },
 "name": "thermotools",
 "new_version": "0.2.7",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
   "dev_url": "https://github.com/markovmodel/thermotools",
   "home": "http://github.com/markovmodel/thermotools",
   "license": "LGPL3+",
   "license_file": "COPYING.LESSER",
   "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
  },
  "build": {
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer"
   ]
  },
  "package": {
   "name": "thermotools",
   "version": "0.2.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4"
   ]
  },
  "source": {
   "fn": "thermotools-0.2.7.tar.gz",
   "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
   "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
  },
  "test": {
   "imports": [
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "msmtools",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "thermotools"
  ]
 },
 "pinning_version": "2021.11.09.00.35.45",
 "pre_pr_migrator_attempts": {
  "pypy37": 1,
  "pypy38": 162
 },
 "pre_pr_migrator_status": {
  "pypy37": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/576285380\">bot CI job</a>): master: ['linux_64_numpy1.19python3.7.____73_pypy: Encountered problems while solving.\\nProblem: package msmtools-1.2.5-py36h785e9b2_0 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n', 'osx_64_numpy1.19python3.7.____73_pypy: Encountered problems while solving.\\nProblem: package msmtools-1.2.5-py36h255dfe6_0 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n']",
  "pypy38": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3211554841\">bot CI job</a>): main: ['linux_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package msmtools-1.2.6-py310h96516ba_1 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'linux_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package msmtools-1.2.6-py310h96516ba_1 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'osx_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package msmtools-1.2.6-py310h1bbcd0e_2 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'osx_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package msmtools-1.2.6-py310h1bbcd0e_2 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'win_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - nothing provides numpy 1.10* needed by msmtools-1.1.4-np110py27_0\\n', 'win_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - nothing provides numpy 1.10* needed by msmtools-1.1.4-np110py27_0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"thermotools\" %}\n{% set version = \"0.2.7\" %}\n{% set sha256 = \"34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1003\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n \nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - setuptools\n    - cython\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - msmtools >=1.1.4\n\ntest:\n  imports:\n    - thermotools\n\nabout:\n  home: http://github.com/markovmodel/thermotools\n  license: LGPL3+\n  license_file: COPYING.LESSER\n  summary: 'Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python.'\n\n  description: |\n    The thermotools package is a lowlevel implementation toolbox for the analyis\n    of multi-ensemble calculations. It contains estimators for the state-continuous transition-based\n    reweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n    (BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\n    While you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n  dev_url: https://github.com/markovmodel/thermotools\n\nextra:\n  recipe-maintainers:\n    - marscher\n    - fabian-paul\n    - cwehmeyer\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "msmtools",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "msmtools",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "msmtools >=1.1.4",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz",
 "version": "0.2.7",
 "win_64_meta_yaml": {
  "about": {
   "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
   "dev_url": "https://github.com/markovmodel/thermotools",
   "home": "http://github.com/markovmodel/thermotools",
   "license": "LGPL3+",
   "license_file": "COPYING.LESSER",
   "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
  },
  "build": {
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer",
    "marscher",
    "fabian-paul",
    "cwehmeyer"
   ]
  },
  "package": {
   "name": "thermotools",
   "version": "0.2.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4",
    "python",
    "numpy",
    "scipy",
    "msmtools >=1.1.4"
   ]
  },
  "source": {
   "fn": "thermotools-0.2.7.tar.gz",
   "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
   "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
  },
  "test": {
   "imports": [
    "thermotools",
    "thermotools",
    "thermotools",
    "thermotools"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "msmtools",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}