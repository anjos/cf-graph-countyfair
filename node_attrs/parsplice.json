{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/367262605.json"
   },
   "data": {
    "bot_rerun": 1589915736.3926728,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/377688877.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/322be0c6-e0f7-4377-b282-f48a9d3599d4.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/184d63bd-ad51-4199-8934-5e296ab8c80d.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/420342101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485571805.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501997918.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553152240.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/791357194.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "parsplice",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The ParSplice code implements the Parallel Trajectory Splicing\nalgorithm described in [1]. This method is part of the Accelerated\nMolecular Dynamics family of techniques developed in Los Alamos\nNational Laboratory over the last 16 years. These methods aim at\ngenerating high-quality trajectories of ensembles of atoms in\nmaterials.\n",
   "dev_url": "https://gitlab.com/exaalt/parsplice",
   "doc_url": "https://gitlab.com/exaalt/parsplice/wikis/home",
   "home": "https://gitlab.com/exaalt/parsplice",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Parallel Trajectory Splicing AMD Code"
  },
  "build": {
   "number": "2",
   "string": "py_mpich_2"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "parsplice",
   "version": "1.1.2.dev0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb"
   ],
   "run": [
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb"
   ]
  },
  "source": {
   "patches": [
    "python3.patch",
    "python3.patch",
    "python3.patch",
    "python3.patch",
    "python3.patch",
    "python3.patch"
   ],
   "sha256": "573a8bb2371f659c852a6ed8347ddf98d4f142a121ad17045f8dbbbabde75c52",
   "url": "https://gitlab.com/exaalt/parsplice/-/archive/4a48ef86be45746b769f6ba02a3da71125bc7b75/parsplice-4a48ef86be45746b769f6ba02a3da71125bc7b75.tar.gz"
  },
  "test": {
   "commands": [
    "parsplice --help",
    "parsplice --help",
    "parsplice --help",
    "parsplice --help",
    "parsplice --help",
    "parsplice --help"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "eigen",
    "lammps",
    "libdb",
    "mpich",
    "nauty",
    "openmpi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "eigen",
    "lammps",
    "libdb",
    "mpich",
    "nauty",
    "openmpi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The ParSplice code implements the Parallel Trajectory Splicing\nalgorithm described in [1]. This method is part of the Accelerated\nMolecular Dynamics family of techniques developed in Los Alamos\nNational Laboratory over the last 16 years. These methods aim at\ngenerating high-quality trajectories of ensembles of atoms in\nmaterials.\n",
   "dev_url": "https://gitlab.com/exaalt/parsplice",
   "doc_url": "https://gitlab.com/exaalt/parsplice/wikis/home",
   "home": "https://gitlab.com/exaalt/parsplice",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "Parallel Trajectory Splicing AMD Code"
  },
  "build": {
   "number": "2",
   "string": "py_mpich_2"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "parsplice",
   "version": "1.1.2.dev0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ],
   "host": [
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb"
   ],
   "run": [
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "openmpi",
    "lammps",
    "libdb",
    "python",
    "boost-cpp",
    "eigen",
    "nauty",
    "mpich",
    "lammps",
    "libdb"
   ]
  },
  "source": {
   "patches": [
    "python3.patch",
    "python3.patch",
    "python3.patch",
    "python3.patch",
    "python3.patch",
    "python3.patch"
   ],
   "sha256": "573a8bb2371f659c852a6ed8347ddf98d4f142a121ad17045f8dbbbabde75c52",
   "url": "https://gitlab.com/exaalt/parsplice/-/archive/4a48ef86be45746b769f6ba02a3da71125bc7b75/parsplice-4a48ef86be45746b769f6ba02a3da71125bc7b75.tar.gz"
  },
  "test": {
   "commands": [
    "parsplice --help",
    "parsplice --help",
    "parsplice --help",
    "parsplice --help",
    "parsplice --help",
    "parsplice --help"
   ]
  }
 },
 "name": "parsplice",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "parsplice"
  ]
 },
 "pinning_version": "2021.11.30.02.56.36",
 "pre_pr_migrator_attempts": {
  "pypy37": 1
 },
 "pre_pr_migrator_status": {
  "pypy37": "not solvable: master: ['linux_64_mpimpichpython3.7.____73_pypy: Encountered problems while solving.\\nProblem: nothing provides openmpi 3.0.* needed by lammps-2018.03.16-openmpi_0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"parsplice\" %}\n{% set version = \"1.1.2.dev0\" %}\n{% set build = 2 %}\n{% set build_string = \"py{}_{}_{}\".format(environ.get('CONDA_PY', ''), mpi, build) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/exaalt/{{ name }}/-/archive/4a48ef86be45746b769f6ba02a3da71125bc7b75/{{ name }}-4a48ef86be45746b769f6ba02a3da71125bc7b75.tar.gz\n  sha256: 573a8bb2371f659c852a6ed8347ddf98d4f142a121ad17045f8dbbbabde75c52\n  patches:\n    - python3.patch\n\nbuild:\n  number: {{ build }}\n  string: {{ build_string }}\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make\n    - pkg-config\n  host:\n    - python\n    - boost-cpp\n    - eigen\n    - nauty\n    - {{ mpi }}\n    - lammps\n    - libdb\n  run:\n    - python\n    - boost-cpp\n    - eigen\n    - nauty\n    - {{ mpi }}\n    - lammps\n    - libdb\n\ntest:\n  commands:\n    - parsplice --help\n\nabout:\n  home: https://gitlab.com/exaalt/parsplice\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'Parallel Trajectory Splicing AMD Code'\n\n  description: |\n    The ParSplice code implements the Parallel Trajectory Splicing \n    algorithm described in [1]. This method is part of the Accelerated \n    Molecular Dynamics family of techniques developed in Los Alamos \n    National Laboratory over the last 16 years. These methods aim at \n    generating high-quality trajectories of ensembles of atoms in \n    materials. \n  doc_url: https://gitlab.com/exaalt/parsplice/wikis/home\n  dev_url: https://gitlab.com/exaalt/parsplice\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost-cpp",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "lammps",
   "libdb",
   "make",
   "mpich",
   "nauty",
   "openmpi",
   "pkg-config",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cxx_compiler_stub",
    "eigen",
    "lammps",
    "libdb",
    "mpich",
    "nauty",
    "openmpi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "cxx_compiler_stub",
    "eigen",
    "lammps",
    "libdb",
    "mpich",
    "nauty",
    "openmpi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "eigen",
    "lammps",
    "libdb",
    "mpich",
    "nauty",
    "openmpi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "eigen",
    "lammps",
    "libdb",
    "mpich",
    "nauty",
    "openmpi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.com/exaalt/parsplice/-/archive/4a48ef86be45746b769f6ba02a3da71125bc7b75/parsplice-4a48ef86be45746b769f6ba02a3da71125bc7b75.tar.gz",
 "version": "1.1.2.dev0"
}