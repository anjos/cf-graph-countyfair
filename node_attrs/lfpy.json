{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/296524556.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/316931586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "mpich-3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "3c2272be-d388-4388-9056-7109fda240b3",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mpich-3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349554847.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/2d9d876a-8f6e-4141-ad08-9e868e383f08.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394380395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/441049126.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/452350844.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/479641314.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526064173.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562517931.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/594816273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/598041201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747513157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/789707023.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/848972341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877459420.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/900334480.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "lfpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url": "https://github.com/LFPy/LFPy",
   "doc_url": "https://lfpy.readthedocs.io",
   "home": "https://github.com/LFPy/LFPy",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
   "string": "mpi_openmpi_pyh1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk"
   ]
  },
  "package": {
   "name": "lfpy",
   "version": "2.2.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4"
   ],
   "run": [
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline"
   ]
  },
  "source": {
   "sha256": "105046db3628c6f72a6ab96ee8ac0f4833bf8eee428dcee50cb7f2926b755966",
   "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy"
   ],
   "imports": [
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy"
   ],
   "requires": [
    "openssh",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "openssh",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "lfpykit",
    "libgfortran5",
    "mpich",
    "neuron",
    "numpy",
    "openmpi",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "h5py",
    "lfpykit",
    "mpi4py",
    "mpich",
    "ncurses",
    "neuron",
    "numpy",
    "openmpi",
    "python",
    "readline",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "openssh",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url": "https://github.com/LFPy/LFPy",
   "doc_url": "https://lfpy.readthedocs.io",
   "home": "https://github.com/LFPy/LFPy",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
   "string": "mpi_openmpi_pyh1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk"
   ]
  },
  "package": {
   "name": "lfpy",
   "version": "2.2.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4"
   ],
   "run": [
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline"
   ]
  },
  "source": {
   "sha256": "105046db3628c6f72a6ab96ee8ac0f4833bf8eee428dcee50cb7f2926b755966",
   "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy"
   ],
   "imports": [
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy"
   ],
   "requires": [
    "openssh",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "openssh",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "openssh",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "openssh",
    "pytest"
   ]
  }
 },
 "name": "lfpy",
 "new_version": "2.2.6",
 "new_version_attempts": {
  "2.1": 1,
  "2.1.1": 1,
  "2.1.2": 1,
  "2.2": 1,
  "2.2.1": 1,
  "2.2.2": 1,
  "2.2.3": 1,
  "2.2.4": 1,
  "2.2.5": 1,
  "2.2.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url": "https://github.com/LFPy/LFPy",
   "doc_url": "https://lfpy.readthedocs.io",
   "home": "https://github.com/LFPy/LFPy",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv",
   "string": "mpi_openmpi_pyh1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk"
   ]
  },
  "package": {
   "name": "lfpy",
   "version": "2.2.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "mpich",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "openmpi",
    "libgfortran5",
    "lfpykit >=0.4"
   ],
   "run": [
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron  mpi_mpich_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "openmpi",
    "neuron  mpi_openmpi_*",
    "lfpykit >=0.4",
    "ncurses",
    "readline"
   ]
  },
  "source": {
   "sha256": "105046db3628c6f72a6ab96ee8ac0f4833bf8eee428dcee50cb7f2926b755966",
   "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy"
   ],
   "imports": [
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy",
    "LFPy"
   ],
   "requires": [
    "pytest",
    "openssh",
    "pytest",
    "openssh",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "openssh",
    "pytest",
    "openssh",
    "pytest"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "lfpykit",
    "libgfortran5",
    "mpich",
    "neuron",
    "numpy",
    "openmpi",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "h5py",
    "lfpykit",
    "mpi4py",
    "mpich",
    "ncurses",
    "neuron",
    "numpy",
    "openmpi",
    "python",
    "readline",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "openssh",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lfpy"
  ]
 },
 "pinning_version": "2022.04.05.12.13.43",
 "pre_pr_migrator_attempts": {
  "python310": 537,
  "python311": 73
 },
 "pre_pr_migrator_status": {
  "python310": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2918752635\">bot CI job</a>): main: ['linux_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n']",
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3609866444\">bot CI job</a>): main: ['linux_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n']"
 },
 "raw_meta_yaml": "{% set name = \"LFPy\" %}\n{% set version = \"2.2.6\" %}\n{% set build = 1 %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lfpy/{{ name }}-{{ version }}.tar.gz\n  sha256: 105046db3628c6f72a6ab96ee8ac0f4833bf8eee428dcee50cb7f2926b755966\n\nbuild:\n  number: {{ build }}\n  {% set mpi_prefix = \"mpi_\" + mpi %} # use mpi_*` neuron variant\n  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [linux]\n  host:\n    - python\n    - pip\n    - cython >=0.20\n    - numpy >=1.8\n    - neuron\n    - {{ mpi }}\n    - libgfortran5  # [mpi == \"openmpi\"]  # workaround for https://github.com/conda-forge/openmpi-feedstock/issues/94\n    - lfpykit >=0.4\n  run:\n    - python\n    - setuptools\n    - cython >=0.20\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.14\n    - h5py >=2.5\n    - mpi4py >=1.2\n    - {{ mpi }}\n    - {{ pin_compatible('neuron') }}  {{ mpi_prefix }}_*\n    - lfpykit >=0.4\n    - ncurses\n    - readline\n\ntest:\n  requires:\n    - openssh  # [mpi == \"openmpi\"]\n    - pytest\n  imports:\n    - LFPy\n  commands:\n    - py.test -vsx --pyargs LFPy\n\nabout:\n  home: https://github.com/LFPy/LFPy\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  summary: LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models\n\n  description: |\n    LFPy provides a set of easy-to-use Python classes for setting up your\n    model, running your simulations and calculating the extracellular\n    potentials arising from activity in your model neuron. If you have a model\n    working in NEURON or NeuroML2 already, it is likely that it can be adapted\n    to work with LFPy.\n\n  doc_url: https://lfpy.readthedocs.io\n  dev_url: https://github.com/LFPy/LFPy\n\nextra:\n  recipe-maintainers:\n    - espenhgn\n    - minrk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "h5py",
   "lfpykit",
   "libgfortran5",
   "make",
   "mpi4py",
   "mpich",
   "ncurses",
   "neuron",
   "numpy",
   "openmpi",
   "pip",
   "python",
   "readline",
   "scipy",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "lfpykit",
    "libgfortran5",
    "mpich",
    "neuron",
    "numpy",
    "openmpi",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "h5py",
    "lfpykit",
    "mpi4py",
    "mpich",
    "ncurses",
    "neuron",
    "numpy",
    "openmpi",
    "python",
    "readline",
    "scipy",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "openssh",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython >=0.20",
    "lfpykit >=0.4",
    "libgfortran5",
    "mpich",
    "neuron",
    "numpy >=1.8",
    "openmpi",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython >=0.20",
    "h5py >=2.5",
    "lfpykit >=0.4",
    "mpi4py >=1.2",
    "mpich",
    "ncurses",
    "neuron  mpi_mpich_*",
    "neuron  mpi_openmpi_*",
    "numpy",
    "openmpi",
    "python",
    "readline",
    "scipy >=0.14",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "openssh",
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.2.6.tar.gz",
 "version": "2.2.6"
}