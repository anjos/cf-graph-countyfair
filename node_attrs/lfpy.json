{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/296524556.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/316931586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "mpich-3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "3c2272be-d388-4388-9056-7109fda240b3",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mpich-3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349554847.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/2d9d876a-8f6e-4141-ad08-9e868e383f08.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394380395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/441049126.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/452350844.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/479641314.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526064173.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562517931.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/594816273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/598041201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747513157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/789707023.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/848972341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877459420.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/900334480.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "lfpy",
 "hash_type": "sha256",
 "name": "lfpy",
 "new_version": "2.2.6",
 "new_version_attempts": {
  "2.1": 1,
  "2.1.1": 1,
  "2.1.2": 1,
  "2.2": 1,
  "2.2.1": 1,
  "2.2.2": 1,
  "2.2.3": 1,
  "2.2.4": 1,
  "2.2.5": 1,
  "2.2.6": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lfpy"
  ]
 },
 "pinning_version": "2022.04.05.12.13.43",
 "pre_pr_migrator_attempts": {
  "python310": 537,
  "python311": 90
 },
 "pre_pr_migrator_status": {
  "python310": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2918752635\">bot CI job</a>): main: ['linux_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n']",
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3668693228\">bot CI job</a>): main: ['linux_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'linux_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'linux_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpimpichpython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpimpichpython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_mpich_.*\\n', 'osx_64_mpiopenmpipython3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.11.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n', 'osx_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested neuron mpi_openmpi_.*\\n']"
 },
 "raw_meta_yaml": "{% set name = \"LFPy\" %}\n{% set version = \"2.2.6\" %}\n{% set build = 1 %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lfpy/{{ name }}-{{ version }}.tar.gz\n  sha256: 105046db3628c6f72a6ab96ee8ac0f4833bf8eee428dcee50cb7f2926b755966\n\nbuild:\n  number: {{ build }}\n  {% set mpi_prefix = \"mpi_\" + mpi %} # use mpi_*` neuron variant\n  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [linux]\n  host:\n    - python\n    - pip\n    - cython >=0.20\n    - numpy >=1.8\n    - neuron\n    - {{ mpi }}\n    - libgfortran5  # [mpi == \"openmpi\"]  # workaround for https://github.com/conda-forge/openmpi-feedstock/issues/94\n    - lfpykit >=0.4\n  run:\n    - python\n    - setuptools\n    - cython >=0.20\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.14\n    - h5py >=2.5\n    - mpi4py >=1.2\n    - {{ mpi }}\n    - {{ pin_compatible('neuron') }}  {{ mpi_prefix }}_*\n    - lfpykit >=0.4\n    - ncurses\n    - readline\n\ntest:\n  requires:\n    - openssh  # [mpi == \"openmpi\"]\n    - pytest\n  imports:\n    - LFPy\n  commands:\n    - py.test -vsx --pyargs LFPy\n\nabout:\n  home: https://github.com/LFPy/LFPy\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  summary: LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models\n\n  description: |\n    LFPy provides a set of easy-to-use Python classes for setting up your\n    model, running your simulations and calculating the extracellular\n    potentials arising from activity in your model neuron. If you have a model\n    working in NEURON or NeuroML2 already, it is likely that it can be adapted\n    to work with LFPy.\n\n  doc_url: https://lfpy.readthedocs.io\n  dev_url: https://github.com/LFPy/LFPy\n\nextra:\n  recipe-maintainers:\n    - espenhgn\n    - minrk\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.2.6.tar.gz",
 "version": "2.2.6"
}