{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/815377457.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "pygedm",
 "hash_type": "sha256",
 "name": "pygedm",
 "new_version": "3.3.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pygedm"
  ]
 },
 "pinning_version": "2022.01.05.14.36.24",
 "raw_meta_yaml": "{% set name = \"pygedm\" %}\n{% set version = \"3.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 0904ad4bba502944cc9f4cddff3043ffc18d9974df46d327d854ae5838c3d61f\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}\n  host:\n    - astropy\n    - f2c\n    - numpy\n    - pip\n    - pybind11 >=2.2\n    - pytest\n    - pytest-cov\n    - pytest-runner\n    - python\n    - scipy\n    - setuptools\n  run:\n    - astropy\n    - healpy\n    - matplotlib-base\n    - {{ pin_compatible('numpy') }}\n    - pybind11 >=2.2\n    - python\n    - scipy\n\ntest:\n  imports:\n    - pygedm\n  requires:\n    - pip\n  commands:\n    - python -m pip check\n\nabout:\n  home: https://github.com/FRBs/pygedm\n  license: LGPL-3.0-only\n  license_file:\n    - LICENSE.txt\n    - LICENSE_YMW16.txt\n  summary: 'Python bindings for the YMW16, NE2001 and YT2020 electron density models'\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    This package is a Python interface to the YMW16 and NE2001 electron density\n    models, and YT2020 halo model. The Yao, Manchester and Wang (2017,\n    Astrophys. J., 835, 29; arXiv:1610.09448) YMW16 electron density model, is\n    written in C++, and the Cordes and Lazio (2001, arXiv:0207156) NE2001 model\n    is written in FORTRAN. This package, PyGEDM, wraps these two codes using\n    pybind11 and f2py.\n  doc_url: https://pygedm.readthedocs.io\n  dev_url: https://github.com/FRBs/pygedm\n\nextra:\n  recipe-maintainers:\n    - mattpitkin\n    - telegraphic\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pygedm/pygedm-3.3.0.tar.gz",
 "version": "3.3.0"
}