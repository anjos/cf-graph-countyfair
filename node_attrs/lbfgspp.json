{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "lbfgspp",
 "hash_type": "sha256",
 "name": "lbfgspp",
 "new_version": "0.2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lbfgspp"
  ]
 },
 "raw_meta_yaml": "{% set name = \"lbfgspp\" %}\n{% set version = \"0.2.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/yixuan/lbfgspp/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 7101744a538c3aff52e10c82267305847b0b5e9d39f9974b4b29812cd1398ff9\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - eigen >=3,<4\n  run:\n    - eigen >=3,<4\n\ntest:\n  source_files:\n    - examples/\n  requires:\n    - {{ compiler('cxx') }}\n  commands:\n    - test -f $PREFIX/include/LBFGS.h  # [unix]\n    - test -f $PREFIX/include/LBFGSB.h  # [unix]\n    - test -d $PREFIX/include/LBFGSpp  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\LBFGS.h exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\LBFGSB.h exit 1  # [win]\n    - set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done  # [unix and target_platform == build_platform]\n\n\nabout:\n  license: MIT\n  license_file: LICENSE.md\n  summary: |\n    A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n  home: https://lbfgspp.statr.me/\n  dev_url: https://github.com/yixuan/LBFGSpp\n\nextra:\n  recipe-maintainers:\n    - awvwgk\n",
 "strong_exports": false,
 "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.2.0.tar.gz",
 "version": "0.2.0"
}