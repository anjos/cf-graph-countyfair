{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/357819246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/426559697.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533239742.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552340945.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/829948995.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831979953.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 449, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 444, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse",
   "    response.begin()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into",
   "    return self.read(nbytes, buffer)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read",
   "    return self._sslobj.read(len, buffer)",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 440, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 785, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise",
   "    raise value",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 451, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 340, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 193, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 577, in post",
   "    return self.request('POST', url, data=data, json=json, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 171, in request",
   "    response = super().request(*args, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 529, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 645, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 532, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 389, in run",
   "    pr_json = push_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 650, in push_repo",
   "    pr = repo.create_pull(title, base_branch, head, body=body)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/decorators.py\", line 24, in auth_wrapper",
   "    return func(self, *args, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/repos/repo.py\", line 1175, in create_pull",
   "    return self._create_pull(data)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/repos/repo.py\", line 117, in _create_pull",
   "    json = self._json(self._post(url, data=data), 201)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 218, in _post",
   "    return self._request(\"post\", url, data, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 198, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "charls",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls",
    "charls",
    "charls",
    "charls",
    "charls",
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk",
    "hmaarrfk",
    "hmaarrfk",
    "hmaarrfk",
    "hmaarrfk",
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h",
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h",
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h",
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h",
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h",
    "if not exist %LIBRARY_LIB%\\\\charls-2-x64.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\charls-2-x64.dll exit 1",
    "if not exist %LIBRARY_INC%\\\\charls\\\\charls.h exit 1"
   ]
  }
 },
 "name": "charls",
 "new_version": "2.3.2",
 "new_version_attempts": {
  "2.2.0": 1,
  "2.3.0": 1,
  "2.3.1": 1,
  "2.3.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcharls${SHLIB_EXT}",
    "test -f $PREFIX/include/charls/charls.h"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "charls"
  ]
 },
 "pinning_version": "2022.01.25.13.00.06",
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1766451325\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 449, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 444, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 440, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 785, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise\n    raise value\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 451, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 340, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 193, in _request\n    return request_method(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 577, in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/session.py\", line 171, in request\n    response = super().request(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 529, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 645, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 532, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 389, in run\n    pr_json = push_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 650, in push_repo\n    pr = repo.create_pull(title, base_branch, head, body=body)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/decorators.py\", line 24, in auth_wrapper\n    return func(self, *args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/repos/repo.py\", line 1175, in create_pull\n    return self._create_pull(data)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/repos/repo.py\", line 117, in _create_pull\n    json = self._json(self._post(url, data=data), 201)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 218, in _post\n    return self._request(\"post\", url, data, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github3/models.py\", line 198, in _request\n    raise exceptions.ConnectionError(exc)\ngithub3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n"
 },
 "raw_meta_yaml": "{% set version = \"2.3.1\" %}\n\npackage:\n  name: charls\n  version: {{ version }}\n\nsource:\n  url: https://github.com/team-charls/charls/archive/{{ version }}.tar.gz\n  sha256: d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97\n\nbuild:\n  skip: true  # [win and vc<14]\n  number: 0\n  run_exports:\n    # Seems like things change with minor revision (2.0 - 2.1) had many file\n    # name changes\n    - {{ pin_subpackage('charls', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make   # [not win]\n    - ninja  # [win]\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libcharls${SHLIB_EXT}     # [unix]\n    - test -f $PREFIX/include/charls/charls.h       # [unix]\n    - if not exist %LIBRARY_LIB%\\\\charls-2-x64.lib exit 1       # [win]\n    - if not exist %LIBRARY_BIN%\\\\charls-2-x64.dll exit 1       # [win]\n    - if not exist %LIBRARY_INC%\\\\charls\\\\charls.h exit 1       # [win]\n\nabout:\n  home: https://github.com/team-charls/charls\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios.\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "make",
   "ninja"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz",
 "version": "2.3.1",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/team-charls/charls",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "charls"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "charls",
   "version": "2.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "source": {
   "sha256": "d274107538c70abfce5459c40ed1ec5ef354193ad9e2c55de6293ca358d52e97",
   "url": "https://github.com/team-charls/charls/archive/2.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_LIB%\\\\charls-2-x64.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\charls-2-x64.dll exit 1",
    "if not exist %LIBRARY_INC%\\\\charls\\\\charls.h exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}