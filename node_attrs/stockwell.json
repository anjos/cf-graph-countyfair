{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/774939238.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909564687.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1010140176.json"
   },
   "data": {
    "bot_rerun": 1659089856.7556129,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1011819893.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "stockwell",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Python package for time-frequency analysis through Stockwell transform.\nBased on original code from NIMH MEG Core Facility\n(https://kurage.nimh.nih.gov/meglab/Meg/Stockwell).\n",
   "dev_url": "https://github.com/claudiodsf/stockwell",
   "home": "https://github.com/claudiodsf/stockwell",
   "license": "CECILL-2.1",
   "license_file": "LICENSE.txt",
   "summary": "Time-frequency analysis through Stockwell transform"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf"
   ]
  },
  "package": {
   "name": "stockwell",
   "version": "1.0.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw"
   ],
   "run": [
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw"
   ]
  },
  "source": {
   "sha256": "16b6bdadd13caa09e5cf8dc73763b1ac7b61c77ec0e72a45115abbe2567b963d",
   "url": "https://pypi.io/packages/source/s/stockwell/stockwell-1.0.7.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell"
   ],
   "imports": [
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Python package for time-frequency analysis through Stockwell transform.\nBased on original code from NIMH MEG Core Facility\n(https://kurage.nimh.nih.gov/meglab/Meg/Stockwell).\n",
   "dev_url": "https://github.com/claudiodsf/stockwell",
   "home": "https://github.com/claudiodsf/stockwell",
   "license": "CECILL-2.1",
   "license_file": "LICENSE.txt",
   "summary": "Time-frequency analysis through Stockwell transform"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf"
   ]
  },
  "package": {
   "name": "stockwell",
   "version": "1.0.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw"
   ],
   "run": [
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw"
   ]
  },
  "source": {
   "sha256": "16b6bdadd13caa09e5cf8dc73763b1ac7b61c77ec0e72a45115abbe2567b963d",
   "url": "https://pypi.io/packages/source/s/stockwell/stockwell-1.0.7.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell"
   ],
   "imports": [
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "name": "stockwell",
 "new_version": "1.0.7",
 "new_version_attempts": {
  "1.0.5": 1,
  "1.0.6": 2,
  "1.0.7": 3
 },
 "new_version_errors": {
  "1.0.5": "We found a problem parsing the recipe for version '1.0.5': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 31, column 3:\n      imports:\n      ^ (line: 31), 'found duplicate key \"commands\" with value \"[\\'pytest --pyargs stockwell\\']\" (original value: \"[\\'pip check\\']\")',   in \"<unicode string>\", line 38, column 3:\n      commands:\n      ^ (line: 38), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.0.6": "We found a problem parsing the recipe for version '1.0.6': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 31, column 3:\n      imports:\n      ^ (line: 31), 'found duplicate key \"commands\" with value \"[\\'pytest --pyargs stockwell\\']\" (original value: \"[\\'pip check\\']\")',   in \"<unicode string>\", line 38, column 3:\n      commands:\n      ^ (line: 38), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.0.7": "We found a problem parsing the recipe for version '1.0.7': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 31, column 3:\n      imports:\n      ^ (line: 31), 'found duplicate key \"commands\" with value \"[\\'pytest --pyargs stockwell\\']\" (original value: \"[\\'pip check\\']\")',   in \"<unicode string>\", line 38, column 3:\n      commands:\n      ^ (line: 38), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "Python package for time-frequency analysis through Stockwell transform.\nBased on original code from NIMH MEG Core Facility\n(https://kurage.nimh.nih.gov/meglab/Meg/Stockwell).\n",
   "dev_url": "https://github.com/claudiodsf/stockwell",
   "home": "https://github.com/claudiodsf/stockwell",
   "license": "CECILL-2.1",
   "license_file": "LICENSE.txt",
   "summary": "Time-frequency analysis through Stockwell transform"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf"
   ]
  },
  "package": {
   "name": "stockwell",
   "version": "1.0.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw"
   ],
   "run": [
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw"
   ]
  },
  "source": {
   "sha256": "16b6bdadd13caa09e5cf8dc73763b1ac7b61c77ec0e72a45115abbe2567b963d",
   "url": "https://pypi.io/packages/source/s/stockwell/stockwell-1.0.7.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell"
   ],
   "imports": [
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "stockwell"
  ]
 },
 "pinning_version": "2022.07.29.09.27.39",
 "raw_meta_yaml": "{% set name = \"stockwell\" %}\n{% set version = \"1.0.7\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/stockwell-{{ version }}.tar.gz\n  sha256: 16b6bdadd13caa09e5cf8dc73763b1ac7b61c77ec0e72a45115abbe2567b963d\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - numpy\n    - pip\n    - python\n    - fftw\n  run:\n    - {{ pin_compatible('numpy') }}\n    - python\n    - fftw\n\ntest:\n  imports:\n    - stockwell\n  commands:\n    - pip check\n  requires:\n    - pip\n    - pytest\n  commands:\n    - pytest --pyargs stockwell\n\nabout:\n  home: https://github.com/claudiodsf/stockwell\n  summary: Time-frequency analysis through Stockwell transform\n  license: CECILL-2.1\n  license_file: LICENSE.txt\n  description: |\n    Python package for time-frequency analysis through Stockwell transform.\n    Based on original code from NIMH MEG Core Facility\n    (https://kurage.nimh.nih.gov/meglab/Meg/Stockwell).\n  dev_url: https://github.com/claudiodsf/stockwell\n\nextra:\n  recipe-maintainers:\n    - claudiodsf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fftw",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fftw",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fftw",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/stockwell/stockwell-1.0.7.tar.gz",
 "version": "1.0.7",
 "win_64_meta_yaml": {
  "about": {
   "description": "Python package for time-frequency analysis through Stockwell transform.\nBased on original code from NIMH MEG Core Facility\n(https://kurage.nimh.nih.gov/meglab/Meg/Stockwell).\n",
   "dev_url": "https://github.com/claudiodsf/stockwell",
   "home": "https://github.com/claudiodsf/stockwell",
   "license": "CECILL-2.1",
   "license_file": "LICENSE.txt",
   "summary": "Time-frequency analysis through Stockwell transform"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf",
    "claudiodsf"
   ]
  },
  "package": {
   "name": "stockwell",
   "version": "1.0.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw",
    "numpy",
    "pip",
    "python",
    "fftw"
   ],
   "run": [
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw"
   ]
  },
  "source": {
   "sha256": "16b6bdadd13caa09e5cf8dc73763b1ac7b61c77ec0e72a45115abbe2567b963d",
   "url": "https://pypi.io/packages/source/s/stockwell/stockwell-1.0.7.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell",
    "pytest --pyargs stockwell"
   ],
   "imports": [
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell",
    "stockwell"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 }
}