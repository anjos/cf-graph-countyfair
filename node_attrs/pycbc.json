{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/248978337.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256709090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/257540609.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/271361839.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278214664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278480356.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/288949403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/327371245.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341746756.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/342390491.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345763630.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/348624235.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349003543.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349672835.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/358518232.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/368699595.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/383773224.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405025025.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410047507.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410407520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427244456.json"
   },
   "data": {
    "bot_rerun": 1591876105.4247282,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/433028443.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435719818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/438622927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454844197.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/457188985.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/461504069.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/468130969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/471275792.json"
   },
   "data": {
    "bot_rerun": 1599002289.4398663,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/477389474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496912542.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500756954.json"
   },
   "data": {
    "bot_rerun": 1603308429.1341689,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/508117246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/510273098.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519070081.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542718870.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/567668819.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/578417210.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/656258077.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/718964373.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/719646517.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/746949355.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pycbc",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overdepending": true,
   "error_overlinking": true,
   "ignore_run_exports": [
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "1.18.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm"
   ]
  },
  "source": {
   "patches": [
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch"
   ],
   "sha256": "05030790aa00b6c7476ed404f6e38016544fab3b2ef8a9ba2fe2f042a0fe7ad3",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-1.18.3.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "cython",
    "decorator",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "kombine",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pillow",
    "pkg-config",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms",
    "requests",
    "scipy",
    "six",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overdepending": true,
   "error_overlinking": true,
   "ignore_run_exports": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "libcxx",
    "python",
    "libcxx",
    "python"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "1.18.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm"
   ]
  },
  "source": {
   "patches": [
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch"
   ],
   "sha256": "05030790aa00b6c7476ed404f6e38016544fab3b2ef8a9ba2fe2f042a0fe7ad3",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-1.18.3.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "name": "pycbc",
 "new_version": "1.18.3",
 "new_version_attempts": {
  "1.15.6": 1,
  "1.16.0": 1,
  "1.16.1": 5,
  "1.16.10": 1,
  "1.16.11": 2,
  "1.16.12": 1,
  "1.16.2": 2,
  "1.16.3": 1,
  "1.16.4": 1,
  "1.16.5": 1,
  "1.16.6": 1,
  "1.16.7": 1,
  "1.16.8": 1,
  "1.16.9": 2,
  "1.17.0": 1,
  "1.17.1": 1,
  "1.18.0": 1,
  "1.18.1": 1,
  "1.18.2": 1,
  "1.18.3": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overdepending": true,
   "error_overlinking": true,
   "ignore_run_exports": [
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "0",
   "script": [
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "1.18.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm"
   ]
  },
  "source": {
   "patches": [
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch"
   ],
   "sha256": "05030790aa00b6c7476ed404f6e38016544fab3b2ef8a9ba2fe2f042a0fe7ad3",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-1.18.3.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "cython",
    "decorator",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "kombine",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pillow",
    "pkg-config",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms",
    "requests",
    "scipy",
    "six",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overdepending": true,
   "error_overlinking": true,
   "ignore_run_exports": [
    "libcxx",
    "python",
    "libcxx",
    "python"
   ],
   "number": "0",
   "script": [
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "export CFLAGS=\"${CFLAGS} -fopenmp\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "duncanmmacleod",
    "ahnitz"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "1.18.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm",
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pkg-config",
    "pillow",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm"
   ]
  },
  "source": {
   "patches": [
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch",
    "no-install_requires-lalsuite.patch",
    "openmp-macos.patch",
    "intrinsics.patch"
   ],
   "sha256": "05030790aa00b6c7476ed404f6e38016544fab3b2ef8a9ba2fe2f042a0fe7ad3",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-1.18.3.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help",
    "python -m pip check",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_dark_vs_bright_injections --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_combiner --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_losc_segment_query --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_coinc_search_workflow --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_combine_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_stat_dtphase --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow",
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw",
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "cython",
    "decorator",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "kombine",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pillow",
    "pkg-config",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms",
    "requests",
    "scipy",
    "six",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pycbc"
  ]
 },
 "pinning_version": "2021.09.30.13.35.17",
 "pre_pr_migrator_attempts": {
  "python310": 1
 },
 "pre_pr_migrator_status": {
  "python310": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1559090032\">bot CI job</a>): master: ['linux_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package python-lalframe-1.5.0-py36h785e9b2_2 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n', 'osx_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package python-lalframe-1.5.0-py36h255dfe6_2 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n', 'osx_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package python-lalframe-1.5.0-py36h255dfe6_2 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n  - package scipy-0.18.1-np110py36_blas_openblas_201 requires numpy 1.10*, but none of the providers can be installed\\n', 'osx_arm64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package python-lalframe-1.5.5-py38h691f20f_0 requires python_abi 3.8.* *_cp38, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"PyCBC\" %}\n{% set version = \"1.18.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 05030790aa00b6c7476ed404f6e38016544fab3b2ef8a9ba2fe2f042a0fe7ad3\n  patches:\n    # remove lalsuite requirement from python metadata\n    - no-install_requires-lalsuite.patch\n    # enable openmp on all platforms\n    - openmp-macos.patch\n    # https://github.com/gwastro/pycbc/pull/3822\n    - intrinsics.patch\n\nbuild:\n  error_overdepending: true\n  error_overlinking: true\n  ignore_run_exports:\n    # not sure why, bot osx-arm64 for python3.9, libcxx isn't\n    # linked in the compiled extension modules\n    - libcxx  # [osx and arm64 and py>=39]\n    - python\n  number: 0\n  skip: true  # [win]\n  script:\n    - export CFLAGS=\"${CFLAGS} -fopenmp\"  # [osx]\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - llvm-openmp  # [osx]\n  host:\n    - cython\n    - libgomp  # [linux]\n    - llvm-openmp  # [osx]\n    - numpy\n    - pip\n    - python\n    - setuptools\n  run:\n    - astropy !=4.0.5,!=4.2.1,>=2.0.3\n    - beautifulsoup4 >=4.6.0\n    - cython >=0.29\n    - decorator >=3.4.2\n    - dqsegdb\n    - dqsegdb2 >=1.0.1\n    - gwdatafind\n    - h5py >=2.5\n    - jinja2\n    - kombine >=0.8.2\n    - ligo-gracedb\n    - ligo-segments\n    - llvm-openmp  # [osx]\n    - lscsoft-glue >=1.59.3\n    - mako >=1.0.1\n    - matplotlib-base >=1.5.1\n    - mpld3 >=0.3\n    - {{ pin_compatible('numpy') }}\n    - numpy !=1.19.0\n    - pkg-config\n    - pillow\n    - python\n    - python-lalframe\n    - python-lalsimulation\n    - python-pegasus-wms 4\n    - requests >=1.2.1\n    - scipy >=0.16.0\n    - six >=1.10.0\n    - tqdm\n\ntest:\n  imports:\n    - pycbc\n    - pycbc.bin_utils\n    - pycbc.boundaries\n    - pycbc.catalog\n    - pycbc.conversions\n    - pycbc.coordinates\n    - pycbc.cosmology\n    - pycbc.detector\n    - pycbc.distributions\n    - pycbc.dq\n    - pycbc.events\n    - pycbc.fft\n    - pycbc.filter\n    - pycbc.frame\n    - pycbc.inference\n    - pycbc.inference.io\n    - pycbc.inference.models\n    - pycbc.inference.sampler\n    - pycbc.inject\n    - pycbc.io\n    - pycbc.libutils\n    - pycbc.noise\n    - pycbc.opt\n    - pycbc.pnutils\n    - pycbc.pool\n    - pycbc.population\n    - pycbc.psd\n    - pycbc.rate\n    - pycbc.results\n    - pycbc.scheme\n    - pycbc.sensitivity\n    - pycbc.strain\n    - pycbc.tmpltbank\n    - pycbc.transforms\n    - pycbc.types\n    - pycbc.vetoes\n    - pycbc.waveform\n    - pycbc.workflow\n  requires:\n    - epsie\n    - fftw\n    - mpi4py\n    - openssh\n    - pip\n    - python-ligo-lw\n  commands:\n    # check requirements with pip\n    - python -m pip check\n    # test scripts\n    - export MPLBACKEND=\"agg\"\n    - pycbc_aligned_bank_cat --help\n    - pycbc_aligned_stoch_bank --help\n    - pycbc_apply_rerank --help\n    - pycbc_average_psd --help\n    - pycbc_bank_verification --help\n    - pycbc_banksim --help\n    - pycbc_banksim_combine_banks --help\n    - pycbc_banksim_match_combine --help\n    - pycbc_banksim_plot_eff_fitting_factor --help\n    - pycbc_banksim_plot_fitting_factors --help\n    - pycbc_banksim_skymax --help\n    - pycbc_banksim_table_point_injs --help\n    - pycbc_brute_bank --help\n    - pycbc_calculate_psd --help\n    - pycbc_coinc_bank2hdf --help\n    - pycbc_coinc_findtrigs --help\n    - pycbc_coinc_hdfinjfind --help\n    - pycbc_coinc_mergetrigs --help\n    - pycbc_coinc_statmap --help\n    - pycbc_coinc_statmap_inj --help\n    - pycbc_coinc_time --help\n    - pycbc_combine_coincident_events --help\n    - pycbc_combine_statmap --help\n    - pycbc_compress_bank --help\n    - pycbc_condition_strain --help\n    - pycbc_create_html_snippet --help\n    - pycbc_create_injections --help\n    - pycbc_make_coinc_search_workflow --help\n    - pycbc_cut_merge_triggers_to_tmpltbank --help\n    - pycbc_dark_vs_bright_injections --help\n    - pycbc_data_store --help\n    - pycbc_distribute_background_bins --help\n    - pycbc_faithsim --help\n    - pycbc_fit_sngl_trigs --help\n    - pycbc_fit_sngls_binned --help\n    - pycbc_fit_sngls_by_template --help\n    - pycbc_fit_sngls_over_multiparam --help\n    - pycbc_fit_sngls_over_param --help\n    - pycbc_fit_sngls_split_binned --help\n    - pycbc_followup_file --help\n    - pycbc_foreground_censor --help\n    - pycbc_foreground_minifollowup --help\n    - pycbc_generate_hwinj --help\n    - pycbc_generate_hwinj_from_xml --help\n    - pycbc_geom_aligned_2dstack --help\n    - pycbc_geom_aligned_bank --help\n    - pycbc_geom_nonspinbank --help\n    - pycbc_get_ffinal --help\n    - pycbc_get_loudest_params --help\n    - pycbc_grb_inj_combiner --help\n    - pycbc_grb_inj_finder --help\n    - pycbc_grb_trig_cluster --help\n    - pycbc_grb_trig_combiner --help\n    - pycbc_hdf5_splitbank --help\n    - pycbc_ifar_catalog --help\n    - pycbc_inference --help\n    - pycbc_inference_extract_samples --help\n    - pycbc_inference_plot_acceptance_rate --help\n    - pycbc_inference_plot_acf --help\n    - pycbc_inference_plot_acl --help\n    - pycbc_inference_plot_gelman_rubin --help\n    - pycbc_inference_plot_geweke --help\n    - pycbc_inference_plot_inj_recovery --help\n    - pycbc_inference_plot_movie --help\n    - pycbc_inference_plot_posterior --help\n    - pycbc_inference_plot_pp --help\n    - pycbc_inference_plot_prior --help\n    - pycbc_inference_plot_samples --help\n    - pycbc_inference_plot_thermodynamic_integrand --help\n    - pycbc_inference_table_summary --help\n    - pycbc_inj_cut --help\n    - pycbc_injection_minifollowup --help\n    - pycbc_insert_frame_hwinj --help\n    - pycbc_inspiral --help\n    - pycbc_inspiral_skymax --help\n    - pycbc_live --help\n    - pycbc_live_nagios_monitor --help\n    - pycbc_losc_segment_query --help\n    - pycbc_make_bank_verifier_workflow --help\n    - pycbc_make_banksim --help\n    - pycbc_make_coinc_search_workflow --help\n    - pycbc_make_faithsim --help\n    #- pycbc_make_grb_summary_page --help\n    - pycbc_make_html_page --help\n    - pycbc_make_inference_inj_workflow --help\n    - pycbc_make_inference_workflow --help\n    #- pycbc_make_offline_grb_workflow --help\n    - pycbc_make_psd_estimation_workflow --help\n    - pycbc_make_sbank_workflow --help\n    - pycbc_make_uberbank_workflow --help\n    - pycbc_mass_area_plot --help\n    - pycbc_mchirp_plots --help\n    - pycbc_merge_psds --help\n    - pycbc_multi_inspiral --help\n    - pycbc_add_statmap --help\n    - pycbc_coinc_findtrigs --help\n    - pycbc_coinc_statmap --help\n    - pycbc_coinc_statmap_inj --help\n    - pycbc_combine_statmap --help\n    - pycbc_dtphase --help\n    - pycbc_exclude_zerolag --help\n    - pycbc_optimal_snr --help\n    - pycbc_optimize_snr --help\n    - pycbc_page_banktriggerrate --help\n    - pycbc_page_coinc_snrchi --help\n    - pycbc_page_coincinfo --help\n    - pycbc_page_foreground --help\n    - pycbc_page_foundmissed --help\n    - pycbc_page_ifar --help\n    - pycbc_page_injinfo --help\n    - pycbc_page_injtable --help\n    - pycbc_page_recovery --help\n    - pycbc_page_segments --help\n    - pycbc_page_segplot --help\n    - pycbc_page_segtable --help\n    - pycbc_page_sensitivity --help\n    - pycbc_page_snglinfo --help\n    - pycbc_page_snrchi --help\n    - pycbc_page_snrifar --help\n    - pycbc_page_snrratehist --help\n    - pycbc_page_vetotable --help\n    - pycbc_plot_background_coincs --help\n    - pycbc_plot_bank_bins --help\n    - pycbc_plot_chigram --help\n    - pycbc_plot_gating --help\n    - pycbc_plot_hist --help\n    - pycbc_plot_hwinj --help\n    - pycbc_plot_psd_file --help\n    - pycbc_plot_psd_timefreq --help\n    - pycbc_plot_qscan --help\n    - pycbc_plot_range --help\n    - pycbc_plot_range_vs_mtot --help\n    - pycbc_plot_singles_timefreq --help\n    - pycbc_plot_singles_vs_params --help\n    - pycbc_plot_throughput --help\n    - pycbc_plot_trigger_timeseries --help\n    - pycbc_plot_trigrate --help\n    - pycbc_plot_vt_ratio --help\n    - pycbc_plot_waveform --help\n    - pycbc_population_plots --help\n    - pycbc_population_rates --help\n    - pycbc_process_sngls --help\n    - pycbc_pygrb_plot_chisq_veto --help\n    - pycbc_pygrb_plot_coh_ifosnr --help\n    - pycbc_pygrb_plot_skygrid --help\n    - pycbc_pygrb_plot_snr_timeseries --help\n    - pycbc_pygrb_pp_workflow --help\n    - pycbc_randomize_inj_dist_by_optsnr --help\n    - pycbc_reduce_template_bank --help\n    - pycbc_rerank_passthrough --help\n    - pycbc_single_template --help\n    - pycbc_single_template_plot --help\n    - pycbc_sngl_minifollowup --help\n    - pycbc_split_inspinj --help\n    - pycbc_splitbank --help\n    - pycbc_stat_dtphase --help\n    - pycbc_strip_injections --help\n    #- pycbc_submit_dax --help\n    - pycbc_template_recovery_hist --help\n    - pycbc_tmpltbank_to_chi_params --help\n    - pycbc_upload_xml_to_gracedb --help\n    - run_pycbc_inference --help\n\nabout:\n  home: https://pycbc.org/\n  dev_url: https://github.com/gwastro/pycbc/\n  doc_url: http://pycbc.org/pycbc/latest/html/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Core library to analyze gravitational-wave data, find signals, and study their parameters.\n  description: |\n    PyCBC is a software package used to explore astrophysical sources\n    of gravitational waves.\n    It contains algorithms that can detect coalescing compact binaries\n    and measure the astrophysical parameters of detected sources.\n    PyCBC was used in the first direct detection of gravitational\n    waves (GW150914) by LIGO and is used in the ongoing analysis of\n    LIGO and Virgo data.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - ahnitz\n",
 "req": {
  "__set__": true,
  "elements": [
   "astropy",
   "beautifulsoup4",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "decorator",
   "dqsegdb",
   "dqsegdb2",
   "gwdatafind",
   "h5py",
   "jinja2",
   "kombine",
   "libgomp",
   "ligo-gracedb",
   "ligo-segments",
   "llvm-openmp",
   "lscsoft-glue",
   "mako",
   "matplotlib-base",
   "mpld3",
   "numpy",
   "pillow",
   "pip",
   "pkg-config",
   "python",
   "python-lalframe",
   "python-lalsimulation",
   "python-pegasus-wms",
   "requests",
   "scipy",
   "setuptools",
   "six",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "libgomp",
    "llvm-openmp",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "decorator",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "kombine",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "openmp",
    "pillow",
    "pkg-config",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms",
    "requests",
    "scipy",
    "six",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libgomp",
    "llvm-openmp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "decorator >=3.4.2",
    "dqsegdb",
    "dqsegdb2 >=1.0.1",
    "gwdatafind",
    "h5py >=2.5",
    "jinja2",
    "kombine >=0.8.2",
    "ligo-gracedb",
    "ligo-segments",
    "llvm-openmp",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=1.5.1",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pillow",
    "pkg-config",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-pegasus-wms 4",
    "requests >=1.2.1",
    "scipy >=0.16.0",
    "six >=1.10.0",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "python-ligo-lw"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-1.18.3.tar.gz",
 "version": "1.18.3"
}