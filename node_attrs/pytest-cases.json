{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/528290120.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528971049.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/531017323.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/531246595.json"
   },
   "data": {
    "bot_rerun": 1606946556.4871054,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/531319404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/534808583.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/541307662.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/541537356.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/541948772.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/561294535.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/561432698.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/576372985.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/598429031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/600106701.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/605722915.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/605883495.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pytest-cases",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Did you ever think that most of your test functions were actually the same\ntest code, but with different data inputs and expected results/exceptions ?\n`pytest-cases` leverages `pytest` and its great `@pytest.mark.parametrize`\ndecorator, so that you can separate your test cases from your test\nfunctions. In addition, `pytest-cases` provides several useful goodies to\nempower `pytest`. In particular it improves the fixture mechanism to support\n\"fixture unions\". This is a major change in the internal `pytest` engine,\nunlocking many possibilities such as using fixture references as parameter\nvalues in a test function.\n",
   "dev_url": "https://github.com/smarie/python-pytest-cases",
   "doc_url": "https://smarie.github.io/python-pytest-cases",
   "home": "https://github.com/smarie/python-pytest-cases",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Separate test code from test cases in pytest."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "smarie"
   ]
  },
  "package": {
   "name": "pytest-cases",
   "version": "3.4.1"
  },
  "requirements": {
   "host": [
    "pip",
    "pytest-runner",
    "python >=3.5",
    "setuptools_scm"
   ],
   "run": [
    "decopatch >=1.4.8",
    "makefun >=1.9.5",
    "pytest >=2",
    "python >=3.5"
   ]
  },
  "source": {
   "sha256": "8ae7c9e5d72e23913e266d84fde5a239cfd09a2a60c49bd3b86be10f923bbcdc",
   "url": "https://pypi.io/packages/source/p/pytest-cases/pytest-cases-3.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pytest_cases"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest-runner",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "decopatch",
    "makefun",
    "pytest",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Did you ever think that most of your test functions were actually the same\ntest code, but with different data inputs and expected results/exceptions ?\n`pytest-cases` leverages `pytest` and its great `@pytest.mark.parametrize`\ndecorator, so that you can separate your test cases from your test\nfunctions. In addition, `pytest-cases` provides several useful goodies to\nempower `pytest`. In particular it improves the fixture mechanism to support\n\"fixture unions\". This is a major change in the internal `pytest` engine,\nunlocking many possibilities such as using fixture references as parameter\nvalues in a test function.\n",
   "dev_url": "https://github.com/smarie/python-pytest-cases",
   "doc_url": "https://smarie.github.io/python-pytest-cases",
   "home": "https://github.com/smarie/python-pytest-cases",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Separate test code from test cases in pytest."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "smarie"
   ]
  },
  "package": {
   "name": "pytest-cases",
   "version": "3.4.1"
  },
  "requirements": {
   "host": [
    "pip",
    "pytest-runner",
    "python >=3.5",
    "setuptools_scm"
   ],
   "run": [
    "decopatch >=1.4.8",
    "makefun >=1.9.5",
    "pytest >=2",
    "python >=3.5"
   ]
  },
  "source": {
   "sha256": "8ae7c9e5d72e23913e266d84fde5a239cfd09a2a60c49bd3b86be10f923bbcdc",
   "url": "https://pypi.io/packages/source/p/pytest-cases/pytest-cases-3.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pytest_cases"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "pytest-cases",
 "new_version": "3.4.3",
 "new_version_attempts": {
  "2.4.0": 1,
  "2.5.0": 1,
  "2.6.0": 1,
  "2.7.1": 2,
  "2.7.2": 1,
  "3.0.0": 1,
  "3.1.0": 1,
  "3.1.1": 1,
  "3.1.2": 1,
  "3.2.0": 1,
  "3.2.1": 1,
  "3.3.0": 1,
  "3.4.0": 1,
  "3.4.1": 1,
  "3.4.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytest-cases"
  ]
 },
 "pinning_version": "2021.03.29.15.45.30",
 "raw_meta_yaml": "{% set name = \"pytest-cases\" %}\n{% set version = \"3.4.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pytest-cases-{{ version }}.tar.gz\n  sha256: 8ae7c9e5d72e23913e266d84fde5a239cfd09a2a60c49bd3b86be10f923bbcdc\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - pytest-runner\n    - python >=3.5\n    - setuptools_scm\n  run:\n    - decopatch >=1.4.8\n    - makefun >=1.9.5\n    - pytest >=2\n    - python >=3.5\n\ntest:\n  imports:\n    - pytest_cases\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/smarie/python-pytest-cases\n  summary: Separate test code from test cases in pytest.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  description: |\n    Did you ever think that most of your test functions were actually the same\n    test code, but with different data inputs and expected results/exceptions ?\n    `pytest-cases` leverages `pytest` and its great `@pytest.mark.parametrize`\n    decorator, so that you can separate your test cases from your test\n    functions. In addition, `pytest-cases` provides several useful goodies to\n    empower `pytest`. In particular it improves the fixture mechanism to support\n    \"fixture unions\". This is a major change in the internal `pytest` engine,\n    unlocking many possibilities such as using fixture references as parameter\n    values in a test function.\n  doc_url: https://smarie.github.io/python-pytest-cases\n  dev_url: https://github.com/smarie/python-pytest-cases\n\nextra:\n  recipe-maintainers:\n    - smarie\n",
 "req": {
  "__set__": true,
  "elements": [
   "decopatch",
   "makefun",
   "pip",
   "pytest",
   "pytest-runner",
   "python",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest-runner",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "decopatch",
    "makefun",
    "pytest",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest-runner",
    "python >=3.5",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "decopatch >=1.4.8",
    "makefun >=1.9.5",
    "pytest >=2",
    "python >=3.5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pytest-cases/pytest-cases-3.4.1.tar.gz",
 "version": "3.4.1"
}