{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "mne-ari",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/john-veillette/mne_ari",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "All-resolutions Inference for M/EEG in Python."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "john-veillette",
    "hoechenberger",
    "larsoner"
   ]
  },
  "package": {
   "name": "mne-ari",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "mne-base >=0.20",
    "numpy >=1.15.4",
    "scipy >=1.1.0"
   ]
  },
  "source": {
   "sha256": "5603a88d735d8cf1f57782e8407c2dc7ce7604e91cd839a0cab76f68d8d46c0b",
   "url": "https://pypi.io/packages/source/m/mne-ari/mne_ari-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "mne_ari",
    "mne_ari.ari",
    "mne_ari.permutation",
    "mne_ari.ari.parametric",
    "mne_ari.ari.permutation"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mne-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/john-veillette/mne_ari",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "All-resolutions Inference for M/EEG in Python."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "john-veillette",
    "hoechenberger",
    "larsoner"
   ]
  },
  "package": {
   "name": "mne-ari",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "mne-base >=0.20",
    "numpy >=1.15.4",
    "scipy >=1.1.0"
   ]
  },
  "source": {
   "sha256": "5603a88d735d8cf1f57782e8407c2dc7ce7604e91cd839a0cab76f68d8d46c0b",
   "url": "https://pypi.io/packages/source/m/mne-ari/mne_ari-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "mne_ari",
    "mne_ari.ari",
    "mne_ari.permutation",
    "mne_ari.ari.parametric",
    "mne_ari.ari.permutation"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "mne-ari",
 "new_version": "0.1.2",
 "new_version_attempts": {
  "0.1.2": 36
 },
 "new_version_errors": {
  "0.1.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.1.2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ sdist_name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mne-ari"
  ]
 },
 "raw_meta_yaml": "{% set name = \"mne-ari\" %}\n{% set version = \"0.1.1\" %}\n{% set sdist_name = \"mne_ari\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ sdist_name }}-{{ version }}.tar.gz\n  sha256: 5603a88d735d8cf1f57782e8407c2dc7ce7604e91cd839a0cab76f68d8d46c0b\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - mne-base >=0.20\n    - numpy >=1.15.4\n    - scipy >=1.1.0\n\ntest:\n  imports:\n    - mne_ari\n    - mne_ari.ari\n    - mne_ari.permutation\n    - mne_ari.ari.parametric\n    - mne_ari.ari.permutation\n\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/john-veillette/mne_ari\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: All-resolutions Inference for M/EEG in Python.\n\nextra:\n  recipe-maintainers:\n    - john-veillette\n    - hoechenberger\n    - larsoner\n",
 "req": {
  "__set__": true,
  "elements": [
   "mne-base",
   "numpy",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mne-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mne-base >=0.20",
    "numpy >=1.15.4",
    "python >=3.7",
    "scipy >=1.1.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/m/mne-ari/mne_ari-0.1.1.tar.gz",
 "version": "0.1.1"
}