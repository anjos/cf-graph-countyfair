{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/474890922.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485291041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jupytab-server",
 "hash_type": "sha256",
 "name": "jupytab-server",
 "new_version": "0.9.11",
 "new_version_attempts": {
  "0.9.10": 1,
  "0.9.11": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jupytab-server"
  ]
 },
 "pinning_version": "2020.09.11.15.57.35",
 "raw_meta_yaml": "{% set name = \"jupytab-server\" %}\n{% set version = \"0.9.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: dbf18b3ac1817f274fd1693e80d02c995bcaa4d0e92811c1c038e4abd607d385\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install --no-deps . -vv\n  noarch: python\n  entry_points:\n    - jupytab=jupytab_server.jupytab:main\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - jupyter_kernel_gateway\n\ntest:\n  commands:\n    - jupytab --help\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/CFMTech/jupytab\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Connect Tableau to your Jupyter Notebook\n\n  description: |\n    Jupytab Server allows you to explore in Tableau data which is generated\n    dynamically by a Jupyter Notebook. You can thus create Tableau data\n    sources in a very flexible way using all the power of Python.\n    This is achieved by having Tableau access data through a web\n    server created by Jupytab.\n  doc_url: https://github.com/CFMTech/jupytab\n  dev_url: https://github.com/CFMTech/jupytab\n\nextra:\n  recipe-maintainers:\n    - js-dieu\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/j/jupytab-server/jupytab-server-0.9.11.tar.gz",
 "version": "0.9.11"
}