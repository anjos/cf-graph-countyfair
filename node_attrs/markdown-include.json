{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "markdown-include",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is an extension to Python-Markdown which provides an \"include\" function,\nsimilar to that found in LaTeX (and also the C pre-processor and Fortran). I\noriginally wrote it for my FORD Fortran auto-documentation generator.\n",
   "home": "https://github.com/cmacmackin/markdown-include/",
   "license": "GPL-3.0-or-later",
   "license_file": "LICENSE.txt",
   "summary": "Provides syntax for Python-Markdown which allows for the inclusion of the contents of other Markdown documents."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim"
   ]
  },
  "package": {
   "name": "markdown-include",
   "version": "0.6.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=2.7"
   ],
   "run": [
    "markdown",
    "python >=2.7"
   ]
  },
  "source": {
   "sha256": "6f5d680e36f7780c7f0f61dca53ca581bd50d1b56137ddcd6353efafa0c3e4a2",
   "url": "https://pypi.io/packages/source/m/markdown-include/markdown-include-0.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "markdown_include"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markdown",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is an extension to Python-Markdown which provides an \"include\" function,\nsimilar to that found in LaTeX (and also the C pre-processor and Fortran). I\noriginally wrote it for my FORD Fortran auto-documentation generator.\n",
   "home": "https://github.com/cmacmackin/markdown-include/",
   "license": "GPL-3.0-or-later",
   "license_file": "LICENSE.txt",
   "summary": "Provides syntax for Python-Markdown which allows for the inclusion of the contents of other Markdown documents."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hadim"
   ]
  },
  "package": {
   "name": "markdown-include",
   "version": "0.6.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=2.7"
   ],
   "run": [
    "markdown",
    "python >=2.7"
   ]
  },
  "source": {
   "sha256": "6f5d680e36f7780c7f0f61dca53ca581bd50d1b56137ddcd6353efafa0c3e4a2",
   "url": "https://pypi.io/packages/source/m/markdown-include/markdown-include-0.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "markdown_include"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "markdown-include",
 "new_version": "0.7.0",
 "new_version_attempts": {
  "0.7.0": 2
 },
 "new_version_errors": {
  "0.7.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.7.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/markdown-include-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "markdown-include"
  ]
 },
 "raw_meta_yaml": "{% set name = \"markdown-include\" %}\n{% set version = \"0.6.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/markdown-include-{{ version }}.tar.gz\n  sha256: 6f5d680e36f7780c7f0f61dca53ca581bd50d1b56137ddcd6353efafa0c3e4a2\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=2.7\n  run:\n    - markdown\n    - python >=2.7\n\ntest:\n  imports:\n    - markdown_include\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/cmacmackin/markdown-include/\n  summary:  Provides syntax for Python-Markdown which allows for the inclusion of the contents of other Markdown documents. \n  description: |\n    This is an extension to Python-Markdown which provides an \"include\" function,\n    similar to that found in LaTeX (and also the C pre-processor and Fortran). I\n    originally wrote it for my FORD Fortran auto-documentation generator.\n  license: GPL-3.0-or-later\n  license_file: LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - hadim\n",
 "req": {
  "__set__": true,
  "elements": [
   "markdown",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markdown",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=2.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markdown",
    "python >=2.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/m/markdown-include/markdown-include-0.6.0.tar.gz",
 "version": "0.6.0"
}