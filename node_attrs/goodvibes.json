{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/906047915.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1009070016.json"
   },
   "data": {
    "bot_rerun": 1660086003.3364856,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1021963490.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1022087014.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "goodvibes",
 "hash_type": "sha256",
 "name": "goodvibes",
 "new_version": "3.2",
 "new_version_attempts": {
  "3.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "goodvibes"
  ]
 },
 "pinning_version": "2022.08.09.17.28.58",
 "raw_meta_yaml": "{% set name = \"goodvibes\" %}\n{% set version = \"3.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: b3cb7d4679b12440833f6add0e283190db53e31e5aea95f0a8e3c734b73da57e\n\nbuild:\n  number: 0\n  entry_points:\n    - goodvibes = goodvibes.GoodVibes:main\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n  run:\n    - cclib\n    - numpy\n    - python\n\ntest:\n  imports:\n    - goodvibes\n    - goodvibes.GoodVibes\n    - goodvibes.thermo\n    - goodvibes.pes\n  requires:\n    - pip\n  commands:\n    - pip check\n    - goodvibes --help\n\nabout:\n  home: https://github.com/patonlab/goodvibes\n  license: MIT\n  license_file:\n    - LICENSE.txt # GoodVibes license\n    - symmetry.LICENSE.txt # Symmetry license\n  summary: A python program to compute corrections to thermochemical data from frequency calculations\n\nextra:\n  recipe-maintainers:\n    - luchini18\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/goodvibes/goodvibes-3.2.tar.gz",
 "version": "3.2"
}