{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/794653878.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911319892.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "enchant",
 "hash_type": "sha256",
 "name": "enchant",
 "new_version": "2.3.3",
 "new_version_attempts": {
  "2.3.2": 1,
  "2.3.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "enchant"
  ]
 },
 "pinning_version": "2022.04.16.05.14.45",
 "raw_meta_yaml": "{% set name = \"enchant\" %}\n{% set version = \"2.3.3\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/AbiWord/{{ name }}/releases/download/v{{ version }}/enchant-{{ version }}.tar.gz\n  sha256: 3da12103f11cf49c3cf2fd2ce3017575c5321a489e5b9bfa81dd91ec413f3891\n\nbuild:\n  number: 0\n  skip: true  # [not linux]\n  run_exports:\n    - {{ pin_subpackage('enchant', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - make\n    - pkg-config\n    - autoconf\n    - automake\n    - libtool\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - glib\n    - hunspell\n  run:\n    - glib\n    - hunspell\n\ntest:\n  commands:\n    - enchant-2 -v  # [unix]\n\nabout:\n  home: https://abiword.github.io/enchant/\n  license: LGPL-2.1-only\n  license_family: LGPL\n  license_file: COPYING.LIB\n  summary: enchant spellchecking library\n\nextra:\n  recipe-maintainers:\n    - izahn\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/AbiWord/enchant/releases/download/v2.3.3/enchant-2.3.3.tar.gz",
 "version": "2.3.3"
}