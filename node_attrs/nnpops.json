{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "nnpops",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/openmm/NNPOps",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "High performance implementations of operations used in Neural Network Potentials"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib"
   ],
   "string": "cuda111py38h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "nnpops",
   "version": "0.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake"
   ],
   "host": [
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest"
   ],
   "run": [
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani"
   ]
  },
  "source": {
   "sha256": "0d770b1b6d48a6d76e6dce9b3da996da27a3767e6a0548bb5921d49c65adb635",
   "url": "https://github.com/openmm/NNPOps/archive/refs/tags/v0.2.tar.gz"
  },
  "test": {
   "imports": [
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "mdtraj",
    "pytest",
    "python",
    "pytorch",
    "torchani"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "pytorch",
    "torchani"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/openmm/NNPOps",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "High performance implementations of operations used in Neural Network Potentials"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/lib/python3.8/site-packages/torch/lib"
   ],
   "string": "cuda111py38h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "nnpops",
   "version": "0.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64  2.17",
    "make",
    "cmake"
   ],
   "host": [
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani",
    "mdtraj",
    "pytest"
   ],
   "run": [
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani",
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani"
   ]
  },
  "source": {
   "sha256": "0d770b1b6d48a6d76e6dce9b3da996da27a3767e6a0548bb5921d49c65adb635",
   "url": "https://github.com/openmm/NNPOps/archive/refs/tags/v0.2.tar.gz"
  },
  "test": {
   "imports": [
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI",
    "NNPOps",
    "NNPOps.OptimizedTorchANI"
   ]
  }
 },
 "name": "nnpops",
 "new_version": "0.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nnpops"
  ]
 },
 "raw_meta_yaml": "{% set name = \"nnpops\" %}\n{% set version = \"0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openmm/NNPOps/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 0d770b1b6d48a6d76e6dce9b3da996da27a3767e6a0548bb5921d49c65adb635\n\nbuild:\n  skip: true  # [(not linux) or (cuda_compiler_version in (undefined, 'None'))]\n  number: 0\n  rpaths:\n    - lib/\n    - {{ SP_DIR }}/torch/lib\n  missing_dso_whitelist:\n    - '*/libcuda.*'  # [linux64]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - sysroot_linux-64  2.17  # [linux64]\n    - make\n    - cmake\n  host:\n    - python \n    - pytorch 1.10.0\n    - pytorch =*=*cuda*\n    - torchani\n    - mdtraj\n    - pytest\n  run:\n    - python\n    - {{ pin_compatible(\"pytorch\", max_pin=\"x.x.x\") }}\n    - pytorch =*=*cuda*\n    - torchani\n\ntest:\n  imports:\n    - NNPOps\n    - NNPOps.OptimizedTorchANI\n\nabout:\n  home: https://github.com/openmm/NNPOps\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: \"High performance implementations of operations used in Neural Network Potentials\"\n\nextra:\n  recipe-maintainers:\n    - mikemhenry\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "make",
   "mdtraj",
   "pytest",
   "python",
   "pytorch",
   "sysroot_linux-64",
   "torchani"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot",
    "mdtraj",
    "pytest",
    "python",
    "pytorch",
    "torchani"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot",
    "python",
    "pytorch",
    "torchani"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "sysroot_linux-64  2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "mdtraj",
    "pytest",
    "python",
    "pytorch 1.10.0",
    "pytorch =*=*cuda*",
    "torchani"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "pytorch",
    "pytorch =*=*cuda*",
    "torchani"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/openmm/NNPOps/archive/refs/tags/v0.2.tar.gz",
 "version": "0.2"
}