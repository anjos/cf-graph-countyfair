{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/237185760.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244707926.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345517978.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0.pre1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/349822399.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/430616826.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "intel-vaapi-driver",
 "hash_type": "sha1",
 "name": "intel-vaapi-driver",
 "new_version": "2.4.1",
 "new_version_attempts": {
  "2.4.1": 17
 },
 "new_version_errors": {
  "2.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/intel/{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.bz2'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "intel-vaapi-driver"
  ]
 },
 "pinning_version": "2020.06.07.16.42.19",
 "raw_meta_yaml": "{% set name = \"intel-vaapi-driver\" %}\n{% set version = \"2.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/intel/{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.bz2\n  sha1: c998e06f13238c6419bb38ede9a13e453312737b\n\nbuild:\n  skip: true  # [not linux]\n  number: 0\n  # https://github.com/intel/intel-vaapi-driver/blob/master/NEWS\n  run_exports:\n    - {{ pin_subpackage('intel-vaapi-driver', max_pin='x.x') }}\n  script:\n    - ./configure --prefix=$PREFIX --enable-hybrid-codec\n    - make -j$(nproc) install\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - pkg-config\n  host:\n    - intel-hybrid-driver\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/dri/i965_drv_video.so\n\nabout:\n  home: https://github.com/intel/intel-vaapi-driver\n  license: MIT\n  license_family: MIT\n  license_file: COPYING\n  summary: VA-API (Video Acceleration API) user mode driver for Intel GEN Graphics family\n\n  # The remaining entries in this section are optional, but recommended\n  description: |\n    VA-API is an open-source library and API specification, which provides\n    access to graphics hardware acceleration capabilities for video processing.\n    It consists of a main library and driver-specific acceleration backends for\n    each supported hardware vendor.\n\n    The current video driver backend provides a bridge to the GEN GPUs through\n    the packaging of buffers and commands to be sent to the i915 driver for\n    exercising both hardware and shader functionality for video decode, encode,\n    and processing.\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports": false,
 "url": "https://github.com/intel/intel-vaapi-driver/releases/download/2.4.1/intel-vaapi-driver-2.4.1.tar.bz2",
 "version": "2.4.1"
}