{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/212025950.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217498461.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260961738.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299385325.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "icu-64.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/416872901.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu67"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513976101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542649330.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu68"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836962544.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.95"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/840125943.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.96"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896035768.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "fontconfig",
 "hash_type": "sha256",
 "name": "fontconfig",
 "new_version": "2.14.0",
 "new_version_attempts": {
  "2.13.95": 1,
  "2.13.96": 1,
  "2.14.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fontconfig"
  ]
 },
 "pinning_version": "2022.03.31.11.51.51",
 "raw_meta_yaml": "{% set version = \"2.14.0\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: fontconfig\n  version: {{ version }}\n\nsource:\n  url: http://www.freedesktop.org/software/fontconfig/release/fontconfig-{{ version }}.tar.gz\n  sha256: b8f607d556e8257da2f3616b4d704be30fd73bd71e367355ca78963f9a7f0434\n  patches:\n    # This patch won't be submitted upstream. It sets us up to always find the right Conda files:\n    - linux-custom-paths.patch  # [linux]\n    - windows-compat.patch      # [win]\n\nbuild:\n  number: 0\n  binary_has_prefix_files:   # [unix]\n    - lib/libfontconfig.so.1.*    # [linux]\n    - lib/libfontconfig.*.dylib*  # [osx]\n  run_exports:\n    # remove symbols basically never (once, in 2006).\n    #    https://abi-laboratory.pro/tracker/timeline/fontconfig/\n    - {{ pin_subpackage('fontconfig') }}\n    - fonts-conda-ecosystem\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ posix }}gperf\n    - meson\n    - ninja\n    - {{ native }}pkg-config\n    - python\n  host:\n    - expat\n    - freetype\n    - libiconv  # [win]\n    - libuuid   # [linux]\n\ntest:\n  commands:\n    # Test CLI.\n    - fc-cache --help  # [not win]\n    - fc-cat --help  # [not win]\n    - fc-list\n    - fc-match --help  # [not win]\n    - fc-pattern --help  # [not win]\n    - fc-query --help  # [not win]\n    - fc-scan --help  # [not win]\n    - fc-validate --help  # [not win]\n\n    # Test for libraries.\n    {% set lib_idents = [ \"fontconfig\" ] %}\n    {% for lib_ident in lib_idents %}\n    - test -f $PREFIX/lib/lib{{ lib_ident }}.a  # [not win]\n    - test -f $PREFIX/lib/lib{{ lib_ident }}${SHLIB_EXT}  # [not win]\n    - if not exist %PREFIX%/Library/lib/{{ lib_ident }}.lib exit /b 1    # [win]\n    - if not exist %PREFIX%/Library/bin/{{ lib_ident }}-1.dll exit /b 1  # [win]\n    {% endfor %}\n\nabout:\n  home: http://www.freedesktop.org/wiki/Software/fontconfig/\n  license: MIT\n  license_file: COPYING\n  summary: A library for configuring and customizing font access\n  description: |\n    Fontconfig is a library designed to provide system-wide font configuration,\n    customization and application access.\n  doc_url: https://www.freedesktop.org/software/fontconfig/fontconfig-user.html\n  dev_url: https://cgit.freedesktop.org/fontconfig/\n\nextra:\n  recipe-maintainers:\n    - ccordoba12\n    - jakirkham\n    - mingwandroid\n    - ocefpaf\n    - pkgw\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "http://www.freedesktop.org/software/fontconfig/release/fontconfig-2.14.0.tar.gz",
 "version": "2.14.0"
}