{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/898126335.json"
   },
   "data": {
    "bot_rerun": 1649924400.0371175,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898174243.json"
   },
   "data": {
    "bot_rerun": 1649924400.0373633,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909709474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909733008.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1107866989.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1197737145.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "abess",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "abess (Adaptive BEst-Subset Selection) library aims to solve general best subset selection, i.e.,\nfind a small subset of predictors such that the resulting model is expected to have the highest accuracy.\nThis library implements a generic algorithm framework to find the optimal solution in an extremely fast way.\nThis framework now supports the detection of best subset under:\nlinear regression, (multi-class) classification, censored-response modeling,\nmulti-response modeling (a.k.a. multi-tasks learning), etc.\nIt also supports the variants of best subset selection like group best subset selection.\nEspecially, the time complexity of (group) best subset selection for linear regression is certifiably polynomial.\n",
   "dev_url": "https://github.com/abess-team/abess",
   "doc_url": "https://abess.readthedocs.io",
   "home": "https://abess.readthedocs.io",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Fast Best-Subset Selection"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413"
   ]
  },
  "package": {
   "name": "abess",
   "version": "0.4.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "libgomp"
   ],
   "host": [
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy"
   ],
   "run": [
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python"
   ]
  },
  "source": {
   "sha256": "435096e3b7a6f271e2cc14b0b5e7b2d92889435594ecb3455dd4b35cb23cd26c",
   "url": "https://pypi.io/packages/source/a/abess/abess-0.4.5.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "abess",
    "abess",
    "abess",
    "abess"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libgomp",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "libgcc-ng",
    "libstdcxx-ng",
    "numpy",
    "python",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "abess (Adaptive BEst-Subset Selection) library aims to solve general best subset selection, i.e.,\nfind a small subset of predictors such that the resulting model is expected to have the highest accuracy.\nThis library implements a generic algorithm framework to find the optimal solution in an extremely fast way.\nThis framework now supports the detection of best subset under:\nlinear regression, (multi-class) classification, censored-response modeling,\nmulti-response modeling (a.k.a. multi-tasks learning), etc.\nIt also supports the variants of best subset selection like group best subset selection.\nEspecially, the time complexity of (group) best subset selection for linear regression is certifiably polynomial.\n",
   "dev_url": "https://github.com/abess-team/abess",
   "doc_url": "https://abess.readthedocs.io",
   "home": "https://abess.readthedocs.io",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Fast Best-Subset Selection"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413"
   ]
  },
  "package": {
   "name": "abess",
   "version": "0.4.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "libgomp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp"
   ],
   "host": [
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy"
   ],
   "run": [
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "_openmp_mutex",
    "libstdcxx-ng",
    "libgcc-ng",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python"
   ]
  },
  "source": {
   "sha256": "435096e3b7a6f271e2cc14b0b5e7b2d92889435594ecb3455dd4b35cb23cd26c",
   "url": "https://pypi.io/packages/source/a/abess/abess-0.4.5.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess",
    "abess"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "abess",
 "new_version": "0.4.6",
 "new_version_attempts": {
  "0.4.5": 2,
  "0.4.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "abess (Adaptive BEst-Subset Selection) library aims to solve general best subset selection, i.e.,\nfind a small subset of predictors such that the resulting model is expected to have the highest accuracy.\nThis library implements a generic algorithm framework to find the optimal solution in an extremely fast way.\nThis framework now supports the detection of best subset under:\nlinear regression, (multi-class) classification, censored-response modeling,\nmulti-response modeling (a.k.a. multi-tasks learning), etc.\nIt also supports the variants of best subset selection like group best subset selection.\nEspecially, the time complexity of (group) best subset selection for linear regression is certifiably polynomial.\n",
   "dev_url": "https://github.com/abess-team/abess",
   "doc_url": "https://abess.readthedocs.io",
   "home": "https://abess.readthedocs.io",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Fast Best-Subset Selection"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413"
   ]
  },
  "package": {
   "name": "abess",
   "version": "0.4.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp",
    "cxx_compiler_stub",
    "python",
    "llvm-openmp"
   ],
   "host": [
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy"
   ],
   "run": [
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "libcxx",
    "python"
   ]
  },
  "source": {
   "sha256": "435096e3b7a6f271e2cc14b0b5e7b2d92889435594ecb3455dd4b35cb23cd26c",
   "url": "https://pypi.io/packages/source/a/abess/abess-0.4.5.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "abess",
    "abess",
    "abess",
    "abess"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "llvm-openmp",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx",
    "numpy",
    "python",
    "scikit-learn",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "abess"
  ]
 },
 "pinning_version": "2023.01.14.17.24.24",
 "raw_meta_yaml": "{% set name = \"abess\" %}\n{% set version = \"0.4.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 435096e3b7a6f271e2cc14b0b5e7b2d92889435594ecb3455dd4b35cb23cd26c\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - python\n    - llvm-openmp   # [osx]\n    - libgomp       # [linux]\n    - intel-openmp  # [win]\n  host:\n    - pip\n    - python\n    - pybind11 >=2.6.0\n    - numpy\n  run:\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - scikit-learn >=0.24\n    - _openmp_mutex   # [linux]\n    - libstdcxx-ng    # [linux]\n    - libgcc-ng       # [linux]\n    - libcxx          # [osx]\n    - vs2015_runtime  # [win]\n    - python\n\ntest:\n  imports:\n    - abess\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://abess.readthedocs.io\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Fast Best-Subset Selection\n  description: |\n    abess (Adaptive BEst-Subset Selection) library aims to solve general best subset selection, i.e., \n    find a small subset of predictors such that the resulting model is expected to have the highest accuracy. \n    This library implements a generic algorithm framework to find the optimal solution in an extremely fast way. \n    This framework now supports the detection of best subset under: \n    linear regression, (multi-class) classification, censored-response modeling, \n    multi-response modeling (a.k.a. multi-tasks learning), etc. \n    It also supports the variants of best subset selection like group best subset selection. \n    Especially, the time complexity of (group) best subset selection for linear regression is certifiably polynomial.\n  doc_url: https://abess.readthedocs.io\n  dev_url: https://github.com/abess-team/abess\n\nextra:\n  recipe-maintainers:\n    - oooo26\n    - Mamba413\n",
 "req": {
  "__set__": true,
  "elements": [
   "_openmp_mutex",
   "cxx_compiler_stub",
   "intel-openmp",
   "libcxx",
   "libgcc-ng",
   "libgomp",
   "libstdcxx-ng",
   "llvm-openmp",
   "numpy",
   "pip",
   "pybind11",
   "python",
   "scikit-learn",
   "scipy",
   "vs2015_runtime"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "intel-openmp",
    "libgomp",
    "llvm-openmp",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ctng-compilers",
    "cxx_compiler_stub",
    "numpy",
    "openmp",
    "pip",
    "pybind11",
    "python",
    "vc"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libcxx",
    "libgcc-ng",
    "libstdcxx-ng",
    "numpy",
    "openmp",
    "python",
    "scikit-learn",
    "scipy",
    "vc",
    "vs2015_runtime"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "intel-openmp",
    "libgomp",
    "llvm-openmp",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11 >=2.6.0",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "libcxx",
    "libgcc-ng",
    "libstdcxx-ng",
    "numpy",
    "python",
    "scikit-learn >=0.24",
    "scipy",
    "vs2015_runtime"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/a/abess/abess-0.4.5.tar.gz",
 "version": "0.4.5",
 "win_64_meta_yaml": {
  "about": {
   "description": "abess (Adaptive BEst-Subset Selection) library aims to solve general best subset selection, i.e.,\nfind a small subset of predictors such that the resulting model is expected to have the highest accuracy.\nThis library implements a generic algorithm framework to find the optimal solution in an extremely fast way.\nThis framework now supports the detection of best subset under:\nlinear regression, (multi-class) classification, censored-response modeling,\nmulti-response modeling (a.k.a. multi-tasks learning), etc.\nIt also supports the variants of best subset selection like group best subset selection.\nEspecially, the time complexity of (group) best subset selection for linear regression is certifiably polynomial.\n",
   "dev_url": "https://github.com/abess-team/abess",
   "doc_url": "https://abess.readthedocs.io",
   "home": "https://abess.readthedocs.io",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Fast Best-Subset Selection"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413",
    "oooo26",
    "Mamba413"
   ]
  },
  "package": {
   "name": "abess",
   "version": "0.4.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "intel-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp",
    "cxx_compiler_stub",
    "python",
    "intel-openmp"
   ],
   "host": [
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy",
    "pip",
    "python",
    "pybind11 >=2.6.0",
    "numpy"
   ],
   "run": [
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python",
    "numpy",
    "scipy",
    "scikit-learn >=0.24",
    "vs2015_runtime",
    "python"
   ]
  },
  "source": {
   "sha256": "435096e3b7a6f271e2cc14b0b5e7b2d92889435594ecb3455dd4b35cb23cd26c",
   "url": "https://pypi.io/packages/source/a/abess/abess-0.4.5.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "abess",
    "abess",
    "abess",
    "abess"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "intel-openmp",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "vs2015_runtime"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}