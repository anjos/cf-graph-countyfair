{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/898126335.json"
   },
   "data": {
    "bot_rerun": 1649924400.0371175,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898174243.json"
   },
   "data": {
    "bot_rerun": 1649924400.0373633,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909709474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909733008.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "abess",
 "hash_type": "sha256",
 "name": "abess",
 "new_version": "0.4.5",
 "new_version_attempts": {
  "0.4.5": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "abess"
  ]
 },
 "pinning_version": "2022.04.13.14.53.36",
 "raw_meta_yaml": "{% set name = \"abess\" %}\n{% set version = \"0.4.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 435096e3b7a6f271e2cc14b0b5e7b2d92889435594ecb3455dd4b35cb23cd26c\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - python\n    - llvm-openmp   # [osx]\n    - libgomp       # [linux]\n    - intel-openmp  # [win]\n  host:\n    - pip\n    - python\n    - pybind11 >=2.6.0\n    - numpy\n  run:\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - scikit-learn >=0.24\n    - _openmp_mutex   # [linux]\n    - libstdcxx-ng    # [linux]\n    - libgcc-ng       # [linux]\n    - libcxx          # [osx]\n    - vs2015_runtime  # [win]\n    - python\n\ntest:\n  imports:\n    - abess\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://abess.readthedocs.io\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Fast Best-Subset Selection\n  description: |\n    abess (Adaptive BEst-Subset Selection) library aims to solve general best subset selection, i.e., \n    find a small subset of predictors such that the resulting model is expected to have the highest accuracy. \n    This library implements a generic algorithm framework to find the optimal solution in an extremely fast way. \n    This framework now supports the detection of best subset under: \n    linear regression, (multi-class) classification, censored-response modeling, \n    multi-response modeling (a.k.a. multi-tasks learning), etc. \n    It also supports the variants of best subset selection like group best subset selection. \n    Especially, the time complexity of (group) best subset selection for linear regression is certifiably polynomial.\n  doc_url: https://abess.readthedocs.io\n  dev_url: https://github.com/abess-team/abess\n\nextra:\n  recipe-maintainers:\n    - oooo26\n    - Mamba413\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/abess/abess-0.4.5.tar.gz",
 "version": "0.4.5"
}