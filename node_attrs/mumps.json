{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/197276480.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228854077.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262667981.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/271688055.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/288746877.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/309134486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/316903377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "ptscotch-6.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321000868.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "scotch-6.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401613786.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "scotch609"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503281606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554525075.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openmpi41"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573199994.json"
   },
   "data": {
    "bot_rerun": 1628241777.51037,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616641828.json"
   },
   "data": {
    "bot_rerun": 1628241777.510598,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/702260305.json"
   },
   "data": {
    "bot_rerun": 1647030605.44089,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/704507671.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/876979771.json"
   },
   "data": {
    "bot_rerun": 1647030605.4413047,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877883587.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878096959.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910099788.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995422083.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "mumps",
 "hash_type": "sha256",
 "name": "mumps",
 "new_version": "5.5.1",
 "new_version_attempts": {
  "5.3.0": 78,
  "5.3.1": 2439,
  "5.4.0": 1,
  "5.4.1": 2,
  "5.5.0": 1,
  "5.5.1": 1
 },
 "new_version_errors": {
  "5.3.0": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 70, column 7:\n          commands:\n          ^ (line: 70)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 74, column 19:\n              'smumps',\n                      ^ (line: 74)",
  "5.3.1": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 70, column 7:\n          commands:\n          ^ (line: 70)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 74, column 19:\n              'smumps',\n                      ^ (line: 74)"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mumps-include",
   "mumps-mpi",
   "mumps-seq"
  ]
 },
 "pinning_version": "2022.07.12.18.44.47",
 "raw_meta_yaml": "{% set name = \"mumps\" %}\n{% set version = \"5.2.1\" %}\n{% set sha256 = \"d988fc34dfc8f5eee0533e361052a972aa69cc39ab193e7f987178d24981744a\" %}\n\npackage:\n  name: mumps\n  version: {{ version }}\n\nsource:\n  fn: MUMPS_{{ version }}.tar.gz\n  url: http://mumps.enseeiht.fr/MUMPS_{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - shared-pord.patch\n    - shared-mumps.patch\n    - shared-libseq.patch\n    - examples-mpilibs.patch\n    - flang-support.patch\n\nbuild:\n  number: 11\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    # dummy unused top-level requirements\n    # needed to construct the right conda-smithy matrix\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - m2-patch  # [win]\n    - mpi * {{ mpi }}  # [mpi != 'nompi']\n\noutputs:\n  - name: mumps-include\n    build:\n      script: ${RECIPE_DIR}/build-headers.sh\n      skip: true  # [win]\n    requirements:\n      build: []\n      host: []\n    test:\n      commands:\n        - test -f \"${PREFIX}/include/mumps_compat.h\"\n\n  - name: mumps-seq\n    build:\n      script: ${RECIPE_DIR}/build-seq.sh  # [not win]\n      script: \"%RECIPE_DIR%\\\\bld-seq.bat\"  # [win]\n      run_exports:\n        - {{ pin_subpackage('mumps-seq', max_pin='x.x.x') }}\n      skip: true  # [(win and vc<14) or mpi != 'nompi']\n    requirements:\n      build:\n        - cmake  # [win]\n        - m2-patch  # [win]\n        - {{ compiler('fortran') }}\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - libblas\n        - liblapack\n        - metis  # [not win]\n        - scotch  # [not win]\n      run:\n        - {{ pin_subpackage('mumps-include', max_pin='x.x.x') }}  # [not win]\n        - metis  # [not win]\n        - scotch  # [not win]\n\n    test:\n      commands:\n        {% if not win %}\n\n        {% for lib in [\n          'smumps',\n          'dmumps',\n          'cmumps',\n          'zmumps',\n          'mumps_common',\n          'pord',\n        ] %}\n        - test -f \"${PREFIX}/lib/lib{{ lib }}_seq-{{ version }}${SHLIB_EXT}\"\n        - test -f \"${PREFIX}/lib/lib{{ lib }}_seq${SHLIB_EXT}\"\n        - test -h \"${PREFIX}/lib/lib{{ lib }}_seq${SHLIB_EXT}\"\n        {% endfor %}\n        - test -f \"${PREFIX}/lib/libmpiseq_seq-{{ version }}${SHLIB_EXT}\"\n        - test -f \"${PREFIX}/lib/libmpiseq_seq${SHLIB_EXT}\"\n        - test -h \"${PREFIX}/lib/libmpiseq_seq${SHLIB_EXT}\"\n        - test -f \"${PREFIX}/lib/libmpiseq${SHLIB_EXT}\"\n        - test -h \"${PREFIX}/lib/libmpiseq${SHLIB_EXT}\"\n        - test -f \"${PREFIX}/include/mumps_seq/mpi.h\"\n        - test -f \"${PREFIX}/include/mumps_seq/mpif.h\"\n        {% else %}\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\smumps.dll\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\smumps.lib\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\dmumps.dll\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\dmumps.lib\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\cmumps.dll\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\cmumps.lib\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\zmumps.dll\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\bin\\zmumps.lib\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\lib\\mumps_common.lib\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\lib\\pord.lib\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\include\\dmumps_struc.h\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\include\\mumps_compat.h\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\include\\mumps_seq\\mpi.h\" exit 1\n        - if not exist \"%LIBRARY_PREFIX%\\include\\mumps_seq\\mpif.h\" exit 1\n        {% endif %}\n\n  - name: mumps-mpi\n    build:\n      skip: true  # [win or mpi == 'nompi']\n      script: ${RECIPE_DIR}/build-mpi.sh\n      run_exports:\n        - {{ pin_subpackage('mumps-mpi', max_pin='x.x.x') }}  # [not win]\n      features:\n    requirements:\n      build:\n        - {{ compiler('fortran') }}\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - libblas\n        - liblapack\n        - {{ mpi }}\n        - metis\n        - parmetis\n        - ptscotch\n        - scalapack\n        - scotch\n      run:\n        - {{ pin_subpackage('mumps-include', exact=True) }}\n        - {{ mpi }}\n        - metis\n        - parmetis\n        - ptscotch\n        - scalapack\n        - scotch\n\n    test:\n      commands:\n        {% for lib in [\n          'smumps',\n          'dmumps',\n          'cmumps',\n          'zmumps',\n          'mumps_common',\n          'pord',\n        ] %}\n        - test -f \"${PREFIX}/lib/lib{{ lib }}-{{ version }}${SHLIB_EXT}\"\n        - test -h \"${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}\"\n        - test -f \"${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}\"\n        {% endfor %}\n        - test ! -f \"${PREFIX}/lib/libmpiseq*\"\n        - test ! -d \"${PREFIX}/include/mumps_seq\"\n\nabout:\n  home: http://mumps.enseeiht.fr/\n  license: CECILL-C\n  license_file: LICENSE\n  summary: 'MUMPS: a parallel sparse direct solver'\n  description: |\n    MUMPS (MUltifrontal Massively Parallel Solver) is a package for solving\n    systems of linear equations of the form Ax = b, where A is a square sparse\n    matrix that can be either unsymmetric, symmetric positive definite, or\n    general symmetric, on distributed memory computers. MUMPS implements a\n    direct method based on a multifrontal approach which performs a Gaussian\n    factorization.\n  doc_url: http://mumps.enseeiht.fr/index.php?page=doc\n\nextra:\n  recipe-maintainers:\n    - basnijholt\n    - dalcinl\n    - minrk\n    - jbweston\n    - davidbrochart\n    - SylvainCorlay\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "http://mumps.enseeiht.fr/MUMPS_5.2.1.tar.gz",
 "version": "5.2.1"
}