{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/401563040.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4_c192"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404388712.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526022284.json"
   },
   "data": {
    "bot_rerun": 1609518668.1823838,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547023503.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4-c193"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547648762.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/715416063.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/942007610.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4_c19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1011168021.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "hdf5-external-filter-plugins",
 "hash_type": "sha256",
 "name": "hdf5-external-filter-plugins",
 "new_version": "0.1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hdf5-external-filter-plugins",
   "hdf5-external-filter-plugins-bitshuffle",
   "hdf5-external-filter-plugins-bzip2",
   "hdf5-external-filter-plugins-lz4"
  ]
 },
 "pinning_version": "2022.07.28.08.23.03",
 "pre_pr_migrator_attempts": {
  "lz4-c193": 1
 },
 "pre_pr_migrator_status": {
  "lz4-c193": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1042, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 222, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 216, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"hdf5-external-filter-plugins\" %}\n{% set version = \"0.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/nexusformat/HDF5-External-Filter-Plugins/archive/v{{ version }}.tar.gz\n  sha256: 3d0d93cb71e1f384e827fbc9808d72b0984195ab337cca697c66205e7c135b0d\n  patches:\n    - patches/0001-Disable-MSI-build.patch  # [win]\n    - patches/0002-Do-not-distribute-VC-runtimes.patch  # [win]\n\nbuild:\n  number: 9\n\nrequirements:\n  run:\n    - {{ pin_subpackage(name|lower + '-bitshuffle', exact=True) }}\n    - {{ pin_subpackage(name|lower + '-bzip2', exact=True) }}\n    - {{ pin_subpackage(name|lower + '-lz4', exact=True) }}\n\noutputs:\n  - name: {{ name|lower + '-bitshuffle' }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake >=3.0.0\n        - make  # [not win]\n        - ninja  # [win]\n      host:\n        - hdf5\n        - lz4-c\n    script: build-bitshuffle.sh  # [not win]\n    script: build-bitshuffle.bat  # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/plugins/libh5bshuf.so                           # [not win]\n        - test -f $PREFIX/lib/hdf5/plugin/libh5bshuf.so                       # [not win]\n        - if not exist %PREFIX%\\\\lib\\\\plugins\\\\h5bshuf.dll exit 1             # [win]\n        - if not exist %PREFIX%\\\\lib\\\\hdf5\\\\plugin\\\\h5bshuf.dll exit 1        # [win]\n\n  - name: {{ name|lower + '-bzip2' }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake >=3.0.0\n        - make  # [not win]\n        - ninja  # [win]\n      host:\n        - bzip2\n        - hdf5\n    script: build-bzip2.sh  # [not win]\n    script: build-bzip2.bat  # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/plugins/libh5bz2.so                        # [not win]\n        - test -f $PREFIX/lib/hdf5/plugin/libh5bz2.so                    # [not win]\n        - if not exist %PREFIX%\\\\lib\\\\plugins\\\\h5bz2.dll exit 1          # [win]\n        - if not exist %PREFIX%\\\\lib\\\\hdf5\\\\plugin\\\\h5bz2.dll exit 1     # [win]\n\n  - name: {{ name|lower + '-lz4' }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake >=3.0.0\n        - make  # [not win]\n        - ninja  # [win]\n      host:\n        - hdf5\n        - lz4-c\n    script: build-lz4.sh  # [not win]\n    script: build-lz4.bat  # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/plugins/libh5lz4.so                      # [not win]\n        - test -f $PREFIX/lib/hdf5/plugin/libh5lz4.so                  # [not win]\n        - if not exist %PREFIX%\\\\lib\\\\plugins\\\\h5lz4.dll exit 1        # [win]\n        - if not exist %PREFIX%\\\\lib\\\\hdf5\\\\plugin\\\\h5lz4.dll exit 1   # [win]\n\nabout:\n  home: https://github.com/nexusformat/HDF5-External-Filter-Plugins\n  license: MIT AND LicenseRef-HDF5 AND BSD-3-Clause\n  license_family: OTHER\n  license_file:\n    - licenses/bitshuffle.txt\n    - licenses/bzip2.txt\n    - licenses/bzip2-additional-legal.txt\n    - licenses/lz4.txt\n    - licenses/lz4-h5py-Copyrights-and-Licenses.txt\n  summary: |\n    Provides dynamically loadable compression filters for HDF5 that are\n    popular for photon or neutron science\n  description: |\n    The external filter mechanism introduced with HDF5 1.8.12 allows\n    applications to utilize custom filters not shipped by the HDF5\n    core library without recompiling your application. This package\n    provides external filters for HDF5 for the Bitshuffle, BZIP2,\n    and LZ4 compression algorithms.\n\nextra:\n  recipe-maintainers:\n    - rjgildea\n    - ndevenish\n    - Anthchirp\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/nexusformat/HDF5-External-Filter-Plugins/archive/v0.1.0.tar.gz",
 "version": "0.1.0"
}