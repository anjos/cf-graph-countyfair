{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/902604436.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904530861.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905327218.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/938052571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939434591.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/970462074.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "watchfiles",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/samuelcolvin/watchfiles",
   "home": "https://watchfiles.helpmanual.io",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Simple, modern and high performance file watching and code reload in python."
  },
  "build": {
   "entry_points": [
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin"
   ]
  },
  "package": {
   "name": "watchfiles",
   "version": "0.15.0"
  },
  "requirements": {
   "build": [
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4"
   ]
  },
  "source": {
   "sha256": "cab62510f990d195986302aa6a48ed636d685b099927049120d520c96069fa49",
   "url": "https://pypi.io/packages/source/w/watchfiles/watchfiles-0.15.0.tar.gz"
  },
  "test": {
   "commands": [
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h"
   ],
   "imports": [
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anyio",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/samuelcolvin/watchfiles",
   "home": "https://watchfiles.helpmanual.io",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Simple, modern and high performance file watching and code reload in python."
  },
  "build": {
   "entry_points": [
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin"
   ]
  },
  "package": {
   "name": "watchfiles",
   "version": "0.15.0"
  },
  "requirements": {
   "build": [
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4"
   ]
  },
  "source": {
   "sha256": "cab62510f990d195986302aa6a48ed636d685b099927049120d520c96069fa49",
   "url": "https://pypi.io/packages/source/w/watchfiles/watchfiles-0.15.0.tar.gz"
  },
  "test": {
   "commands": [
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h"
   ],
   "imports": [
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "watchfiles",
 "new_version": "0.16.0",
 "new_version_attempts": {
  "0.13": 1,
  "0.14": 1,
  "0.14.1": 1,
  "0.15.0": 1,
  "0.16.0": 2
 },
 "new_version_errors": {
  "0.16.0": "We found a problem parsing the recipe for version '0.16.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 38, column 3:\n      requires:\n      ^ (line: 38), 'found duplicate key \"commands\" with value \"[\\'watchfiles -h\\']\" (original value: \"[\\'pip check\\']\")',   in \"<unicode string>\", line 44, column 3:\n      commands:\n      ^ (line: 44), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/samuelcolvin/watchfiles",
   "home": "https://watchfiles.helpmanual.io",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Simple, modern and high performance file watching and code reload in python."
  },
  "build": {
   "entry_points": [
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin"
   ]
  },
  "package": {
   "name": "watchfiles",
   "version": "0.15.0"
  },
  "requirements": {
   "build": [
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4"
   ]
  },
  "source": {
   "sha256": "cab62510f990d195986302aa6a48ed636d685b099927049120d520c96069fa49",
   "url": "https://pypi.io/packages/source/w/watchfiles/watchfiles-0.15.0.tar.gz"
  },
  "test": {
   "commands": [
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h"
   ],
   "imports": [
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anyio",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/samuelcolvin/watchfiles",
   "home": "https://watchfiles.helpmanual.io",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Simple, modern and high performance file watching and code reload in python."
  },
  "build": {
   "entry_points": [
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin"
   ]
  },
  "package": {
   "name": "watchfiles",
   "version": "0.15.0"
  },
  "requirements": {
   "build": [
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4"
   ]
  },
  "source": {
   "sha256": "cab62510f990d195986302aa6a48ed636d685b099927049120d520c96069fa49",
   "url": "https://pypi.io/packages/source/w/watchfiles/watchfiles-0.15.0.tar.gz"
  },
  "test": {
   "commands": [
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h"
   ],
   "imports": [
    "watchfiles",
    "watchfiles",
    "watchfiles"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anyio",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "watchfiles"
  ]
 },
 "pinning_version": "2022.06.16.23.47.53",
 "raw_meta_yaml": "{% set name = \"watchfiles\" %}\n{% set version = \"0.15.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: cab62510f990d195986302aa6a48ed636d685b099927049120d520c96069fa49\n\nbuild:\n  number: 0\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n    - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml\n  entry_points:\n    - watchfiles = watchfiles.cli:cli\n\n\nrequirements:\n  build:\n    - python\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('rust') }}\n    - cargo-bundle-licenses\n  host:\n    - maturin\n    - pip\n    - python\n  run:\n    - python\n    - anyio >=3.0.0,<4\n\ntest:\n  requires:\n    - pip\n  commands:\n    - pip check\n  imports:\n    - watchfiles\n  commands:\n    - watchfiles -h\n\nabout:\n  home: https://watchfiles.helpmanual.io\n  summary: Simple, modern and high performance file watching and code reload in python.\n  dev_url: https://github.com/samuelcolvin/watchfiles\n  license: MIT\n  license_file:\n    - LICENSE\n    - THIRDPARTY.yml\n\nextra:\n  recipe-maintainers:\n    - davidbrochart\n    - samuelcolvin\n",
 "req": {
  "__set__": true,
  "elements": [
   "anyio",
   "c_compiler_stub",
   "cargo-bundle-licenses",
   "maturin",
   "pip",
   "python",
   "rust_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anyio",
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anyio >=3.0.0,<4",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/w/watchfiles/watchfiles-0.15.0.tar.gz",
 "version": "0.15.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/samuelcolvin/watchfiles",
   "home": "https://watchfiles.helpmanual.io",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Simple, modern and high performance file watching and code reload in python."
  },
  "build": {
   "entry_points": [
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli",
    "watchfiles = watchfiles.cli:cli"
   ],
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin",
    "davidbrochart",
    "samuelcolvin"
   ]
  },
  "package": {
   "name": "watchfiles",
   "version": "0.15.0"
  },
  "requirements": {
   "build": [
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python",
    "maturin",
    "pip",
    "python"
   ],
   "run": [
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4",
    "python",
    "anyio >=3.0.0,<4"
   ]
  },
  "source": {
   "sha256": "cab62510f990d195986302aa6a48ed636d685b099927049120d520c96069fa49",
   "url": "https://pypi.io/packages/source/w/watchfiles/watchfiles-0.15.0.tar.gz"
  },
  "test": {
   "commands": [
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h",
    "watchfiles -h"
   ],
   "imports": [
    "watchfiles",
    "watchfiles",
    "watchfiles",
    "watchfiles"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "python",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "anyio",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}