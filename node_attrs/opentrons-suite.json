{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/702749139.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/744436719.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/745363339.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747122047.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/777043459.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784139313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/854971540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/862980223.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/871262132.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "opentrons-suite",
 "hash_type": "sha256",
 "name": "opentrons-suite",
 "new_version": "6.0.1",
 "new_version_attempts": {
  "4.5.0": 1,
  "4.6.0": 1,
  "4.6.1": 1,
  "4.6.2": 1,
  "4.7.0": 1,
  "5.0.0": 1,
  "5.0.1": 1,
  "5.0.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "opentrons",
   "opentrons_shared_data"
  ]
 },
 "pinning_version": "2022.03.03.21.25.39",
 "raw_meta_yaml": "{% set version = \"4.6.2\" %}\n\npackage:\n  name: opentrons-suite\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Opentrons/opentrons/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 3bcc047d3e5a6e68ed2d98e2d5e477dc981fb928b39018231ba72b939b7b4876\n\nbuild:\n  number: 0\n\noutputs:\n  - name: opentrons_shared_data\n    script: install-shared-data.bat  # [win]\n    script: install-shared-data.sh  # [not win]\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.7\n        - pip\n      run:\n        - python >=3.7\n        - jsonschema >=3.0.2,<4.0\n    test:\n      imports:\n        - opentrons_shared_data\n\n  - name: opentrons\n    script: install-opentrons.bat  # [win]\n    script: install-opentrons.sh  # [not win]\n    build:\n      entry_points:\n        - opentrons_simulate = opentrons.simulate:main\n        - opentrons_execute = opentrons.execute:main\n      skip: true  # [py<37]\n    requirements:\n      host:\n        - python\n        - pip\n      run:\n        - python\n        - aionotify >=0.2.0  # [linux]\n        - jsonschema >=3.0.2,<4.0\n        - numpy >=1.15.1\n        - pydantic >=1.4\n        - pyserial >=3.5\n        - typing-extensions >=3.7.4.3\n        - {{ pin_subpackage('opentrons_shared_data', max_pin=\"x.x.x\") }}\n    test:\n      imports:\n        - opentrons\n\nabout:\n  home: https://www.opentrons.com\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: |\n    The Opentrons API is a simple framework designed to make writing automated\n    biology lab protocols easy\n  dev_url: https://github.com/Opentrons/opentrons\n  doc_url: https://docs.opentrons.com\n\nextra:\n  recipe-maintainers:\n    - mrakitin\n",
 "smithy_version": "3.17.2",
 "strong_exports": false,
 "url": "https://github.com/Opentrons/opentrons/archive/refs/tags/v4.6.2.tar.gz",
 "version": "4.6.2"
}