{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/573012022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573014237.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573014848.json"
   },
   "data": {
    "bot_rerun": 1613288213.2852669,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/6282ad7c-c849-4c7b-bbc4-72d85ce836dc.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613995109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/623810533.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/642190313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680768561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/709327606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl27"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774473249.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904761938.json"
   },
   "data": {
    "bot_rerun": 1653498471.53692,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/944481646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/950498909.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "n2p2",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
   "dev_url": "https://github.com/CompPhysVienna/n2p2",
   "doc_url": "https://compphysvienna.github.io/n2p2/",
   "home": "https://compphysvienna.github.io/n2p2/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "n2p2 - A Neural Network Potential Package"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "n2p2",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch"
   ],
   "sha256": "4acaa255632a7b9811d7530fd52ac7dd0bb3a8e3a3cf8512beadd29b62c1bfef",
   "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train"
   ],
   "imports": [
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "eigen",
    "gsl",
    "libblas",
    "libcblas",
    "mpich",
    "openmpi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
   "dev_url": "https://github.com/CompPhysVienna/n2p2",
   "doc_url": "https://compphysvienna.github.io/n2p2/",
   "home": "https://compphysvienna.github.io/n2p2/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "n2p2 - A Neural Network Potential Package"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "n2p2",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "mpich",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen",
    "python",
    "cython",
    "openmpi",
    "libblas",
    "libcblas",
    "gsl",
    "eigen"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch",
    "app.patch",
    "cflags.patch",
    "shared.patch"
   ],
   "sha256": "4acaa255632a7b9811d7530fd52ac7dd0bb3a8e3a3cf8512beadd29b62c1bfef",
   "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train",
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train"
   ],
   "imports": [
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp",
    "pynnp"
   ]
  }
 },
 "name": "n2p2",
 "new_version": "2.2.0",
 "new_version_attempts": {
  "2.1.2": 1,
  "2.1.3": 1,
  "2.1.4": 1,
  "2.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "n2p2"
  ]
 },
 "pinning_version": "2022.05.28.20.04.06",
 "raw_meta_yaml": "{% set name = \"n2p2\" %}\n{% set version = \"2.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CompPhysVienna/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 4acaa255632a7b9811d7530fd52ac7dd0bb3a8e3a3cf8512beadd29b62c1bfef\n  patches:\n    - app.patch\n    - cflags.patch\n    - shared.patch\n\nbuild:\n  number: 1\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - python\n    - cython\n    - {{ mpi }}\n    - libblas\n    - libcblas\n    - gsl\n    - eigen\n  run:\n    - python\n\ntest:\n  imports:\n    - pynnp\n  commands:\n    - test -f ${PREFIX}/bin/nnp-convert\n    - test -f ${PREFIX}/bin/nnp-cutoff\n    - test -f ${PREFIX}/bin/nnp-dist\n    - test -f ${PREFIX}/bin/nnp-predict\n    - test -f ${PREFIX}/bin/nnp-prune\n    - test -f ${PREFIX}/bin/nnp-select\n    - test -f ${PREFIX}/bin/nnp-symfunc\n    - test -f ${PREFIX}/bin/nnp-comp2\n    - test -f ${PREFIX}/bin/nnp-dataset\n    - test -f ${PREFIX}/bin/nnp-norm\n    - test -f ${PREFIX}/bin/nnp-scaling\n    - test -f ${PREFIX}/bin/nnp-train\n\nabout:\n  home: https://compphysvienna.github.io/n2p2/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: n2p2 - A Neural Network Potential Package\n  description: |\n    This repository (obtain source code here) provides ready-to-use \n    software for high-dimensional neural network potentials in \n    computational physics and chemistry. The methodology behind the \n    Behler-Parinello neural network potentials was first described here:\n    J. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n  doc_url: https://compphysvienna.github.io/n2p2/\n  dev_url: https://github.com/CompPhysVienna/n2p2\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "cython",
   "eigen",
   "gsl",
   "libblas",
   "libcblas",
   "make",
   "mpich",
   "openmpi",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "cython",
    "eigen",
    "gsl",
    "libblas",
    "libcblas",
    "mpich",
    "openmpi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "eigen",
    "gsl",
    "libblas",
    "libcblas",
    "mpich",
    "openmpi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.2.0.tar.gz",
 "version": "2.2.0"
}