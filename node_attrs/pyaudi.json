{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198233456.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219721910.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242515023.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269436712.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269577124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/276979856.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278326829.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/283390117.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "boost-1.70.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335473117.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/343006497.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386173490.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386429823.json"
   },
   "data": {
    "bot_rerun": 1584619260.017843,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/434473823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/486252023.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500946851.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500971871.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502342712.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552330886.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554055578.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774899892.json"
   },
   "data": {
    "bot_rerun": 1662065729.0538967,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/969592137.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1036162508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1054633750.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyaudi",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://darioizzo.github.io/audi/",
   "license": "GPL v3 and LGPL v3",
   "license_file": "COPYING.lgpl3",
   "summary": "Python exposition of the audi C++ library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo"
   ]
  },
  "package": {
   "name": "pyaudi",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2"
   ],
   "run": [
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy"
   ]
  },
  "source": {
   "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
   "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "audi",
    "boost-cpp",
    "eigen",
    "mppp",
    "obake-devel",
    "pybind11",
    "pybind11-abi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://darioizzo.github.io/audi/",
   "license": "GPL v3 and LGPL v3",
   "license_file": "COPYING.lgpl3",
   "summary": "Python exposition of the audi C++ library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo"
   ]
  },
  "package": {
   "name": "pyaudi",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja"
   ],
   "host": [
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2"
   ],
   "run": [
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy"
   ]
  },
  "source": {
   "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
   "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
  }
 },
 "name": "pyaudi",
 "new_version": "1.9.2",
 "new_version_attempts": {
  "1.8.1": 1,
  "1.9": 1,
  "1.9.1": 1,
  "1.9.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://darioizzo.github.io/audi/",
   "license": "GPL v3 and LGPL v3",
   "license_file": "COPYING.lgpl3",
   "summary": "Python exposition of the audi C++ library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo"
   ]
  },
  "package": {
   "name": "pyaudi",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2"
   ],
   "run": [
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy"
   ]
  },
  "source": {
   "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
   "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "audi",
    "boost-cpp",
    "eigen",
    "mppp",
    "obake-devel",
    "pybind11",
    "pybind11-abi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyaudi"
  ]
 },
 "pinning_version": "2022.09.12.22.24.22",
 "raw_meta_yaml": "{% set version = \"1.9.2\" %}\n\npackage:\n  name: pyaudi\n  version: {{ version }}\n\nsource:\n  url: https://github.com/darioizzo/audi/archive/v{{ version }}.tar.gz\n  sha256: 4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279\n\nbuild:\n  number: 1\n  skip: true  # [py<36]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make       # [unix]\n    - clang      # [win]\n    - ninja      # [win]\n\n  host:\n    - pybind11\n    - pybind11-abi\n    - boost-cpp\n    - python\n    - eigen\n    - obake-devel\n    - mppp\n    - audi {{ version }}\n\n  run:\n    - python\n    - {{ pin_compatible('boost-cpp', max_pin='x.x') }}\n    - {{ pin_compatible('numpy') }}\n\n\nabout:\n  home: http://darioizzo.github.io/audi/\n  license: GPL v3 and LGPL v3\n  license_file: COPYING.lgpl3\n  summary: 'Python exposition of the audi C++ library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)'\n\nextra:\n  recipe-maintainers:\n    - bluescarni\n    - darioizzo\n",
 "req": {
  "__set__": true,
  "elements": [
   "audi",
   "boost-cpp",
   "c_compiler_stub",
   "clang",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "make",
   "mppp",
   "ninja",
   "numpy",
   "obake-devel",
   "pybind11",
   "pybind11-abi",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "audi",
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "eigen",
    "mppp",
    "obake-devel",
    "pybind11",
    "pybind11-abi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "audi 1.9.2",
    "boost-cpp",
    "eigen",
    "mppp",
    "obake-devel",
    "pybind11",
    "pybind11-abi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz",
 "version": "1.9.2",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://darioizzo.github.io/audi/",
   "license": "GPL v3 and LGPL v3",
   "license_file": "COPYING.lgpl3",
   "summary": "Python exposition of the audi C++ library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo",
    "bluescarni",
    "darioizzo"
   ]
  },
  "package": {
   "name": "pyaudi",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "clang",
    "ninja"
   ],
   "host": [
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2",
    "pybind11",
    "pybind11-abi",
    "boost-cpp",
    "python",
    "eigen",
    "obake-devel",
    "mppp",
    "audi 1.9.2"
   ],
   "run": [
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy",
    "python",
    "boost-cpp",
    "numpy"
   ]
  },
  "source": {
   "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
   "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "audi",
    "boost-cpp",
    "eigen",
    "mppp",
    "obake-devel",
    "pybind11",
    "pybind11-abi",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}