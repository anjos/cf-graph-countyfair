{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/683944429.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf316"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/709997413.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl27"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764112096.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libopencv453"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771133324.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771393529.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799264515.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799566568.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf319"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/820408155.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libopencv455"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906301778.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf320"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/977579577.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "imp",
 "hash_type": "sha256",
 "name": "imp",
 "new_version": "2.17.0",
 "new_version_attempts": {
  "2.16.0": 14,
  "2.17.0": 2
 },
 "new_version_errors": {
  "2.16.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.16.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/salilab/imp/releases/download/{{ version }}/imp-src-{{ version }}.tar.gz'\n",
  "2.17.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.17.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/salilab/imp/releases/download/{{ version }}/imp-src-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "imp"
  ]
 },
 "pinning_version": "2022.06.23.17.21.28",
 "pre_pr_migrator_attempts": {
  "hdf51122": 127
 },
 "pre_pr_migrator_status": {
  "hdf51122": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2841054766\">bot CI job</a>): main: ['linux_64_numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - package libgcc-ng-12.1.0-h8d9b700_16 requires _libgcc_mutex 0.1 conda_forge, but none of the providers can be installed\\n', 'linux_64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - package libgcc-ng-12.1.0-h8d9b700_16 requires _libgcc_mutex 0.1 conda_forge, but none of the providers can be installed\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - package libgcc-ng-12.1.0-h8d9b700_16 requires _libgcc_mutex 0.1 conda_forge, but none of the providers can be installed\\n', 'linux_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package libgcc-ng-12.1.0-h8d9b700_16 requires _libgcc_mutex 0.1 conda_forge, but none of the providers can be installed\\n', 'osx_64_numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - package libopencv-4.5.5-hecd8cb5_0 requires opencv 4.5.5, but none of the providers can be installed\\n', 'osx_64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - package libopencv-4.5.5-hecd8cb5_0 requires opencv 4.5.5, but none of the providers can be installed\\n', 'osx_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - package libopencv-4.5.5-hecd8cb5_0 requires opencv 4.5.5, but none of the providers can be installed\\n', 'osx_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package opencv-4.5.5-py37h7bb216f_4 requires python >=3.7,<3.8.0a0, but none of the providers can be installed\\n', 'osx_arm64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - package libopencv-4.5.5-hca03da5_0 requires opencv 4.5.5, but none of the providers can be installed\\n', 'osx_arm64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - package numpy-base-1.19.2-py38hdc56644_1 requires python >=3.8,<3.9.0a0, but none of the providers can be installed\\n', 'osx_arm64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - package libopencv-4.5.5-hca03da5_0 requires opencv 4.5.5, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"2.17.0\" %}\n\npackage:\n  name: imp\n  version: {{ version }}\n\nsource:\n  fn: imp-{{ version }}.tar.gz\n  url: https://github.com/salilab/imp/releases/download/{{ version }}/imp-src-{{ version }}.tar.gz\n  sha256: 2667f7a4f7b4830ba27e0d41e2cab0fc21ca22176625bfd8b2f353b283dfc8af\n  patches:\n    - mac-python-two-level-namespace.patch\n    - imp-directories.patch  # [win]\n\nbuild:\n  number: 1\n  detect_binary_files_with_prefix: True  # [not win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - protobuf {{ libprotobuf }}             # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - pkg-config   # [not win]\n    - swig\n    - cmake\n    - ninja\n  host:\n    - python\n    - numpy\n    - rmf\n    - ihm\n    - boost-cpp\n    - hdf5\n    # We need both the libprotobuf library and the Python wrappers\n    - libprotobuf\n    - protobuf\n    # We only need the library; we don't use the OpenCV Python wrappers\n    - libopencv\n    - eigen\n    - fftw\n    - gsl\n    - libcblas\n    - cgal-cpp\n    # CGAL code pulls in mpfr and gmp (on Linux/Mac) or mpir (on Windows)\n    - gmp   # [not win]\n    - mpir  # [win]\n    - mpfr\n    - mpich  # [not win]\n    - msmpi  # [win]\n\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    # RMF does not pin its exports, but we link against the C++ DSO\n    - {{ pin_compatible('rmf', max_pin='x.x') }}\n    - ihm\n    - boost-cpp\n    - protobuf\n    - msmpi  # [win]\n\ntest:\n  # Need Eigen to test IMPConfig.cmake\n  requires:\n    - eigen\n  # Python imports\n  imports:\n    - IMP\n    - IMP.atom\n    - IMP.cgal\n    - IMP.em2d\n    - IMP.npc\n    - IMP.npctransport\n    - IMP.bayesianem\n    - IMP.sampcon\n    - IMP.rmf\n    - IMP.mpi\n    - IMP.spb\n    - RMF\n  # Command line tools\n  commands:\n    - foxs --help\n    - spb_test_score --help\n    - imp_sampcon --help\n    - multifit --help\n\nabout:\n  home: https://integrativemodeling.org\n  license: GPL-3.0-or-later\n  license_file:\n    - COPYING.LGPL\n    - COPYING.GPL\n  summary: \"The Integrative Modeling Platform\"\n  description: >\n    IMP's broad goal is to contribute to a comprehensive structural\n    characterization of biomolecules ranging in size and complexity from small\n    peptides to large macromolecular assemblies, by integrating data from\n    diverse biochemical and biophysical experiments. IMP provides an open\n    source C++ and Python toolbox for solving complex modeling problems, and a\n    number of applications for tackling some common problems in a user-friendly\n    way. IMP can also be used from the\n    [Chimera](https://www.cgl.ucsf.edu/chimera/) molecular modeling system,\n    or via one of several web applications.\n\n    See [the IMP website](https://integrativemodeling.org/) for more details.\n  doc_url: https://integrativemodeling.org/doc.html\n  dev_url: https://github.com/salilab/imp/\n\nextra:\n  recipe-maintainers:\n    - benmwebb\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/salilab/imp/releases/download/2.17.0/imp-src-2.17.0.tar.gz",
 "version": "2.17.0"
}