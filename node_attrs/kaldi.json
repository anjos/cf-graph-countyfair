{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199894850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262395310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797449597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu69"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831799152.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2022"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "kaldi",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "http://kaldi-asr.org/forums.html",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "8",
   "run_exports": [
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda112h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": null
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda111h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": null
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda110h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": null
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.992"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "5.5.992-a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz",
   "patches": [
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch"
   ],
   "sha256": "66f3731e0c23efed870e8956be876436ffe44ea823814c895af779531904715b",
   "url": "https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "mkl-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "kaldi-cpu",
    "kaldi-cuda",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "http://kaldi-asr.org/forums.html",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "8",
   "run_exports": [
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda112h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": null
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda111h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": null
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda110h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": null
    },
    "files": [
     "lib/libkaldi*.so",
     "lib/libkaldi.so.*",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "lib/libkaldi*.dylib",
     "lib/libkaldi.*.dylib",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=OpenBLAS"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "libblas * *openblas",
      "libcblas * *openblas",
      "liblapack * *openblas",
      "openblas",
      "blas-devel",
      "zlib",
      "icu"
     ],
     "run": [
      "libblas * *openblas",
      "libcblas * *openblas",
      "liblapack * *openblas",
      "openblas",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "lib/libkaldi*.dylib",
     "lib/libkaldi.*.dylib",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda110h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": null
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda111h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": null
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda112h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": null
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.992"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "5.5.992-a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz",
   "patches": [
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch"
   ],
   "sha256": "66f3731e0c23efed870e8956be876436ffe44ea823814c895af779531904715b",
   "url": "https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz"
  }
 },
 "name": "kaldi",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "http://kaldi-asr.org/forums.html",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "8",
   "run_exports": [
    "kaldi"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "lib/libkaldi*.dylib",
     "lib/libkaldi.*.dylib",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.992"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "5.5.992-a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz",
   "patches": [
    "cmake.patch"
   ],
   "sha256": "66f3731e0c23efed870e8956be876436ffe44ea823814c895af779531904715b",
   "url": "https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "mkl-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "kaldi-cpu",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "http://kaldi-asr.org/forums.html",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "8",
   "run_exports": [
    "kaldi"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "script_env": [
      "MATHLIB=OpenBLAS"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "libblas * *openblas",
      "libcblas * *openblas",
      "liblapack * *openblas",
      "openblas",
      "blas-devel",
      "zlib",
      "icu"
     ],
     "run": [
      "libblas * *openblas",
      "libcblas * *openblas",
      "liblapack * *openblas",
      "openblas",
      "openfst"
     ]
    },
    "script": "build_kaldi.sh"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "lib/libkaldi*.dylib",
     "lib/libkaldi.*.dylib",
     "bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "include/kaldi/*/*.h"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/kaldi/base/io-funcs.h"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.992"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "5.5.992-a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz",
   "patches": [
    "cmake.patch"
   ],
   "sha256": "66f3731e0c23efed870e8956be876436ffe44ea823814c895af779531904715b",
   "url": "https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "openblas",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "kaldi-cpu",
    "libblas",
    "libcblas",
    "liblapack",
    "openblas",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kaldi",
   "kaldi-cuda",
   "kaldi-cuda-dev"
  ]
 },
 "pinning_version": "2022.01.25.13.00.06",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"5.5.992\" %}\n{% set commit = \"a92babfe74532bc2612d7f342d8f668e592413f9\" %}\n{% set kaldi_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: kaldi\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}-{{ commit }}.tar.gz\n  url: https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz\n  sha256: 66f3731e0c23efed870e8956be876436ffe44ea823814c895af779531904715b\n  patches:\n    - cmake.patch\n\nbuild:\n  number: 8\n  skip: true  # [cuda_compiler_version == \"10.2\"]\n  run_exports:\n    - {{ pin_subpackage('kaldi', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\noutputs:\n  - name: kaldi\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n      script_env:\n        - MATHLIB=MKL  # [x86]\n        - MATHLIB=OpenBLAS  # [not x86]\n    script: build_kaldi.sh  # [not win]\n    script: bld_kaldi.bat   # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n        - cmake\n        - ninja\n        - m2-patch  # [win]\n        - libtool  # [not win]\n        - automake  # [not win]\n      host:\n        - pthreads-win32        # [win]\n        - mkl-devel             # [x86]\n        - mkl        # [x86]\n        - libblas * *mkl       # [x86]\n        - libcblas * *mkl       # [x86]\n        - liblapack * *mkl       # [x86]\n        - libblas * *openblas               # [not x86]\n        - libcblas * *openblas             # [not x86]\n        - liblapack * *openblas             # [not x86]\n        - openblas              # [not x86]\n        - blas-devel            # [not x86]\n        - zlib\n        - icu\n      run:\n        - mkl         # [x86]\n        - libblas * *mkl       # [x86]\n        - libcblas * *mkl       # [x86]\n        - liblapack * *mkl       # [x86]\n        - libblas * *openblas               # [not x86]\n        - libcblas * *openblas             # [not x86]\n        - liblapack * *openblas            # [not x86]\n        - openblas             # [not x86]\n        - openfst  # [not win and build_platform == target_platform]\n\n  {% set kaldi_cpu_gpu = \"kaldi-cpu\" %}   # [cuda_compiler_version == \"None\"]\n  {% set kaldi_cpu_gpu = \"kaldi-cuda\" %}   # [cuda_compiler_version != \"None\"]\n  - name: {{ kaldi_cpu_gpu }}\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: False\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - kaldi-cpu                                      # [cuda_compiler_version == \"None\"]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"kaldi\", exact=True) }}\n    files:\n      # Include files like\n      #   - libopenblasp-r0.3.5.so\n      #   - libopenblas_vortexp-r0.3.5.so\n      #   - libopenblas.so.0\n      # Avoid files\n      #   - libkaldi.lib\n      #   - include/kaldi/io-funcs.h\n      - lib/libkaldi*{{ SHLIB_EXT }}   # [not win]\n      - lib/libkaldi.so.*               # [linux]\n      - lib/libkaldi.*.dylib            # [osx]\n      - bin/*   # [not win]\n      - Library/bin/*           # [win]\n\n  {% set kaldi_cpu_gpu_dev = \"kaldi-cpu-dev\" %}   # [cuda_compiler_version == \"None\"]\n  {% set kaldi_cpu_gpu_dev = \"kaldi-cuda-dev\" %}   # [cuda_compiler_version != \"None\"]\n  - name: {{ kaldi_cpu_gpu_dev }}\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: False\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - {{ kaldi_cpu_gpu_dev }}\n    requirements:\n      run:\n        - {{ pin_subpackage(\"kaldi-cpu\", exact=True) }}  # [cuda_compiler_version == \"None\"]\n        - {{ pin_subpackage(\"kaldi-cuda\", exact=True) }}  # [cuda_compiler_version != \"None\"]\n    files:\n      - include/kaldi/*/*.h  # [not win]\n      - Library/include/kaldi/*/*.h  # [win]\n      - Library/include/fst/*.h  # [win]\n      - Library/lib/libkaldi*.lib  # [win]\n    test:\n      commands:\n        - test -f ${PREFIX}/include/kaldi/base/io-funcs.h  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1  # [win]\n\n\nabout:\n  home: http://kaldi-asr.org/\n  license: Apache-2.0\n  license_file: COPYING\n  summary: 'Kaldi is a toolkit for speech recognition written in C++.'\n  description: |\n    Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n  doc_url: http://kaldi-asr.org/doc\n  dev_url: http://kaldi-asr.org/forums.html\n\nextra:\n  recipe-maintainers:\n    - mmcauliffe\n    - mcernak\n",
 "req": {
  "__set__": true,
  "elements": [
   "automake",
   "blas-devel",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "icu",
   "kaldi",
   "kaldi-cpu",
   "kaldi-cuda",
   "libblas",
   "libcblas",
   "liblapack",
   "libtool",
   "m2-patch",
   "mkl",
   "mkl-devel",
   "ninja",
   "openblas",
   "openfst",
   "pthreads-win32",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "mkl-devel",
    "openblas",
    "pthreads-win32",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "kaldi",
    "kaldi-cpu",
    "kaldi-cuda",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "openblas",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "icu",
    "libblas * *mkl",
    "libblas * *openblas",
    "libcblas * *mkl",
    "libcblas * *openblas",
    "liblapack * *mkl",
    "liblapack * *openblas",
    "mkl",
    "mkl-devel",
    "openblas",
    "pthreads-win32",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "kaldi-cpu",
    "kaldi-cuda",
    "libblas * *mkl",
    "libblas * *openblas",
    "libcblas * *mkl",
    "libcblas * *openblas",
    "liblapack * *mkl",
    "liblapack * *openblas",
    "mkl",
    "openblas",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz",
 "version": "5.5.992",
 "win_64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "http://kaldi-asr.org/forums.html",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "8",
   "run_exports": [
    "kaldi",
    "kaldi",
    "kaldi",
    "kaldi"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cpu_h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cpu"
     ]
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cpu"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda110h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": null
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda111h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": null
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "script_env": [
      "MATHLIB=MKL"
     ],
     "string": "cuda112h1234567_8"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "pthreads-win32",
      "mkl-devel",
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl",
      "zlib",
      "icu"
     ],
     "run": [
      "mkl",
      "libblas * *mkl",
      "libcblas * *mkl",
      "liblapack * *mkl"
     ]
    },
    "script": "bld_kaldi.bat"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": null
    },
    "files": [
     "Library/bin/*"
    ],
    "name": "kaldi-cuda",
    "requirements": {
     "run": [
      "kaldi"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112h1234567_8",
     "track_features": [
      "kaldi-cuda-dev"
     ]
    },
    "files": [
     "Library/include/kaldi/*/*.h",
     "Library/include/fst/*.h",
     "Library/lib/libkaldi*.lib"
    ],
    "name": "kaldi-cuda-dev",
    "requirements": {
     "run": [
      "kaldi-cuda"
     ]
    },
    "test": {
     "commands": [
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\fst.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\kaldi-base.lib exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.992"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "fn": "5.5.992-a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz",
   "patches": [
    "cmake.patch",
    "cmake.patch",
    "cmake.patch",
    "cmake.patch"
   ],
   "sha256": "66f3731e0c23efed870e8956be876436ffe44ea823814c895af779531904715b",
   "url": "https://github.com/kaldi-asr/kaldi/archive/a92babfe74532bc2612d7f342d8f668e592413f9.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl",
    "mkl-devel",
    "pthreads-win32",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "kaldi-cpu",
    "kaldi-cuda",
    "libblas",
    "libcblas",
    "liblapack",
    "mkl"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}