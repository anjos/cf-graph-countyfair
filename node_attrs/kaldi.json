{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199894850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262395310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797449597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu69"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831799152.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2022"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888289277.json"
   },
   "data": {
    "bot_rerun": 1648861997.9894733,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda_112_ppc64le_aarch64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896293921.json"
   },
   "data": {
    "bot_rerun": 1650427252.0247622,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu70"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "kaldi",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "https://github.com/kaldi-asr/kaldi",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.1016"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch"
   ],
   "sha256": "153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7",
   "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libtmglib",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "https://github.com/kaldi-asr/kaldi",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.so",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.so",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.so",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.so",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.so",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.so",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.so",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.so",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.so",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.so",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.so",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.so",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.so",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.so",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.so",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.so",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.so",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.so",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.so",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.dylib",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.dylib",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.dylib",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.dylib",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.dylib",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.dylib",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.dylib",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.dylib",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.dylib",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.dylib",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.dylib",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.dylib",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.dylib",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.dylib",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.dylib",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.dylib",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.dylib",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.dylib",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.1016"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch"
   ],
   "sha256": "153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7",
   "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz"
  }
 },
 "name": "kaldi",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "https://github.com/kaldi-asr/kaldi",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.dylib",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.dylib",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.dylib",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.dylib",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.dylib",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.dylib",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.dylib",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.dylib",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.dylib",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.1016"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "sgmm2.patch"
   ],
   "sha256": "153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7",
   "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libtmglib",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "https://github.com/kaldi-asr/kaldi",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "ninja",
      "libtool",
      "automake"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "openfst"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "build_kaldi.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libkaldi-base.dylib",
      "test ! -f $PREFIX/lib/libkaldi-base.a",
      "test -f $PREFIX/lib/libkaldi-matrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-matrix.a",
      "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
      "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
      "test -f $PREFIX/lib/libkaldi-util.dylib",
      "test ! -f $PREFIX/lib/libkaldi-util.a",
      "test -f $PREFIX/lib/libkaldi-feat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-feat.a",
      "test -f $PREFIX/lib/libkaldi-tree.dylib",
      "test ! -f $PREFIX/lib/libkaldi-tree.a",
      "test -f $PREFIX/lib/libkaldi-gmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-gmm.a",
      "test -f $PREFIX/lib/libkaldi-transform.dylib",
      "test ! -f $PREFIX/lib/libkaldi-transform.a",
      "test -f $PREFIX/lib/libkaldi-fstext.dylib",
      "test ! -f $PREFIX/lib/libkaldi-fstext.a",
      "test -f $PREFIX/lib/libkaldi-hmm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-hmm.a",
      "test -f $PREFIX/lib/libkaldi-lm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lm.a",
      "test -f $PREFIX/lib/libkaldi-decoder.dylib",
      "test ! -f $PREFIX/lib/libkaldi-decoder.a",
      "test -f $PREFIX/lib/libkaldi-lat.dylib",
      "test ! -f $PREFIX/lib/libkaldi-lat.a",
      "test -f $PREFIX/lib/libkaldi-nnet.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet.a",
      "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
      "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
      "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
      "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
      "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
      "test -f $PREFIX/lib/libkaldi-chain.dylib",
      "test ! -f $PREFIX/lib/libkaldi-chain.a",
      "test -f $PREFIX/lib/libkaldi-ivector.dylib",
      "test ! -f $PREFIX/lib/libkaldi-ivector.a",
      "test -f $PREFIX/lib/libkaldi-online2.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online2.a",
      "test -f $PREFIX/lib/libkaldi-kws.dylib",
      "test ! -f $PREFIX/lib/libkaldi-kws.a",
      "test -f $PREFIX/lib/libkaldi-online.dylib",
      "test ! -f $PREFIX/lib/libkaldi-online.a",
      "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
      "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.1016"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "sgmm2.patch"
   ],
   "sha256": "153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7",
   "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libtmglib",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kaldi"
  ]
 },
 "pinning_version": "2022.03.31.16.27.41",
 "pre_pr_migrator_attempts": {
  "icu70": 1
 },
 "pre_pr_migrator_status": {
  "icu70": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2197704589\">bot CI job</a>): main: ['linux_64_cxx_compiler_version7fortran_compiler_version7: Encountered problems while solving:\\n  - package libtmglib-3.9.0-5_h92ddd45_netlib requires libgfortran5 >=9.3.0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"5.5.1016\" %}\n# minor/major is https://github.com/kaldi-asr/kaldi/blob/master/src/.version;\n# patch version is the number of commits since then, see\n# https://github.com/kaldi-asr/kaldi/blob/master/cmake/VersionHelper.cmake\n{% set commit = \"5a37217e107bc9cb5e4e1ad2b290cecbdedfa799\" %}\n{% set kaldi_proc_type = \"cuda\" if os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\" else \"cpu\" %}\n\n{% set kaldi_libraries = [\n    \"base\", \"matrix\", \"cudamatrix\", \"util\", \"feat\", \"tree\", \"gmm\", \"transform\",\n    \"fstext\", \"hmm\", \"lm\", \"decoder\", \"lat\", \"nnet\", \"nnet2\", \"nnet3\",\n    \"rnnlm\", \"chain\", \"ivector\", \"online2\", \"kws\"\n] + (os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\") * [\n    \"cudafeat\", \"cudadecoder\"\n] + (not win) * [\n    \"online\"\n] %}\n# This list should be substantially longer, but upstream just globs\n# all *.h files. These are just stand-ins (one header per folder),\n# but relevant headers can be added as needed/desired.\n{% set kaldi_headers = [\n    \"base/io-funcs.h\", \"matrix/cblas-wrappers.h\", \"cudamatrix/cu-array.h\",\n    \"util/basic-filebuf.h\", \"feat/feature-common.h\", \"tree/build-tree.h\",\n    \"gmm/am-diag-gmm.h\", \"transform/cmvn.h\",\n    \"fstext/context-fst.h\", \"hmm/hmm-utils.h\", \"lm/arpa-file-parser.h\",\n    \"decoder/grammar-fst.h\", \"lat/arctic-weight.h\", \"nnet/nnet-activation.h\",\n    \"nnet2/am-nnet.h\", \"nnet3/attention.h\", \"rnnlm/sampler.h\",\n    \"chain/chain-datastruct.h\", \"ivector/plda.h\", \"online2/online-endpoint.h\",\n    \"kws/kaldi-kws.h\", \"itf/options-itf.h\"\n] + (os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\") * [\n    \"cudafeat/lane-desc.h\", \"cudadecoder/cuda-fst.h\"\n] + (not win) * [\n    \"online/online-decodable.h\"\n] %}\n\npackage:\n  name: kaldi\n  version: {{ version }}\n\nsource:\n  url: https://github.com/kaldi-asr/kaldi/archive/{{ commit }}.tar.gz\n  sha256: 153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7\n  patches:\n    - sgmm2.patch\n\nbuild:\n  number: 0\n  skip: true  # [os.environ.get(\"cuda_compiler_version\", \"None\") == \"10.2\"]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\noutputs:\n  - name: kaldi\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [os.environ.get(\"cuda_compiler_version\", \"None\") == \"None\"]\n    script: build_kaldi.sh  # [not win]\n    script: bld_kaldi.bat   # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - {{ compiler('cuda') }}  # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n        - cmake\n        - ninja\n        - m2-patch  # [win]\n        - libtool  # [not win]\n        - automake  # [not win]\n      host:\n        - icu\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - libtmglib\n        - magma           # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n        - pthreads-win32  # [win]\n        - zlib\n      run:\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - magma    # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n        - openfst  # [not win and build_platform == target_platform]\n      run_exports:\n        - {{ pin_subpackage('kaldi', max_pin='x.x.x') }}\n\n    test:\n      # will also run run_test.py (checking the binaries)\n      commands:\n        # libraries:\n        {% for each_lib in kaldi_libraries %}\n            # shared\n            - test -f $PREFIX/lib/libkaldi-{{ each_lib }}.so               # [linux]\n            - test -f $PREFIX/lib/libkaldi-{{ each_lib }}.dylib            # [osx]\n            - if not exist %LIBRARY_BIN%\\kaldi-{{ each_lib }}.dll exit 1   # [win]\n\n            # absence of static libraries\n            - test ! -f $PREFIX/lib/libkaldi-{{ each_lib }}.a              # [not win]\n        {% endfor %}\n\n        # headers:\n        {% for each_header in kaldi_headers %}\n            - test -f $PREFIX/include/kaldi/{{ each_header }} || (echo \"{{ each_header }} not found\" && exit 1)  # [unix]\n            - if not exist %LIBRARY_INC%\\kaldi\\{{ \"\\\\\".join(each_header.split(\"/\")) }} exit 1                    # [win]\n        {% endfor %}\n\nabout:\n  home: http://kaldi-asr.org/\n  license: Apache-2.0\n  license_file: COPYING\n  summary: 'Kaldi is a toolkit for speech recognition written in C++.'\n  description: |\n    Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n  doc_url: http://kaldi-asr.org/doc\n  dev_url: https://github.com/kaldi-asr/kaldi\n\nextra:\n  recipe-maintainers:\n    - mmcauliffe\n    - mcernak\n",
 "req": {
  "__set__": true,
  "elements": [
   "automake",
   "cmake",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "icu",
   "libblas",
   "libcblas",
   "liblapack",
   "liblapacke",
   "libtmglib",
   "libtool",
   "m2-patch",
   "ninja",
   "openfst",
   "pthreads-win32",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libtmglib",
    "pthreads-win32",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "automake",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libtmglib",
    "pthreads-win32",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "openfst"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz",
 "version": "5.5.1016",
 "win_64_meta_yaml": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "https://github.com/kaldi-asr/kaldi",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak",
    "mmcauliffe",
    "mcernak"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_h1234567_0"
    },
    "name": "kaldi",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "m2-patch"
     ],
     "host": [
      "icu",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "libtmglib",
      "pthreads-win32",
      "zlib"
     ],
     "run": [
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke"
     ],
     "run_exports": [
      "kaldi"
     ]
    },
    "script": "bld_kaldi.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
      "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
      "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "kaldi",
   "version": "5.5.1016"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch",
    "sgmm2.patch"
   ],
   "sha256": "153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7",
   "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "icu",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libtmglib",
    "pthreads-win32",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}