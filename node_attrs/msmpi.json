{
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "msmpi",
 "hash_type": "sha256",
 "meta_yaml": {
  "about": {
   "description": "Microsoft MPI (MS-MPI) is a Microsoft implementation of the Message Passing\nInterface standard for developing and running parallel applications on the\nWindows platform.\n",
   "dev_url": "https://github.com/microsoft/Microsoft-MPI",
   "doc_url": "https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi",
   "home": "https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi",
   "license": "MIT",
   "license_file": [
    "License\\MicrosoftMPI-SDK-EULA.rtf",
    "License\\MicrosoftMPI-Redistributable-EULA.rtf",
    "License\\MPI-SDK-TPN.txt",
    "License\\MPI-Redistributables-TPN.txt"
   ],
   "summary": "Microsoft message-passing-interface (MS-MPI)"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "RyanMcCarthy-NOAA",
    "leofang"
   ]
  },
  "package": {
   "name": "msmpi",
   "version": "10.1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "m2-patch"
   ],
   "run": [
    "mpi 1.0 msmpi"
   ]
  },
  "source": [
   {
    "sha256": "d8c07fc079d35d373e14a6894288366b74147539096d43852cb0bbae32b33e44",
    "url": "http://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi"
   },
   {
    "sha256": "c305ce3f05d142d519f8dd800d83a4b894fc31bcad30512cefb557feaccbe8b4",
    "url": "http://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe"
   }
  ],
  "test": {
   "commands": [
    "if not exist %LIBRARY_BIN%\\\\mpiexec.exe exit 1",
    "if not exist %LIBRARY_BIN%\\\\smpd.exe exit 1",
    "if not exist %LIBRARY_BIN%\\\\msmpi.dll exit 1",
    "if not exist %LIBRARY_INC%\\\\mpi.f90 exit 1",
    "if not exist %LIBRARY_INC%\\\\mpi.h exit 1",
    "if not exist %LIBRARY_LIB%\\\\msmpi.lib exit 1",
    "if not %MSMPI_BIN% == %LIBRARY_BIN% exit 1",
    "if not %MSMPI_INC% == %LIBRARY_INC% exit 1",
    "if not %MSMPI_LIB64% == %LIBRARY_LIB% exit 1",
    "where mpiexec.exe",
    "where smpd.exe",
    "mpiexec.exe -d 3 -n 2 Tests\\\\MpiPingpong.exe -m",
    "mpiexec.exe -d 3 -n 2 Tests\\\\IMB-MPI1.exe PingPong PingPing PingPongAnySource PingPingAnySource Sendrecv Allreduce -off_cache -1 -msglog 10",
    "cl.exe -I%LIBRARY_INC% Tests\\\\get_mpi_ver.c /Fe\"%cd%\\get_mpi_ver.exe\"",
    "for /f \"tokens=* usebackq\" %%f in (`get_mpi_ver`) do (set \"mpi_ver=%%f\")",
    "if not %mpi_ver% == 2561 exit 1",
    "cl.exe -I%LIBRARY_INC% Tests\\\\helloworld.c /Fe\"%cd%\\helloworld.exe\" /link /LIBPATH:\"%LIBRARY_LIB%\" msmpi.lib",
    "mpiexec -n 4 helloworld.exe"
   ],
   "requires": [
    "c_compiler_stub"
   ],
   "source_files": [
    "Tests/*"
   ]
  }
 },
 "name": "msmpi",
 "new_version": "10.1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "msmpi"
  ]
 },
 "raw_meta_yaml": "{% set name = \"msmpi\" %}\n{% set version = \"10.1.2\" %}\n{% set base_url = \"http://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # See https://github.com/mpi4py/mpi4py/blob/master/.azure/install-msmpi.ps1\n\n  # This is the MS-MPI SDK\n  - url: {{ base_url }}msmpisdk.msi\n    sha256: d8c07fc079d35d373e14a6894288366b74147539096d43852cb0bbae32b33e44\n\n  # This is the MS-MPI Runtime\n  - url: {{ base_url }}msmpisetup.exe\n    sha256: c305ce3f05d142d519f8dd800d83a4b894fc31bcad30512cefb557feaccbe8b4\n\nbuild:\n  number: 2\n  skip: true  # [not win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - {{ compiler('m2w64_fortran') }}\n    - m2-patch\n  run:\n    - mpi 1.0 msmpi\n\ntest:\n  source_files:\n    - Tests/*  # [win]\n  requires:\n    - {{ compiler('c') }}\n    # These deps are needed for the mpi4py tests\n    # - python\n    # - pip\n    # - cython\n    # - setuptools\n    # - git\n  commands:\n    # simple package integraty check\n    - if not exist %LIBRARY_BIN%\\\\mpiexec.exe exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\smpd.exe exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\msmpi.dll exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\\\mpi.f90 exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\\\mpi.h exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\msmpi.lib exit 1  # [win]\n    - if not %MSMPI_BIN% == %LIBRARY_BIN% exit 1  # [win]\n    - if not %MSMPI_INC% == %LIBRARY_INC% exit 1  # [win]\n    - if not %MSMPI_LIB64% == %LIBRARY_LIB% exit 1  # [win]\n\n    # check if binaries work ok\n    - where mpiexec.exe  # [win]\n    - where smpd.exe  # [win]\n    - mpiexec.exe -d 3 -n 2 Tests\\\\MpiPingpong.exe -m  # [win]\n    - mpiexec.exe -d 3 -n 2 Tests\\\\IMB-MPI1.exe PingPong PingPing PingPongAnySource PingPingAnySource Sendrecv Allreduce -off_cache -1 -msglog 10  # [win]\n\n    # This works! Just comment out to save time...\n    ## test compiling + linking + execution\n    #- git clone https://github.com/mpi4py/mpi4py.git\n    #- cd mpi4py\n    #- pip install --no-build-isolation --no-deps -v .\n    #- cd ..\n    #- python -c \"from mpi4py import MPI; print(MPI.Get_library_version())\"\n    #- mpiexec -n 2 python -m mpi4py.bench helloworld\n    #- mpiexec -n 2 python -m mpi4py.bench ringtest\n\n    # check if MSMPI_VER is correctly patched\n    - cl.exe -I%LIBRARY_INC% Tests\\\\get_mpi_ver.c /Fe\"%cd%\\get_mpi_ver.exe\"\n    - for /f \"tokens=* usebackq\" %%f in (`get_mpi_ver`) do (set \"mpi_ver=%%f\")\n    # TODO(leofang): we could compute this, yes, but don't bother as MS-MPI is not evolving...\n    - if not %mpi_ver% == 2561 exit 1  # [win]  # for MS-MPI v10.1.x\n\n    # check compiling & running simple C code\n    # TODO(leofang): add C++ & Fortran tests?\n    - cl.exe -I%LIBRARY_INC% Tests\\\\helloworld.c /Fe\"%cd%\\helloworld.exe\" /link /LIBPATH:\"%LIBRARY_LIB%\" msmpi.lib\n    - mpiexec -n 4 helloworld.exe\n\nabout:\n  home: https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi\n  license: MIT\n  license_file:\n    - License\\MicrosoftMPI-SDK-EULA.rtf\n    - License\\MicrosoftMPI-Redistributable-EULA.rtf\n    - License\\MPI-SDK-TPN.txt\n    - License\\MPI-Redistributables-TPN.txt\n  summary: Microsoft message-passing-interface (MS-MPI)\n  description: |\n    Microsoft MPI (MS-MPI) is a Microsoft implementation of the Message Passing\n    Interface standard for developing and running parallel applications on the\n    Windows platform.\n  doc_url: https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi\n  dev_url: https://github.com/microsoft/Microsoft-MPI\n\nextra:\n  recipe-maintainers:\n    - RyanMcCarthy-NOAA\n    - leofang\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "m2-patch",
   "m2w64_fortran_compiler_stub",
   "mpi"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "mpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "mpi 1.0 msmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  }
 },
 "url": "http://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi",
 "version": "10.1.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "Microsoft MPI (MS-MPI) is a Microsoft implementation of the Message Passing\nInterface standard for developing and running parallel applications on the\nWindows platform.\n",
   "dev_url": "https://github.com/microsoft/Microsoft-MPI",
   "doc_url": "https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi",
   "home": "https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi",
   "license": "MIT",
   "license_file": [
    "License\\MicrosoftMPI-SDK-EULA.rtf",
    "License\\MicrosoftMPI-Redistributable-EULA.rtf",
    "License\\MPI-SDK-TPN.txt",
    "License\\MPI-Redistributables-TPN.txt"
   ],
   "summary": "Microsoft message-passing-interface (MS-MPI)"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "RyanMcCarthy-NOAA",
    "leofang"
   ]
  },
  "package": {
   "name": "msmpi",
   "version": "10.1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "m2-patch"
   ],
   "run": [
    "mpi 1.0 msmpi"
   ]
  },
  "source": [
   {
    "sha256": "d8c07fc079d35d373e14a6894288366b74147539096d43852cb0bbae32b33e44",
    "url": "http://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi"
   },
   {
    "sha256": "c305ce3f05d142d519f8dd800d83a4b894fc31bcad30512cefb557feaccbe8b4",
    "url": "http://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe"
   }
  ],
  "test": {
   "commands": [
    "if not exist %LIBRARY_BIN%\\\\mpiexec.exe exit 1",
    "if not exist %LIBRARY_BIN%\\\\smpd.exe exit 1",
    "if not exist %LIBRARY_BIN%\\\\msmpi.dll exit 1",
    "if not exist %LIBRARY_INC%\\\\mpi.f90 exit 1",
    "if not exist %LIBRARY_INC%\\\\mpi.h exit 1",
    "if not exist %LIBRARY_LIB%\\\\msmpi.lib exit 1",
    "if not %MSMPI_BIN% == %LIBRARY_BIN% exit 1",
    "if not %MSMPI_INC% == %LIBRARY_INC% exit 1",
    "if not %MSMPI_LIB64% == %LIBRARY_LIB% exit 1",
    "where mpiexec.exe",
    "where smpd.exe",
    "mpiexec.exe -d 3 -n 2 Tests\\\\MpiPingpong.exe -m",
    "mpiexec.exe -d 3 -n 2 Tests\\\\IMB-MPI1.exe PingPong PingPing PingPongAnySource PingPingAnySource Sendrecv Allreduce -off_cache -1 -msglog 10",
    "cl.exe -I%LIBRARY_INC% Tests\\\\get_mpi_ver.c /Fe\"%cd%\\get_mpi_ver.exe\"",
    "for /f \"tokens=* usebackq\" %%f in (`get_mpi_ver`) do (set \"mpi_ver=%%f\")",
    "if not %mpi_ver% == 2561 exit 1",
    "cl.exe -I%LIBRARY_INC% Tests\\\\helloworld.c /Fe\"%cd%\\helloworld.exe\" /link /LIBPATH:\"%LIBRARY_LIB%\" msmpi.lib",
    "mpiexec -n 4 helloworld.exe"
   ],
   "requires": [
    "c_compiler_stub"
   ],
   "source_files": [
    "Tests/*"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "mpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  }
 }
}