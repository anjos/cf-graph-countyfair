{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/347091767.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375715792.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509614360.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509626043.json"
   },
   "data": {
    "bot_rerun": 1603657506.0583005,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509627547.json"
   },
   "data": {
    "bot_rerun": 1631290314.94732,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513270723.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794969881.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "iterativewgcna",
 "hash_type": "sha256",
 "name": "iterativewgcna",
 "new_version": "1.1.6",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "iterativewgcna"
  ]
 },
 "pinning_version": "2021.12.03.08.21.30",
 "pre_pr_migrator_attempts": {
  "gcc930": 1,
  "python39": 1,
  "r400": 1
 },
 "pre_pr_migrator_status": {
  "gcc930": "not solvable: ['win_64_python3.6.____cpythonr_base4.0: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n', 'win_64_python3.7.____cpythonr_base4.0: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n']",
  "python39": "not solvable: ['win_64_python3.6.____cpythonr_base4.0: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n', 'win_64_python3.7.____cpythonr_base4.0: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n']",
  "r400": "not solvable: ['win_64_python3.6.____cpythonr_base4.0: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n', 'win_64_python3.7.____cpythonr_base4.0: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"iterativeWGCNA\" %}\n{% set version = \"1.1.6\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: 1ee490a1b7a0e1164fda08d38053a17f974f82f0237b8c2864bd12a28f3a8efb\n\nbuild:\n\n\n  number: 18\n\n  skip: True  # [(win and vc < 14)]\n  skip: True  # [(win and py>=38)]\n  script: {{ PYTHON }} -m pip install . -vv \n  \nrequirements:\n  build:\n  host:\n    - pip\n    - python\n  run:\n    - matplotlib-base\n    - python\n    - rpy2\n    - r-base\n    - r-nlme\n    - r-hmisc\n    - r-rcpp >=0.11.0\n    - r-doparallel\n    - r-dynamictreecut >=1.62\n    - r-fastcluster\n    - r-foreach\n    - r-matrixstats >=0.8.1\n    - r-survival\n\ntest:\n  imports:\n    - iterativeWGCNA\n\n  \n\nabout:\n  home: \"http://github.com/cstoeckert/iterativeWGCNA\"\n  license: \"GPL-2.0-only\"\n  license_family: \"GPL\"\n  license_file: \"LICENSE.txt\"\n  summary: iterativeWGCNA provides a Python-wrapped extension for the R program Weighted \n    Gene Correlation Network Analysis (WGCNA) that improves the robustness of network-based \n    classifications (modules) inferred from whole-transcriptome gene expression datasets.\n  doc_url: \"https://www.biorxiv.org/content/10.1101/234062v1\"\n\nextra:\n  recipe-maintainers:\n    - thompsonsed\n",
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/iterativeWGCNA/iterativeWGCNA-1.1.6.tar.gz",
 "version": "1.1.6"
}