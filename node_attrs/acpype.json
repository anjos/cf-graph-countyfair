{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/285475100.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.03.22.14.36"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/293802260.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.07.02.16.09"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326731468.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.10.05.12.26"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/388562765.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.03.14.11.44"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/388855410.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.03.15.13.27"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/425643014.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.05.27.16.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/456663508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.07.25.08.41"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509442021.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.10.24.12.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/669852940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.02.05.22.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785238986.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.11.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785487250.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.11.21"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "acpype",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A tool based in Python to use Antechamber to generate topologies\nfor chemical compounds and to interface with other python\napplications like CCPN or ARIA.\n",
   "dev_url": "https://github.com/alanwilter/acpype",
   "doc_url": "https://github.com/alanwilter/acpype",
   "home": "https://github.com/alanwilter/acpype",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Generates topologies for chemical compounds"
  },
  "build": {
   "entry_points": [
    "acpype=acpype_lib.acpype:init_main"
   ],
   "noarch": "python",
   "number": "0",
   "script": [
    "mv recipe/setup_conda.py setup.py",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "alanwilter",
    "lkagami",
    "simonbray"
   ]
  },
  "package": {
   "name": "acpype",
   "version": "2021.11.21"
  },
  "requirements": {
   "host": [
    "python >=3",
    "pip"
   ],
   "run": [
    "openbabel",
    "python >=3",
    "ambertools",
    "parmed",
    "numpy",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "233dbdf5b92d856b83eff856418704c1d2fb11c1352f4e85cccd581c01b391e3",
   "url": "https://github.com/alanwilter/acpype/archive/2021.11.21.tar.gz"
  },
  "test": {
   "commands": [
    "acpype -h"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ambertools",
    "matplotlib-base",
    "numpy",
    "openbabel",
    "parmed",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A tool based in Python to use Antechamber to generate topologies\nfor chemical compounds and to interface with other python\napplications like CCPN or ARIA.\n",
   "dev_url": "https://github.com/alanwilter/acpype",
   "doc_url": "https://github.com/alanwilter/acpype",
   "home": "https://github.com/alanwilter/acpype",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Generates topologies for chemical compounds"
  },
  "build": {
   "entry_points": [
    "acpype=acpype_lib.acpype:init_main"
   ],
   "noarch": "python",
   "number": "0",
   "script": [
    "mv recipe/setup_conda.py setup.py",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "alanwilter",
    "lkagami",
    "simonbray"
   ]
  },
  "package": {
   "name": "acpype",
   "version": "2021.11.21"
  },
  "requirements": {
   "host": [
    "python >=3",
    "pip"
   ],
   "run": [
    "openbabel",
    "python >=3",
    "ambertools",
    "parmed",
    "numpy",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "233dbdf5b92d856b83eff856418704c1d2fb11c1352f4e85cccd581c01b391e3",
   "url": "https://github.com/alanwilter/acpype/archive/2021.11.21.tar.gz"
  },
  "test": {
   "commands": [
    "acpype -h"
   ]
  }
 },
 "name": "acpype",
 "new_version": "2021.11.21",
 "new_version_attempts": {
  "2020.05.27.16.15": 1,
  "2020.07.25.08.41": 1,
  "2020.10.24.12.16": 1,
  "2021.02.05.22.15": 1,
  "2021.11.20": 1,
  "2021.11.21": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "acpype"
  ]
 },
 "pinning_version": "2021.11.20.19.20.32",
 "raw_meta_yaml": "{% set name = \"acpype\" %}\n{% set version = \"2021.11.21\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\nsource:\n  url: https://github.com/alanwilter/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: 233dbdf5b92d856b83eff856418704c1d2fb11c1352f4e85cccd581c01b391e3\nbuild:\n  number: 0\n  script:\n    - mv recipe/setup_conda.py setup.py\n    - {{ PYTHON }} -m pip install . -vv\n  noarch: python\n  entry_points:\n    - acpype=acpype_lib.acpype:init_main\nrequirements:\n  host:\n    - python >=3\n    - pip\n  run:\n    - openbabel\n    - python >=3\n    - ambertools\n    - parmed\n    - numpy\n    - scipy\n    - matplotlib-base\n\ntest:\n  commands:\n    - acpype -h\nabout:\n  home: https://github.com/alanwilter/acpype\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: Generates topologies for chemical compounds\n  description: |\n    A tool based in Python to use Antechamber to generate topologies \n    for chemical compounds and to interface with other python \n    applications like CCPN or ARIA.\n\n  doc_url: https://github.com/alanwilter/acpype\n  dev_url: https://github.com/alanwilter/acpype\n\nextra:\n  recipe-maintainers:\n    - alanwilter\n    - lkagami\n    - simonbray\n",
 "req": {
  "__set__": true,
  "elements": [
   "ambertools",
   "matplotlib-base",
   "numpy",
   "openbabel",
   "parmed",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ambertools",
    "matplotlib-base",
    "numpy",
    "openbabel",
    "parmed",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ambertools",
    "matplotlib-base",
    "numpy",
    "openbabel",
    "parmed",
    "python >=3",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/alanwilter/acpype/archive/2021.11.21.tar.gz",
 "version": "2021.11.21"
}