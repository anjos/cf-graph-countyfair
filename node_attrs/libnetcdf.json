{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/223922357.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/232099258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/257539729.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274557495.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285610567.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "hdf5-1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/312420110.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/331180372.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/343811216.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395159388.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404115111.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/419619041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/604712690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617149158.json"
   },
   "data": {
    "bot_rerun": 1618754188.0610576,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617490610.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645367527.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf44215"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/715196819.json"
   },
   "data": {
    "bot_rerun": 1630356682.6034052,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/716971276.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722820952.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964666315.json"
   },
   "data": {
    "bot_rerun": 1658972568.7606516,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1010164184.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1010326836.json"
   },
   "data": {
    "bot_rerun": 1660362765.5254462,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1025526157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libnetcdf",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "100",
   "run_exports": [
    "libnetcdf mpi_mpich_*",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf"
   ],
   "string": "nompi_h1234567_100"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip"
   ],
   "host": [
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "100",
   "run_exports": [
    "libnetcdf mpi_mpich_*",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf"
   ],
   "string": "nompi_h1234567_100"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip"
   ],
   "host": [
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*"
   ],
   "string": "mpi_mpich_h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip"
   ],
   "host": [
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "100",
   "run_exports": [
    "libnetcdf mpi_mpich_*",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*",
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*",
    "libnetcdf"
   ],
   "string": "nompi_h1234567_100"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-unzip"
   ],
   "host": [
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*",
    "curl",
    "hdf5 * nompi_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/prevent_MS_runtime_libs_being_installed_again.patch",
    "patches/strdup.patch",
    "patches/fix_cmake.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": null
  }
 },
 "name": "libnetcdf",
 "new_version": "4.9.1",
 "new_version_attempts": {
  "4.8.0": 1,
  "4.8.1": 1,
  "4.9.0": 3,
  "4.9.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*"
   ],
   "string": "mpi_mpich_h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip"
   ],
   "host": [
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libnetcdf mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf mpi_mpich_*"
   ],
   "string": "mpi_mpich_h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift",
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip",
    "cmake",
    "make",
    "pkg-config",
    "gnuconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "unzip"
   ],
   "host": [
    "openmpi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "jpeg",
    "libzip",
    "zstd",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd",
    "mpich",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "openmpi",
    "curl",
    "hdf5 * mpi_openmpi_*",
    "curl",
    "hdf5 * nompi_*",
    "mpich",
    "curl",
    "hdf5 * mpi_mpich_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/strdup.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all",
    "test ! -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libnetcdf"
  ]
 },
 "pinning_version": "2022.08.12.23.25.47",
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3293507360\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1158, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 309, in run\n    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'git diff --name-only 32aae1a391ea9a136970f9d2903fc7c44d1c795e...HEAD' returned non-zero exit status 128.\n"
 },
 "raw_meta_yaml": "{% set version = \"4.9.0\" %}\n{% set build = 0 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: libnetcdf\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Unidata/netcdf-c/archive/v{{ version }}.tar.gz\n  sha256: 9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6\n  patches:\n    - patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch\n    - patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch\n    - patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch\n    - patches/0009-topsrcdir.patch\n    - patches/prevent_MS_runtime_libs_being_installed_again.patch  # [win]\n    - patches/strdup.patch\n    - patches/do_not_use_16_processes_in_tests.patch  # [ppc64le]\n    # https://github.com/Unidata/netcdf-c/issues/2390\n    # patches/incorrect_library_versionand_filename_in_4.9.0.patch\n    # Revert upstream change in 4.8.1--maybe unnecessary in 4.8.2\n    - patches/fix_cmake.patch  # [win]\n    - patches/fix-ncjson.patch\n    - patches/fix-tests.patch\n    - patches/fix-ncdump-tests-prereq.patch\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win and vc<14]\n  {% if mpi != \"nompi\" %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  # add build string so packages can depend on\n  # mpi or nompi variants\n  # dependencies:\n  # `PKG_NAME * mpi_mpich_*` for mpich\n  # `PKG_NAME * mpi_*` for any mpi\n  # `PKG_NAME * nompi_*` for no mpi\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  # mpi builds require the right mpi\n  # non-mpi builds *do not* appear to require non-mpi builds\n  # at least not always\n\n  {% if mpi != 'nompi' %}\n  {% set build_pin = mpi_prefix + '_*' %}\n  {% else %}\n  {% set build_pin = '' %}\n  {% endif %}\n\n  run_exports:\n    #   https://abi-laboratory.pro/tracker/timeline/netcdf/\n    - {{ pin_subpackage('libnetcdf', max_pin='x.x.x.x') }} {{ build_pin }}\n\nrequirements:\n  build:\n    - cmake\n    - make  # [not win]\n    - pkg-config  # [not win]\n    - gnuconfig  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]\n    - unzip  # [not win]\n    - m2-unzip  # [win]\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - msinttypes  # [win and vc<14]\n    - bzip2\n    - curl\n    - zlib\n    - hdf4\n    # without this repeat reference, conda-smithy doesn't pin correctly\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*\n    - jpeg\n    - libzip\n    - zstd\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - curl\n    - hdf5 * {{ mpi_prefix }}_*\n\ntest:\n  commands:\n    - test ! -f ${PREFIX}/lib/libnetcdf.a          # [not win]\n    - test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}  # [not win]\n    - nc-config --all  # [not win]\n\nabout:\n  home: http://www.unidata.ucar.edu/software/netcdf/\n  license: MIT\n  license_file: COPYRIGHT\n  summary: Libraries and data formats that support array-oriented scientific data\n\nextra:\n  recipe-maintainers:\n    - WardF\n    - groutr\n    - kmuehlbauer\n    - ocefpaf\n    - mingwandroid\n    - msarahan\n    - xylar\n    - dopplershift\n",
 "req": {
  "__set__": true,
  "elements": [
   "bzip2",
   "c_compiler_stub",
   "cmake",
   "curl",
   "cxx_compiler_stub",
   "gnuconfig",
   "hdf4",
   "hdf5",
   "jpeg",
   "libzip",
   "m2-unzip",
   "make",
   "mpich",
   "openmpi",
   "pkg-config",
   "unzip",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "m2-unzip",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "hdf5",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "m2-unzip",
    "make",
    "pkg-config",
    "unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "hdf5 * mpi_openmpi_*",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "mpich",
    "openmpi",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5 * mpi_mpich_*",
    "hdf5 * mpi_openmpi_*",
    "hdf5 * nompi_*",
    "mpich",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz",
 "version": "4.9.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "100",
   "run_exports": [
    "libnetcdf"
   ],
   "string": "nompi_h1234567_100"
  },
  "extra": {
   "recipe-maintainers": [
    "WardF",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "xylar",
    "dopplershift"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.9.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-unzip"
   ],
   "host": [
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5",
    "hdf5 * nompi_*",
    "jpeg",
    "libzip",
    "zstd"
   ],
   "run": [
    "curl",
    "hdf5 * nompi_*"
   ]
  },
  "source": {
   "patches": [
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common.patch",
    "patches/0009-topsrcdir.patch",
    "patches/prevent_MS_runtime_libs_being_installed_again.patch",
    "patches/strdup.patch",
    "patches/fix_cmake.patch",
    "patches/fix-ncjson.patch",
    "patches/fix-tests.patch",
    "patches/fix-ncdump-tests-prereq.patch"
   ],
   "sha256": "9f4cb864f3ab54adb75409984c6202323d2fc66c003e5308f3cdf224ed41c0a6",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz"
  },
  "test": {
   "commands": null
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "m2-unzip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "curl",
    "hdf4",
    "hdf5",
    "jpeg",
    "libzip",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}