{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/613832796.json"
   },
   "data": {
    "bot_rerun": 1618399531.9060495,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jupyter-jaeger",
 "hash_type": "sha256",
 "name": "jupyter-jaeger",
 "new_version": "1.0.4",
 "new_version_attempts": {
  "1.0.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jupyter-jaeger"
  ]
 },
 "pinning_version": "2021.04.12.12.11.21",
 "raw_meta_yaml": "{% set name = \"jupyter-jaeger\" %}\n{% set version = \"1.0.4\" %}\n{% set jaeger_version = \"1.22.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name | replace(\"-\", \"_\") }}/{{ name | replace(\"-\", \"_\") }}-{{ version }}.tar.gz\n  sha256: 46628417163b28e67298af0f782d00e2f5e8d106a94785cca4cd454abc70e73d\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install --no-deps . -vv\"\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - jupyter-packaging 0.7.9\n    - jupyterlab 3.*\n    - nodejs\n    - setuptools >=40.8.0\n    - yarn\n    - wheel\n  run:\n    - python >=3.7\n    - jaeger <{{ jaeger_version }}\n    - jaeger-agent <{{ jaeger_version }}\n    - jaeger-all-in-one <{{ jaeger_version }}\n    - jaeger-collector <{{ jaeger_version }}\n    - jaeger-example-hotrod <{{ jaeger_version }}\n    - jaeger-ingester <{{ jaeger_version }}\n    - jaeger-query <{{ jaeger_version }}\n    - jaeger-browser\n    - jupyter-server-proxy\n    - jupyterlab 3.*\n    - notebook\n\ntest:\n  imports:\n    - jupyter_jaeger\n\nabout:\n  home: https://github.com/Quansight/jupyter-jaeger\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Jupyter integration for Jaeger tracing'\n\nextra:\n  recipe-maintainers:\n    - scopatz\n    - xmnlab\n",
 "smithy_version": "3.10.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/j/jupyter_jaeger/jupyter_jaeger-1.0.4.tar.gz",
 "version": "1.0.4"
}