{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/838007628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/894924586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "grip",
 "hash_type": "sha256",
 "name": "grip",
 "new_version": "4.6.1",
 "new_version_attempts": {
  "4.6.0": 1,
  "4.6.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "grip"
  ]
 },
 "pinning_version": "2022.03.30.18.03.29",
 "raw_meta_yaml": "{% set name = \"grip\" %}\n{% set version = \"4.6.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: a5e6ac48cd253892f0fbd0aaef3f74fe8169d8ed3d94a2e9be6bf1540e008e9f\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - grip = grip:main\n\nrequirements:\n  host:\n    - python =2.7|>3.3\n    - pip\n  run:\n    - python =2.7|>3.3\n    - docopt >=0.4.0\n    - Flask >=0.10.1\n    - Markdown >=2.5.1\n    - path-and-address >=2.0.1\n    - Pygments >=1.6\n    - requests >=2.4.1\n    - werkzeug >=0.7\n\ntest:\n  imports:\n    - grip\n  commands:\n    - grip -h\n    - pip check\n  requires:\n    - pip\n\n\nabout:\n  home: https://github.com/joeyespo/grip\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Preview GitHub Markdown files like Readme locally before committing them.\n\n  description: |\n    Grip is a command-line server application written in Python that uses the GitHub markdown API \n    to render a local readme file. The styles come directly from GitHub, so you'll know exactly \n    how it will appear. Changes you make to the Readme will be instantly reflected in the browser \n    without requiring a page refresh.\n  dev_url: https://github.com/joeyespo/grip\n\nextra:\n  recipe-maintainers:\n    - synapticarbors\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/grip/grip-4.6.1.tar.gz",
 "version": "4.6.1"
}