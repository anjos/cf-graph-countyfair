{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/415195268.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/655639104.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-conflr",
 "hash_type": "sha256",
 "name": "r-conflr",
 "new_version": "0.1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-conflr"
  ]
 },
 "pinning_version": "2021.05.27.19.14.28",
 "raw_meta_yaml": "{% set version = '0.1.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-conflr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/conflr_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/conflr/conflr_{{ version }}.tar.gz\n  sha256: 693f117d465231d1b01dcd82ecde22588f11dd80fff1dece33e4200be2ae4dae\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-r6\n    - r-askpass\n    - r-commonmark\n    - r-curl\n    - r-glue\n    - r-httr\n    - r-knitr\n    - r-miniui\n    - r-purrr\n    - r-rlang\n    - r-rmarkdown\n    - r-rstudioapi\n    - r-shiny\n    - r-stringi\n    - r-xml2\n  run:\n    - r-base\n    - r-r6\n    - r-askpass\n    - r-commonmark\n    - r-curl\n    - r-glue\n    - r-httr\n    - r-knitr\n    - r-miniui\n    - r-purrr\n    - r-rlang\n    - r-rmarkdown\n    - r-rstudioapi\n    - r-shiny\n    - r-stringi\n    - r-xml2\n\ntest:\n  commands:\n    - $R -e \"library('conflr')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('conflr')\\\"\"  # [win]\n\nabout:\n  home: https://line.github.io/conflr/, https://github.com/line/conflr\n  license: GPL-3\n  summary: Provides utilities for working with various 'Confluence' API <https://docs.atlassian.com/ConfluenceServer/rest/latest/>,\n    including a functionality to convert an R Markdown document to 'Confluence' format\n    and upload it to 'Confluence' automatically.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - halldc\n\n# Package: conflr\n# Type: Package\n# Title: Client for 'Confluence' API\n# Version: 0.1.1\n# Authors@R: c( person(\"Hiroaki\", \"Yutani\", email = \"hiroaki.yutani@linecorp.com\", role = c(\"aut\", \"cre\")), person(family = \"LINE Corporation\", role = c(\"cph\")) )\n# Description: Provides utilities for working with various 'Confluence' API <https://docs.atlassian.com/ConfluenceServer/rest/latest/>, including a functionality to convert an R Markdown document to 'Confluence' format and upload it to 'Confluence' automatically.\n# URL: https://line.github.io/conflr/, https://github.com/line/conflr\n# SystemRequirements: pandoc (>= 1.12.3) - https://pandoc.org\n# BugReports: https://github.com/line/conflr/issues\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# Imports: askpass, commonmark, curl, glue, httr, knitr, miniUI, purrr, rmarkdown, rstudioapi, shiny, stringi, xml2, R6, rlang\n# Suggests: mockery, testthat (>= 2.1.0), withr\n# RoxygenNote: 7.1.0\n# NeedsCompilation: no\n# Packaged: 2020-04-08 12:38:01 UTC; yutani\n# Author: Hiroaki Yutani [aut, cre], LINE Corporation [cph]\n# Maintainer: Hiroaki Yutani <hiroaki.yutani@linecorp.com>\n# Repository: CRAN\n# Date/Publication: 2020-04-08 12:50:02 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/conflr_0.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/conflr/conflr_0.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/conflr_0.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/conflr/conflr_0.1.1.tar.gz"
 ],
 "version": "0.1.1"
}