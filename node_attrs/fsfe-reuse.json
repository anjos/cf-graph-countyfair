{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/342651170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/346698513.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "fsfe-reuse",
 "hash_type": "sha256",
 "name": "fsfe-reuse",
 "new_version": "1.0.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fsfe-reuse"
  ]
 },
 "pinning_version": "2019.11.26",
 "raw_meta_yaml": "{% set version = \"1.0.0\" %}\n\npackage:\n  name: fsfe-reuse\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/f/fsfe-reuse/fsfe-reuse-0.6.0.tar.gz\n  sha256: 2667325ce87a1469966e9e2fb65c0cdd6fe11cba6a6443327661efc382454144\n\nbuild:\n  number: 0\n  noarch: generic\n\nrequirements:\n  run:\n    - reuse\n\ntest:\n  commands:\n    - reuse --help\n\n\nabout:\n  home: https://reuse.software/\n  license: GPL-3.0-or-later AND Apache-2.0 AND CC0-1.0 AND CC-BY-SA-4.0\n  license_file:\n    - LICENSES/GPL-3.0-or-later.txt\n    - LICENSES/Apache-2.0.txt\n    - LICENSES/CC0-1.0.txt\n    - LICENSES/CC-BY-SA-4.0.txt\n  summary: fsfe-reuse is an alias for reuse.\n  description: |\n    As of version 0.7.0, [reuse](https://pypi.org/project/reuse/) is\n    used instead of fsfe-reuse.\n\n    If you still depend on fsfe-reuse, then you will automatically get\n    the latest version of reuse. This dummy package depends on reuse.\n\n    If you depend on a specific older version of fsfe-reuse, then you\n    will continue to get that version.\n  doc_url: https://reuse.readthedocs.io/\n  dev_url: https://github.com/fsfe/reuse-tool\n\nextra:\n  recipe-maintainers:\n    - mbargull\n",
 "smithy_version": "3.6.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/f/fsfe-reuse/fsfe-reuse-0.6.0.tar.gz",
 "version": "1.0.0"
}