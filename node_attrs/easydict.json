{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "easydict",
 "hash_type": "sha256",
 "name": "easydict",
 "new_version": "1.9",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "easydict"
  ]
 },
 "raw_meta_yaml": "{% set version = \"1.9\" %}\npackage:\n    name: easydict\n    version: {{ version }}\nsource:\n    sha256: 3f3f0dab07c299f0f4df032db1f388d985bb57fa4c5be30acd25c5f9a516883b\n    url: https://pypi.io/packages/source/e/easydict/easydict-{{ version }}.tar.gz\nbuild:\n    noarch: python\n    number: '0'\n    script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n    host:\n        - python\n        - pip\n    run:\n        - python\ntest:\n    imports:\n        - easydict\nabout:\n    description: |\n        *EasyDict* allows to access dict values as attributes (works recursively). \n        A Javascript-like properties dot notation for python dicts.\n\n        =====\n        USAGE\n        =====\n\n        ::\n\n            >>> from easydict import EasyDict as edict\n            >>> d = edict({'foo':3, 'bar':{'x':1, 'y':2}})\n            >>> d.foo\n            3\n            >>> d.bar.x\n            1\n            \n            >>> d = edict(foo=3)\n            >>> d.foo\n            3\n\n    home: https://github.com/makinacorpus/easydict\n    license: LGPL\n    license_file: LICENSE\n    summary: Access dict values as attributes (works recursively).\nextra:\n    recipe-maintainers:\n        - zhaofeng-shu33\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/e/easydict/easydict-1.9.tar.gz",
 "version": "1.9"
}