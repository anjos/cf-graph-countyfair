{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/241630709.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299277607.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412952615.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-profmem",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/HenrikBengtsson/profmem",
   "license": "LGPL (>= 2.1)",
   "license_family": "LGPL",
   "license_file": "/lib/R/share/licenses/LGPL-2.1",
   "summary": "A simple and light-weight API for memory profiling of R expressions.  The profiling is built on top of R's built-in memory profiler ('utils::Rprofmem()'), which records every memory allocation done by R (also native code)."
  },
  "build": {
   "noarch": "generic",
   "number": "1002",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "philip-khor",
    "conda-forge/r",
    "philip-khor"
   ]
  },
  "package": {
   "name": "r-profmem",
   "version": "0.5.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "088a96e4016acfb4f0623e2cc587cdf1a168baf12231489b3f21a69b869a4d94",
   "url": [
    "https://cran.r-project.org/src/contrib/profmem_0.5.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/profmem/profmem_0.5.0.tar.gz",
    "https://cran.r-project.org/src/contrib/profmem_0.5.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/profmem/profmem_0.5.0.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('profmem')\"",
    "$R -e \"library('profmem')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/HenrikBengtsson/profmem",
   "license": "LGPL (>= 2.1)",
   "license_family": "LGPL",
   "license_file": "/lib/R/share/licenses/LGPL-2.1",
   "summary": "A simple and light-weight API for memory profiling of R expressions.  The profiling is built on top of R's built-in memory profiler ('utils::Rprofmem()'), which records every memory allocation done by R (also native code)."
  },
  "build": {
   "noarch": "generic",
   "number": "1002",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "philip-khor",
    "conda-forge/r",
    "philip-khor"
   ]
  },
  "package": {
   "name": "r-profmem",
   "version": "0.5.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "088a96e4016acfb4f0623e2cc587cdf1a168baf12231489b3f21a69b869a4d94",
   "url": [
    "https://cran.r-project.org/src/contrib/profmem_0.5.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/profmem/profmem_0.5.0.tar.gz",
    "https://cran.r-project.org/src/contrib/profmem_0.5.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/profmem/profmem_0.5.0.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('profmem')\"",
    "$R -e \"library('profmem')\""
   ]
  }
 },
 "name": "r-profmem",
 "new_version": "0.6.0",
 "new_version_attempts": {
  "0.6.0": 228
 },
 "new_version_errors": {
  "0.6.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 16, column 3:\n      noarch: generic\n      ^ (line: 16)\nfound duplicate key \"noarch\" with value \"generic\" (original value: \"generic\")\n  in \"<unicode string>\", line 19, column 3:\n      noarch: generic\n      ^ (line: 19)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-profmem"
  ]
 },
 "pinning_version": "2020.05.04.05.46.47",
 "pre_pr_migrator_status": {
  "version": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1041, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 163, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 279, in get_repo\n    if fetch_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 198, in fetch_repo\n    _run_git_cmd(f\"git pull upstream {base_branch} {quiet}\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 171, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 512, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git pull upstream master --quiet' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = '0.5.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-profmem\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/profmem_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/profmem/profmem_{{ version }}.tar.gz\n  sha256: 088a96e4016acfb4f0623e2cc587cdf1a168baf12231489b3f21a69b869a4d94\n\nbuild:\n  noarch: generic\n  merge_build_host: True  # [win]\n  number: 1002\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('profmem')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('profmem')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/HenrikBengtsson/profmem\n  license: LGPL (>= 2.1)\n  summary: A simple and light-weight API for memory profiling of R expressions.  The profiling\n    is built on top of R's built-in memory profiler ('utils::Rprofmem()'), which records\n    every memory allocation done by R (also native code).\n  license_family: LGPL\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/LGPL-2.1'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - philip-khor\n\n# Package: profmem\n# Version: 0.5.0\n# Title: Simple Memory Profiling for R\n# Imports: utils\n# Suggests: R.rsp, markdown, microbenchmark\n# VignetteBuilder: R.rsp\n# Authors@R: c(person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"), email = \"henrikb@braju.com\"))\n# Description: A simple and light-weight API for memory profiling of R expressions.  The profiling is built on top of R's built-in memory profiler ('utils::Rprofmem()'), which records every memory allocation done by R (also native code).\n# License: LGPL (>= 2.1)\n# LazyLoad: TRUE\n# URL: https://github.com/HenrikBengtsson/profmem\n# BugReports: https://github.com/HenrikBengtsson/profmem/issues\n# RoxygenNote: 6.0.1\n# NeedsCompilation: no\n# Packaged: 2018-01-30 19:13:35 UTC; hb\n# Author: Henrik Bengtsson [aut, cre, cph]\n# Maintainer: Henrik Bengtsson <henrikb@braju.com>\n# Repository: CRAN\n# Date/Publication: 2018-01-30 19:54:46 UTC\n",
 "req": {
  "__set__": true,
  "elements": [
   "r-base"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/profmem_0.5.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/profmem/profmem_0.5.0.tar.gz",
  "https://cran.r-project.org/src/contrib/profmem_0.5.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/profmem/profmem_0.5.0.tar.gz"
 ],
 "version": "0.5.0"
}