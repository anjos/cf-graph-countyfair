{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/242491269.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242905042.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244278621.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244281932.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315209006.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315264016.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/317571707.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/364580581.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/464856335.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "gast",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "GAST provides a compatibility layer between the AST of various Python\nversions, as produced by ast.parse from the standard ast module.\n",
   "dev_url": "https://github.com/serge-sans-paille/gast",
   "home": "https://github.com/serge-sans-paille/gast",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE",
   "summary": "A generic AST to represent Python2 and Python3's Abstract Syntax Tree(AST)."
  },
  "build": {
   "noarch": "python",
   "number": 0,
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "martinRenou"
   ]
  },
  "package": {
   "name": "gast",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "python",
    "pip"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "gast-0.4.0.tar.gz",
   "sha256": "40feb7b8b8434785585ab224d1568b857edb18297e5a3047f1ba012bc83b42c1",
   "url": "https://pypi.io/packages/source/g/gast/gast-0.4.0.tar.gz"
  },
  "test": {
   "imports": [
    "gast"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "GAST provides a compatibility layer between the AST of various Python\nversions, as produced by ast.parse from the standard ast module.\n",
   "dev_url": "https://github.com/serge-sans-paille/gast",
   "home": "https://github.com/serge-sans-paille/gast",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE",
   "summary": "A generic AST to represent Python2 and Python3's Abstract Syntax Tree(AST)."
  },
  "build": {
   "noarch": "python",
   "number": 0,
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "martinRenou"
   ]
  },
  "package": {
   "name": "gast",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "python",
    "pip"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "gast-0.4.0.tar.gz",
   "sha256": "40feb7b8b8434785585ab224d1568b857edb18297e5a3047f1ba012bc83b42c1",
   "url": "https://pypi.io/packages/source/g/gast/gast-0.4.0.tar.gz"
  },
  "test": {
   "imports": [
    "gast"
   ]
  }
 },
 "name": "gast",
 "new_version": "0.4.0",
 "new_version_attempts": {
  "0.4.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "GAST provides a compatibility layer between the AST of various Python\nversions, as produced by ast.parse from the standard ast module.\n",
   "dev_url": "https://github.com/serge-sans-paille/gast",
   "home": "https://github.com/serge-sans-paille/gast",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE",
   "summary": "A generic AST to represent Python2 and Python3's Abstract Syntax Tree(AST)."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "martinRenou"
   ]
  },
  "package": {
   "name": "gast",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "python",
    "pip"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "gast-0.3.3.tar.gz",
   "sha256": "b881ef288a49aa81440d2c5eb8aeefd4c2bb8993d5f50edae7413a85bfdb3b57",
   "url": "https://pypi.io/packages/source/g/gast/gast-0.3.3.tar.gz"
  },
  "test": {
   "imports": [
    "gast"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gast"
  ]
 },
 "pinning_version": "2020.08.05.17.02.37",
 "raw_meta_yaml": "{% set name = \"gast\" %}\n{% set version = \"0.4.0\" %}\n{% set sha256 = \"40feb7b8b8434785585ab224d1568b857edb18297e5a3047f1ba012bc83b42c1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - gast\n\nabout:\n  home: https://github.com/serge-sans-paille/gast\n  license: BSD-3-Clause\n  license_family: BSD\n  # https://github.com/serge-sans-paille/gast/pull/17\n  license_file: {{ environ[\"RECIPE_DIR\"] }}/LICENSE\n  summary: A generic AST to represent Python2 and Python3's Abstract Syntax Tree(AST).\n\n  description: |\n    GAST provides a compatibility layer between the AST of various Python \n    versions, as produced by ast.parse from the standard ast module.\n  dev_url: https://github.com/serge-sans-paille/gast\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n    - martinRenou\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/g/gast/gast-0.2.2.tar.gz",
 "version": "0.4.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "GAST provides a compatibility layer between the AST of various Python\nversions, as produced by ast.parse from the standard ast module.\n",
   "dev_url": "https://github.com/serge-sans-paille/gast",
   "home": "https://github.com/serge-sans-paille/gast",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE",
   "summary": "A generic AST to represent Python2 and Python3's Abstract Syntax Tree(AST)."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "CurtLH",
    "martinRenou"
   ]
  },
  "package": {
   "name": "gast",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "python",
    "pip"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "gast-0.3.3.tar.gz",
   "sha256": "b881ef288a49aa81440d2c5eb8aeefd4c2bb8993d5f50edae7413a85bfdb3b57",
   "url": "https://pypi.io/packages/source/g/gast/gast-0.3.3.tar.gz"
  },
  "test": {
   "imports": [
    "gast"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}