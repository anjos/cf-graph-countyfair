{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/773938868.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/796280852.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ampform",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "AmpForm is a Python library of spin formalisms and dynamics with which you can\nautomatically formulate symbolic amplitude models for Partial Wave Analysis.\nThe resulting amplitude models are formulated with\n[SymPy](https://www.sympy.org/en/index.html). This note only makes it easy to\ninspect and visualize the resulting amplitude models, but also means the\namplitude models can be used as templates for faster computational back-ends\n(see [TensorWaves](https://github.com/ComPWA/tensorwaves))!\n",
   "dev_url": "https://github.com/ComPWA/ampform",
   "doc_url": "https://ampform.readthedocs.io",
   "home": "https://github.com/ComPWA/ampform",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Automatically generate symbolic amplitude models for Partial Wave Analysis"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "redeboer"
   ]
  },
  "package": {
   "name": "ampform",
   "version": "0.11.5"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6,<3.10",
    "attrs >=20.1.0",
    "qrules ==0.9.*",
    "numpy >=1.16,<1.21",
    "sympy",
    "typing-extensions"
   ]
  },
  "source": {
   "sha256": "60813a1a9954c4fce48d3d0888fc81340eba8859803590d4cbd02f0f9abaf807",
   "url": "https://pypi.io/packages/source/a/ampform/ampform-0.11.5.tar.gz"
  },
  "test": {
   "imports": [
    "ampform",
    "ampform.data",
    "ampform.dynamics",
    "ampform.helicity",
    "ampform.kinematics"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs",
    "numpy",
    "python",
    "qrules",
    "sympy",
    "typing-extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "AmpForm is a Python library of spin formalisms and dynamics with which you can\nautomatically formulate symbolic amplitude models for Partial Wave Analysis.\nThe resulting amplitude models are formulated with\n[SymPy](https://www.sympy.org/en/index.html). This note only makes it easy to\ninspect and visualize the resulting amplitude models, but also means the\namplitude models can be used as templates for faster computational back-ends\n(see [TensorWaves](https://github.com/ComPWA/tensorwaves))!\n",
   "dev_url": "https://github.com/ComPWA/ampform",
   "doc_url": "https://ampform.readthedocs.io",
   "home": "https://github.com/ComPWA/ampform",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Automatically generate symbolic amplitude models for Partial Wave Analysis"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "redeboer"
   ]
  },
  "package": {
   "name": "ampform",
   "version": "0.11.5"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6,<3.10",
    "attrs >=20.1.0",
    "qrules ==0.9.*",
    "numpy >=1.16,<1.21",
    "sympy",
    "typing-extensions"
   ]
  },
  "source": {
   "sha256": "60813a1a9954c4fce48d3d0888fc81340eba8859803590d4cbd02f0f9abaf807",
   "url": "https://pypi.io/packages/source/a/ampform/ampform-0.11.5.tar.gz"
  },
  "test": {
   "imports": [
    "ampform",
    "ampform.data",
    "ampform.dynamics",
    "ampform.helicity",
    "ampform.kinematics"
   ]
  }
 },
 "name": "ampform",
 "new_version": "0.12.0",
 "new_version_attempts": {
  "0.11.5": 1,
  "0.12.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ampform"
  ]
 },
 "pinning_version": "2021.12.05.20.40.01",
 "raw_meta_yaml": "{% set name = \"AmpForm\" %}\n{% set version = \"0.11.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0]|lower }}/{{ name|lower }}/{{ name|lower }}-{{ version }}.tar.gz\n  sha256: 60813a1a9954c4fce48d3d0888fc81340eba8859803590d4cbd02f0f9abaf807\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6,<3.10\n    - setuptools_scm\n  run:\n    - python >=3.6,<3.10\n    - attrs >=20.1.0\n    - qrules ==0.9.*\n    - numpy >=1.16,<1.21\n    - sympy\n    - typing-extensions\n\ntest:\n  imports:\n    - ampform\n    - ampform.data\n    - ampform.dynamics\n    - ampform.helicity\n    - ampform.kinematics\n\nabout:\n  home: https://github.com/ComPWA/ampform\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Automatically generate symbolic amplitude models for Partial Wave Analysis\n\n  description: |\n    AmpForm is a Python library of spin formalisms and dynamics with which you can\n    automatically formulate symbolic amplitude models for Partial Wave Analysis.\n    The resulting amplitude models are formulated with\n    [SymPy](https://www.sympy.org/en/index.html). This note only makes it easy to\n    inspect and visualize the resulting amplitude models, but also means the\n    amplitude models can be used as templates for faster computational back-ends\n    (see [TensorWaves](https://github.com/ComPWA/tensorwaves))!\n\n\n  dev_url: https://github.com/ComPWA/ampform\n  doc_url: https://ampform.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - redeboer\n",
 "req": {
  "__set__": true,
  "elements": [
   "attrs",
   "numpy",
   "pip",
   "python",
   "qrules",
   "setuptools_scm",
   "sympy",
   "typing-extensions"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs",
    "numpy",
    "python",
    "qrules",
    "sympy",
    "typing-extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs >=20.1.0",
    "numpy >=1.16,<1.21",
    "python >=3.6,<3.10",
    "qrules ==0.9.*",
    "sympy",
    "typing-extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/a/ampform/ampform-0.11.5.tar.gz",
 "version": "0.11.5"
}