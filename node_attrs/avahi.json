{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/371618343.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/376475941.json"
   },
   "data": {
    "bot_rerun": 1623407400.4095767,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503173414.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602048815.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "expat23"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/667987905.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764410613.json"
   },
   "data": {
    "bot_rerun": 1636371630.5028193,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775279643.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775597657.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default"
  }
 },
 "feedstock_name": "avahi",
 "hash_type": "sha256",
 "name": "avahi",
 "new_version": "0.8",
 "new_version_attempts": {
  "0.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "avahi",
   "python-avahi"
  ]
 },
 "pinning_version": "2021.11.08.01.51.47",
 "raw_meta_yaml": "{% set name = \"avahi\" %}\n{% set version = \"0.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: http://avahi.org/download/{{ name }}-{{ version }}.tar.gz\n  sha256: 060309d7a333d38d951bc27598c677af1796934dbd98e1024e7ad8de798fedda\n  patches:\n    - patches/0001-move-avahi-runtime-dir-to-prefix.patch\n    - patches/0002-install-daemons-to-prefix-macos.patch\n    - patches/0003-fix-allow_undefined-macos-11.patch\n\nbuild:\n  number: 2\n  skip: true  # [win]\n\noutputs:\n  - name: python-avahi\n    script: python-avahi.sh\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - gnuconfig  # [unix]\n        - intltool\n        - make\n        - pkg-config\n        # extras for cross-compiling\n        - dbus-python >=0.34                  # [build_platform != target_platform]\n        - python                              # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n      host:\n        - dbus >=0.34\n        - dbus-python >=0.34\n        - expat\n        - pygobject\n        - python\n      run:\n        - dbus-python >=0.34\n        - pygobject\n        - python\n    test:\n      imports:\n        - avahi\n      commands:\n        # check script\n        - avahi-bookmarks --help\n    about:\n      home: http://avahi.org\n      dev_url: https://github.com/lathiat/avahi.git\n      doc_url: http://avahi.org/doxygen/html/\n      license: LGPL-2.1-or-later\n      license_file: LICENSE\n      summary: Python utility package for Avahi\n      description: |\n        Avahi is a system which facilitates service discovery on\n        a local network -- this means that you can plug your laptop or\n        computer into a network and instantly be able to view other people who\n        you can chat with, find printers to print to or find files being\n        shared. This kind of technology is already found in MacOS X (branded\n        'Rendezvous', 'Bonjour' and sometimes 'ZeroConf') and is very\n        convenient.\n\n        This package contains utility modules to talk to Avahi with Python easier.\n  - name: avahi\n    script: lib-avahi.sh\n    build:\n      ignore_run_exports:\n        - libstdcxx-ng  # [linux]\n        - libcxx  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - gnuconfig  # [unix]\n        - make\n        - pkg-config\n        # extras for cross-compiling\n        # (glib-genmarshal calls out to python3)\n        - python                                 # [build_platform != target_platform]\n      host:\n        - dbus >=0.34\n        - expat\n        - gettext\n        - glib\n        - libdaemon\n        - libevent\n      run:\n        - dbus >=0.34\n        - expat\n        - libdaemon\n        - libevent\n        - libglib\n    test:\n      commands:\n        - avahi-browse --version\n        - avahi-publish --version\n        - avahi-resolve --version\n\nabout:\n  home: http://avahi.org\n  dev_url: https://github.com/lathiat/avahi.git\n  doc_url: http://avahi.org/doxygen/html/\n  license: LGPL-2.1-or-later\n  license_file: LICENSE\n  summary: Local network service discovery\n  description: |\n    Avahi is a system which facilitates service discovery on\n    a local network -- this means that you can plug your laptop or\n    computer into a network and instantly be able to view other people who\n    you can chat with, find printers to print to or find files being\n    shared. This kind of technology is already found in MacOS X (branded\n    'Rendezvous', 'Bonjour' and sometimes 'ZeroConf') and is very\n    convenient.\n\nextra:\n  recipe-maintainers:\n    - andfoy\n    - duncanmmacleod\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "http://avahi.org/download/avahi-0.8.tar.gz",
 "version": "0.8"
}