{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/783243766.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/869976353.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/870061828.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/871062493.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877725780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/894722895.json"
   },
   "data": {
    "bot_rerun": 1660758646.6039708,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/924211804.json"
   },
   "data": {
    "bot_rerun": 1651267781.0925283,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006213165.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006406702.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1029161198.json"
   },
   "data": {
    "bot_rerun": 1668774813.6336682,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1111852698.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1128454869.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "cosmosis",
 "hash_type": "sha256",
 "name": "cosmosis",
 "new_version": "2.2.3",
 "new_version_attempts": {
  "0.5.13": 1,
  "0.5.14": 1,
  "0.5.16": 1,
  "0.5.18": 1,
  "2.0.3": 1,
  "2.1.1": 1,
  "2.1.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cosmosis"
  ]
 },
 "pinning_version": "2022.11.18.17.56.12",
 "raw_meta_yaml": "{% set name = \"cosmosis\" %}\n{% set version = \"2.2.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f814643eeca331a4b23facc84d4cbbaff2759b4018e59a6e4db2cac845933837\n\nbuild:\n  number: 1\n  skip: true  # [( (py < 36) or win or ((build_platform != target_platform) and mpi == \"openmpi\") )]\n  script: {{ PYTHON }} -m pip install . -vv\n\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}\n    - {{ compiler('cxx') }}\n    - make\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n  host:\n    - python\n    - pip\n    - wheel\n    - {{ mpi }}\n    # needed to force the right pinnings\n    # see https://github.com/conda-forge/conda-smithy/issues/1600\n    - mpich ==3.*          # [mpi == \"mpich ==3.*\"]\n    - mpich ==4.*          # [mpi == \"mpich ==4.*\"]\n    - openmpi             # [mpi == \"openmpi\"]\n    - liblapack\n    - libblas\n    - minuit2_standalone\n  run:\n    # core\n    - python\n    - mpi4py\n    - matplotlib-base\n    - future\n    - numpy\n    - pip\n    - pybind11\n    - pyyaml\n    - scipy\n    - setuptools\n    - threadpoolctl\n    - git\n    # for samplers\n    - emcee\n    - dynesty\n    - minuit2_standalone\n    - zeus-mcmc\n    - dulwich\n\ntest:\n  imports:\n    - cosmosis\n  commands:\n    - test -f ${SP_DIR}/cosmosis/samplers/multinest/multinest_src/libnest3.so\n    - test -f ${SP_DIR}/cosmosis/samplers/multinest/multinest_src/libnest3_mpi.so\n    - test -f ${SP_DIR}/cosmosis/samplers/polychord/polychord_src/libchord.so\n    - test -f ${SP_DIR}/cosmosis/samplers/polychord/polychord_src/libchord_mpi.so\n    - source cosmosis-configure && pytest --pyargs cosmosis\n  requires:\n    - pytest\n\nabout:\n  home: https://github.com/joezuntz/cosmosis\n  license: BSD-2-Clause AND LicenseRef-non-commerical-use-only\n  license_family: BSD\n  license_file:\n    - LICENSE\n    - cosmosis/samplers/multinest/multinest_src/LICENCE\n    - cosmosis/samplers/polychord/polychord_src/LICENCE\n\n  summary: The Cosmological Survey Inference System\n  description: |\n    CosmoSIS is a framework designed primarily for cosmological\n    parameter estimation.\n  doc_url: https://cosmosis.readthedocs.io/\n  dev_url: https://github.com/joezuntz/cosmosis\n\nextra:\n  recipe-maintainers:\n    - joezuntz\n",
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/c/cosmosis/cosmosis-2.2.3.tar.gz",
 "version": "2.2.3"
}