{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/204477203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.12.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221184581.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244057091.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268277011.json"
   },
   "data": {
    "bot_rerun": 1580112444.0999076,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/283619649.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/384804596.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505538042.json"
   },
   "data": {
    "bot_rerun": 1605153040.0062206,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519604563.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533280871.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554631972.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/593360927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/730102399.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.18.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764258649.json"
   },
   "data": {
    "bot_rerun": 1635489026.0947914,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/769547771.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812623956.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.19.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/839837460.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/879259093.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926172196.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/936751918.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "alsa_lib126"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/968883979.json"
   },
   "data": {
    "bot_rerun": 1655399027.8800344,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/970329101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.20.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "gstreamer",
 "hash_type": "sha256",
 "name": "gstreamer_and_plugins",
 "new_version": "1.20.3",
 "new_version_attempts": {
  "1.18.2": 1,
  "1.18.3": 1,
  "1.18.4": 1,
  "1.18.5": 1,
  "1.19.3": 1,
  "1.20.0": 1,
  "1.20.1": 1,
  "1.20.2": 1,
  "1.20.3": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gst-plugins-base",
   "gst-plugins-good",
   "gstreamer"
  ]
 },
 "pinning_version": "2022.06.16.23.47.53",
 "raw_meta_yaml": "{% set version = \"1.20.3\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: gstreamer_and_plugins\n  version: {{ version }}\n\nsource:\n  - url: https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-{{ version }}.tar.xz\n    sha256: 607daf64bbbd5fb18af9d17e21c0d22c4d702fffe83b23cb22d1b1af2ca23a2a\n  - url: https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-{{ version }}.tar.xz\n    sha256: 7e30b3dd81a70380ff7554f998471d6996ff76bbe6fc5447096f851e24473c9f\n    folder: plugins_base\n  - url: https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-{{ version }}.tar.xz\n    sha256: f8f3c206bf5cdabc00953920b47b3575af0ef15e9f871c0b6966f6d0aa5868b7\n    folder: plugins_good\n    patches:\n      - jpeg-win.patch  # [win]\n\nbuild:\n  number: 0\n\noutputs:\n  - name: gstreamer\n    script: install_gstreamer.sh  # [unix]\n    script: install_gstreamer.bat  # [win]\n    build:\n      activate_in_script: true\n      ignore_run_exports:\n        # we need cross-python to build, but this isn't a python package\n        - python  # [build_platform != target_platform]\n      run_exports:\n        # remove symbols at .90 patch releases just before minor versions?\n        #    https://abi-laboratory.pro/tracker/timeline/gstreamer/\n        - {{ pin_subpackage('gstreamer', max_pin='x.x') }}\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - pkg-config\n        - {{ posix }}bison\n        - {{ posix }}flex\n        - meson\n        - ninja\n        - gobject-introspection\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n      host:\n        - gettext\n        - glib\n      run:\n        - {{ pin_compatible(\"glib\") }}  # required for anything that builds against GStreamer, e.g. Qt\n    test:\n      commands:\n        - gst-inspect-1.0 --version\n        - gst-launch-1.0  --version\n        - gst-stats-1.0 --version\n        - gst-typefind-1.0 --version\n        - test -f $PREFIX/lib/girepository-1.0/Gst-1.0.typelib  # [unix]\n        - if not exist %LIBRARY_LIB%\\\\girepository-1.0\\\\Gst-1.0.typelib exit 1  # [win]\n    about:\n      summary: Library for constructing graphs of media-handling components\n      description:\n      doc_source_url: https://cgit.freedesktop.org/gstreamer/gstreamer/tree/docs\n\n  - name: gst-plugins-base\n    script: install_base_plugins.sh  # [unix]\n    script: install_base_plugins.bat  # [win]\n    build:\n      activate_in_script: true\n      ignore_run_exports:\n        # we need cross-python to build, but this isn't a python package\n        - python  # [build_platform != target_platform]\n      run_exports:\n        # remove symbols at .90 patch releases just before minor versions?\n        #    https://abi-laboratory.pro/tracker/timeline/gstreamer/\n        - {{ pin_subpackage('gst-plugins-base', max_pin='x.x') }}\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('libx11-devel') }}          # [linux]\n        - {{ cdt('libxrender-devel') }}      # [linux]\n        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('libdrm-devel') }}          # [linux]\n        - {{ cdt('libxdamage-devel') }}      # [linux]\n        - {{ cdt('libxfixes-devel') }}       # [linux]\n        - {{ cdt('libxxf86vm-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        # These dependencies are only for cos7 platforms\n        - {{ cdt('libglvnd-glx') }}          # [linux & (ppc64le | aarch64)]\n        - {{ cdt('libglvnd') }}              # [linux & (ppc64le | aarch64)]\n        - {{ cdt('libxshmfence-devel') }}    # [linux & (ppc64le | aarch64)]\n        - {{ cdt('mesa-khr-devel') }}        # [linux & (ppc64le | aarch64)]\n        # expat here is _only_ required for mesa-dri-drivers\n        - {{ cdt('expat') }}                 # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - pkg-config\n        - meson\n        - ninja\n        - gobject-introspection\n      host:\n        - {{ pin_subpackage('gstreamer') }}\n        - glib\n        - zlib\n        - gettext\n        - libxcb                             # [linux]\n        - libpng                             # [unix]\n        - alsa-lib                           # [linux]\n        - libopus                            # [unix]\n        - libvorbis\n      run:\n        - {{ pin_compatible('gstreamer') }}\n        - libpng                             # [unix]\n\n    test:\n      commands:\n        - test -f $PREFIX/lib/libgstallocators-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstapp-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstaudio-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstfft-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstpbutils-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstriff-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstrtp-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstrtsp-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstsdp-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgsttag-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libgstvideo-1.0${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/girepository-1.0/GstVideo-1.0.typelib  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\gstallocators-1.0-0.dll exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\girepository-1.0\\\\GstVideo-1.0.typelib exit 1  # [win]\n        - gst-inspect-1.0 --plugin volume\n\n    about:\n      summary: GStreamer Base Plug-ins\n      description: |\n        GStreamer Base Plug-ins is a well-groomed and well-maintained collection of\n        GStreamer plug-ins and elements, spanning the range of possible types of\n        elements one would want to write for GStreamer.\n      doc_source_url: https://github.com/GStreamer/gst-plugins-base/tree/master/docs\n\n  - name: gst-plugins-good\n    script: install_good_plugins.sh  # [unix]\n    script: install_good_plugins.bat  # [win]\n    build:\n      activate_in_script: true\n      ignore_run_exports:\n        # we need cross-python to build, but this isn't a python package\n        - python  # [build_platform != target_platform]\n      run_exports:\n        - {{ pin_subpackage('gst-plugins-good', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('libx11-devel') }}          # [linux]\n        - {{ cdt('libxrender-devel') }}      # [linux]\n        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('libdrm-devel') }}          # [linux]\n        - {{ cdt('libxdamage-devel') }}      # [linux]\n        - {{ cdt('libxfixes-devel') }}       # [linux]\n        - {{ cdt('libxxf86vm-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        # These dependencies are only for cos7 platforms\n        - {{ cdt('libglvnd-glx') }}          # [linux & (ppc64le | aarch64)]\n        - {{ cdt('libglvnd') }}              # [linux & (ppc64le | aarch64)]\n        - {{ cdt('libxshmfence-devel') }}    # [linux & (ppc64le | aarch64)]\n        - {{ cdt('mesa-khr-devel') }}        # [linux & (ppc64le | aarch64)]\n        # expat here is _only_ required for mesa-dri-drivers\n        - {{ cdt('expat') }}                 # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - pkg-config\n        - meson\n        - ninja\n      host:\n        - {{ pin_subpackage('gstreamer') }}\n        - {{ pin_subpackage('gst-plugins-base') }}\n        - glib\n        - libxcb                             # [linux]\n        - jack >=1.9.7                       # [linux64]\n        - lame                               # [unix]\n        - mpg123                             # [linux64 or osx]\n        - zlib                               # [not ppc64le]\n        - libsoup                            # [not ppc64le]\n        - jpeg\n      run:\n        - {{ pin_compatible('gstreamer') }}\n        - {{ pin_subpackage('gst-plugins-base') }}\n        - libsoup                            # [not ppc64le]\n        - glib-networking                    # [not ppc64le]\n    test:\n      commands:\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstalpha${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstdebug${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstjack${SHLIB_EXT}  # [linux64]\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstjpeg${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstlame${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstmpg123${SHLIB_EXT}  # [linux64 or osx]\n        - test -f $PREFIX/lib/gstreamer-1.0/libgstspectrum${SHLIB_EXT}  # [unix]\n        - if not exist %LIBRARY_LIB%\\\\gstreamer-1.0\\\\gstalpha.dll exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\gstreamer-1.0\\\\gstdebug.dll exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\gstreamer-1.0\\\\gstjpeg.dll exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\\\gstreamer-1.0\\\\gstspectrum.dll exit 1  # [win]\n        - gst-inspect-1.0 --plugin alpha\n    about:\n      summary: GStreamer Good Plug-ins\n      description: |\n        GStreamer Good Plug-ins is A collection of plug-ins you'd\n        want to have right next to you on the battlefield.\n        Shooting sharp and making no mistakes, these plug-ins have it\n        all: good looks, good code, and good licensing.  Documented and\n        dressed up in tests.  If you're looking for a role model to\n        base your own plug-in on here it is.\n      doc_source_url: https://github.com/GStreamer/gst-plugins-good/tree/master/docs\n\nabout:\n  home: https://gstreamer.freedesktop.org/\n  summary: Library for constructing graphs of media-handling components\n  license: LGPL-2.0-or-later\n  license_file: COPYING\n  doc_url: https://gstreamer.freedesktop.org/documentation/\n  dev_url: https://cgit.freedesktop.org/gstreamer/gstreamer/tree/\n\nextra:\n  recipe-maintainers:\n    - andfoy\n    - ccordoba12\n    - mingwandroid\n    - msarahan\n    - tschoonj\n    - scopatz\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.20.3.tar.xz",
 "version": "1.20.3"
}