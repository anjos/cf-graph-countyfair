{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "covid-sim-suite",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is the COVID-19 CovidSim microsimulation model developed\nby the MRC Centre for Global Infectious Disease Analysis hosted\nat Imperial College, London.\nCovidSim models the transmission dynamics and severity of COVID-19\ninfections throughout a spatially and socially structured population\nover time. It enables modelling of how intervention policies and\nhealthcare provision affect the spread of COVID-19. With parameter\nchanges, it can be used to model other respiratory viruses,\nsuch as influenza.\n",
   "dev_url": "https://github.com/mrc-ide/covid-sim",
   "home": "https://github.com/mrc-ide/covid-sim",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE.md",
   "summary": "COVID-19 CovidSim Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "mingwandroid",
    "mingwandroid"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   }
  ],
  "package": {
   "name": "covid-sim-suite",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "libgomp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "libgomp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "libgomp",
    "cmake",
    "make"
   ]
  },
  "source": {
   "patches": [
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch"
   ],
   "sha256": "64beba8fbfc9c4737a7d41492507e5997f48f8fe40471048f04cc2a7cf50f47c",
   "url": "https://github.com/mrc-ide/covid-sim/archive/v0.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "covid-sim-data"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "nss",
    "python",
    "ripgrep"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is the COVID-19 CovidSim microsimulation model developed\nby the MRC Centre for Global Infectious Disease Analysis hosted\nat Imperial College, London.\nCovidSim models the transmission dynamics and severity of COVID-19\ninfections throughout a spatially and socially structured population\nover time. It enables modelling of how intervention policies and\nhealthcare provision affect the spread of COVID-19. With parameter\nchanges, it can be used to model other respiratory viruses,\nsuch as influenza.\n",
   "dev_url": "https://github.com/mrc-ide/covid-sim",
   "home": "https://github.com/mrc-ide/covid-sim",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE.md",
   "summary": "COVID-19 CovidSim Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "mingwandroid",
    "mingwandroid",
    "mingwandroid",
    "mingwandroid",
    "mingwandroid",
    "mingwandroid",
    "mingwandroid",
    "mingwandroid"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "llvm-openmp",
      "cmake",
      "make"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [
      "llvm-openmp",
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss",
      "coreutils"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "llvm-openmp",
      "cmake",
      "make"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [
      "llvm-openmp",
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss",
      "coreutils"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "llvm-openmp",
      "cmake",
      "make"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [
      "llvm-openmp",
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss",
      "coreutils"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "C:/Windows/System32/gdiplus.dll'",
      "*"
     ]
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.bat",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6"
     ],
     "script": "test-covid-sim.bat",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "C:/Windows/System32/gdiplus.dll'",
      "*"
     ]
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.bat",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6"
     ],
     "script": "test-covid-sim.bat",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "C:/Windows/System32/gdiplus.dll'",
      "*"
     ]
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.bat",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6"
     ],
     "script": "test-covid-sim.bat",
     "source_files": [
      "tests/*"
     ]
    }
   }
  ],
  "package": {
   "name": "covid-sim-suite",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "libgomp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "libgomp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "libgomp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm-openmp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm-openmp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm-openmp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source": {
   "patches": [
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch"
   ],
   "sha256": "64beba8fbfc9c4737a7d41492507e5997f48f8fe40471048f04cc2a7cf50f47c",
   "url": "https://github.com/mrc-ide/covid-sim/archive/v0.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\""
   ]
  }
 },
 "name": "covid-sim-suite",
 "new_version": "0.15.0",
 "new_version_attempts": {
  "0.10.0": 11,
  "0.11.0": 11,
  "0.12.0": 33,
  "0.13.0": 50,
  "0.14.0": 1402,
  "0.15.0": 903,
  "0.9.0": 45
 },
 "new_version_errors": {
  "0.10.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5)\nfound duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")\n  in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "0.11.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5)\nfound duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")\n  in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "0.12.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5)\nfound duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")\n  in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "0.13.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5)\nfound duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")\n  in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "0.14.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5)\nfound duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")\n  in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "0.15.0": "We found a problem parsing the recipe for version '0.15.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5), 'found duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")',   in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "0.9.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 5, column 3:\n      name: <{ name }}-suite\n      ^ (line: 5)\nfound duplicate key \"version\" with value \"<{ GIT_DESCRIBE_TAG }}\" (original value: \"<{ version }}\")\n  in \"<unicode string>\", line 10, column 3:\n      version: <{ GIT_DESCRIBE_TAG }}\n      ^ (line: 10)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "This is the COVID-19 CovidSim microsimulation model developed\nby the MRC Centre for Global Infectious Disease Analysis hosted\nat Imperial College, London.\nCovidSim models the transmission dynamics and severity of COVID-19\ninfections throughout a spatially and socially structured population\nover time. It enables modelling of how intervention policies and\nhealthcare provision affect the spread of COVID-19. With parameter\nchanges, it can be used to model other respiratory viruses,\nsuch as influenza.\n",
   "dev_url": "https://github.com/mrc-ide/covid-sim",
   "home": "https://github.com/mrc-ide/covid-sim",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE.md",
   "summary": "COVID-19 CovidSim Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "mingwandroid",
    "mingwandroid"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "llvm-openmp",
      "cmake",
      "make"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [
      "llvm-openmp",
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss",
      "coreutils"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "llvm-openmp",
      "cmake",
      "make"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [
      "llvm-openmp",
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss",
      "coreutils"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": [
      "test -d ${CONDA_PREFIX}/data"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "llvm-openmp",
      "cmake",
      "make"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [
      "llvm-openmp",
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.sh",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6",
      "nss",
      "coreutils"
     ],
     "script": "test-covid-sim.sh",
     "source_files": [
      "tests/*"
     ]
    }
   }
  ],
  "package": {
   "name": "covid-sim-suite",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "llvm-openmp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm-openmp",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm-openmp",
    "cmake",
    "make"
   ]
  },
  "source": {
   "patches": [
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch"
   ],
   "sha256": "64beba8fbfc9c4737a7d41492507e5997f48f8fe40471048f04cc2a7cf50f47c",
   "url": "https://github.com/mrc-ide/covid-sim/archive/v0.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvm-openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "covid-sim-data",
    "llvm-openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "coreutils",
    "nss",
    "python",
    "ripgrep"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "covid-sim",
   "covid-sim-data"
  ]
 },
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1050, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 164, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 279, in get_repo\n    if fetch_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 183, in fetch_repo\n    _run_git_cmd(f\"git fetch --all {quiet}\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 171, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 512, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git fetch --all --quiet' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = 'covid-sim' %}\n{% set from_git = 'no' %}\n\npackage:\n  name: {{ name }}-suite\n{% if from_git == 'no' %}\n{% set version = '0.8.0' %}\n  version: {{ version }}\n{% else %}\n  version: {{ GIT_DESCRIBE_TAG }}\n{% endif %}\n\nsource:\n{% if from_git == 'no' %}\n  url: https://github.com/mrc-ide/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 64beba8fbfc9c4737a7d41492507e5997f48f8fe40471048f04cc2a7cf50f47c\n{% else %}\n  git_url: https://github.com/mrc-ide/covid-sim\n  git_tag: master\n{% endif %}\n  patches:\n    - 0001-Prefer-an-already-built-CovidSim-executable.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n{% if channel_targets is not defined or 'conda-forge' in channel_targets %}\n    - libgomp  # [linux]\n{% else %}\n    - intel-openmp  # [not osx and blas_impl == 'mkl']\n{% endif %}\n    - llvm-openmp  # [osx]\n    - cmake\n    - make  # [not win]\n\ntest:\n  commands:\n    - echo \"Hello conda-forge linter\"\n\noutputs:\n  - name: covid-sim-data\n    build:\n      noarch: generic\n    files:\n      - data\n    test:\n      commands:\n        - test -d ${CONDA_PREFIX}/data  # [not win]\n\n  - name: covid-sim\n    script: install-covid-sim.sh  # [unix]\n    script: install-covid-sim.bat  # [win]\n    build:\n      detect_binary_files_with_prefix: False\n      missing_dso_whitelist:  # [win]\n        # May not be working? For sure using \\\\'s did not work\n        - C:/Windows/System32/gdiplus.dll'  # [win]\n        - '*'  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n{% if channel_targets is not defined or 'conda-forge' in channel_targets %}\n        - libgomp  # [linux]\n{% else %}\n        - intel-openmp  # [not osx and blas_impl == 'mkl']\n{% endif %}\n        - llvm-openmp  # [osx]\n        - cmake\n        - make  # [not win]\n      host:\n        - llvm-openmp  # [osx]\n      run:\n        - llvm-openmp  # [osx]\n        - {{ pin_subpackage('covid-sim-data') }}\n    test:\n      source_files:\n        - tests/*\n      script: test-covid-sim.sh  # [not win]\n      script: test-covid-sim.bat  # [win]\n\n      requires:\n        - ripgrep\n        - python >=3.6\n        - nss  # [not win]\n        - coreutils  # [osx]\n\nabout:\n  home: https://github.com/mrc-ide/covid-sim\n  license: GPL-3.0-only\n  license_file: LICENSE.md\n  summary: COVID-19 CovidSim Model  \n  description: |\n    This is the COVID-19 CovidSim microsimulation model developed\n    by the MRC Centre for Global Infectious Disease Analysis hosted\n    at Imperial College, London.\n    CovidSim models the transmission dynamics and severity of COVID-19\n    infections throughout a spatially and socially structured population\n    over time. It enables modelling of how intervention policies and\n    healthcare provision affect the spread of COVID-19. With parameter\n    changes, it can be used to model other respiratory viruses,\n    such as influenza.\n  dev_url: https://github.com/mrc-ide/covid-sim\n\nextra:\n  recipe-maintainers:\n    - mingwandroid\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "covid-sim-data",
   "cxx_compiler_stub",
   "libgomp",
   "llvm-openmp",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ctng-compilers",
    "cxx_compiler_stub",
    "llvm-openmp",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "covid-sim-data",
    "ctng-compilers",
    "cxx_compiler_stub",
    "llvm-openmp",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "coreutils",
    "nss",
    "python",
    "ripgrep"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvm-openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "covid-sim-data",
    "llvm-openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "coreutils",
    "nss",
    "python >=3.6",
    "ripgrep"
   ]
  }
 },
 "url": "https://github.com/mrc-ide/covid-sim/archive/v0.8.0.tar.gz",
 "version": "0.8.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "This is the COVID-19 CovidSim microsimulation model developed\nby the MRC Centre for Global Infectious Disease Analysis hosted\nat Imperial College, London.\nCovidSim models the transmission dynamics and severity of COVID-19\ninfections throughout a spatially and socially structured population\nover time. It enables modelling of how intervention policies and\nhealthcare provision affect the spread of COVID-19. With parameter\nchanges, it can be used to model other respiratory viruses,\nsuch as influenza.\n",
   "dev_url": "https://github.com/mrc-ide/covid-sim",
   "home": "https://github.com/mrc-ide/covid-sim",
   "license": "GPL-3.0-only",
   "license_file": "LICENSE.md",
   "summary": "COVID-19 CovidSim Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "mingwandroid",
    "mingwandroid"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "C:/Windows/System32/gdiplus.dll'",
      "*"
     ]
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.bat",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6"
     ],
     "script": "test-covid-sim.bat",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "C:/Windows/System32/gdiplus.dll'",
      "*"
     ]
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.bat",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6"
     ],
     "script": "test-covid-sim.bat",
     "source_files": [
      "tests/*"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "files": [
     "data"
    ],
    "name": "covid-sim-data",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "C:/Windows/System32/gdiplus.dll'",
      "*"
     ]
    },
    "name": "covid-sim",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [],
     "run": [
      "covid-sim-data"
     ]
    },
    "script": "install-covid-sim.bat",
    "test": {
     "requires": [
      "ripgrep",
      "python >=3.6"
     ],
     "script": "test-covid-sim.bat",
     "source_files": [
      "tests/*"
     ]
    }
   }
  ],
  "package": {
   "name": "covid-sim-suite",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source": {
   "patches": [
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch",
    "0001-Prefer-an-already-built-CovidSim-executable.patch"
   ],
   "sha256": "64beba8fbfc9c4737a7d41492507e5997f48f8fe40471048f04cc2a7cf50f47c",
   "url": "https://github.com/mrc-ide/covid-sim/archive/v0.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\"",
    "echo \"Hello conda-forge linter\""
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "covid-sim-data"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "python",
    "ripgrep"
   ]
  }
 }
}