{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ligotools",
 "hash_type": "sha256",
 "name": "ligotools",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ligotools-cache",
   "ligotools-matlab",
   "ligotools-scripts",
   "ligotools-tconvert"
  ]
 },
 "raw_meta_yaml": "{% set name = \"ligotools\" %}\n{% set version = \"1.2.0\" %}\n{% set sha256 = \"3a9bd2a7604257a37c595655349f1e3001c7f063b75354526b702b996ee12e72\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"http://software.ligo.org/lscsoft/source/{{ name }}-{{ version }}.tar.gz\"\n  sha256: \"{{ sha256 }}\"\n  patches:\n    # use NONE as project language\n    - cmake-language.patch\n    # use anaconda placeholder for perl shebang\n    - perl-shebang.patch\n\nbuild:\n  noarch: generic\n  number: 1\n\nrequirements:\n  build:\n    - cmake\n\noutputs:\n  - name: \"ligotools-cache\"\n    build:\n      noarch: generic\n    files:\n      - bin/*cache.pl\n      - bin/*cache.sh\n    requirements:\n      run:\n        - perl\n    test:\n      commands:\n        # create files\n        - touch A-B-0-1.gwf  # [unix]\n        - touch A-B-1-1.gwf  # [unix]\n        - touch A-B-2-2.gwf  # [unix]\n        # test createframecache\n        - createframecache.pl out.txt $(pwd)  # [unix]\n        # test convertlalcache\n        - echo -e \"A B 0 1 $(pwd)/A-B-0-1.gwf\\nA B 1 1 $(pwd)/A-B-1-1.gwf\\nA B 2 2 $(pwd)/A-B-2-2.gwf\" > lal.txt  # [unix]\n        - convertlalcache.pl lal.txt out2.txt  # [unix]\n        - diff out.txt out2.txt  # [unix]\n        # test convertfflcache\n        - echo -e \"$(pwd)/A-B-0-1.gwf 0 1 0 0\\n$(pwd)/A-B-1-1.gwf 1 1 0 0\\n$(pwd)/A-B-2-2.gwf 2 2 0 0\" > ffl.txt  # [unix]\n        -  convertfflcache.pl ffl.txt out3.txt  # [unix]\n        -  diff out.txt out3.txt  # [unix]\n        # test convertldascache.sh\n        - echo -e \"$(pwd),A,B,0,1 0 2 {0 2}\\n$(pwd),A,B,0,2 0 1 {2 4}\" > ldas.txt  # [unix]\n        - convertldascache.sh ldas.txt out4.txt  # [unix]\n        - diff out.txt out4.txt  # [unix]\n\n  - name: \"ligotools-matlab\"\n    build:\n      noarch: generic\n    files:\n      - share/ligotools/matlab\n    test:\n      commands:\n        - test -f ${PREFIX}/share/ligotools/matlab/getdetector.m  # [unix]\n\n  - name: \"ligotools-scripts\"\n    build:\n      noarch: generic\n    files:\n      - bin/cleanlatex\n      - bin/seg*\n    requirements:\n      run:\n        - tk\n    test:\n      commands:\n        - echo \"0000000000 0000000010\" > a.txt  # [unix]\n        - echo \"0000000005 0000000015\" > b.txt  # [unix]\n        - segdiff a.txt a.txt  # [unix]\n        - segexpr a.txt -include index,duration  # [unix]\n        - segexpr \"union(a.txt,b.txt)\"  # [unix]\n        - segexpr \"intersection(a.txt,b.txt)\"  # [unix]\n        - segsum a.txt  # [unix]\n        - cat a.txt | segsum  # [unix]\n\n  - name: \"ligotools-tconvert\"\n    build:\n      noarch: generic\n    files:\n      - bin/tconvert\n      - bin/gpsclock\n    requirements:\n      run:\n        - tk\n    test:\n      commands:\n        - tconvert now\n\nabout:\n  home: \"http://www.lsc-group.phys.uwm.edu/daswg/projects/ligotools.html\"\n  license: \"GPL-3.0-or-later\"\n  license_family: \"GPL\"\n  license_file: \"COPYING\"\n  summary: \"LIGOtools collection of miscellaneous tools\"\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "strong_exports": false,
 "url": "http://software.ligo.org/lscsoft/source/ligotools-1.2.0.tar.gz",
 "version": "1.2.0"
}