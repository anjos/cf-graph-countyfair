{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyhunspell",
 "hash_type": "sha256",
 "name": "pyhunspell",
 "new_version": "0.5.5",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyhunspell"
  ]
 },
 "raw_meta_yaml": "{% set name = \"pyhunspell\" %}\n{% set pypi_name = \"hunspell\" %}\n{% set version = \"0.5.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ pypi_name[0] }}/{{ pypi_name }}/hunspell-{{ version }}.tar.gz\n  sha256: 0f830b68bd8c392f4d5b4e21c38e28809e14d64ec67bde48272c920b63686f53\n\nbuild:\n  skip: True  # [not linux64]\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - hunspell\n  run:\n    - python\n    - hunspell\n\ntest:\n  imports:\n    - hunspell\n  commands:\n    - pip check\n    - python -c \"import hunspell; import os; env = os.environ['CONDA_PREFIX']; hobj = hunspell.HunSpell(f'{env}/share/hunspell_dictionaries/en_US.dic', f'{env}/share/hunspell_dictionaries/en_US.aff'); assert hobj.spell('spookie') == False, 'spookie'; assert hobj.spell('spooky') == True, 'spooky'\"\n  requires:\n    - pip\n    - hunspell-en\n\nabout:\n  home: http://github.com/blatinier/pyhunspell\n  summary: Module for the Hunspell spellchecker engine\n  license:  GPL-3.0-only\n  license_file: gpl-3.0.txt\n\nextra:\n  recipe-maintainers:\n    - cgr71ii\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/h/hunspell/hunspell-0.5.5.tar.gz",
 "version": "0.5.5"
}