{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196873744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221273195.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268255322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335982349.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/387822424.json"
   },
   "data": {
    "bot_rerun": 1597087666.0488951,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465694017.json"
   },
   "data": {
    "bot_rerun": 1602134648.2138557,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/497263073.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.66.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499668203.json"
   },
   "data": {
    "bot_rerun": 1603216834.558008,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500475994.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505329059.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507035058.json"
   },
   "data": {
    "bot_rerun": 1608291167.4712305,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/517091352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542494430.json"
   },
   "data": {
    "bot_rerun": 1610957609.756664,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542674120.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551801870.json"
   },
   "data": {
    "bot_rerun": 1616286229.7804632,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/556623290.json"
   },
   "data": {
    "bot_rerun": 1616286229.7806923,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597392812.json"
   },
   "data": {
    "bot_rerun": 1631655670.4926891,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597393269.json"
   },
   "data": {
    "bot_rerun": 1647634586.4776607,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676384779.json"
   },
   "data": {
    "bot_rerun": 1635899427.0754397,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/718964974.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.69.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/733494282.json"
   },
   "data": {
    "bot_rerun": 1631655670.4930177,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi34"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/734080875.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi34"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/736644339.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.70.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770865973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/852164657.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.71.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/883591062.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.72.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896669190.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995926770.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.73.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1045514092.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.73.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1059417697.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.74.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1099797989.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: InvalidVersion(\"Invalid version: '3.11.* *_cpython'\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 194, in parse_meta_yaml\n    return _run(use_orig_cbc_path=True)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.11.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 198, in parse_meta_yaml\n    return _run(use_orig_cbc_path=False)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.11.* *_cpython'\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 194, in parse_meta_yaml\n    return _run(use_orig_cbc_path=True)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.11.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 198, in parse_meta_yaml\n    return _run(use_orig_cbc_path=False)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.11.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 200, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: InvalidVersion(\"Invalid version: '3.11.* *_cpython'\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 194, in parse_meta_yaml\n    return _run(use_orig_cbc_path=True)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.11.* *_cpython'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 198, in parse_meta_yaml\n    return _run(use_orig_cbc_path=False)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 181, in _run\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 283, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1075, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1167, in parse_again\n    self._get_contents(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1836, in _get_contents\n    env.globals.update(ns_cfg(self.config))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 102, in ns_cfg\n    defaults = variants.get_default_variant(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 109, in get_default_variant\n    base.update(_get_default_compilers(config.platform, python))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 90, in _get_default_compilers\n    if parse_version(py_ver) >= parse_version('3.5'):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/pkg_resources/_vendor/packaging/version.py\", line 266, in __init__\n    raise InvalidVersion(f\"Invalid version: '{version}'\")\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: '3.11.* *_cpython'\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "gobject-introspection",
 "hash_type": "sha256",
 "name": "gobject-introspection-split",
 "new_version": "1.74.0",
 "new_version_attempts": {
  "1.66.1": 1,
  "1.69.0": 1,
  "1.70.0": 1,
  "1.71.0": 1,
  "1.72.0": 1,
  "1.73.0": 1,
  "1.73.1": 1,
  "1.74.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "g-ir-build-tools",
   "g-ir-host-tools",
   "gobject-introspection",
   "libgirepository"
  ]
 },
 "pinning_version": "2022.10.25.23.05.27",
 "pre_pr_migrator_attempts": {
  "libffi33": 1
 },
 "pre_pr_migrator_status": {
  "libffi33": "not solvable: master: ['linux_64_python3.6.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_64_python3.7.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_aarch64_python3.6.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_aarch64_python3.7.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_aarch64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_aarch64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-he1b5a44_0 requires libglib 2.64.6 h0dae87d_0, but none of the providers can be installed\\n', 'linux_ppc64le_python3.6.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb209c28_0 requires libglib 2.64.6 h442057e_0, but none of the providers can be installed\\n', 'linux_ppc64le_python3.7.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb209c28_0 requires libglib 2.64.6 h442057e_0, but none of the providers can be installed\\n', 'linux_ppc64le_python3.8.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb209c28_0 requires libglib 2.64.6 h442057e_0, but none of the providers can be installed\\n', 'linux_ppc64le_python3.9.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb209c28_0 requires libglib 2.64.6 h442057e_0, but none of the providers can be installed\\n', 'osx_64_python3.6.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb1e8313_0 requires libglib 2.64.6 hdb5fb44_0, but none of the providers can be installed\\n', 'osx_64_python3.7.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb1e8313_0 requires libglib 2.64.6 hdb5fb44_0, but none of the providers can be installed\\n', 'osx_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb1e8313_0 requires libglib 2.64.6 hdb5fb44_0, but none of the providers can be installed\\n', 'osx_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-hb1e8313_0 requires libglib 2.64.6 hdb5fb44_0, but none of the providers can be installed\\n', 'win_64_python3.6.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-ha925a31_0 requires libglib 2.64.6 h31c07e1_0, but none of the providers can be installed\\n', 'win_64_python3.7.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-ha925a31_0 requires libglib 2.64.6 h31c07e1_0, but none of the providers can be installed\\n', 'win_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-ha925a31_0 requires libglib 2.64.6 h31c07e1_0, but none of the providers can be installed\\n', 'win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package glib-2.64.6-ha925a31_0 requires libglib 2.64.6 h31c07e1_0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"gobject-introspection\" %}\n{% set version = \"1.74.0\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n{% set prefix = 'Library/' if win else '' %}\n{% set local_glib_pin = '>=2.74' %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://download.gnome.org/sources/{{ name }}/{{ '.'.join(version.split('.')[:2]) }}/{{ name }}-{{ version }}.tar.xz\n  sha256: 347b3a719e68ba4c69ff2d57ee2689233ea8c07fc492205e573386779e42d653\n  patches:\n    - cross-compile.patch\n    - test-fix.patch  # [linux]\n    # https://gitlab.gnome.org/GNOME/gobject-introspection/-/merge_requests/265\n    - pkg-config.patch\n    # workaround for conflicting \"import ast\", should not be necessary once PyPy is updated\n    - 0001-Don-t-add-build_root-giscanner-to-PYTHONPATH-for-run.patch\n\nbuild:\n  number: 1\n  skip: true  # [py<35]\n\nrequirements:\n  build:\n    - python {{ python }}\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ posix }}bison\n    - {{ posix }}flex\n    - meson >=0.55.3\n    - ninja\n    - {{ posix }}patch\n    - {{ native }}pkg-config\n    - {{ compiler('c') }}\n    # This dep is intentionally written twice; the second time allows\n    # conda-build to add a global pin if needed.\n    - glib {{ local_glib_pin }}  # [build_platform != target_platform]\n    - glib                       # [build_platform != target_platform]\n    - cairo                      # [build_platform != target_platform]\n    - libffi                     # [build_platform != target_platform]\n  host:\n    - cairo\n    # Intentional double-listing for conda-build global pinning:\n    - glib {{ local_glib_pin }}\n    - glib\n    - libffi\n    - python\n\noutputs:\n  - name: libgirepository\n    files:\n      - {{ prefix }}lib/girepository-1.0\n      - {{ prefix }}lib/libgirepository-1.0*  # [not win]\n      - {{ prefix }}bin/girepository-1.0*.dll  # [win]\n      - {{ prefix }}lib/girepository-1.0.lib  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n      host:\n        - cairo\n        # Intentional double-listing for conda-build global pinning:\n        - glib {{ local_glib_pin }}\n        - glib\n        - libffi\n      run:\n        - libffi\n    test:\n      commands:\n        - test -f $PREFIX/lib/libgirepository-1.0${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\Library\\bin\\girepository-1.0-1.dll exit 1  # [win]\n        - if not exist %PREFIX%\\Library\\lib\\girepository-1.0.lib exit 1  # [win]\n\n  - name: g-ir-build-tools\n    files:\n      - {{ prefix }}bin/g-ir-annotation-tool\n      - {{ prefix }}bin/g-ir-scanner\n      - {{ prefix }}lib/gobject-introspection\n      - {{ prefix }}share/gobject-introspection-1.0/*\n      - {{ prefix }}share/man/man1/g-ir-scanner.1\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        # Intentional double-listing for conda-build global pinning:\n        - glib {{ local_glib_pin }}\n        - glib\n        - python\n      run:\n        - pkg-config\n        - python\n    test:\n      commands:\n        - g-ir-scanner --help  # [not win]\n        - python \"%PREFIX%\\\\Library\\\\bin\\\\g-ir-scanner\" --help  # [win]\n\n  - name: g-ir-host-tools\n    files:\n      - {{ prefix }}bin/g-ir-compiler*\n      - {{ prefix }}bin/g-ir-generate*\n      - {{ prefix }}bin/g-ir-inspect*\n      - {{ prefix }}share/man/man1/g-ir-compiler.1\n      - {{ prefix }}share/man/man1/g-ir-generate.1\n    requirements:\n      build:\n        - {{ compiler('c') }}\n      host:\n        # Intentional double-listing for conda-build global pinning:\n        - glib {{ local_glib_pin }}\n        - glib\n        - libffi\n        - {{ pin_subpackage('libgirepository', exact=True) }}\n      run:\n        - {{ pin_subpackage('libgirepository', exact=True) }}\n    test:\n      commands:\n        - g-ir-compiler --help\n\n  - name: gobject-introspection\n    files:\n      - {{ prefix }}include/gobject-introspection-1.0\n      - {{ prefix }}lib/pkgconfig/gobject-introspection*.pc\n      - {{ prefix }}libexec/gi-cross-launcher-load.sh  # [not win]\n      - {{ prefix }}libexec/gi-cross-launcher-save.sh  # [not win]\n      - {{ prefix }}share/aclocal/introspection.m4\n      - {{ prefix }}share/gir-1.0\n      - {{ prefix }}share/gobject-introspection-1.0/tests\n    requirements:\n      # include build and host requirements to get proper build string\n      build:\n        - {{ compiler('c') }}\n      host:\n        - cairo\n        # Intentional double-listing for conda-build global pinning:\n        - glib {{ local_glib_pin }}\n        - glib\n        - libffi\n        - python\n      run:\n        - {{ pin_subpackage('g-ir-build-tools', exact=True) }}\n        - {{ pin_subpackage('g-ir-host-tools', exact=True) }}\n        - {{ pin_subpackage('libgirepository', exact=True) }}\n        - libffi\n        - python\n    test:\n      requires:\n        - pkg-config\n      commands:\n        # check that g-ir-scanner can be found through pkg-config (used by downstream builds)\n        - test -f `pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`  # [unix]\n        - for /f \"usebackq tokens=*\" %%a in (`pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`) do if not exist \"%%a\" exit 1  # [win]\n\nabout:\n  home: https://wiki.gnome.org/action/show/Projects/GObjectIntrospection\n  license: LGPL-2.0-or-later\n  license_family: LGPL\n  license_file: COPYING\n  summary: Middleware for binding GObject-based code to other languages.\n\nextra:\n  feedstock-name: {{ name|lower }}\n  recipe-maintainers:\n    - pkgw\n    - ocefpaf\n    - ryanvolz\n    - scopatz\n    - tschoonj\n",
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "url": "https://download.gnome.org/sources/gobject-introspection/1.74/gobject-introspection-1.74.0.tar.xz",
 "version": "1.74.0"
}