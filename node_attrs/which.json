{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "which",
 "hash_type": "sha256",
 "name": "which",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "which"
  ]
 },
 "raw_meta_yaml": "{% set name = \"which\" %}\n{% set version = \"2.21\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://carlowood.github.io/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f4a245b94124b377d8b49646bf421f9155d36aa7614b6ebf83705d3ffc76eaad\n\nbuild:\n  number: 0\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make\n\ntest:\n  commands:\n    - which --version\n    - which which | grep ${CONDA_PREFIX}/bin/which\n\nabout:\n  home: https://carlowood.github.io/which/\n  license: GPL-3.0\n  license_file: COPYING\n  summary: 'Shows the full path of (shell) commands'\n  description: |\n    Which takes one or more arguments. For each of its arguments it prints\n    to stdout the full path of the executables that would have been exe-\n    cuted when this argument had been entered at the shell prompt. It does\n    this by searching for an executable or script in the directories listed\n    in the environment variable PATH using the same algorithm as bash(1).\n\nextra:\n  recipe-maintainers:\n    - teake\n",
 "strong_exports": false,
 "url": "https://carlowood.github.io/which/which-2.21.tar.gz",
 "version": "2.21"
}