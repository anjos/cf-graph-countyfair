{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/335950666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/397755188.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/450040996.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502958440.json"
   },
   "data": {
    "bot_rerun": 1617095622.6933484,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/603701343.json"
   },
   "data": {
    "bot_rerun": 1617190332.898298,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/605596359.json"
   },
   "data": {
    "bot_rerun": 1617839091.0062969,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/611130808.json"
   },
   "data": {
    "bot_rerun": 1619067381.500387,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/620783581.json"
   },
   "data": {
    "bot_rerun": 1628034541.9586072,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/659642767.json"
   },
   "data": {
    "bot_rerun": 1628034541.9588132,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/702787260.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cylc-flow",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Cylc (\"silk\") orchestrates complex distributed suites of interdependent\ncycling (or non-cycling) tasks. It was originally designed to automate\nenvironmental forecasting systems at NIWA, however Cylc is a general\nworkflow engine; it is not specialized to forecasting in any way.\n",
   "dev_url": "https://github.com/cylc/cylc-flow",
   "doc_url": "https://cylc.github.io/documentation.html",
   "home": "https://cylc.github.io/",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "A workflow engine for cycling systems"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders"
   ]
  },
  "package": {
   "name": "cylc-flow",
   "version": "8.0b2"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "db5ed370ac520a6de4321afa92aacaf3ca47d82b338ca41407402cca3b1985e9",
   "url": "https://pypi.io/packages/source/c/cylc-flow/cylc-flow-8.0b2.tar.gz"
  },
  "test": {
   "commands": [
    "cylc --version",
    "cylc --version",
    "cylc --version"
   ],
   "imports": [
    "cylc.flow",
    "cylc.flow",
    "cylc.flow"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "ansimarkup",
    "colorama",
    "empy",
    "graphene",
    "jinja2",
    "matplotlib-base",
    "metomi-isodatetime",
    "pandas",
    "protobuf",
    "psutil",
    "pympler",
    "python",
    "pyuv",
    "pyzmq",
    "setuptools",
    "urwid"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Cylc (\"silk\") orchestrates complex distributed suites of interdependent\ncycling (or non-cycling) tasks. It was originally designed to automate\nenvironmental forecasting systems at NIWA, however Cylc is a general\nworkflow engine; it is not specialized to forecasting in any way.\n",
   "dev_url": "https://github.com/cylc/cylc-flow",
   "doc_url": "https://cylc.github.io/documentation.html",
   "home": "https://cylc.github.io/",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "A workflow engine for cycling systems"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders"
   ]
  },
  "package": {
   "name": "cylc-flow",
   "version": "8.0b2"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "db5ed370ac520a6de4321afa92aacaf3ca47d82b338ca41407402cca3b1985e9",
   "url": "https://pypi.io/packages/source/c/cylc-flow/cylc-flow-8.0b2.tar.gz"
  },
  "test": {
   "commands": [
    "cylc --version",
    "cylc --version",
    "cylc --version",
    "cylc --version",
    "cylc --version",
    "cylc --version"
   ],
   "imports": [
    "cylc.flow",
    "cylc.flow",
    "cylc.flow",
    "cylc.flow",
    "cylc.flow",
    "cylc.flow"
   ]
  }
 },
 "name": "cylc-flow",
 "new_version": "8.0b2",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Cylc (\"silk\") orchestrates complex distributed suites of interdependent\ncycling (or non-cycling) tasks. It was originally designed to automate\nenvironmental forecasting systems at NIWA, however Cylc is a general\nworkflow engine; it is not specialized to forecasting in any way.\n",
   "dev_url": "https://github.com/cylc/cylc-flow",
   "doc_url": "https://cylc.github.io/documentation.html",
   "home": "https://cylc.github.io/",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "A workflow engine for cycling systems"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps --ignore-installed -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders",
    "hjoliver",
    "kinow",
    "oliver-sanders"
   ]
  },
  "package": {
   "name": "cylc-flow",
   "version": "8.0b2"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base",
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3",
    "empy >=3.3,<3.4",
    "pandas >=1.0",
    "pympler",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "db5ed370ac520a6de4321afa92aacaf3ca47d82b338ca41407402cca3b1985e9",
   "url": "https://pypi.io/packages/source/c/cylc-flow/cylc-flow-8.0b2.tar.gz"
  },
  "test": {
   "commands": [
    "cylc --version",
    "cylc --version",
    "cylc --version"
   ],
   "imports": [
    "cylc.flow",
    "cylc.flow",
    "cylc.flow"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "ansimarkup",
    "colorama",
    "empy",
    "graphene",
    "jinja2",
    "matplotlib-base",
    "metomi-isodatetime",
    "pandas",
    "protobuf",
    "psutil",
    "pympler",
    "python",
    "pyuv",
    "pyzmq",
    "setuptools",
    "urwid"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cylc-flow"
  ]
 },
 "pinning_version": "2021.08.03.20.37.26",
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"cylc-flow\" %}\n{% set version = \"8.0b2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: db5ed370ac520a6de4321afa92aacaf3ca47d82b338ca41407402cca3b1985e9\n\nbuild:\n  number: 0\n  skip: True  # [py<37 or not unix]\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - aiofiles >=0.7.0,<0.8.0\n    - ansimarkup >=1.0.0\n    - colorama >=0.4,<1.0\n    - graphene >=2.1,<3\n    - jinja2 ==2.11.0,<2.12\n    - metomi-isodatetime >=1!2.0.2, <1!2.1.0\n    - protobuf >=3.15.0,<3.16.0\n    - psutil >=5.6.0\n    - python\n    - pyuv >=1.4.0,<1.5.0\n    - pyzmq >=19.0.0,<19.1.0\n    - setuptools >=49\n    - urwid >=2,<3\n    # TODO: optional dependencies, see discussion here https://github.com/conda-forge/cylc-flow-feedstock/pull/4\n    - empy >=3.3,<3.4\n    - pandas >=1.0\n    - pympler\n    - matplotlib-base\n\ntest:\n  imports:\n    - cylc.flow\n  commands:\n    - cylc --version\n\nabout:\n  home: https://cylc.github.io/\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: 'A workflow engine for cycling systems'\n  description: |\n    Cylc (\"silk\") orchestrates complex distributed suites of interdependent\n    cycling (or non-cycling) tasks. It was originally designed to automate\n    environmental forecasting systems at NIWA, however Cylc is a general\n    workflow engine; it is not specialized to forecasting in any way.\n  doc_url: https://cylc.github.io/documentation.html\n  dev_url: https://github.com/cylc/cylc-flow\n\nextra:\n  recipe-maintainers:\n    - hjoliver\n    - kinow\n    - oliver-sanders\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiofiles",
   "ansimarkup",
   "colorama",
   "empy",
   "graphene",
   "jinja2",
   "matplotlib-base",
   "metomi-isodatetime",
   "pandas",
   "pip",
   "protobuf",
   "psutil",
   "pympler",
   "python",
   "pyuv",
   "pyzmq",
   "setuptools",
   "urwid"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "ansimarkup",
    "colorama",
    "empy",
    "graphene",
    "jinja2",
    "matplotlib-base",
    "metomi-isodatetime",
    "pandas",
    "protobuf",
    "psutil",
    "pympler",
    "python",
    "pyuv",
    "pyzmq",
    "setuptools",
    "urwid"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.11.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles >=0.7.0,<0.8.0",
    "ansimarkup >=1.0.0",
    "colorama >=0.4,<1.0",
    "empy >=3.3,<3.4",
    "graphene >=2.1,<3",
    "jinja2 ==2.11.0,<2.12",
    "matplotlib-base",
    "metomi-isodatetime >=1!2.0.2, <1!2.1.0",
    "pandas >=1.0",
    "protobuf >=3.15.0,<3.16.0",
    "psutil >=5.6.0",
    "pympler",
    "python",
    "pyuv >=1.4.0,<1.5.0",
    "pyzmq >=19.0.0,<19.1.0",
    "setuptools >=49",
    "urwid >=2,<3"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/c/cylc-flow/cylc-flow-8.0b2.tar.gz",
 "version": "8.0b2"
}