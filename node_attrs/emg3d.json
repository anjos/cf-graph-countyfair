{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/340488539.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356958279.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/373657284.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393807943.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410743290.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413757452.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/456615129.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491917855.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521008742.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/523200202.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/524938244.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/532713440.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535321127.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "emg3d",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The modeller emg3d is a multigrid solver for 3D EM diffusion with tri-axial\nelectrical anisotropy. The matrix-free solver can be used as main solver or\nas preconditioner for Krylov subspace methods, and the governing equations\nare discretized on a staggered Yee grid.\n",
   "dev_url": "https://github.com/empymod/emg3d",
   "doc_url": "https://emg3d.readthedocs.io/",
   "home": "https://empymod.github.io",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "A multigrid solver for 3D electromagnetic diffusion."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "prisae"
   ]
  },
  "package": {
   "name": "emg3d",
   "version": "0.15.3"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools_scm"
   ],
   "run": [
    "numba >=0.45.0",
    "python >=3.7",
    "scipy >=1.4.0"
   ]
  },
  "source": {
   "sha256": "cd30fada4a05b0e183654cd00858d19e3e9f36c098d6b00c1d5daeab5199b953",
   "url": "https://pypi.io/packages/source/e/emg3d/emg3d-0.15.3.tar.gz"
  },
  "test": {
   "imports": [
    "emg3d"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The modeller emg3d is a multigrid solver for 3D EM diffusion with tri-axial\nelectrical anisotropy. The matrix-free solver can be used as main solver or\nas preconditioner for Krylov subspace methods, and the governing equations\nare discretized on a staggered Yee grid.\n",
   "dev_url": "https://github.com/empymod/emg3d",
   "doc_url": "https://emg3d.readthedocs.io/",
   "home": "https://empymod.github.io",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "A multigrid solver for 3D electromagnetic diffusion."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "prisae"
   ]
  },
  "package": {
   "name": "emg3d",
   "version": "0.15.3"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools_scm"
   ],
   "run": [
    "numba >=0.45.0",
    "python >=3.7",
    "scipy >=1.4.0"
   ]
  },
  "source": {
   "sha256": "cd30fada4a05b0e183654cd00858d19e3e9f36c098d6b00c1d5daeab5199b953",
   "url": "https://pypi.io/packages/source/e/emg3d/emg3d-0.15.3.tar.gz"
  },
  "test": {
   "imports": [
    "emg3d"
   ]
  }
 },
 "name": "emg3d",
 "new_version": "0.15.3",
 "new_version_attempts": {
  "0.10.1": 1,
  "0.11.0": 1,
  "0.12.0": 1,
  "0.13.0": 1,
  "0.14.1": 1,
  "0.14.2": 1,
  "0.14.3": 1,
  "0.15.2": 1,
  "0.15.3": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "The modeller emg3d is a multigrid solver for 3D EM diffusion with tri-axial\nelectrical anisotropy. The matrix-free solver can be used as main solver or\nas preconditioner for Krylov subspace methods, and the governing equations\nare discretized on a staggered Yee grid.\n",
   "dev_url": "https://github.com/empymod/emg3d",
   "doc_url": "https://emg3d.readthedocs.io/",
   "home": "https://empymod.github.io",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "A multigrid solver for 3D electromagnetic diffusion."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "prisae"
   ]
  },
  "package": {
   "name": "emg3d",
   "version": "0.12.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools_scm"
   ],
   "run": [
    "numba >=0.45.0",
    "python >=3.7",
    "scipy >=1.4.0"
   ]
  },
  "source": {
   "sha256": "ccb6bc89c3a731bfdf88f97a28c6b08a4337e9d09800a15b7f043734e931f88f",
   "url": "https://pypi.io/packages/source/e/emg3d/emg3d-0.12.0.tar.gz"
  },
  "test": {
   "imports": [
    "emg3d"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "emg3d"
  ]
 },
 "pinning_version": "2020.12.09.12.57.46",
 "raw_meta_yaml": "{% set name = \"emg3d\" %}\n{% set version = \"0.15.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: cd30fada4a05b0e183654cd00858d19e3e9f36c098d6b00c1d5daeab5199b953\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n    - setuptools_scm\n  run:\n    - numba >=0.45.0\n    - python >=3.7\n    - scipy >=1.4.0\n\ntest:\n  imports:\n    - emg3d\n\nabout:\n  home: https://empymod.github.io\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: A multigrid solver for 3D electromagnetic diffusion.\n  description: |\n    The modeller emg3d is a multigrid solver for 3D EM diffusion with tri-axial\n    electrical anisotropy. The matrix-free solver can be used as main solver or\n    as preconditioner for Krylov subspace methods, and the governing equations\n    are discretized on a staggered Yee grid.\n  doc_url: https://emg3d.readthedocs.io/\n  dev_url: https://github.com/empymod/emg3d\n\nextra:\n  recipe-maintainers:\n    - prisae\n",
 "req": {
  "__set__": true,
  "elements": [
   "numba",
   "pip",
   "python",
   "scipy",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba >=0.45.0",
    "python >=3.7",
    "scipy >=1.4.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/e/emg3d/emg3d-0.9.0.tar.gz",
 "version": "0.15.3",
 "win_64_meta_yaml": {
  "about": {
   "description": "The modeller emg3d is a multigrid solver for 3D EM diffusion with tri-axial\nelectrical anisotropy. The matrix-free solver can be used as main solver or\nas preconditioner for Krylov subspace methods, and the governing equations\nare discretized on a staggered Yee grid.\n",
   "dev_url": "https://github.com/empymod/emg3d",
   "doc_url": "https://emg3d.readthedocs.io/",
   "home": "https://empymod.github.io",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "A multigrid solver for 3D electromagnetic diffusion."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "prisae"
   ]
  },
  "package": {
   "name": "emg3d",
   "version": "0.12.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools_scm"
   ],
   "run": [
    "numba >=0.45.0",
    "python >=3.7",
    "scipy >=1.4.0"
   ]
  },
  "source": {
   "sha256": "ccb6bc89c3a731bfdf88f97a28c6b08a4337e9d09800a15b7f043734e931f88f",
   "url": "https://pypi.io/packages/source/e/emg3d/emg3d-0.12.0.tar.gz"
  },
  "test": {
   "imports": [
    "emg3d"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}