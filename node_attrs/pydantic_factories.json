{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/943317071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/949721960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/999350900.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1007702416.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1021687698.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1022708935.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1023911599.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1025078072.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038613229.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1041791272.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1058038090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1073587346.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1080790969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1081112610.json"
   },
   "data": {
    "bot_rerun": 1666118119.5454361,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1081308655.json"
   },
   "data": {
    "bot_rerun": 1666118119.5457008,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1101121322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1110542911.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "pydantic_factories",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "doc_url": "https://starlite-api.github.io/pydantic-factories/",
   "home": "https://github.com/starlite-api/pydantic-factories",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple and powerful mock data generation using pydantic or dataclasses"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "janjagusch",
    "ivergara",
    "thewchan"
   ]
  },
  "package": {
   "name": "pydantic_factories",
   "version": "1.13.0"
  },
  "requirements": {
   "host": [
    "pip",
    "poetry-core >=1.0.0",
    "python >=3.7,<4.0"
   ],
   "run": [
    "faker",
    "pydantic >=1.9.0",
    "python >=3.7,<4.0",
    "typing-extensions",
    "xeger"
   ]
  },
  "source": {
   "sha256": "6ce8332c660fbe569fa3c6165d906e13dc4a3cc6217636621a9da78414da1434",
   "url": "https://pypi.io/packages/source/p/pydantic_factories/pydantic_factories-1.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pydantic_factories"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "faker",
    "pydantic",
    "python",
    "typing-extensions",
    "xeger"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "doc_url": "https://starlite-api.github.io/pydantic-factories/",
   "home": "https://github.com/starlite-api/pydantic-factories",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Simple and powerful mock data generation using pydantic or dataclasses"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "janjagusch",
    "ivergara",
    "thewchan"
   ]
  },
  "package": {
   "name": "pydantic_factories",
   "version": "1.13.0"
  },
  "requirements": {
   "host": [
    "pip",
    "poetry-core >=1.0.0",
    "python >=3.7,<4.0"
   ],
   "run": [
    "faker",
    "pydantic >=1.9.0",
    "python >=3.7,<4.0",
    "typing-extensions",
    "xeger"
   ]
  },
  "source": {
   "sha256": "6ce8332c660fbe569fa3c6165d906e13dc4a3cc6217636621a9da78414da1434",
   "url": "https://pypi.io/packages/source/p/pydantic_factories/pydantic_factories-1.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pydantic_factories"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "pydantic_factories",
 "new_version": "1.14.0",
 "new_version_attempts": {
  "1.10.0": 6,
  "1.11.1": 4,
  "1.12.0": 4,
  "1.13.0": 1,
  "1.14.0": 1,
  "1.2.9": 1,
  "1.3.0": 1,
  "1.4.0": 1,
  "1.4.1": 1,
  "1.5.0": 1,
  "1.5.1": 1,
  "1.5.2": 1,
  "1.5.4": 1,
  "1.6.0": 1,
  "1.6.1": 1,
  "1.6.2": 1,
  "1.7.1": 1,
  "1.8.1": 1,
  "1.8.2": 1,
  "1.9.0": 1
 },
 "new_version_errors": {
  "1.10.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.10.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pydantic-factories-{{ version }}.tar.gz'\n",
  "1.11.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.11.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pydantic-factories-{{ version }}.tar.gz'\n",
  "1.12.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.12.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pydantic-factories-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pydantic_factories"
  ]
 },
 "pinning_version": "2022.11.04.03.22.42",
 "raw_meta_yaml": "{% set name = \"pydantic_factories\" %}\n{% set version = \"1.13.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pydantic_factories-{{ version }}.tar.gz\n  sha256: 6ce8332c660fbe569fa3c6165d906e13dc4a3cc6217636621a9da78414da1434\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - poetry-core >=1.0.0\n    - python >=3.7,<4.0\n  run:\n    - faker\n    - pydantic >=1.9.0\n    - python >=3.7,<4.0\n    - typing-extensions\n    - xeger\n\ntest:\n  imports:\n    - pydantic_factories\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/starlite-api/pydantic-factories\n  doc_url: https://starlite-api.github.io/pydantic-factories/\n  summary: Simple and powerful mock data generation using pydantic or dataclasses\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - janjagusch\n    - ivergara\n    - thewchan\n",
 "req": {
  "__set__": true,
  "elements": [
   "faker",
   "pip",
   "poetry-core",
   "pydantic",
   "python",
   "typing-extensions",
   "xeger"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "faker",
    "pydantic",
    "python",
    "typing-extensions",
    "xeger"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core >=1.0.0",
    "python >=3.7,<4.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "faker",
    "pydantic >=1.9.0",
    "python >=3.7,<4.0",
    "typing-extensions",
    "xeger"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pydantic_factories/pydantic_factories-1.13.0.tar.gz",
 "version": "1.13.0"
}