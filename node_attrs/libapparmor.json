{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/844634645.json"
   },
   "data": {
    "bot_rerun": 1644513498.2866874,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/845847740.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1007400081.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1013919823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1021505687.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1034833300.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038613021.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1113562483.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libapparmor",
 "hash_type": "sha256",
 "name": "libapparmor",
 "new_version": "3.1.2",
 "new_version_attempts": {
  "3.0.4": 2,
  "3.0.5": 2,
  "3.0.6": 1,
  "3.0.7": 1,
  "3.1.0": 1,
  "3.1.1": 1,
  "3.1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libapparmor"
  ]
 },
 "pinning_version": "2022.11.07.16.21.19",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"libapparmor\" %}\n{% set version = \"3.1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/apparmor/apparmor/-/archive/v{{ version }}/apparmor-v{{ version }}.tar.gz\n  sha256: e7c7c4bc3a05a074322f9a19232c925b37e9a23dffa66d764dc27ebb82f0462c\n\nbuild:\n  skip: true  # [not linux]\n  number: 0\n  script:\n    - export PYTHONPATH=$(realpath libraries/libapparmor/swig/python)\n    - cd ./libraries/libapparmor\n    - ./autogen.sh\n    - ./configure --prefix=$PREFIX\n    - make\n    - make check\n    - make install\n\nrequirements:\n  build:\n    - perl\n    - python >=3.3\n    - psutil\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - sysroot_linux-64 2.17  # [linux64]\n    - make\n    - cmake\n    - autoconf\n    - automake\n    - libtool\n    - swig\n    - python-configuration\n    - bison\n    - flex\n    - pkgconfig\n    - pkg-config\n\ntest:\n  commands:\n    - echo \"testing...\"\n\nabout:\n  home: https://apparmor.net/\n  license: GPL-2.0-or-later\n  license_file: LICENSE\n  summary: Linux kernel security module\n  description: |\n    AppArmor protects systems from insecure or untrusted processes\n    by running them in restricted confinement, while still allowing\n    processes to share files, exercise privilege and communicate with\n    other processes. AppArmor is a Mandatory Access Control (MAC)\n    mechanism which uses the Linux Security Module (LSM) framework.\n    The confinement's restrictions are mandatory and are not bound to\n    identity, group membership, or object ownership. The protections\n    provided are in addition to the kernel's regular access control\n    mechanisms (including DAC) and can be used to restrict the\n    superuser.\n\n  dev_url: https://gitlab.com/apparmor\n  doc_url: https://gitlab.com/apparmor/apparmor/-/wikis/Documentation\n\nextra:\n  recipe-maintainers:\n    - ngam\n",
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "url": "https://gitlab.com/apparmor/apparmor/-/archive/v3.1.2/apparmor-v3.1.2.tar.gz",
 "version": "3.1.2"
}