{
 "archived": false,
 "bad": {
  "exception": "Command 'git diff --name-only 31af7ef016cf29892c747318670bb0ec4110207e...HEAD' returned non-zero exit status 128.",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 309, in run",
   "    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd",
   "    c.check_returncode()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode",
   "    raise CalledProcessError(self.returncode, self.args, self.stdout,",
   "subprocess.CalledProcessError: Command 'git diff --name-only 31af7ef016cf29892c747318670bb0ec4110207e...HEAD' returned non-zero exit status 128.",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyopenrivercam",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "pyOpenRiverCam is an open-source API for estimating surface velocity and river flow from IP, drone or smartphone camera\nvideos. It performs preprocessing, surface velocity estimation, spurious velocity filtering, cross section sampling,\ninfilling of missings, and integration to discharge. A user only needs to perform light field work and collect\nvideos. It is pure python code and therefore easy to take up in your own software project or perform research with or\ndevelop new features.\n",
   "dev_url": "https://github.com/localdevices/pyorc",
   "doc_url": "https://localdevices.github.io/pyorc",
   "home": "https://github.com/localdevices/pyorc",
   "license": "AGPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Measure river and stream surface velocity and river flow from UAV, smartphone or IP camera videos"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hcwinsemius"
   ]
  },
  "package": {
   "name": "pyopenrivercam",
   "version": "0.2.3"
  },
  "requirements": {
   "host": [
    "python >=3.8",
    "pip"
   ],
   "run": [
    "python >=3.8",
    "cartopy",
    "dask",
    "descartes",
    "geojson",
    "geopandas",
    "geos",
    "gitpython",
    "matplotlib-base",
    "netCDF4",
    "numpy",
    "opencv",
    "openpiv",
    "pip",
    "pyproj",
    "pytest",
    "rasterio",
    "scikit-image",
    "scipy",
    "shapely",
    "tqdm",
    "watermark",
    "xarray"
   ]
  },
  "source": {
   "sha256": "e9b2b329942123fb1a1e4b198a5349fc009d7357b4eac9cdb22e81deb3b74282",
   "url": "https://github.com/localdevices/pyorc/archive/refs/tags/v0.2.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pyorc"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cartopy",
    "dask",
    "descartes",
    "geojson",
    "geopandas",
    "geos",
    "gitpython",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "opencv",
    "openpiv",
    "pip",
    "pyproj",
    "pytest",
    "python",
    "rasterio",
    "scikit-image",
    "scipy",
    "shapely",
    "tqdm",
    "watermark",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "pyOpenRiverCam is an open-source API for estimating surface velocity and river flow from IP, drone or smartphone camera\nvideos. It performs preprocessing, surface velocity estimation, spurious velocity filtering, cross section sampling,\ninfilling of missings, and integration to discharge. A user only needs to perform light field work and collect\nvideos. It is pure python code and therefore easy to take up in your own software project or perform research with or\ndevelop new features.\n",
   "dev_url": "https://github.com/localdevices/pyorc",
   "doc_url": "https://localdevices.github.io/pyorc",
   "home": "https://github.com/localdevices/pyorc",
   "license": "AGPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Measure river and stream surface velocity and river flow from UAV, smartphone or IP camera videos"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hcwinsemius"
   ]
  },
  "package": {
   "name": "pyopenrivercam",
   "version": "0.2.3"
  },
  "requirements": {
   "host": [
    "python >=3.8",
    "pip"
   ],
   "run": [
    "python >=3.8",
    "cartopy",
    "dask",
    "descartes",
    "geojson",
    "geopandas",
    "geos",
    "gitpython",
    "matplotlib-base",
    "netCDF4",
    "numpy",
    "opencv",
    "openpiv",
    "pip",
    "pyproj",
    "pytest",
    "rasterio",
    "scikit-image",
    "scipy",
    "shapely",
    "tqdm",
    "watermark",
    "xarray"
   ]
  },
  "source": {
   "sha256": "e9b2b329942123fb1a1e4b198a5349fc009d7357b4eac9cdb22e81deb3b74282",
   "url": "https://github.com/localdevices/pyorc/archive/refs/tags/v0.2.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "pyorc"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "pyopenrivercam",
 "new_version": "0.2.4",
 "new_version_attempts": {
  "0.2.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyopenrivercam"
  ]
 },
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3069840119\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 309, in run\n    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'git diff --name-only 31af7ef016cf29892c747318670bb0ec4110207e...HEAD' returned non-zero exit status 128.\n"
 },
 "raw_meta_yaml": "{% set name = \"pyopenrivercam\" %}\n{% set version = \"0.2.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/localdevices/pyorc/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: e9b2b329942123fb1a1e4b198a5349fc009d7357b4eac9cdb22e81deb3b74282\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n\n  host:\n    - python >=3.8\n    - pip\n\n  run:\n    - python >=3.8\n    - cartopy\n    - dask\n    - descartes\n    - geojson\n    - geopandas\n    - geos\n    - gitpython\n    - matplotlib-base\n    - netCDF4\n    - numpy\n    - opencv\n    - openpiv\n    - pip\n    - pyproj\n    - pytest\n    - rasterio\n    - scikit-image\n    - scipy\n    - shapely\n    - tqdm\n    - watermark\n    - xarray\n\ntest:\n  imports:\n    - pyorc\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/localdevices/pyorc\n  summary: 'Measure river and stream surface velocity and river flow from UAV, smartphone or IP camera videos'\n  description: |\n    pyOpenRiverCam is an open-source API for estimating surface velocity and river flow from IP, drone or smartphone camera\n    videos. It performs preprocessing, surface velocity estimation, spurious velocity filtering, cross section sampling, \n    infilling of missings, and integration to discharge. A user only needs to perform light field work and collect \n    videos. It is pure python code and therefore easy to take up in your own software project or perform research with or\n    develop new features.\n  license: AGPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  doc_url: https://localdevices.github.io/pyorc\n  dev_url: https://github.com/localdevices/pyorc\n\nextra:\n  recipe-maintainers:\n    - hcwinsemius\n",
 "req": {
  "__set__": true,
  "elements": [
   "cartopy",
   "dask",
   "descartes",
   "geojson",
   "geopandas",
   "geos",
   "gitpython",
   "matplotlib-base",
   "netcdf4",
   "numpy",
   "opencv",
   "openpiv",
   "pip",
   "pyproj",
   "pytest",
   "python",
   "rasterio",
   "scikit-image",
   "scipy",
   "shapely",
   "tqdm",
   "watermark",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cartopy",
    "dask",
    "descartes",
    "geojson",
    "geopandas",
    "geos",
    "gitpython",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "opencv",
    "openpiv",
    "pip",
    "pyproj",
    "pytest",
    "python",
    "rasterio",
    "scikit-image",
    "scipy",
    "shapely",
    "tqdm",
    "watermark",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.8"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cartopy",
    "dask",
    "descartes",
    "geojson",
    "geopandas",
    "geos",
    "gitpython",
    "matplotlib-base",
    "netCDF4",
    "numpy",
    "opencv",
    "openpiv",
    "pip",
    "pyproj",
    "pytest",
    "python >=3.8",
    "rasterio",
    "scikit-image",
    "scipy",
    "shapely",
    "tqdm",
    "watermark",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/localdevices/pyorc/archive/refs/tags/v0.2.3.tar.gz",
 "version": "0.2.3"
}