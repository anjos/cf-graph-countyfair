{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1062247872.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1150554180.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.01"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "kokkos",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Kokkos Core implements a programming model in C++ for writing performance portable applications targeting all major HPC platforms. For that purpose it provides abstractions for both parallel execution of code and data management. Kokkos is designed to target complex node architectures with N-level memory hierarchies and multiple types of execution resources. It currently can use CUDA, HIP, SYCL, HPX, OpenMP and C++ threads as backend programming models with several other backends in development.\n",
   "dev_url": "https://github.com/kokkos/kokkos",
   "doc_url": "https://github.com/kokkos/kokkos/wiki",
   "home": "https://kokkos.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Kokkos C++ Performance Portability Programming EcoSystem: The Programming Model - Parallel Execution and Memory Abstraction\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "kokkos"
   ],
   "script_env": [
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "carterbox"
   ]
  },
  "package": {
   "name": "kokkos",
   "version": "3.6.01"
  },
  "requirements": {
   "build": [
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "source": {
   "sha256": "1b80a70c5d641da9fefbbb652e857d7c7a76a0ebad1f477c253853e209deb8db",
   "url": "https://github.com/kokkos/kokkos/archive/refs/tags/3.6.01.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.so.3.6.01",
    "test -f $PREFIX/lib/libkokkoscore.so.3.6.01",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Kokkos Core implements a programming model in C++ for writing performance portable applications targeting all major HPC platforms. For that purpose it provides abstractions for both parallel execution of code and data management. Kokkos is designed to target complex node architectures with N-level memory hierarchies and multiple types of execution resources. It currently can use CUDA, HIP, SYCL, HPX, OpenMP and C++ threads as backend programming models with several other backends in development.\n",
   "dev_url": "https://github.com/kokkos/kokkos",
   "doc_url": "https://github.com/kokkos/kokkos/wiki",
   "home": "https://kokkos.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Kokkos C++ Performance Portability Programming EcoSystem: The Programming Model - Parallel Execution and Memory Abstraction\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "kokkos"
   ],
   "script_env": [
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "carterbox"
   ]
  },
  "package": {
   "name": "kokkos",
   "version": "3.6.01"
  },
  "requirements": {
   "build": [
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "source": {
   "sha256": "1b80a70c5d641da9fefbbb652e857d7c7a76a0ebad1f477c253853e209deb8db",
   "url": "https://github.com/kokkos/kokkos/archive/refs/tags/3.6.01.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.so.3.6.01",
    "test -f $PREFIX/lib/libkokkoscore.so.3.6.01",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Kokkos Core implements a programming model in C++ for writing performance portable applications targeting all major HPC platforms. For that purpose it provides abstractions for both parallel execution of code and data management. Kokkos is designed to target complex node architectures with N-level memory hierarchies and multiple types of execution resources. It currently can use CUDA, HIP, SYCL, HPX, OpenMP and C++ threads as backend programming models with several other backends in development.\n",
   "dev_url": "https://github.com/kokkos/kokkos",
   "doc_url": "https://github.com/kokkos/kokkos/wiki",
   "home": "https://kokkos.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Kokkos C++ Performance Portability Programming EcoSystem: The Programming Model - Parallel Execution and Memory Abstraction\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "kokkos"
   ],
   "script_env": [
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "carterbox"
   ]
  },
  "package": {
   "name": "kokkos",
   "version": "3.6.01"
  },
  "requirements": {
   "build": [
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "source": {
   "sha256": "1b80a70c5d641da9fefbbb652e857d7c7a76a0ebad1f477c253853e209deb8db",
   "url": "https://github.com/kokkos/kokkos/archive/refs/tags/3.6.01.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.so.3.6.01",
    "test -f $PREFIX/lib/libkokkoscore.so.3.6.01",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Kokkos Core implements a programming model in C++ for writing performance portable applications targeting all major HPC platforms. For that purpose it provides abstractions for both parallel execution of code and data management. Kokkos is designed to target complex node architectures with N-level memory hierarchies and multiple types of execution resources. It currently can use CUDA, HIP, SYCL, HPX, OpenMP and C++ threads as backend programming models with several other backends in development.\n",
   "dev_url": "https://github.com/kokkos/kokkos",
   "doc_url": "https://github.com/kokkos/kokkos/wiki",
   "home": "https://kokkos.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Kokkos C++ Performance Portability Programming EcoSystem: The Programming Model - Parallel Execution and Memory Abstraction\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "kokkos",
    "kokkos",
    "kokkos",
    "kokkos"
   ],
   "script_env": [
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON",
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON",
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON",
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "carterbox",
    "BastianZim",
    "carterbox",
    "BastianZim",
    "carterbox",
    "BastianZim",
    "carterbox"
   ]
  },
  "package": {
   "name": "kokkos",
   "version": "3.6.01"
  },
  "requirements": {
   "build": [
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "llvm-openmp",
    "ninja"
   ]
  },
  "source": {
   "sha256": "1b80a70c5d641da9fefbbb652e857d7c7a76a0ebad1f477c253853e209deb8db",
   "url": "https://github.com/kokkos/kokkos/archive/refs/tags/3.6.01.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.so.3.6.01",
    "test -f $PREFIX/lib/libkokkoscore.so.3.6.01",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper",
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.so.3.6.01",
    "test -f $PREFIX/lib/libkokkoscore.so.3.6.01",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper",
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.so.3.6.01",
    "test -f $PREFIX/lib/libkokkoscore.so.3.6.01",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper",
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.3.6.01.dylib",
    "test -f $PREFIX/lib/libkokkoscore.3.6.01.dylib",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper"
   ]
  }
 },
 "name": "kokkos",
 "new_version": "3.7.01",
 "new_version_attempts": {
  "3.7.00": 0,
  "3.7.01": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Kokkos Core implements a programming model in C++ for writing performance portable applications targeting all major HPC platforms. For that purpose it provides abstractions for both parallel execution of code and data management. Kokkos is designed to target complex node architectures with N-level memory hierarchies and multiple types of execution resources. It currently can use CUDA, HIP, SYCL, HPX, OpenMP and C++ threads as backend programming models with several other backends in development.\n",
   "dev_url": "https://github.com/kokkos/kokkos",
   "doc_url": "https://github.com/kokkos/kokkos/wiki",
   "home": "https://kokkos.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Kokkos C++ Performance Portability Programming EcoSystem: The Programming Model - Parallel Execution and Memory Abstraction\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "kokkos"
   ],
   "script_env": [
    "Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF",
    "Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "carterbox"
   ]
  },
  "package": {
   "name": "kokkos",
   "version": "3.6.01"
  },
  "requirements": {
   "build": [
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "llvm-openmp",
    "ninja"
   ]
  },
  "source": {
   "sha256": "1b80a70c5d641da9fefbbb652e857d7c7a76a0ebad1f477c253853e209deb8db",
   "url": "https://github.com/kokkos/kokkos/archive/refs/tags/3.6.01.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake",
    "test -f $PREFIX/lib/libkokkoscontainers.3.6.01.dylib",
    "test -f $PREFIX/lib/libkokkoscore.3.6.01.dylib",
    "test -f $PREFIX/include/Kokkos_Core.hpp",
    "test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp",
    "test -f $PREFIX/bin/hpcbind",
    "test -f $PREFIX/bin/kokkos_launch_compiler",
    "test -f $PREFIX/bin/nvcc_wrapper"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kokkos"
  ]
 },
 "pinning_version": "2022.12.07.02.23.49",
 "raw_meta_yaml": "{% set name = \"kokkos\" %}\n{% set version = \"3.6.01\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/kokkos/kokkos/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 1b80a70c5d641da9fefbbb652e857d7c7a76a0ebad1f477c253853e209deb8db\n\nbuild:\n# Requires MSVC >=19.29, but conda-forge does not meet this requirement\n  skip: True  # [win]\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('kokkos') }}\n  script_env:\n  # Search acronyms on https://en.wikichip.org/ to enable optimizations\n  # for each platform for desktop chips released since 2012 (10 years)\n  # Build options here: https://github.com/kokkos/kokkos/blob/master/BUILD.md\n  # FIXME: Cannot optimize for multiple CPU archs simultaneously. For now, don't enable any optimizations.\n  #  - Kokkos_OPT_ARGS=-DKokkos_ARCH_AMDAVX=ON -DKokkos_ARCH_BDW=ON -DKokkos_ARCH_HSW=ON -DKokkos_ARCH_SNB=ON -DKokkos_ARCH_ZEN=ON -DKokkos_ARCH_ZEN2=ON -DKokkos_ARCH_ZEN3=ON  # [x86_64 and not osx]\n  #  - Kokkos_OPT_ARGS=-DKokkos_ARCH_POWER8=ON -DKokkos_ARCH_POWER9=ON  # [ppc64le]\n  #  - Kokkos_OPT_ARGS=-DKokkos_ARCH_ARMV80=ON -DKokkos_ARCH_ARMV81=ON  # [aarch64]\n  # Kokkos v3.5.00 only lets us optimize for one CUDA arch at a time, so builds for conda-forge not possible\n    - Kokkos_CUDA_ARGS=-DKokkos_ENABLE_CUDA=OFF\n    - Kokkos_TEST_ARGS=-DKokkos_ENABLE_TESTS=ON\n\nrequirements:\n  build:\n    - cmake >=3.21.1,<4\n    - {{ compiler('cxx') }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - ninja\n\ntest:\n  commands:\n  # Lots more CMake files; just checking for one\n    - test -f $PREFIX/lib/cmake/Kokkos/KokkosConfig.cmake  # [unix]\n  # Testing explicity for all shared libs, but not links\n    - test -f $PREFIX/lib/libkokkoscontainers.so.{{ version }}  # [linux]\n    - test -f $PREFIX/lib/libkokkoscore.so.{{ version }}  # [linux]\n    - test -f $PREFIX/lib/libkokkoscontainers.{{ version }}.dylib  # [osx]\n    - test -f $PREFIX/lib/libkokkoscore.{{ version }}.dylib  # [osx]\n    - if not exist %LIBRARY_LIB%\\\\libkokkoscontainers.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\libkokkoscore.lib exit 1  # [win]\n  # There are lots more headers; only test for a few.\n  # Dumps many headers directly into include/,\n  # but all files are prefixed with Kokkos_\n    - test -f $PREFIX/include/Kokkos_Core.hpp  # [unix]\n    - test -f $PREFIX/include/OpenMP/Kokkos_OpenMP_Exec.hpp  # [unix]\n  # These are all the binaries\n    - test -f $PREFIX/bin/hpcbind  # [unix]\n    - test -f $PREFIX/bin/kokkos_launch_compiler  # [unix]\n    - test -f $PREFIX/bin/nvcc_wrapper  # [unix]\n\nabout:\n  home: https://kokkos.org/\n  summary: >\n    Kokkos C++ Performance Portability Programming EcoSystem: The Programming\n    Model - Parallel Execution and Memory Abstraction\n  description: >\n    Kokkos Core implements a programming model in C++ for writing performance\n    portable applications targeting all major HPC platforms. For that purpose\n    it provides abstractions for both parallel execution of code and data\n    management. Kokkos is designed to target complex node architectures with\n    N-level memory hierarchies and multiple types of execution resources. It\n    currently can use CUDA, HIP, SYCL, HPX, OpenMP and C++ threads as backend\n    programming models with several other backends in development.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  doc_url: https://github.com/kokkos/kokkos/wiki\n  dev_url: https://github.com/kokkos/kokkos\n\nextra:\n  recipe-maintainers:\n    - BastianZim\n    - carterbox\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "libgomp",
   "llvm-openmp",
   "ninja"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake >=3.21.1,<4",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/kokkos/kokkos/archive/refs/tags/3.6.01.tar.gz",
 "version": "3.6.01"
}