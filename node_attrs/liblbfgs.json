{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "liblbfgs",
 "hash_type": "sha256",
 "name": "liblbfgs",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "liblbfgs"
  ]
 },
 "raw_meta_yaml": "{% set name = \"liblbfgs\" %}\n{% set version = \"1.10\" %}\n{% set sha = \"4158ab7402b573e5c69d5f6b03c973047a91e16ca5737d3347e3af9c906868cf\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/downloads/chokkan/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha }}\n\nbuild:\n  number: 0\n  skip: True  # [win]\n  run_exports:\n  - {{ pin_subpackage('liblbfgs', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\n# note that liblbfgs builds a sample binary (sample/sample). Infortunately\n# this seems to be linked awkwardly and can not be used in the test.\n# Nevertheless its executed in the build, i.e. the build fails if the sample\n# does not work.\ntest:\n  commands:\n    - test -f ${PREFIX}/include/lbfgs.h\n    - test -f ${PREFIX}/lib/liblbfgs${SHLIB_EXT}\n    - test -f ${PREFIX}/share/doc/liblbfgs/README\n\nabout:\n  home: http://www.chokkan.org/software/liblbfgs/\n  license: MIT\n  license_family: MIT\n  license_file: COPYING\n  summary: 'implementation of Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) method'\n\n  description: |\n    libLBFGS is a C port of the implementation of Limited-memory\n    Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) method written by Jorge Nocedal.\n    The original FORTRAN source code is available at:\n    http://www.ece.northwestern.edu/~nocedal/lbfgs.html\n    The L-BFGS method solves the unconstrainted minimization problem:\n    minimize F(x), x = (x1, x2, ..., xN),\n    only if the objective function F(x) and its gradient G(x) are computable.\n  doc_url: http://www.chokkan.org/software/liblbfgs/\n  dev_url: https://github.com/chokkan/liblbfgs/\n\nextra:\n  recipe-maintainers:\n    - bernt-matthias\n",
 "strong_exports": false,
 "url": "https://github.com/downloads/chokkan/liblbfgs/liblbfgs-1.10.tar.gz",
 "version": "1.10"
}