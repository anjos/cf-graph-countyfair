{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199825986.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219158691.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "kubernetes-federation",
 "hash_type": "sha256",
 "name": "kubernetes-federation",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kubernetes-federation"
  ]
 },
 "pinning_version": "2018.09.27",
 "raw_meta_yaml": "{% set goname = \"k8s.io/federation\" %}\n{% set version = \"1.10.0\" %}\n{% set version_suffix = \"alpha.0\" %}\n\n\n{% set name = goname.split('/')[-1] %}\n{% set pkg_src = ('src/'+goname).replace(\"/\", os.sep) %}\n\npackage:\n  name: kubernetes-{{ name|lower }}\n  version: {{ version }}{{ version_suffix[0] }}{{ version_suffix.split('.')[-1] }}\n\nsource:\n  - folder: {{ pkg_src }}\n    url: https://github.com/kubernetes/{{ name }}/archive/v{{ version }}-{{version_suffix}}.tar.gz\n    sha256: 6e11061ef5496a93ba32d84c6ebbe20f815e75b3e1f7468d3ab78c0c6ae0543d\n\nbuild:\n  skip: True  # [not linux]\n  number: 1000\n\nrequirements:\n  build:\n    - {{ compiler('go') }} 1.8\n    - rsync\n    - make\n\ntest:\n  commands:\n    - fcp --help\n    - federation-apiserver --help\n    - federation-controller-manager --help\n    - kubefed help\n\nabout:\n  home: https://www.kubernetes.io\n  license: Apache-2.0\n  license_family: Apache\n  license_file: {{pkg_src}}/LICENSE\n  summary: Production-Grade Container Orchestration / Federation\n  doc_url: https://docs.kubernetes.io/docs/home/\n  dev_url: https://github.com/kubernetes/federation\n\nextra:\n  recipe-maintainers:\n    - sodre\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://github.com/kubernetes/federation/archive/v1.10.0-alpha.0.tar.gz",
 "version": "1.10.0a0"
}