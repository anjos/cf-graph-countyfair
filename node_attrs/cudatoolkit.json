{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/503797290.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/589048238.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "unsupported operand type(s) for |=: 'bool' and 'NoneType'",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1132, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 192, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate",
   "    r_url |= _has_r_url(cmeta.meta[src_key])",
   "TypeError: unsupported operand type(s) for |=: 'bool' and 'NoneType'",
   ""
  ]
 },
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": false,
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "cudatoolkit",
 "hash_type": "md5",
 "linux_64_meta_yaml": {
  "about": {
   "description": "CUDA is a parallel computing platform and programming model developed by NVIDIA for general computing on graphical processing units (GPUs). With CUDA, developers can dramatically speed up computing applications by harnessing the power of GPUs.\n\nThe CUDA Toolkit from NVIDIA provides everything you need to develop GPU-accelerated applications. This CUDA Toolkit includes GPU-accelerated libraries, and the CUDA runtime for the Conda ecosystem. For the full CUDA Toolkit with a compiler and development tools visit https://developer.nvidia.com/cuda-downloads\n\nLicense Agreements\nThe packages are governed by the CUDA Toolkit End User License Agreement (EULA). By downloading and using the packages, you accept the terms and conditions of the CUDA EULA - https://docs.nvidia.com/cuda/eula/index.html\n",
   "dev_url": "https://developer.nvidia.com/cuda-downloads",
   "doc_url": "https://docs.nvidia.com/cuda/",
   "home": "https://developer.nvidia.com/cuda-toolkit",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "NVIDIA_EULA",
   "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
   "summary": "CUDA Toolkit - Including CUDA runtime"
  },
  "build": {
   "missing_dso_whitelist": [
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6"
   ],
   "number": "8",
   "script": "echo 11.2\npython build.py --version=11.2.0 --version-patch=460.89 --runfile=cuda_11.2.0_460.89_win10.exe\n",
   "script_env": [
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang"
   ]
  },
  "package": {
   "name": "cudatoolkit",
   "version": "11.2.0"
  },
  "requirements": {
   "build": [
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "run_constrained": [
    "__cuda >=11.1",
    "__cuda >=11.2.2",
    "__cuda >=10.0",
    "__cuda >=9.2",
    "__cuda >=10.1",
    "__cuda >=11.0",
    "__cuda >=11.2.1",
    "__cuda >=10.2",
    "__cuda >=11.2"
   ]
  },
  "source": [
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.1.1_456.81_win10.exe",
    "md5": "c24e2755e3868692051a38797ce01044",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.2_461.33_win10.exe",
    "md5": "955ae5d59531923d32a3bfe3f68a7dfe",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_461.33_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.0.130_411.31_win10",
    "md5": "9375304c8dc8d42e7f9a9ae37e80b42b",
    "url": "https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_411.31_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_9.2.148_win10",
    "md5": "8303cdf46904e6dea8d5d641b0b46f0d",
    "url": "https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.1.243_426.00_win10.exe",
    "md5": "a71f703ed688eeca637dc27df714e854",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_426.00_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.0.3_451.82_win10.exe",
    "md5": "70af4cebe30549b9995fb9c57d538214",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_451.82_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.1_461.09_win10.exe",
    "md5": "5e33c4fdb409b299b85039e2a223c279",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_461.09_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.2.89_441.22_win10.exe",
    "md5": "3d816c583759efa8567a92c1a2af90db",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.0_460.89_win10.exe",
    "md5": "04b39f63c3b97153631ca12ed230be51",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
   }
  ],
  "test": {
   "commands": [
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\""
   ],
   "requires": [
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "setuptools"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "CUDA is a parallel computing platform and programming model developed by NVIDIA for general computing on graphical processing units (GPUs). With CUDA, developers can dramatically speed up computing applications by harnessing the power of GPUs.\n\nThe CUDA Toolkit from NVIDIA provides everything you need to develop GPU-accelerated applications. This CUDA Toolkit includes GPU-accelerated libraries, and the CUDA runtime for the Conda ecosystem. For the full CUDA Toolkit with a compiler and development tools visit https://developer.nvidia.com/cuda-downloads\n\nLicense Agreements\nThe packages are governed by the CUDA Toolkit End User License Agreement (EULA). By downloading and using the packages, you accept the terms and conditions of the CUDA EULA - https://docs.nvidia.com/cuda/eula/index.html\n",
   "dev_url": "https://developer.nvidia.com/cuda-downloads",
   "doc_url": "https://docs.nvidia.com/cuda/",
   "home": "https://developer.nvidia.com/cuda-toolkit",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "NVIDIA_EULA",
   "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
   "summary": "CUDA Toolkit - Including CUDA runtime"
  },
  "build": {
   "missing_dso_whitelist": [
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6"
   ],
   "number": "8",
   "rpaths_patcher": "LIEF",
   "script": "echo 11.2\npython build.py --version=11.2.0 --version-patch=460.89 --runfile=cuda_11.2.0_460.89_win10.exe\n",
   "script_env": [
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang"
   ]
  },
  "package": {
   "name": "cudatoolkit",
   "version": "11.2.0"
  },
  "requirements": {
   "build": [
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "run_constrained": [
    "__cuda >=11.0",
    "__cuda >=10.2",
    "__cuda >=11.2.2",
    "__cuda >=11.1",
    "__cuda >=11.2.1",
    "__cuda >=11.2"
   ]
  },
  "source": [
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.0.3_451.82_win10.exe",
    "md5": "dabba7135b466d6726eade724d2eb598",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_451.82_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.2.89_441.22_win10.exe",
    "md5": "ecb6af432e64bc10e7a18cd6bd4be62f",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.2_461.33_win10.exe",
    "md5": "1b3fc509541f6be0ee820e26a8ae1d88",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_461.33_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.1.1_456.81_win10.exe",
    "md5": "d0b53036e8dcdc8dc22191feb913a3a0",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.1_461.09_win10.exe",
    "md5": "e4b2492a5476c994576d7c964ceaf59c",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_461.09_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.0_460.89_win10.exe",
    "md5": "d253e8971d4133426900b42632662d31",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
   }
  ],
  "test": {
   "commands": [
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\""
   ],
   "requires": [
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "setuptools"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "CUDA is a parallel computing platform and programming model developed by NVIDIA for general computing on graphical processing units (GPUs). With CUDA, developers can dramatically speed up computing applications by harnessing the power of GPUs.\n\nThe CUDA Toolkit from NVIDIA provides everything you need to develop GPU-accelerated applications. This CUDA Toolkit includes GPU-accelerated libraries, and the CUDA runtime for the Conda ecosystem. For the full CUDA Toolkit with a compiler and development tools visit https://developer.nvidia.com/cuda-downloads\n\nLicense Agreements\nThe packages are governed by the CUDA Toolkit End User License Agreement (EULA). By downloading and using the packages, you accept the terms and conditions of the CUDA EULA - https://docs.nvidia.com/cuda/eula/index.html\n",
   "dev_url": "https://developer.nvidia.com/cuda-downloads",
   "doc_url": "https://docs.nvidia.com/cuda/",
   "home": "https://developer.nvidia.com/cuda-toolkit",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "NVIDIA_EULA",
   "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
   "summary": "CUDA Toolkit - Including CUDA runtime"
  },
  "build": {
   "missing_dso_whitelist": [
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6"
   ],
   "number": "8",
   "rpaths_patcher": "LIEF",
   "script": "echo 11.0\npython build.py --version=11.0.3 --version-patch=451.82 --runfile=cuda_11.0.3_451.82_win10.exe\nif errorlevel 1 exit 1\n\n:: copy nvvm and libdevice into the DLLs folder so numba can use them\nmkdir \"%PREFIX%\\DLLs\"\nxcopy /s /y \"%PREFIX%\\Library\\bin\\nvvm*\" \"%PREFIX%\\DLLs\\\"\nif errorlevel 1 exit 1\nxcopy /s /y \"%PREFIX%\\Library\\bin\\libdevice*\" \"%PREFIX%\\DLLs\\\"\nif errorlevel 1 exit 1\n",
   "script_env": [
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang"
   ]
  },
  "package": {
   "name": "cudatoolkit",
   "version": "11.0.3"
  },
  "requirements": {
   "build": [
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "run_constrained": [
    "__cuda >=11.1",
    "__cuda >=11.2.2",
    "__cuda >=10.0",
    "__cuda >=9.2",
    "__cuda >=10.1",
    "__cuda >=11.0",
    "__cuda >=11.2.1",
    "__cuda >=10.2",
    "__cuda >=11.2",
    "__cuda >=11.0",
    "__cuda >=10.2",
    "__cuda >=11.2.2",
    "__cuda >=11.1",
    "__cuda >=11.2.1",
    "__cuda >=11.2",
    "__cuda >=11.1",
    "__cuda >=10.0",
    "__cuda >=11.2",
    "__cuda >=10.2",
    "__cuda >=10.1",
    "__cuda >=9.2",
    "__cuda >=11.2.1",
    "__cuda >=11.2.2",
    "__cuda >=11.0"
   ]
  },
  "source": [
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.1.1_456.81_win10.exe",
    "md5": "c24e2755e3868692051a38797ce01044",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.2_461.33_win10.exe",
    "md5": "955ae5d59531923d32a3bfe3f68a7dfe",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_461.33_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.0.130_411.31_win10",
    "md5": "9375304c8dc8d42e7f9a9ae37e80b42b",
    "url": "https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_411.31_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_9.2.148_win10",
    "md5": "8303cdf46904e6dea8d5d641b0b46f0d",
    "url": "https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.1.243_426.00_win10.exe",
    "md5": "a71f703ed688eeca637dc27df714e854",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_426.00_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.0.3_451.82_win10.exe",
    "md5": "70af4cebe30549b9995fb9c57d538214",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_451.82_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.1_461.09_win10.exe",
    "md5": "5e33c4fdb409b299b85039e2a223c279",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_461.09_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.2.89_441.22_win10.exe",
    "md5": "3d816c583759efa8567a92c1a2af90db",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.0_460.89_win10.exe",
    "md5": "04b39f63c3b97153631ca12ed230be51",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.0.3_451.82_win10.exe",
    "md5": "dabba7135b466d6726eade724d2eb598",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_451.82_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.2.89_441.22_win10.exe",
    "md5": "ecb6af432e64bc10e7a18cd6bd4be62f",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.2_461.33_win10.exe",
    "md5": "1b3fc509541f6be0ee820e26a8ae1d88",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_461.33_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.1.1_456.81_win10.exe",
    "md5": "d0b53036e8dcdc8dc22191feb913a3a0",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.1_461.09_win10.exe",
    "md5": "e4b2492a5476c994576d7c964ceaf59c",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_461.09_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.0_460.89_win10.exe",
    "md5": "d253e8971d4133426900b42632662d31",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.1.1_456.81_win10.exe",
    "md5": "a89dfad35fc1adf02a848a9c06cfff15",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.0.130_411.31_win10",
    "md5": "90fafdfe2167ac25432db95391ca954e",
    "url": "https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_411.31_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.0_460.89_win10.exe",
    "md5": "92f38c37ce9c6c11d27c10701b040256",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.2.89_441.22_win10.exe",
    "md5": "d9f5b9f24c3d3fc456a3c789f9b43419",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.1.243_426.00_win10.exe",
    "md5": "b54cf32683f93e787321dcc2e692ff69",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_426.00_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_9.2.148_win10",
    "md5": "efaf92a93bdef21da29aba8a8768a16d",
    "url": "https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.1_461.09_win10.exe",
    "md5": "c34b541d8706b5aa0d8ba7313fff78e7",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_461.09_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.2_461.33_win10.exe",
    "md5": "f9da6687d8a4f137ff14f8389b496e0a",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_461.33_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.0.3_451.82_win10.exe",
    "md5": "80ae0fdbe04759123f3cab81f2aadabd",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_451.82_win10.exe"
   }
  ],
  "test": {
   "commands": [
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libaccinj64.so\"",
    "test ! -f \"${PREFIX}/lib/libcuinj64.so\"",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1"
   ],
   "requires": [
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools"
   ]
  }
 },
 "name": "cudatoolkit",
 "new_version": "11.1.1",
 "new_version_attempts": {
  "11.1.0": 17,
  "11.1.1": 799
 },
 "new_version_errors": {
  "11.1.1": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 34, column 3:\n      \"9.2\": {\n      ^ (line: 34)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 52, column 4:\n      },\n       ^ (line: 52)"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cudatoolkit"
  ]
 },
 "pinning_version": "2021.03.09.22.39.45",
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/888663895\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1132, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 192, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    r_url |= _has_r_url(cmeta.meta[src_key])\nTypeError: unsupported operand type(s) for |=: 'bool' and 'NoneType'\n"
 },
 "raw_meta_yaml": "# Originally forked from https://github.com/AnacondaRecipes/cudatoolkit-feedstock\n# Distributed under the BSD-2-Clause license\n# Copyright (c) 2017, Continuum Analytics, Inc. All rights reserved.\n#\n# Distribution of the content approved by NVIDIA ( http://nvbugs/3052604 )\n{% set major_minor = major_minor_ver|default(\"11.2.2\") %}\n\n# The following cudavars dictionary is a table of metadata for selecting various\n# paramaters based on the X.Y version number of cudatoolkit. The following is a description\n# of the keys for each entry:\n#\n# version: the X.Y.Z version number for cudatoolkit.\n# version_patch: the patch/build number for the associated X.Y.Z number. This value\n#   is a dict of platform keys to patch numbers, because this value is platform dependent.\n#   If the value of the version_patch is \"skip\", that platform will be skipped.\n# subdomain: The nvidia.com subdomain where that files may be downloaded.\n# download_dir: The directory in which a version's downloads exist. This does not\n#   follow a set pattern. The URL that is accessed for download is usually:\n#       https://{{ subdomain }}.nvidia.com/compute/cuda/{{ download_dir }}\n# checksums: Another platform dependent key of the various download file checksums. For the\n#   runfiles, these are take from the official MD5 checksums. The official MD5 sums are\n#   usually available at the following 11.0+:\n#       https://{{ subdomain }}.nvidia.com/compute/cuda/{{ download_dir }}/docs/sidebar/md5sum.txt\n#   For 10.1.243, the URL is:\n#       http://developer.download.nvidia.com/compute/cuda/10.1/Prod/docs3/sidebar/md5sum.txt\n#   For 10.0.130, the URL differs by the subdir:\n#       https://developer.download.nvidia.com/compute/cuda/10.0/Prod/docs/sidebar/md5sum.txt\n#   For 9.2.148, the URL is:\n#       http://developer.download.nvidia.com/compute/cuda/9.2/Prod2/docs/sidebar/md5sum.txt\n# sysroot_version: The version of sysroot_linux-64 that will be used. Currently only used\n#   on linux64. If this key is not present, then no sysroot requirement is used.\n\n{% set cudavars = {\n  \"9.2\": {\n    \"version\": \"9.2.148\",\n    \"version_patch\": {\n      \"linux64\": \"396.37\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"skip\",\n      \"win\": \"\",\n    },\n    \"subdomain\": \"developer\",\n    \"download_dir\": major_minor + \"/Prod2\",\n    \"checksums\": {\n      \"linux64\": \"8303cdf46904e6dea8d5d641b0b46f0d\",\n      \"win\": \"efaf92a93bdef21da29aba8a8768a16d\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \"\",\n      \"win\": \"\",\n    },\n  },\n  \"10.0\": {\n    \"version\": \"10.0.130\",\n    \"version_patch\": {\n      \"linux64\": \"410.48\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"skip\",\n      \"win\": \"411.31\",\n    },\n    \"subdomain\": \"developer\",\n    \"download_dir\": major_minor + \"/Prod\",\n    \"checksums\": {\n      \"linux64\": \"9375304c8dc8d42e7f9a9ae37e80b42b\",\n      \"win\": \"90fafdfe2167ac25432db95391ca954e\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \"\",\n      \"win\": \"\",\n    },\n  },\n  \"10.1\": {\n    \"version\": \"10.1.243\",\n    \"version_patch\": {\n      \"linux64\": \"418.87.00\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"skip\",\n      \"win\": \"426.00\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": major_minor + \"/Prod\",\n    \"checksums\": {\n      \"linux64\": \"a71f703ed688eeca637dc27df714e854\",\n      \"ppc64le\": \"abb32a3754c84d2934ef04a76a9bc978\",\n      \"win\": \"b54cf32683f93e787321dcc2e692ff69\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n  },\n  \"10.2\": {\n    \"version\": \"10.2.89\",\n    \"version_patch\": {\n      \"linux64\": \"440.33.01\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"440.33.01\",\n      \"win\": \"441.22\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": major_minor + \"/Prod\",\n    \"checksums\": {\n      \"linux64\": \"3d816c583759efa8567a92c1a2af90db\",\n      \"ppc64le\": \"ecb6af432e64bc10e7a18cd6bd4be62f\",\n      \"win\": \"d9f5b9f24c3d3fc456a3c789f9b43419\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n  },\n  \"11.0\": {\n    \"version\": \"11.0.3\",\n    \"version_patch\": {\n      \"linux64\": \"450.51.06\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"450.51.06\",\n      \"win\": \"451.82\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": \"11.0.3\",\n    \"checksums\": {\n      \"linux64\": \"70af4cebe30549b9995fb9c57d538214\",\n      \"ppc64le\": \"dabba7135b466d6726eade724d2eb598\",\n      \"win\": \"80ae0fdbe04759123f3cab81f2aadabd\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n    \"sysroot_version\": \"2.17\",\n  },\n  \"11.1\": {\n    \"version\": \"11.1.1\",\n    \"version_patch\": {\n      \"linux64\": \"455.32.00\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"455.32.00\",\n      \"win\": \"456.81\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": \"11.1.1\",\n    \"checksums\": {\n      \"linux64\": \"c24e2755e3868692051a38797ce01044\",\n      \"ppc64le\": \"d0b53036e8dcdc8dc22191feb913a3a0\",\n      \"win\": \"a89dfad35fc1adf02a848a9c06cfff15\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n    \"sysroot_version\": \"2.17\",\n  },\n  \"11.2\": {\n    \"version\": \"11.2.0\",\n    \"version_patch\": {\n      \"linux64\": \"460.27.04\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"460.27.04\",\n      \"win\": \"460.89\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": \"11.2.0\",\n    \"checksums\": {\n      \"linux64\": \"04b39f63c3b97153631ca12ed230be51\",\n      \"ppc64le\": \"d253e8971d4133426900b42632662d31\",\n      \"win\": \"92f38c37ce9c6c11d27c10701b040256\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n    \"sysroot_version\": \"2.17\",\n  },\n  \"11.2.1\": {\n    \"version\": \"11.2.1\",\n    \"version_patch\": {\n      \"linux64\": \"460.32.03\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"460.32.03\",\n      \"win\": \"461.09\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": \"11.2.1\",\n    \"checksums\": {\n      \"linux64\": \"5e33c4fdb409b299b85039e2a223c279\",\n      \"ppc64le\": \"e4b2492a5476c994576d7c964ceaf59c\",\n      \"win\": \"c34b541d8706b5aa0d8ba7313fff78e7\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n    \"sysroot_version\": \"2.17\",\n  },\n    \"11.2.2\": {\n    \"version\": \"11.2.2\",\n    \"version_patch\": {\n      \"linux64\": \"460.32.03\",\n      \"osx\": \"skip\",\n      \"ppc64le\": \"460.32.03\",\n      \"win\": \"461.33\",\n    },\n    \"subdomain\": \"developer.download\",\n    \"download_dir\": \"11.2.2\",\n    \"checksums\": {\n      \"linux64\": \"955ae5d59531923d32a3bfe3f68a7dfe\",\n      \"ppc64le\": \"1b3fc509541f6be0ee820e26a8ae1d88\",\n      \"win\": \"f9da6687d8a4f137ff14f8389b496e0a\",\n    },\n    \"blob_ext\": {\n      \"linux64\": \".run\",\n      \"ppc64le\": \".run\",\n      \"win\": \".exe\",\n    },\n    \"sysroot_version\": \"2.17\",\n  },\n}\n%}\n{% set version = cudavars[major_minor][\"version\"] %}\n{% set version_patch = cudavars[major_minor][\"version_patch\"][\"linux64\"] %}  # [linux64]\n{% set version_patch = cudavars[major_minor][\"version_patch\"][\"osx\"] %}  # [osx]\n{% set version_patch = cudavars[major_minor][\"version_patch\"][\"ppc64le\"] %}  # [ppc64le]\n{% set version_patch = cudavars[major_minor][\"version_patch\"][\"win\"] %}  # [win]\n{% set subdomain = cudavars[major_minor][\"subdomain\"] %}\n{% set download_dir = cudavars[major_minor][\"download_dir\"] %}\n\n# Set runfile\n{% if version_patch == \"\" %}\n    {% set version_patch_underscore = \"\" %}\n{% else %}\n    {% set version_patch_underscore = \"_\" %}\n{% endif %}\n{% set runfile_pre = \"cuda_\" + version + version_patch_underscore + version_patch %}\n{% set runfile = runfile_pre + \"_linux\" + cudavars[major_minor][\"blob_ext\"].get(\"linux64\", \"NONE\") %}  # [linux64]\n{% set runfile = runfile_pre + \"_mac\" + cudavars[major_minor][\"blob_ext\"].get(\"osx\", \"NONE\") %}  # [osx]\n{% set runfile = runfile_pre + \"_linux_ppc64le\" + cudavars[major_minor][\"blob_ext\"].get(\"ppc64le\", \"NONE\") %}  # [ppc64le]\n{% set runfile = runfile_pre + \"_win10\" + cudavars[major_minor][\"blob_ext\"].get(\"win\", \"NONE\") %}  # [win]\n\n\npackage:\n   name: cudatoolkit\n   # match the package version to the libcudart.so version\n   version: {{ version }}\n\nsource:\n  - path: ./build.py\n  - fn: {{ runfile }}\n    url: https://{{ subdomain }}.nvidia.com/compute/cuda/{{ download_dir }}/local_installers/{{ runfile }}\n    md5: {{ cudavars[major_minor][\"checksums\"][\"linux64\"] }}  # [linux64]\n    md5: {{ cudavars[major_minor][\"checksums\"][\"osx\"] }}  # [osx]\n    md5: {{ cudavars[major_minor][\"checksums\"][\"ppc64le\"] }}  # [ppc64le]\n    md5: {{ cudavars[major_minor][\"checksums\"][\"win\"] }}  # [win]\n\nbuild:\n  number: 8\n  script_env:\n    - NVTOOLSEXT_INSTALL_PATH\n    - DEBUG_INSTALLER_PATH\n  missing_dso_whitelist:\n    - \"$RPATH/libdl.so.2\"\n    - \"$RPATH/libpthread.so.0\"\n    - \"$RPATH/libc.so.6\"\n    - \"$RPATH/librt.so.1\"\n    - \"$RPATH/ld-linux-x86-64.so.2\"\n    - \"$RPATH/libm.so.6\"\n{% if version_patch == \"skip\" %}\n  skip: true\n{% endif %}\n  rpaths_patcher: LIEF  # [ppc64le]\n  script: |\n    echo {{ major_minor_ver }}\n    python build.py --version={{ version }} --version-patch={{ version_patch }} --runfile={{ runfile }}\n    if errorlevel 1 exit 1                                                 # [win]\n\n    :: copy nvvm and libdevice into the DLLs folder so numba can use them  # [win]\n    mkdir \"%PREFIX%\\DLLs\"                                                  # [win]\n    xcopy /s /y \"%PREFIX%\\Library\\bin\\nvvm*\" \"%PREFIX%\\DLLs\\\"              # [win]\n    if errorlevel 1 exit 1                                                 # [win]\n    xcopy /s /y \"%PREFIX%\\Library\\bin\\libdevice*\" \"%PREFIX%\\DLLs\\\"         # [win]\n    if errorlevel 1 exit 1                                                 # [win]\n\n\nrequirements:\n  build:\n    - 7za  # [win]\n    - python >=3.7\n    # for run_exports\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n{% if \"sysroot_version\" in cudavars[major_minor] %}\n    - sysroot_linux-64 {{ cudavars[major_minor][\"sysroot_version\"] }}  # [linux64]\n{% endif %}\n  run_constrained:\n    - __cuda >={{ major_minor }}\n\ntest:\n  requires:\n    - numba\n    - python >=3.7\n    - setuptools  # for pkg_resources\n  commands:\n    - test ! -f \"${PREFIX}/lib/libaccinj64.so\"         # [linux]\n    - test ! -f \"${PREFIX}/lib/libcuinj64.so\"          # [linux]\n    - if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1  # [win]\n    - if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1   # [win]\n\nabout:\n  home: https://developer.nvidia.com/cuda-toolkit\n  # A LicenceRef cannot be used in this case, see:\n  # https://github.com/conda-forge/staged-recipes/pull/12882#discussion_r504086944\n  license: LicenseRef-NVIDIA-End-User-License-Agreement\n  license_file: NVIDIA_EULA\n  license_url: https://docs.nvidia.com/cuda/eula/index.html\n  description: |\n    CUDA is a parallel computing platform and programming model developed by NVIDIA for general computing on graphical processing units (GPUs). With CUDA, developers can dramatically speed up computing applications by harnessing the power of GPUs.\n\n    The CUDA Toolkit from NVIDIA provides everything you need to develop GPU-accelerated applications. This CUDA Toolkit includes GPU-accelerated libraries, and the CUDA runtime for the Conda ecosystem. For the full CUDA Toolkit with a compiler and development tools visit https://developer.nvidia.com/cuda-downloads\n\n    License Agreements\n    The packages are governed by the CUDA Toolkit End User License Agreement (EULA). By downloading and using the packages, you accept the terms and conditions of the CUDA EULA - https://docs.nvidia.com/cuda/eula/index.html\n  summary: 'CUDA Toolkit - Including CUDA runtime'\n  doc_url: https://docs.nvidia.com/cuda/\n  dev_url: https://developer.nvidia.com/cuda-downloads\n\nextra:\n  recipe-maintainers:\n    - scopatz\n    - mike-wendt\n    - jakirkham\n    - raydouglass\n    - kkraus14\n    - leofang\n",
 "req": {
  "__set__": true,
  "elements": [
   "7za",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "python",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "7za",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "linux-sysroot"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "setuptools"
   ]
  }
 },
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "time": 1562854814.7372642,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "7za",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python >=3.7",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "numba",
    "python >=3.7",
    "setuptools"
   ]
  }
 },
 "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe",
 "version": "11.0.3",
 "win_64_meta_yaml": {
  "about": {
   "description": "CUDA is a parallel computing platform and programming model developed by NVIDIA for general computing on graphical processing units (GPUs). With CUDA, developers can dramatically speed up computing applications by harnessing the power of GPUs.\n\nThe CUDA Toolkit from NVIDIA provides everything you need to develop GPU-accelerated applications. This CUDA Toolkit includes GPU-accelerated libraries, and the CUDA runtime for the Conda ecosystem. For the full CUDA Toolkit with a compiler and development tools visit https://developer.nvidia.com/cuda-downloads\n\nLicense Agreements\nThe packages are governed by the CUDA Toolkit End User License Agreement (EULA). By downloading and using the packages, you accept the terms and conditions of the CUDA EULA - https://docs.nvidia.com/cuda/eula/index.html\n",
   "dev_url": "https://developer.nvidia.com/cuda-downloads",
   "doc_url": "https://docs.nvidia.com/cuda/",
   "home": "https://developer.nvidia.com/cuda-toolkit",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "NVIDIA_EULA",
   "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
   "summary": "CUDA Toolkit - Including CUDA runtime"
  },
  "build": {
   "missing_dso_whitelist": [
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6",
    "$RPATH/libdl.so.2",
    "$RPATH/libpthread.so.0",
    "$RPATH/libc.so.6",
    "$RPATH/librt.so.1",
    "$RPATH/ld-linux-x86-64.so.2",
    "$RPATH/libm.so.6"
   ],
   "number": "8",
   "script": "echo 11.0\npython build.py --version=11.0.3 --version-patch=451.82 --runfile=cuda_11.0.3_451.82_win10.exe\nif errorlevel 1 exit 1\n\n:: copy nvvm and libdevice into the DLLs folder so numba can use them\nmkdir \"%PREFIX%\\DLLs\"\nxcopy /s /y \"%PREFIX%\\Library\\bin\\nvvm*\" \"%PREFIX%\\DLLs\\\"\nif errorlevel 1 exit 1\nxcopy /s /y \"%PREFIX%\\Library\\bin\\libdevice*\" \"%PREFIX%\\DLLs\\\"\nif errorlevel 1 exit 1\n",
   "script_env": [
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH",
    "NVTOOLSEXT_INSTALL_PATH",
    "DEBUG_INSTALLER_PATH"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang",
    "scopatz",
    "mike-wendt",
    "jakirkham",
    "raydouglass",
    "kkraus14",
    "leofang"
   ]
  },
  "package": {
   "name": "cudatoolkit",
   "version": "11.0.3"
  },
  "requirements": {
   "build": [
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "7za",
    "python >=3.7",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "run_constrained": [
    "__cuda >=11.1",
    "__cuda >=10.0",
    "__cuda >=11.2",
    "__cuda >=10.2",
    "__cuda >=10.1",
    "__cuda >=9.2",
    "__cuda >=11.2.1",
    "__cuda >=11.2.2",
    "__cuda >=11.0"
   ]
  },
  "source": [
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.1.1_456.81_win10.exe",
    "md5": "a89dfad35fc1adf02a848a9c06cfff15",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_456.81_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.0.130_411.31_win10",
    "md5": "90fafdfe2167ac25432db95391ca954e",
    "url": "https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_411.31_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.0_460.89_win10.exe",
    "md5": "92f38c37ce9c6c11d27c10701b040256",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.2.89_441.22_win10.exe",
    "md5": "d9f5b9f24c3d3fc456a3c789f9b43419",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_441.22_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_10.1.243_426.00_win10.exe",
    "md5": "b54cf32683f93e787321dcc2e692ff69",
    "url": "https://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_426.00_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_9.2.148_win10",
    "md5": "efaf92a93bdef21da29aba8a8768a16d",
    "url": "https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_win10"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.1_461.09_win10.exe",
    "md5": "c34b541d8706b5aa0d8ba7313fff78e7",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_461.09_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.2.2_461.33_win10.exe",
    "md5": "f9da6687d8a4f137ff14f8389b496e0a",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_461.33_win10.exe"
   },
   {
    "path": "./build.py"
   },
   {
    "fn": "cuda_11.0.3_451.82_win10.exe",
    "md5": "80ae0fdbe04759123f3cab81f2aadabd",
    "url": "https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_451.82_win10.exe"
   }
  ],
  "test": {
   "commands": [
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libaccinj64*.dll exit 1",
    "if exist %LIBRARY_BIN%\\\\libcuinj64*.dll exit 1"
   ],
   "requires": [
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools",
    "numba",
    "python >=3.7",
    "setuptools"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "7za",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "numba",
    "python",
    "setuptools"
   ]
  }
 }
}