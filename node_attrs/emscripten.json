{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/531031129.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/531033482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/531114723.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/532713659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542202780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552147201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552254573.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/584408066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "nodejs15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677841808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "emscripten",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/emscripten-core/emscripten",
   "home": "https://emscripten.org/",
   "license": "MIT OR NCAS",
   "license_file": "LICENSE",
   "summary": "Emscripten compiles C and C++ to WebAssembly using LLVM and Binaryen. Emscripten output can run on the Web, in Node.js, and in wasm runtimes."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv"
   ]
  },
  "package": {
   "name": "emscripten",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs"
   ],
   "run": [
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch"
   ],
   "sha256": "609a7ecea954821efbcc55bf5ad88dd03ba4f836c703b8ad2e37c243329174a6",
   "url": "https://github.com/emscripten-core/emscripten/archive/2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "binaryen",
    "nodejs",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binaryen",
    "clang",
    "clangxx",
    "lld",
    "llvm-tools",
    "nodejs",
    "python",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/emscripten-core/emscripten",
   "home": "https://emscripten.org/",
   "license": "MIT OR NCAS",
   "license_file": "LICENSE",
   "summary": "Emscripten compiles C and C++ to WebAssembly using LLVM and Binaryen. Emscripten output can run on the Web, in Node.js, and in wasm runtimes."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv"
   ]
  },
  "package": {
   "name": "emscripten",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs"
   ],
   "run": [
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch"
   ],
   "sha256": "609a7ecea954821efbcc55bf5ad88dd03ba4f836c703b8ad2e37c243329174a6",
   "url": "https://github.com/emscripten-core/emscripten/archive/2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js"
   ]
  }
 },
 "name": "emscripten",
 "new_version": "2.0.23",
 "new_version_attempts": {
  "2.0.10": 1,
  "2.0.11": 1,
  "2.0.12": 1,
  "2.0.9": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/emscripten-core/emscripten",
   "home": "https://emscripten.org/",
   "license": "MIT OR NCAS",
   "license_file": "LICENSE",
   "summary": "Emscripten compiles C and C++ to WebAssembly using LLVM and Binaryen. Emscripten output can run on the Web, in Node.js, and in wasm runtimes."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv"
   ]
  },
  "package": {
   "name": "emscripten",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs"
   ],
   "run": [
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch"
   ],
   "sha256": "609a7ecea954821efbcc55bf5ad88dd03ba4f836c703b8ad2e37c243329174a6",
   "url": "https://github.com/emscripten-core/emscripten/archive/2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "binaryen",
    "nodejs",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binaryen",
    "clang",
    "clangxx",
    "lld",
    "llvm-tools",
    "nodejs",
    "python",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "emscripten"
  ]
 },
 "pinning_version": "2021.06.24.19.19.34",
 "raw_meta_yaml": "{% set version = \"2.0.8\" %}\n\npackage:\n  name: emscripten\n  version: '{{ version }}'\n\nsource:\n  url: https://github.com/emscripten-core/emscripten/archive/{{ version }}.tar.gz\n  sha256: 609a7ecea954821efbcc55bf5ad88dd03ba4f836c703b8ad2e37c243329174a6\n  patches:\n    - remove_revision_file_setting.patch\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}  # node modules need to compile native extensions\n  host:\n    - python\n    - binaryen\n    - nodejs\n  run:\n    - python\n    - binaryen\n    - nodejs\n    - lld\n    - clang\n    - clangxx\n    - llvm-tools\n    # for google closure compiler\n    - zlib\n\ntest:\n  commands:\n    - emcc --help\n    - emcc $RECIPE_DIR/testfile.c\n    - node a.out.js\n\nabout:\n  home: https://emscripten.org/\n  license: MIT OR NCAS\n  license_file: LICENSE\n  summary: Emscripten compiles C and C++ to WebAssembly using LLVM and Binaryen. Emscripten output can run on the Web, in Node.js, and in wasm runtimes.\n  dev_url: https://github.com/emscripten-core/emscripten\n\nextra:\n  recipe-maintainers:\n    - wolfv\n",
 "req": {
  "__set__": true,
  "elements": [
   "binaryen",
   "clang",
   "clangxx",
   "cxx_compiler_stub",
   "lld",
   "llvm-tools",
   "nodejs",
   "python",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "binaryen",
    "cxx_compiler_stub",
    "nodejs",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binaryen",
    "clang",
    "clangxx",
    "cxx_compiler_stub",
    "lld",
    "llvm-tools",
    "nodejs",
    "python",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "binaryen",
    "nodejs",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binaryen",
    "clang",
    "clangxx",
    "lld",
    "llvm-tools",
    "nodejs",
    "python",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/emscripten-core/emscripten/archive/2.0.8.tar.gz",
 "version": "2.0.8",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/emscripten-core/emscripten",
   "home": "https://emscripten.org/",
   "license": "MIT OR NCAS",
   "license_file": "LICENSE",
   "summary": "Emscripten compiles C and C++ to WebAssembly using LLVM and Binaryen. Emscripten output can run on the Web, in Node.js, and in wasm runtimes."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv"
   ]
  },
  "package": {
   "name": "emscripten",
   "version": "2.0.8"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs",
    "python",
    "binaryen",
    "nodejs"
   ],
   "run": [
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib",
    "python",
    "binaryen",
    "nodejs",
    "lld",
    "clang",
    "clangxx",
    "llvm-tools",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch",
    "remove_revision_file_setting.patch"
   ],
   "sha256": "609a7ecea954821efbcc55bf5ad88dd03ba4f836c703b8ad2e37c243329174a6",
   "url": "https://github.com/emscripten-core/emscripten/archive/2.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js",
    "emcc --help",
    "emcc $RECIPE_DIR/testfile.c",
    "node a.out.js"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "binaryen",
    "nodejs",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binaryen",
    "clang",
    "clangxx",
    "lld",
    "llvm-tools",
    "nodejs",
    "python",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}