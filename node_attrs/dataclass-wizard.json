{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/934204894.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.22.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "dataclass-wizard",
 "hash_type": "sha256",
 "name": "dataclass-wizard",
 "new_version": "0.22.1",
 "new_version_attempts": {
  "0.22.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dataclass-wizard"
  ]
 },
 "pinning_version": "2022.05.09.07.08.30",
 "raw_meta_yaml": "{% set name = \"dataclass-wizard\" %}\n{% set version = \"0.22.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 1a870882a8ff19e7ab9ede7b672b2f7c1ce8d69bbd2fc6d9629da749227268fd\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - wiz={{ name|replace('-', '_') }}.wizard_cli.cli:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - typing-extensions >=3.7.4.2\n\ntest:\n  imports:\n    - {{ name|replace('-', '_') }}\n  requires:\n    - pip\n  commands:\n    - pip check\n    - wiz --help\n\nabout:\n  home: https://github.com/rnag/dataclass-wizard\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Marshal dataclasses to/from JSON. Use field properties with initial values. Construct a dataclass schema with JSON input.\n  description: |\n    The dataclass-wizard library provides a set of simple, yet\n    elegant *wizarding* tools for interacting with the Python\n    `dataclasses` module in Python 3.6+.\n\n    The primary use is as a fast serialization framework that enables\n    dataclass instances to be converted to/from JSON; this works well\n    in particular with a *nested dataclass* model.\n\n    The dataclass-wizard is pure Python code that relies entirely on\n    stdlib, with the only added dependency being\n    `typing-extensions` <https://pypi.org/project/typing-extensions/>\n    for Python 3.9 and below.\n  doc_url: https://dataclass-wizard.readthedocs.io/\n  dev_url: https://github.com/rnag/dataclass-wizard\n\nextra:\n  recipe-maintainers:\n    - rnag\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/d/dataclass-wizard/dataclass-wizard-0.22.0.tar.gz",
 "version": "0.22.0"
}