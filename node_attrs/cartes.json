{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/608624603.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/671965298.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747729322.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/755693508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/802275046.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/829150823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/829542606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/983271702.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cartes",
 "hash_type": "sha256",
 "name": "cartes",
 "new_version": "0.7.2",
 "new_version_attempts": {
  "0.2": 1,
  "0.3": 1,
  "0.4": 1,
  "0.5": 1,
  "0.6": 1,
  "0.7": 1,
  "0.7.1": 1,
  "0.7.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cartes"
  ]
 },
 "pinning_version": "2022.06.29.18.34.42",
 "raw_meta_yaml": "{% set version = \"0.7.2\" %}\n\npackage:\n  name: cartes\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/c/cartes/cartes-{{ version }}.tar.gz\n  sha256: 1429b858a5c5d99a1699454bb2395096749e5be69bf96440863847d34c88b472\n\nbuild:\n  noarch: python\n  entry_points:\n    - cartes = cartes.__main__:main\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.8\n    - pip\n    - poetry >=1.0.10\n    - poetry-core\n  run:\n    - python >=3.8,<3.11\n    - numpy >=1.21,<2.0\n    - matplotlib-base >=3.5,<4.0\n    - scipy >=1.7,<2.0\n    - pandas >=1.3,<2.0\n    - geopandas >=0.10\n    - altair >=4.2,<5.0\n    - requests >=2.27,<3.0\n    - Shapely >=1.8,<2.0\n    - aiohttp >=3.8.1,<4.0\n    - appdirs >=1.4.4,<1.5\n    - importlib_metadata >=4.2,<5.0\n    - lxml >=4.7,<5.0\n    - tqdm >=4.62,<5.0\n    - Cartopy >=0.19\n    - pyproj >=3.1\n    - jsonschema >=3.0,<4.0\n    - beautifulsoup4 >=4.10,<5\n\ntest:\n  requires:\n    - pytest\n    - pip\n  commands:\n    - pip check\n  imports:\n    - cartes\n\nabout:\n  home: https://github.com/xoolive/cartes\n  license: MIT\n  license_file: license.txt\n  summary: Facilities to produce meaningful maps\n  doc_url: https://cartes-viz.github.io/\n\nextra:\n  recipe-maintainers:\n    - xoolive\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/c/cartes/cartes-0.7.2.tar.gz",
 "version": "0.7.2"
}