{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/255230411.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/291766667.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/316832875.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339415540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339577386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/367485161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375206774.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400763474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/431112032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437006144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437205522.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/450643154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/487620204.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509622064.json"
   },
   "data": {
    "bot_rerun": 1603664406.2692077,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513598002.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533819125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551693834.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552343850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/562037645.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/579157106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597955415.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601803392.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616431570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/649857338.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/720081810.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/727126790.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/749378638.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/791094373.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794177195.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797899592.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/806895585.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/813945433.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.17.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "pywr",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Pywr is a tool for solving network resource allocation problems at\ndiscrete timesteps using a linear programming approach. It's principal\napplication is in resource allocation in water supply networks, although\nother uses are conceivable. It uses Cython extensions for computational\nefficiency.\n",
   "dev_url": "http://github.com/pywr/pywr",
   "doc_url": "https://pywr.github.io/pywr-docs/index.html",
   "home": "http://github.com/pywr/pywr",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Pywr is a generalised network resource allocation model written in Python"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk"
   ]
  },
  "package": {
   "name": "pywr",
   "version": "1.17.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "3ec756d69f39479ec6b30875adb5d892a12e0875da512bd46ea96f144bdd770c",
   "url": "https://pypi.io/packages/source/p/pywr/pywr-1.17.1.tar.gz"
  },
  "test": {
   "imports": [
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "future",
    "glpk",
    "lp_solve",
    "numpy",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glpk",
    "jupyter",
    "lp_solve",
    "matplotlib-base",
    "networkx",
    "numpy",
    "openpyxl",
    "packaging",
    "pandas",
    "pytables",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Pywr is a tool for solving network resource allocation problems at\ndiscrete timesteps using a linear programming approach. It's principal\napplication is in resource allocation in water supply networks, although\nother uses are conceivable. It uses Cython extensions for computational\nefficiency.\n",
   "dev_url": "http://github.com/pywr/pywr",
   "doc_url": "https://pywr.github.io/pywr-docs/index.html",
   "home": "http://github.com/pywr/pywr",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Pywr is a generalised network resource allocation model written in Python"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk"
   ]
  },
  "package": {
   "name": "pywr",
   "version": "1.17.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "3ec756d69f39479ec6b30875adb5d892a12e0875da512bd46ea96f144bdd770c",
   "url": "https://pypi.io/packages/source/p/pywr/pywr-1.17.1.tar.gz"
  },
  "test": {
   "imports": [
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core"
   ]
  }
 },
 "name": "pywr",
 "new_version": "1.17.1",
 "new_version_attempts": {
  "1.10.0": 1,
  "1.11.0": 1,
  "1.12.0": 1,
  "1.13.0": 1,
  "1.13.1": 1,
  "1.14.0": 1,
  "1.15.0": 1,
  "1.15.1": 1,
  "1.15.2": 1,
  "1.15.3": 1,
  "1.16.0": 1,
  "1.16.1": 1,
  "1.17.0": 1,
  "1.17.1": 1,
  "1.6.0": 1,
  "1.7.0": 2,
  "1.7.1": 1,
  "1.7.2": 1,
  "1.8.0": 1,
  "1.9.0": 1
 },
 "new_version_errors": {
  "1.7.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.7.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "Pywr is a tool for solving network resource allocation problems at\ndiscrete timesteps using a linear programming approach. It's principal\napplication is in resource allocation in water supply networks, although\nother uses are conceivable. It uses Cython extensions for computational\nefficiency.\n",
   "dev_url": "http://github.com/pywr/pywr",
   "doc_url": "https://pywr.github.io/pywr-docs/index.html",
   "home": "http://github.com/pywr/pywr",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Pywr is a generalised network resource allocation model written in Python"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk"
   ]
  },
  "package": {
   "name": "pywr",
   "version": "1.17.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "3ec756d69f39479ec6b30875adb5d892a12e0875da512bd46ea96f144bdd770c",
   "url": "https://pypi.io/packages/source/p/pywr/pywr-1.17.1.tar.gz"
  },
  "test": {
   "imports": [
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "future",
    "glpk",
    "lp_solve",
    "numpy",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glpk",
    "jupyter",
    "lp_solve",
    "matplotlib-base",
    "networkx",
    "numpy",
    "openpyxl",
    "packaging",
    "pandas",
    "pytables",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pywr"
  ]
 },
 "pinning_version": "2022.01.04.09.05.28",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"pywr\" %}\n{% set version = \"1.17.1\" %}\n{% set sha256 = \"3ec756d69f39479ec6b30875adb5d892a12e0875da512bd46ea96f144bdd770c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [py<36]\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n    - {{ compiler('c') }}\n    - numpy\n    - cython\n    - packaging\n    - glpk\n    - lp_solve\n    - future\n    - packaging\n    - setuptools\n    - setuptools_scm\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - pandas\n    - networkx\n    - glpk\n    - lp_solve\n    - pytables\n    # Fix pytables on windows. See https://github.com/conda-forge/pytables-feedstock/issues/31#issuecomment-410695814\n    - snappy  # [win]\n    - openpyxl\n    - scipy\n    - packaging\n    - jupyter\n    - matplotlib-base\n\ntest:\n  imports:\n    - pywr\n    - pywr.core\n\nabout:\n  home: http://github.com/pywr/pywr\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: Pywr is a generalised network resource allocation model written in Python\n  description: |\n    Pywr is a tool for solving network resource allocation problems at\n    discrete timesteps using a linear programming approach. It's principal\n    application is in resource allocation in water supply networks, although\n    other uses are conceivable. It uses Cython extensions for computational\n    efficiency.\n  doc_url: https://pywr.github.io/pywr-docs/index.html\n  dev_url: http://github.com/pywr/pywr\n\nextra:\n  recipe-maintainers:\n    - jetuk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "future",
   "glpk",
   "jupyter",
   "lp_solve",
   "matplotlib-base",
   "networkx",
   "numpy",
   "openpyxl",
   "packaging",
   "pandas",
   "pip",
   "pytables",
   "python",
   "scipy",
   "setuptools",
   "setuptools_scm",
   "snappy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "future",
    "glpk",
    "lp_solve",
    "numpy",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "glpk",
    "jupyter",
    "lp_solve",
    "matplotlib-base",
    "networkx",
    "numpy",
    "openpyxl",
    "packaging",
    "pandas",
    "pytables",
    "python",
    "scipy",
    "snappy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "future",
    "glpk",
    "lp_solve",
    "numpy",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glpk",
    "jupyter",
    "lp_solve",
    "matplotlib-base",
    "networkx",
    "numpy",
    "openpyxl",
    "packaging",
    "pandas",
    "pytables",
    "python",
    "scipy",
    "snappy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pywr/pywr-1.17.1.tar.gz",
 "version": "1.17.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "Pywr is a tool for solving network resource allocation problems at\ndiscrete timesteps using a linear programming approach. It's principal\napplication is in resource allocation in water supply networks, although\nother uses are conceivable. It uses Cython extensions for computational\nefficiency.\n",
   "dev_url": "http://github.com/pywr/pywr",
   "doc_url": "https://pywr.github.io/pywr-docs/index.html",
   "home": "http://github.com/pywr/pywr",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Pywr is a generalised network resource allocation model written in Python"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jetuk",
    "jetuk",
    "jetuk",
    "jetuk"
   ]
  },
  "package": {
   "name": "pywr",
   "version": "1.17.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm",
    "python",
    "pip",
    "c_compiler_stub",
    "numpy",
    "cython",
    "packaging",
    "glpk",
    "lp_solve",
    "future",
    "packaging",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base",
    "python",
    "numpy",
    "pandas",
    "networkx",
    "glpk",
    "lp_solve",
    "pytables",
    "snappy",
    "openpyxl",
    "scipy",
    "packaging",
    "jupyter",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "3ec756d69f39479ec6b30875adb5d892a12e0875da512bd46ea96f144bdd770c",
   "url": "https://pypi.io/packages/source/p/pywr/pywr-1.17.1.tar.gz"
  },
  "test": {
   "imports": [
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core",
    "pywr",
    "pywr.core"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "future",
    "glpk",
    "lp_solve",
    "numpy",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "glpk",
    "jupyter",
    "lp_solve",
    "matplotlib-base",
    "networkx",
    "numpy",
    "openpyxl",
    "packaging",
    "pandas",
    "pytables",
    "python",
    "scipy",
    "snappy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}