{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/481540405.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910842606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/989072520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libnl",
 "hash_type": "sha256",
 "name": "libnl",
 "new_version": "3.7.0",
 "new_version_attempts": {
  "3.6.0": 1,
  "3.7.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libnl"
  ]
 },
 "pinning_version": "2022.07.06.01.52.02",
 "raw_meta_yaml": "{% set name = \"libnl\" %}\n{% set version = \"3.7.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/thom311/libnl/releases/download/libnl{{ version | replace('.', '_') }}/libnl-{{ version }}.tar.gz\n  sha256: 9fe43ccbeeea72c653bdcf8c93332583135cda46a79507bfd0a483bb57f65939\n\nbuild:\n  skip: true  # [not linux]\n  number: 0\n  run_exports:\n    # https://abi-laboratory.pro/?view=timeline&l=libnl\n    - {{ pin_subpackage('libnl', 'x.x.x') }}\n  script:\n    - ./configure --prefix=$PREFIX\n    - make -j$CPU_COUNT\n    - make install\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make\n    - bison\n    - flex\n  host:\n\ntest:\n  commands:\n    - test -f \"$PREFIX/lib/libnl-3.so\"\n    - test -f \"$PREFIX/lib/libnl-cli-3.so\"\n    - test -f \"$PREFIX/lib/libnl-genl-3.so\"\n    - test -f \"$PREFIX/lib/libnl-idiag-3.so\"\n    - test -f \"$PREFIX/lib/libnl-nf-3.so\"\n    - test -f \"$PREFIX/lib/libnl-route-3.so\"\n    - test -f \"$PREFIX/include/libnl3/netlink/types.h\"\n\nabout:\n  home: https://www.infradead.org/~tgr/libnl/\n  license: LGPL-2.1-or-later\n  license_file: COPYING\n  license_family: LGPL\n  summary: Netlink Library Suite\n  description: |\n    The libnl suite is a collection of libraries providing APIs to netlink\n    protocol based Linux kernel interfaces. Netlink is a IPC mechanism primarly\n    between the kernel and user space processes. It was designed to be a more\n    flexible successor to ioctl to provide mainly networking related kernel\n    configuration and monitoring interfaces.\n  dev_url: https://github.com/tgraf/libnl-1.1-stable\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/thom311/libnl/releases/download/libnl3_7_0/libnl-3.7.0.tar.gz",
 "version": "3.7.0"
}