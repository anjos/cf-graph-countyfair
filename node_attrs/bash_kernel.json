{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/336970437.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401075486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503524229.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559711258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/781276131.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bash_kernel",
 "hash_type": "sha256",
 "name": "bash_kernel",
 "new_version": "0.7.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bash_kernel"
  ]
 },
 "pinning_version": "2021.11.15.20.12.07",
 "raw_meta_yaml": "{% set name = \"bash_kernel\" %}\n{% set version = \"0.7.2\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: a08c84eddd8179de5234105821fd5cc210015671a0bd3cd0bc4f631c475e1670\n\nbuild:\n  skip: True  # [py==27]\n  number: 4\n  # noarch: python doesn't give the correct path for Windows in the json file\n  # https://github.com/conda-forge/staged-recipes/issues/9465\n  # Windows needs small modifications to avoid the use of pexect.spawn\n  # https://github.com/takluyver/bash_kernel/issues/96\n  skip: True  # [win]\n  script:\n    - {{ PYTHON }} -m flit install --deps none\n    - {{ PYTHON }} -m bash_kernel.install --prefix {{ PREFIX }}\n\nrequirements:\n  host:\n    - pip\n    - python\n    - flit\n    # flit tries to validate the install on windows.\n    - pexpect\n    - ipykernel\n  run:\n    - python\n    - ipykernel\n    - pexpect\n    - bash      # [unix]\n    - m2-bash   # [win]\n\ntest:\n  imports:\n    - bash_kernel\n  commands:\n    - jupyter kernelspec list | grep bash\n    - jupyter run --kernel=bash command.sh\n  files:\n    - command.sh\n\nabout:\n  home: https://github.com/takluyver/bash_kernel\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: \"A Jupyter kernel for bash\"\n  doc_url: https://github.com/takluyver/bash_kernel\n  dev_url: https://github.com/takluyver/bash_kernel\n\nextra:\n  recipe-maintainers:\n    - BoPeng\n    - takluyver\n    - blink1073\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/b/bash_kernel/bash_kernel-0.7.2.tar.gz",
 "version": "0.7.2"
}