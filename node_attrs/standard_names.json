{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "standard_names",
 "hash_type": "sha256",
 "name": "standard_names",
 "new_version": "0.2.5",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "standard_names"
  ]
 },
 "pinning_version": "2019.03.17",
 "raw_meta_yaml": "{% set version = \"0.2.5\" %}\n\npackage:\n  name: standard_names\n  version: {{ version }}\n\nsource:\n  url: https://github.com/csdms/standard_names/archive/v{{ version }}.tar.gz\n  sha256: bb2978fb15df97f4f51cb9fae7b9a9c4c7ed2692264df6b5c23bf9023b221f8c\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n  entry_points:\n    - snbuild = standard_names.cmd.snbuild:run\n    - sndump = standard_names.cmd.sndump:run\n    - snscrape = standard_names.cmd.snscrape:run\n    - snsql = standard_names.cmd.snsql:run\n    - snvalidate = standard_names.cmd.snvalidate:run\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n    - pyyaml\n    - six\n\ntest:\n  requires:\n    - pytest\n  imports:\n    - standard_names\n  commands:\n    - snbuild --help\n    - sndump --help\n    - snscrape --help\n    - snsql --help\n    - snvalidate --help\n    - pytest --pyargs standard_names --doctest-modules -o doctest_optionflags=\"NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ALLOW_UNICODE\"\n\nabout:\n  home: https://github.com/csdms/standard_names\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Python utilities for working with CSDMS standard names.\n  description: |\n    The CSDMS Standard Names provide a comprehensive set of naming\n    rules and patterns that are not specific to any particular modeling\n    domain. They were also designed to have many other nice features\n    such as parsability and natural alphabetical grouping.\n  doc_url: https://standard-names.readthedocs.io\n  dev_url: https://github.com/csdms/standard_names\n\nextra:\n  recipe-maintainers:\n    - mcflugen\n",
 "smithy_version": "3.3.2",
 "strong_exports": false,
 "url": "https://github.com/csdms/standard_names/archive/v0.2.5.tar.gz",
 "version": "0.2.5"
}