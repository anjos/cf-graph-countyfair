{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1108675206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1108699503.json"
   },
   "data": {
    "bot_rerun": 1667427438.7591107,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1108933636.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "distopia",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Distopia is a package to rapidly calculate distances under periodic boundary conditions.\nExplicit SIMD vectorisation allows awesome speedups over autovectorised code.\nThe distopia package consists of consists of the python layer (distopia)\nand a C++ library (libdistopia) that does the heavy lifting.\n",
   "dev_url": "https://github.com/MDAnalysis/distopia",
   "doc_url": "https://www.mdanalysis.org/distopia/",
   "home": "https://github.com/MDAnalysis/distopia",
   "license": "MIT",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "Fast distance calculations using explicitly vectorised SIMD"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst"
   ]
  },
  "package": {
   "name": "distopia",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a304d0000a397a2cb97f8c82d02655478eec8df20a858e82c2021bfaaf441d7f",
   "url": "https://pypi.io/packages/source/d/distopia/distopia-0.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "scikit-build",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Distopia is a package to rapidly calculate distances under periodic boundary conditions.\nExplicit SIMD vectorisation allows awesome speedups over autovectorised code.\nThe distopia package consists of consists of the python layer (distopia)\nand a C++ library (libdistopia) that does the heavy lifting.\n",
   "dev_url": "https://github.com/MDAnalysis/distopia",
   "doc_url": "https://www.mdanalysis.org/distopia/",
   "home": "https://github.com/MDAnalysis/distopia",
   "license": "MIT",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "Fast distance calculations using explicitly vectorised SIMD"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst"
   ]
  },
  "package": {
   "name": "distopia",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a304d0000a397a2cb97f8c82d02655478eec8df20a858e82c2021bfaaf441d7f",
   "url": "https://pypi.io/packages/source/d/distopia/distopia-0.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "distopia",
 "new_version": "0.2.0",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Distopia is a package to rapidly calculate distances under periodic boundary conditions.\nExplicit SIMD vectorisation allows awesome speedups over autovectorised code.\nThe distopia package consists of consists of the python layer (distopia)\nand a C++ library (libdistopia) that does the heavy lifting.\n",
   "dev_url": "https://github.com/MDAnalysis/distopia",
   "doc_url": "https://www.mdanalysis.org/distopia/",
   "home": "https://github.com/MDAnalysis/distopia",
   "license": "MIT",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "Fast distance calculations using explicitly vectorised SIMD"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst"
   ]
  },
  "package": {
   "name": "distopia",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a304d0000a397a2cb97f8c82d02655478eec8df20a858e82c2021bfaaf441d7f",
   "url": "https://pypi.io/packages/source/d/distopia/distopia-0.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "scikit-build",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "distopia"
  ]
 },
 "pinning_version": "2022.11.02.18.55.19",
 "raw_meta_yaml": "{% set name = \"distopia\" %}\n{% set version = \"0.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/distopia-{{ version }}.tar.gz\n  sha256: a304d0000a397a2cb97f8c82d02655478eec8df20a858e82c2021bfaaf441d7f\n\nbuild:\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - cmake\n  host:\n    - python\n    - pip\n    - numpy\n    - scikit-build\n    - cython\n    - versioneer >=0.26\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - distopia\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/MDAnalysis/distopia\n  summary: Fast distance calculations using explicitly vectorised SIMD\n  description: |\n    Distopia is a package to rapidly calculate distances under periodic boundary conditions. \n    Explicit SIMD vectorisation allows awesome speedups over autovectorised code.\n    The distopia package consists of consists of the python layer (distopia)\n    and a C++ library (libdistopia) that does the heavy lifting.\n\n  license: MIT\n  license_file:\n    - LICENSE.txt\n\n\n  doc_url: https://www.mdanalysis.org/distopia/\n  dev_url: https://github.com/MDAnalysis/distopia\n\nextra:\n  recipe-maintainers:\n    - IAlibay\n    - hmacdope\n    - richardjgowers\n    - orbeckst\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python",
   "scikit-build",
   "versioneer"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python",
    "scikit-build",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "scikit-build",
    "versioneer >=0.26"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/d/distopia/distopia-0.2.0.tar.gz",
 "version": "0.2.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "Distopia is a package to rapidly calculate distances under periodic boundary conditions.\nExplicit SIMD vectorisation allows awesome speedups over autovectorised code.\nThe distopia package consists of consists of the python layer (distopia)\nand a C++ library (libdistopia) that does the heavy lifting.\n",
   "dev_url": "https://github.com/MDAnalysis/distopia",
   "doc_url": "https://www.mdanalysis.org/distopia/",
   "home": "https://github.com/MDAnalysis/distopia",
   "license": "MIT",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "Fast distance calculations using explicitly vectorised SIMD"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst",
    "IAlibay",
    "hmacdope",
    "richardjgowers",
    "orbeckst"
   ]
  },
  "package": {
   "name": "distopia",
   "version": "0.2.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26",
    "python",
    "pip",
    "numpy",
    "scikit-build",
    "cython",
    "versioneer >=0.26"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a304d0000a397a2cb97f8c82d02655478eec8df20a858e82c2021bfaaf441d7f",
   "url": "https://pypi.io/packages/source/d/distopia/distopia-0.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia",
    "distopia"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "scikit-build",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}