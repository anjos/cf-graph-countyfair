{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/334676216.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514522496.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "cctools-and-ld64",
 "hash_type": "sha256",
 "name": "cctools-and-ld64",
 "new_version": "877.8-ld64-253.9-1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cctools",
   "cctools_osx-64",
   "cctools_osx-arm64",
   "ld64",
   "ld64_osx-64",
   "ld64_osx-arm64"
  ]
 },
 "pinning_version": "2020.11.03.00.15.30",
 "raw_meta_yaml": "{% set cctools_version = '973.0.1' %}\n{% set ld64_version = '609' %}\n{% if llvm_version is not defined %}\n{% set llvm_version = \"14.0.3\" %}\n{% endif %}\n\n{% if cross_platform is not defined %}\n{% set cross_platform = \"osx-64\" %}\n{% endif %}\n\npackage:\n  name: cctools-and-ld64\n  version: {{ ld64_version }}\n\nsource:\n  # latest commit from branch {{ cctools_version }}-ld64-{{ ld64_version }}\n  - url: https://github.com/tpoechtrager/cctools-port/archive/04663295d0425abfac90a42440a7ec02d7155fea.tar.gz\n    sha256: 70a7189418c2086d20c299c5d59250cf5940782c778892ccc899c66516ed240e\n    patches:\n      - patches/0001-Don-t-link-with-libc-abi.patch\n      - patches/0002-ld64-add-conda-specific-env-vars-to-modify-lib-searc.patch\n      - patches/gh116.patch\n      # Taken from https://github.com/tpoechtrager/cctools-port/pull/118\n      - patches/0003-turn-off-mmap-osx-arm64.patch\n\nbuild:\n  number: 10\n  skip: True  # [win]\n  ignore_run_exports:\n    - zlib\n\nrequirements:\n  build:\n    - clangxx {{ llvm_version }}.*  # [linux]\n    - {{ compiler('cxx') }}\n    - autoconf\n    - automake\n    - libtool\n    - llvmdev {{ llvm_version }}.*  # [build_platform != target_platform]\n    - make\n    - sed\n  host:\n    #- xar\n    # We only use the static library from this and only get away with that as it depends on nothing.\n    - zlib\n    - llvmdev {{ llvm_version }}.*\n    - libuuid   # [linux]\n    - tapi\n\noutputs:\n  - name: cctools_{{ cross_platform }}\n    version: {{ cctools_version }}\n    script: install-cctools.sh\n    build:\n      activate_in_script: True\n      ignore_run_exports:\n        - zlib\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - autoconf\n        - automake\n        - make\n      host:\n        - zlib\n        - llvmdev {{ llvm_version }}.*\n        - llvm {{ llvm_version }}.*\n        - tapi\n        - libcxx  # [osx]\n        - {{ pin_subpackage(\"ld64_\" + cross_platform, max_pin=\"x.x\") }}\n      run:\n        - libcxx  # [osx]\n        - {{ pin_subpackage(\"ld64_\" + cross_platform, max_pin=\"x.x\") }}\n        - sigtool\n      run_constrained:\n        - ld64 {{ ld64_version }}.*\n        - cctools {{ cctools_version }}.*\n    test:\n      commands:\n        # For arm64, cctools as calls the clang integrated assembler. Don't check for it\n        - test -f $PREFIX/libexec/as/x86_64/as\n        - test -f $PREFIX/bin/{{ macos_machine }}-as\n        - test -f $PREFIX/bin/{{ macos_machine }}-ranlib\n        - test -f $PREFIX/bin/{{ macos_machine }}-ld\n        - test -f $PREFIX/bin/{{ macos_machine }}-ar\n        - test -f $PREFIX/bin/{{ macos_machine }}-otool\n        # Check that otool is functioning\n        - $PREFIX/bin/{{ macos_machine }}-otool -l $PREFIX/bin/{{ macos_machine }}-otool  # [target_platform == build_platform and target_platform == cross_platform]\n        - test -f $PREFIX/bin/{{ macos_machine }}-install_name_tool\n        - test -f $PREFIX/bin/{{ macos_machine }}-strip\n    about:\n      home: https://github.com/tpoechtrager/cctools-port\n      license: APSL-2.0\n      license_family: Other\n      license_file: cctools/APPLE_LICENSE\n      summary: Assembler, archiver, ranlib, libtool, otool et al for Darwin Mach-O files\n\n  - name: ld64_{{ cross_platform }}\n    version: {{ ld64_version }}\n    script: install-ld64.sh\n    build:\n      activate_in_script: True\n      missing_dso_whitelist:\n        - /usr/lib/libxar.1.dylib  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - autoconf\n        - automake\n        - make\n      host:\n        - llvm  {{ llvm_version }}.*\n        - clang {{ llvm_version }}.*\n        - tapi\n        - libcxx  # [osx]\n        - libuuid  # [linux]\n      run:\n        - {{ pin_compatible(\"tapi\") }}\n        - libcxx  # [osx]\n        - sigtool\n      run_constrained:\n        - {{ pin_compatible(\"clang\") }}\n        - ld {{ ld64_version }}.*\n        - cctools {{ cctools_version }}.*\n        - cctools_{{ cross_platform }} {{ cctools_version }}.*\n    test:\n      requires:\n        - clang {{ llvm_version }}.*\n      commands:\n        - test -f $PREFIX/bin/{{ macos_machine }}-ld\n        - echo \"int main() {}\" > lto.c                                              # [osx]\n        - clang -c lto.c -o lto.o -flto                                             # [osx]\n        - $PREFIX/bin/{{ macos_machine }}-ld lto.o -o lto -lSystem -arch x86_64     # [osx]\n      downstreams:\n        - gfortran_osx-64  # [osx and cross_platform==\"osx-64\"]\n    about:\n      home: https://github.com/tpoechtrager/cctools-port\n      license: APSL-2.0\n      license_family: Other\n      license_file: cctools/ld64/APPLE_LICENSE\n      summary: Darwin Mach-O cross linker\n\n  - name: ld64\n    version: {{ ld64_version }}\n    build:\n      skip: True   # [cross_platform != target_platform]\n    script: install-ld64-symlinks.sh\n    requirements:\n      host:\n        - llvm  {{ llvm_version }}.*\n        - clang {{ llvm_version }}.*\n        - {{ pin_subpackage(\"ld64_\" + cross_platform, exact=True) }}\n      run:\n        - {{ pin_subpackage(\"ld64_\" + cross_platform, exact=True) }}\n      run_constrained:\n        - cctools {{ cctools_version }}.*\n        - cctools_{{ cross_platform }} {{ cctools_version }}.*\n    test:\n      commands:\n        - test -f $PREFIX/bin/ld\n    about:\n      home: https://github.com/tpoechtrager/cctools-port\n      license: APSL-2.0\n      license_family: Other\n      license_file: cctools/ld64/APPLE_LICENSE\n      summary: Darwin Mach-O native linker\n\n  - name: cctools\n    version: {{ cctools_version }}\n    script: install-cctools-symlinks.sh\n    build:\n      skip: True   # [cross_platform != target_platform]\n    requirements:\n      host:\n        - llvm  {{ llvm_version }}.*\n        - clang {{ llvm_version }}.*\n        - {{ pin_subpackage(\"ld64\", exact=True) }}\n        - {{ pin_subpackage(\"cctools_\" + cross_platform, exact=True) }}\n      run:\n        - {{ pin_subpackage(\"ld64\", exact=True) }}\n        - {{ pin_subpackage(\"cctools_\" + cross_platform, exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/bin/as\n        - test -f $PREFIX/bin/ranlib\n        - test -f $PREFIX/bin/ar\n        - test -f $PREFIX/bin/otool\n        - test -f $PREFIX/bin/install_name_tool\n        - test -f $PREFIX/bin/strip\n    about:\n      home: https://github.com/tpoechtrager/cctools-port\n      license: APSL-2.0\n      license_family: Other\n      license_file: cctools/APPLE_LICENSE\n      summary: Native assembler, archiver, ranlib, libtool, otool et al for Darwin Mach-O files\n\nabout:\n  home: https://github.com/tpoechtrager/cctools-port\n  license: APSL-2.0\n  license_family: Other\n  license_file: cctools/APPLE_LICENSE\n  summary: Assembler, archiver, ranlib, libtool, otool et al for Darwin Mach-O files. Darwin Mach-O linker.\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - mingwandroid\n    - davidbrochart\n    - katietz\n    - h-vetinari\n",
 "smithy_version": "3.8.4",
 "strong_exports": false,
 "url": "https://github.com/tpoechtrager/cctools-port/archive/04663295d0425abfac90a42440a7ec02d7155fea.tar.gz",
 "version": "609"
}