{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/506336257.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507976487.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/563681891.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/564237386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/568001632.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "genesis2",
 "hash_type": "sha256",
 "name": "genesis2",
 "new_version": "2.6",
 "new_version_attempts": {
  "2.2": 1,
  "2.4": 1,
  "2.5": 1,
  "2.6": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "genesis2"
  ]
 },
 "pinning_version": "2021.02.04.16.58.43",
 "raw_meta_yaml": "{% set name = \"genesis2\" %}\n{% set version = \"2.6\" %}\n\n{% set build = 1 %}\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\n{% if mpi == 'nompi' %}\n# prioritize nompi variant via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/slaclab/Genesis-1.3-Version2/archive/v{{ version }}.tar.gz\n  sha256: 68703ca29f1fe220b96ddf61a9fe664fef1c200745813ff891ed1557e62761a1\n\nbuild:\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  {% if mpi != 'nompi' %}\n\n  run_exports:\n    - {{ name }} * {{ mpi_prefix }}_*\n  {% endif %}\n\n\nrequirements:\n  build:\n    - make\n    - {{ compiler('c') }}                    # [not win]\n    - {{ compiler('m2w64_c') }}              # [win]\n    - {{ compiler('fortran') }}              # [not win]\n    - {{ compiler('m2w64_fortran') }}        # [win]\n    - cmake\n    - openmpi                                # [mpi == \"openmpi\" and (build_platform != target_platform)]\n  host:\n    - {{ mpi }}   # [mpi != 'nompi']\n  run:\n    - {{ mpi }}   # [mpi != 'nompi']\n\n\ntest:\n  commands:\n    - which genesis2  # [unix]\n    - which genesis2-mpi  # [unix and mpi != 'nompi']\n    - genesis2   # [win]\n\nabout:\n  home: hhttps://github.com/slaclab/Genesis-1.3-Version\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: GENESIS 1.3 is a time-dependent three-dimensional FEL code.\n\n  description: |\n    GENESIS 1.3 is a time-dependent three-dimensional FEL code.\n    It is focused to simulate single-pass free-electron lasers, \n    both FEL amplifier and SASE FEL, although the flexible input\n    can be used to easily extend the capacity of GENESIS 1.3 to\n    cover FEL oscillators or multistage set-ups.\n  doc_url: http://genesis.web.psi.ch/\n  dev_url: https://github.com/slaclab/Genesis-1.3-Version2\n\nextra:\n  recipe-maintainers:\n    - hhslepicka\n    - ChristopherMayes\n",
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "url": "https://github.com/slaclab/Genesis-1.3-Version2/archive/v2.6.tar.gz",
 "version": "2.6"
}