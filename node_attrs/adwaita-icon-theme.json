{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/408733526.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.36.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/0b08612b-ad96-4035-855a-bdc355b06012.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410858644.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503095206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553759890.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/629217356.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "40.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677669019.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770392988.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/885112759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "42.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/903710737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default"
  }
 },
 "feedstock_name": "adwaita-icon-theme",
 "hash_type": "sha256",
 "name": "adwaita-icon-theme",
 "new_version": "42.0",
 "new_version_attempts": {
  "3.36.1": 1,
  "40.1": 1,
  "42.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "adwaita-icon-theme"
  ]
 },
 "pinning_version": "2022.04.08.02.48.37",
 "raw_meta_yaml": "{% set name = \"adwaita-icon-theme\" %}\n{% set version = \"41.0\" %}\n{% set major_version = '.'.join(version.split('.', 1)[:1]) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://download.gnome.org/sources/{{ name }}/{{ major_version }}/{{ name }}-{{ version }}.tar.xz\n  sha256: ef5339d8c35fcad5d10481b70480803f0fa20b3d3cbc339238fcaceeaee01eba\n\nbuild:\n  number: 1\n  # This package can be noarch on all platforms except for Windows.\n  # But, we want to keep building for linux-64, osx-64, and linux-aarch64 for\n  # now because of https://github.com/conda/conda/issues/9905 until a new noarch\n  # package would be preferred over an old arch-specific package.\n  # To get a noarch build for using on other platforms (linux-ppc64le, osx-arm64)\n  # we do an extra build on linux that makes a noarch package.\n  noarch: {{ noarch }}\n  merge_build_host: false  # [not win]\n  # windows build assume one prefix (between e.g. python/gtk3), so use merged host/build\n  merge_build_host: true  # [win]\n  ignore_run_exports:\n    - gtk3  # [win]\n    - librsvg  # [win]\n\nrequirements:\n  build:\n    # gtk3 and librsvg here for rendering svg to png, build ok because platform independent\n    - gtk3\n    - librsvg\n    - make  # [unix]\n    - python\n  host:\n    # explicitly empty\n  run:\n    - hicolor-icon-theme\n    # librsvg needed at runtime for libpixbufloader-svg.so so svgs can be rendered\n    - librsvg\n\ntest:\n  commands:\n    # test that a representative set of files get installed\n    - test -f $PREFIX/share/icons/Adwaita/icon-theme.cache  # [unix]\n    - test -f $PREFIX/share/icons/Adwaita/index.theme  # [unix]\n    - test -f $PREFIX/share/icons/Adwaita/16x16/devices/computer.png  # [unix]\n    - test -f $PREFIX/share/icons/Adwaita/16x16/devices/computer-symbolic.symbolic.png  # [unix]\n    - test -f $PREFIX/share/icons/Adwaita/cursors/cross  # [unix]\n    - test -f $PREFIX/share/icons/Adwaita/scalable/devices/computer-symbolic.svg  # [unix]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\icon-theme.cache exit 1  # [win]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\index.theme exit 1  # [win]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\16x16\\devices\\computer.png  exit 1  # [win]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\16x16\\devices\\computer-symbolic.symbolic.png  exit 1  # [win]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\cursors\\cross exit 1  # [win]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\cursors\\cross.cur exit 1  # [win]\n    - if not exist %PREFIX%\\Library\\share\\icons\\Adwaita\\scalable\\devices\\computer-symbolic.svg exit 1  # [win]\n\nabout:\n  home: https://developer.gnome.org\n  license: LGPL-3.0-or-later OR CC-BY-SA-3.0\n  license_family: LGPL\n  license_file: COPYING\n  summary: The default icon theme used by the GNOME desktop\n  description: |\n    This package contains the default icon theme used by the GNOME desktop.\n    The icons are used in many of the official GNOME applications like eog,\n    Evince, system monitor, and many more.\n  dev_url: https://gitlab.gnome.org/GNOME/adwaita-icon-theme\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n    - stuarteberg\n    - tschoonj\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://download.gnome.org/sources/adwaita-icon-theme/41/adwaita-icon-theme-41.0.tar.xz",
 "version": "41.0"
}