{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/878292400.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "uri-template",
 "hash_type": "sha256",
 "name": "uri-template",
 "new_version": "1.2.0",
 "new_version_attempts": {
  "1.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "uri-template"
  ]
 },
 "pinning_version": "2022.03.12.18.19.48",
 "raw_meta_yaml": "{% set version = \"1.2.0\" %}\n\npackage:\n  name: uri-template\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/u/uri_template/uri_template-{{ version }}.tar.gz\n    sha256: 934e4d09d108b70eb8a24410af8615294d09d279ce0e7cbcdaef1bd21f932b06\n  - folder: src\n    url: https://github.com/plinss/uri_template/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 1e37e14601ae685794d0d061da5481236f94a4b9c3db7b459d647de5160a79f3\n\nbuild:\n  noarch: python\n  number: 0\n  script: cd dist && {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n\ntest:\n  source_files:\n    - src/test.py\n    - src/tests\n  imports:\n    - uri_template\n  requires:\n    - pip\n    - m2-grep  # [win]\n    - coverage\n  commands:\n    - pip check\n    - pip list\n    - pip list | grep -E \"uri-template\\s+{{ version.replace(\".\", \"\\\\.\") }}\"\n    # upstream has home-rolled test suite\n    - cd src && coverage run --source=uri_template test.py && coverage report -m --fail-under=91\n\nabout:\n  home: https://github.com/plinss/uri_template\n  license: MIT\n  license_family: MIT\n  license_file: dist/LICENSE\n  summary: An implementation of RFC 6570 URI Templates.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/u/uri_template/uri_template-1.2.0.tar.gz",
 "version": "1.2.0"
}