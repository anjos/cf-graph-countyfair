{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/902236412.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/961008582.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "pre-commit-hooks",
 "hash_type": "sha256",
 "name": "pre-commit-hooks",
 "new_version": "4.3.0",
 "new_version_attempts": {
  "4.2.0": 1,
  "4.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pre-commit-hooks"
  ]
 },
 "pinning_version": "2022.06.07.19.41.06",
 "raw_meta_yaml": "{% set name = \"pre-commit-hooks\" %}\n{% set version = \"4.2.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pre_commit_hooks-{{ version }}.tar.gz\n  sha256: 9726420c7a071e8cb233a066d36bc074b593a40f0b1b491d1b75aafa55390703\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - check-added-large-files = pre_commit_hooks.check_added_large_files:main\n    - check-ast = pre_commit_hooks.check_ast:main\n    - check-builtin-literals = pre_commit_hooks.check_builtin_literals:main\n    - check-byte-order-marker = pre_commit_hooks.check_byte_order_marker:main\n    - check-case-conflict = pre_commit_hooks.check_case_conflict:main\n    - check-docstring-first = pre_commit_hooks.check_docstring_first:main\n    - check-executables-have-shebangs = pre_commit_hooks.check_executables_have_shebangs:main\n    - check-json = pre_commit_hooks.check_json:main\n    - check-merge-conflict = pre_commit_hooks.check_merge_conflict:main\n    - check-shebang-scripts-are-executable = pre_commit_hooks.check_shebang_scripts_are_executable:main\n    - check-symlinks = pre_commit_hooks.check_symlinks:main\n    - check-toml = pre_commit_hooks.check_toml:main\n    - check-vcs-permalinks = pre_commit_hooks.check_vcs_permalinks:main\n    - check-xml = pre_commit_hooks.check_xml:main\n    - check-yaml = pre_commit_hooks.check_yaml:main\n    - debug-statement-hook = pre_commit_hooks.debug_statement_hook:main\n    - destroyed-symlinks = pre_commit_hooks.destroyed_symlinks:main\n    - detect-aws-credentials = pre_commit_hooks.detect_aws_credentials:main\n    - detect-private-key = pre_commit_hooks.detect_private_key:main\n    - double-quote-string-fixer = pre_commit_hooks.string_fixer:main\n    - end-of-file-fixer = pre_commit_hooks.end_of_file_fixer:main\n    - file-contents-sorter = pre_commit_hooks.file_contents_sorter:main\n    - fix-byte-order-marker = pre_commit_hooks.fix_byte_order_marker:main\n    - fix-encoding-pragma = pre_commit_hooks.fix_encoding_pragma:main\n    - forbid-new-submodules = pre_commit_hooks.forbid_new_submodules:main\n    - mixed-line-ending = pre_commit_hooks.mixed_line_ending:main\n    - name-tests-test = pre_commit_hooks.tests_should_end_in_test:main\n    - no-commit-to-branch = pre_commit_hooks.no_commit_to_branch:main\n    - pre-commit-hooks-removed = pre_commit_hooks.removed:main\n    - pretty-format-json = pre_commit_hooks.pretty_format_json:main\n    - requirements-txt-fixer = pre_commit_hooks.requirements_txt_fixer:main\n    - sort-simple-yaml = pre_commit_hooks.sort_simple_yaml:main\n    - trailing-whitespace-fixer = pre_commit_hooks.trailing_whitespace_fixer:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n    - ruamel.yaml >=0.15\n    - toml\n\ntest:\n  imports:\n    - pre_commit_hooks\n  commands:\n    - pip check\n    - check-added-large-files --help\n    - check-ast --help\n    - check-builtin-literals --help\n    - check-byte-order-marker --help\n    - check-case-conflict --help\n    - check-docstring-first --help\n    - check-executables-have-shebangs --help\n    - check-json --help\n    - check-merge-conflict --help\n    - check-shebang-scripts-are-executable --help\n    - check-symlinks --help\n    - check-toml --help\n    - check-vcs-permalinks --help\n    - check-xml --help\n    - check-yaml --help\n    - debug-statement-hook --help\n    - destroyed-symlinks --help\n    - detect-aws-credentials --help\n    - detect-private-key --help\n    - double-quote-string-fixer --help\n    - end-of-file-fixer --help\n    - file-contents-sorter --help\n    - fix-byte-order-marker --help\n    - fix-encoding-pragma --help\n    - forbid-new-submodules --help\n    - mixed-line-ending --help\n    - name-tests-test --help\n    - no-commit-to-branch --help\n    - pretty-format-json --help\n    - requirements-txt-fixer --help\n    - sort-simple-yaml --help\n    - trailing-whitespace-fixer --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/pre-commit/pre-commit-hooks\n  summary: Some out-of-the-box hooks for pre-commit.\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - dangercrow\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pre-commit-hooks/pre_commit_hooks-4.2.0.tar.gz",
 "version": "4.2.0"
}