{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/233369481.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336096009.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392698857.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501792464.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/520250591.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553957031.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682968197.json"
   },
   "data": {
    "bot_rerun": 1636242356.391853,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774755192.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906406007.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "meshpy",
 "hash_type": "sha256",
 "name": "meshpy",
 "new_version": "2020.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "meshpy"
  ]
 },
 "pinning_version": "2022.04.11.13.50.18",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package numpy-1.19.1-py36h5510c5b_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"meshpy\" %}\n{% set uname = \"MeshPy\" %}\n{% set version = \"2020.1\" %}\n{% set sha256 = \"7b14eef33ccfb7974c058cea04672bfcd66e57dfcfa6a65cf01943b08964e879\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ uname }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ uname[0] }}/{{ uname }}/{{ uname }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script:\n    - \"{{ PYTHON }} -m pip install . --no-deps -v\"\n    - echo src/cpp/tetgen-LICENSE >> doc/faq.rst\n  skip: True  # [win and py<35]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - pytools\n    - numpy\n    - pytest\n    - six\n    - pybind11\n  run:\n    - python\n    - pytools\n    - numpy\n    - six\n\ntest:\n  source_files:\n    - test/*\n  requires:\n    - pytest\n  commands:\n    - pytest test\n  imports:\n    - meshpy\n\nabout:\n  home: http://github.com/inducer/meshpy\n  license: MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later\n  license_file: doc/faq.rst\n  summary: 'Triangular and Tetrahedral Mesh Generator'\n\n  description: |\n\n    MeshPy offers quality triangular and tetrahedral mesh generation for\n    Python. Meshes of this type are chiefly used in finite-element\n    simulation codes, but also have many other applications ranging from\n    computer graphics to robotics.\n\n    In order to generate 2D and 3D meshes, MeshPy provides Python interfaces\n    to three well-regarded mesh generators,\n    [Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n    [TetGen](http://tetgen.berlios.de/) by Hang Si, and\n    [gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\n    Jean-Francois Remacle. The former two are included in the package in\n    slightly modified versions. A generic mesh reader for the latter is\n    included, as is an easy way to run gmsh from a Python script.\n\n    As of Version 0.91.2, MeshPy also works with Python 3.\n\n  doc_url: https://documen.tician.de/meshpy\n  dev_url: https://github.com/inducer/meshpy\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - isuruf\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2020.1.tar.gz",
 "version": "2020.1"
}