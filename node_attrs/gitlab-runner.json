{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/401395706.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401691194.json"
   },
   "data": {
    "bot_rerun": 1642680844.964283,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404373809.json"
   },
   "data": {
    "bot_rerun": 1642680844.9645333,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405254966.json"
   },
   "data": {
    "bot_rerun": 1642680844.96471,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827478966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827838943.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/835708220.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/895789727.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "gitlab-runner",
 "hash_type": "sha256",
 "name": "gitlab-runner",
 "new_version": "14.3.2",
 "new_version_attempts": {
  "12.2.0": 1,
  "12.3.0": 1,
  "12.4.1": 1,
  "12.5.0": 1,
  "13.11.0": 1,
  "13.12.0": 1,
  "13.3.1": 1,
  "14.3.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gitlab-runner"
  ]
 },
 "pinning_version": "2022.03.31.07.03.03",
 "raw_meta_yaml": "{% set import_path = \"gitlab.com/gitlab-org/gitlab-runner\" %}\n{% set version = \"13.3.1\" %}\n{% set branch = '-'.join(version.split('.')[:2] +['stable']) %}\n{% set built = datetime.datetime.now().isoformat() %}\n\n{% set name = import_path.split('/')[-1] %}\n{% set pkg_src = ('src/'+import_path).replace(\"/\", os.sep) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - folder: {{ pkg_src }}\n    url: https://{{ import_path }}/-/archive/v{{ version }}/{{ name }}-v{{ version }}.tar.bz2\n    sha256: 8407b6e3fe393291873c908a222a0909784b1004f4814289fe1b1ffa6122e32f\n\nbuild:\n  number: 0\n  script:\n    - pushd {{ pkg_src }}\n    {% set flags = dict(VERSION=version, REVISION=\"%PKG_BUILDNUM%\" if win else \"$PKG_BUILDNUM\", BRANCH=branch, BUILT=built) %}\n    - go install -v -ldflags \"{% for key,value in flags.items() %}-X {{ import_path }}/common.{{ key }}='{{ value }}' {% endfor %}\" .\n\nrequirements:\n  build:\n    - {{ compiler(\"go\") }}\n\ntest:\n  commands:\n    - gitlab-runner --version\n\nabout:\n  summary: The official GitLab CI runner written in Go\n  license: MIT\n  license_family: MIT\n  license_file: {{ pkg_src }}/LICENSE\n  home: https://gitlab.com/gitlab-org/gitlab-runner\n  dev_url: https://gitlab.com/gitlab-org/gitlab-runner\n  doc_url: https://docs.gitlab.com/runner/\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - sodre\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "time": 1568135263.5648887,
 "url": "https://gitlab.com/gitlab-org/gitlab-runner/-/archive/v13.3.1/gitlab-runner-v13.3.1.tar.bz2",
 "version": "13.3.1"
}