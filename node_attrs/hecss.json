{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/782250883.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/782817628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/783107292.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/783328379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785097652.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939502686.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939613827.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "hecss",
 "hash_type": "sha256",
 "name": "hecss",
 "new_version": "0.5.0.2",
 "new_version_attempts": {
  "0.3.16": 1,
  "0.3.18": 1,
  "0.3.19": 1,
  "0.3.20": 1,
  "0.4.0": 1,
  "0.5.0": 1,
  "0.5.0.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hecss"
  ]
 },
 "pinning_version": "2022.05.17.21.59.01",
 "raw_meta_yaml": "{% set name = \"hecss\" %}\n{% set version = \"0.5.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: a42749a5a0c9f3297b4f94abf8c924deec46672c0376e4a04efe4d0e36cec60d\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - hecss_sampler = hecss.cli:hecss_sampler\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - tqdm\n    - click\n    - ase\n    - spglib\n    - numpy\n    - scipy\n    - ipython\n\ntest:\n  imports:\n    - hecss\n    - hecss.core\n  requires:\n    - pip\n  commands:\n    - pip check\n    - hecss_sampler -V\n    - hecss_sampler -h\n    - plot_stats -V\n    - plot_bands -V\n    - calculate_xscale -V\n\n\nabout:\n  home: https://jochym.gitlab.io/hecss\n  license: GPL-3.0-or-later\n  license_family: GPL3\n  license_file: LICENSE\n  summary: High Efficiency Configuration Space Sampler\n  description: |\n    HECSS is a Markow chain Monte-Carlo, configuration space sampler using \n    Metropolis-Hastings algorithm for probablity distribution sampling. \n    It provides an alternative way to create representations of systems \n    at thermal equilibrium without running a very expensive molecular \n    dynamics simulation. The theoretical foundation of the code are presented \n    in the section [Background](https://jochym.gitlab.io/hecss/Background) \n    in the [Documentation](https://jochym.gitlab.io/hecss/). \n    More detailed examples are included in the \n    [LAMMPS](https://jochym.gitlab.io/hecss/LAMMPS_Tutorial) \n    and [VASP](https://jochym.gitlab.io/hecss/VASP_Tutorial) tutorials.\n  doc_url: https://jochym.gitlab.io/hecss\n  dev_url: https://gitlab.com/jochym/hecss\n\nextra:\n  recipe-maintainers:\n    - jochym\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/h/hecss/hecss-0.5.0.2.tar.gz",
 "version": "0.5.0.2"
}