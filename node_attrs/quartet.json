{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "quartet",
 "hash_type": "sha256",
 "name": "quartet",
 "new_version": "1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "quartet"
  ]
 },
 "raw_meta_yaml": "{% set name = \"quartet\" %}\n{% set version = \"1.0\" %}\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\nsource:\n  url: https://github.com/ngodber/quartet/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 75c3b95f632e3410348ea6485b80562c1cd8ecc856a4d37234f9fb33140f4398\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(\"quartet\", max_pin=\"x.x\")}}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n  host:\n  run:\n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/quartet  # [unix]\n    - test -f ${PREFIX}/lib/libquartet${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\bin\\quartet.dll exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\quartet.exe exit 1  # [win]\n\nabout:\n  home: https://github.com/PyMesh/quartet\n  license: ISC\n  summary: 'A tetrahedral mesh generator based on Jonathon Shewchuks isosurface stuffing algorithm in combination with the A15 acute tetrahedral tile.'\n  description: |\n    Quartet converts a watertight triangle mesh into a high-quality uniform \n    tetrahedral mesh that closely approximates the geometry, up to the curvature \n    implied by the specified grid sampling (dx). Optionally, the tetrahedral mesh \n    can be warped to match sharp features on the input, and also improved by a \n    quality optimization pass.\n  dev_url: https://github.com/PyMesh/quartet\nextra:\n  recipe-maintainers:\n    - ngodber\n",
 "strong_exports": false,
 "url": "https://github.com/ngodber/quartet/archive/refs/tags/v1.0.tar.gz",
 "version": "1.0"
}