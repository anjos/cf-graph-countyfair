{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/500896261.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/788253575.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/874911613.json"
   },
   "data": {
    "bot_rerun": 1646966709.5409923,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877030690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/981796995.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "libtvm",
 "hash_type": "sha256",
 "name": "libtvm",
 "new_version": "0.9.0",
 "new_version_attempts": {
  "0.7.0": 1,
  "0.8.0": 1,
  "0.9.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libtvm"
  ]
 },
 "pinning_version": "2022.06.28.16.51.04",
 "raw_meta_yaml": "{% set name = \"libtvm\" %}\n{% set version = \"0.8.0\" %}\n{% set proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/apache/incubator-tvm/archive/v{{ version }}.tar.gz\n    sha256: d950c5d159c1345d0727dfb3cabb456e6947a8cb80519feaeed8e0b35e6e913e\n  - url: https://github.com/tlc-pack/libbacktrace/archive/08f7c7e.tar.gz\n    folder: 3rdparty/libbacktrace\n    sha256: e0f439898046ef5f5657173c500ce6b8f8e955c12f9ba525cd9f224b15ddf6a6\n  - url: https://github.com/apache/tvm-vta/archive/36a9157.tar.gz\n    folder: 3rdparty/vta-hw\n    sha256: 400670d21fa40ebe8a034b18c35acf44743d54898d1606980aee4c338bb2e271\n\nbuild:\n  number: 4\n  skip: true  # [win]\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n  string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ proc_type }}  # [cuda_compiler_version == \"None\"]\n  string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ proc_type }}{{ cuda_compiler_version|replace('.', '') }}  # [cuda_compiler_version != \"None\"]\n  missing_dso_whitelist:\n    # Follow: https://github.com/conda-forge/deno-feedstock/blob/49611827965b148b4e724b23d4077de17cf4f90b/recipe/meta.yaml#L13-L23\n    - /System/Library/Frameworks/Metal.framework/Versions/A/Metal  # [osx]\n\nrequirements:\n  build:\n    - gnuconfig  # [unix]\n    - {{ compiler('cxx') }} \n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - cmake >=3.5\n    - make\n    - ccache\n    - pkgconfig\n    - pkg-config\n    - ninja\n    - python <3.9 \n  host:\n    - llvmdev\n    - dlpack >0.2\n    - rang >=3.1.0\n    - dmlc >=0.4\n    - cudnn  # [cuda_compiler_version != \"None\"]\n    - nccl  # [cuda_compiler_version != \"None\"]\n    - cutensor  # [cuda_compiler_version != \"None\"]\n    - cutlass  # [cuda_compiler_version != \"None\"]\n    - git\n  run:\n    - {{ pin_compatible('llvmdev') }}\n    - dlpack >0.2\n    - dmlc >=0.4\n    - rang >=3.1.0\n    - {{ pin_compatible('cudnn') }}  # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('nccl') }}  # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('cutensor') }}  # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('cutlass') }}  # [cuda_compiler_version != \"None\"]\n    - __cuda  # [cuda_compiler_version != \"None\"]\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/tvm\n    - test -f ${PREFIX}/lib/libtvm${SHLIB_EXT}\n    - test -f ${PREFIX}/lib/libtvm_runtime${SHLIB_EXT}\n\nabout:\n  home: https://tvm.apache.org/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Open Deep Learning Compiler Stack\n  description: |\n    Apache TVM (incubating) is a compiler stack for deep learning systems. \n    It is designed to close the gap between the productivity-focused deep \n    learning frameworks, and the performance- and efficiency-focused hardware \n    backends. TVM works with deep learning frameworks to provide end to end \n    compilation to different backends.\n  doc_url: https://tvm.apache.org/docs/\n  dev_url: https://github.com/apache/incubator-tvm\n\nextra:\n  recipe-maintainers:\n    - ngam\n    - marcelotrevisani\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/apache/incubator-tvm/archive/v0.8.0.tar.gz",
 "version": "0.8.0"
}