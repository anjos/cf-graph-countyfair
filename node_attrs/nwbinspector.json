{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/920227154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/928227137.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/928906890.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/933965992.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1004897270.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006212020.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006406876.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "nwbinspector",
 "hash_type": "sha256",
 "name": "nwbinspector",
 "new_version": "0.4.12",
 "new_version_attempts": {
  "0.4.0": 1,
  "0.4.10": 1,
  "0.4.11": 1,
  "0.4.12": 1,
  "0.4.3": 1,
  "0.4.4": 1,
  "0.4.5": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nwbinspector"
  ]
 },
 "pinning_version": "2022.07.22.23.35.10",
 "raw_meta_yaml": "{% set name = \"nwbinspector\" %}\n{% set version = \"0.4.12\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d1b74c5a89ff4c7835541990ffbccaebc0e5c11da999c0352c3484f2d3657a91\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n  entry_points:\n    - nwbinspector = nwbinspector.nwbinspector:inspect_all_cli\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - setuptools\n  run:\n    - python >=3.7\n    - click\n    - jsonschema\n    - natsort\n    - pynwb\n    - PyYAML\n    - tqdm\n\ntest:\n  requires:\n    - pytest\n    - pytest-cov\n  source_files:\n    - tests\n  imports:\n    - nwbinspector\n  commands:\n    - pytest\n\nabout:\n  home: https://github.com/NeurodataWithoutBorders/nwbinspector\n  summary: Tool to inspect NWB files for best practices compliance\n  description: |\n    Inspect NWB files for compliance with NWB Best Practices.  This inspector\n    is meant as a companion to the pynwb validator, which checks for strict\n    schema compliance.  In contrast, this tool attempts to apply some common\n    sense to find components of the file that are technically compliant, but\n    probably incorrect, or suboptimal, or deviate from best practices.  This\n    tool is meant simply as a data review aid.  It does not catch all best\n    practice violations, and any warnings it does produce should be checked by\n    a knowledgeable reviewer.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: license.txt\n  doc_url: https://nwbinspector.readthedocs.io\n  dev_url: https://github.com/NeurodataWithoutBorders/nwbinspector\n\nextra:\n  recipe-maintainers:\n    - jwodder\n    - yarikoptic\n    - CodyCBakerPhD\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/nwbinspector/nwbinspector-0.4.12.tar.gz",
 "version": "0.4.12"
}