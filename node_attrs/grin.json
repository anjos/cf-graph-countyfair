{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/220587201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533819361.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "grin",
 "hash_type": "sha256",
 "name": "grin",
 "new_version": "1.3.0",
 "new_version_attempts": {
  "1.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "grin"
  ]
 },
 "pinning_version": "2020.12.06.16.40.53",
 "raw_meta_yaml": "{% set version = \"1.3.0\" %}\n\npackage:\n  name: grin\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/g/grin/grin-{{ version }}.tar.gz\n  sha256: a8e5a1cc9461322be76cee9bd91fd546d64bbb2fd78dce8acaea9c424ade0db2\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n  entry_points:\n    - grin = grin:grin_main\n    - grind = grin:grind_main\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n  run:\n    - python >=3\n\ntest:\n  commands:\n    - grin -h\n    - grind -h\n  imports:\n    - grin\n\nabout:\n  home: http://pypi.python.org/pypi/grin\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: Enhanced grep-like tool\n  description: |\n    Grin is Robert Kern's enhanced grep-like tool analagous to ack(-grep)\n    (perl), rak (ruby), and ag (C).\n  doc_url: https://pypi.python.org/pypi/grin\n  doc_source_url: https://github.com/matthew-brett/grin/blob/master/README.rst\n  dev_url: https://github.com/matthew-brett/grin\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/grin/grin-1.3.0.tar.gz",
 "version": "1.3.0"
}