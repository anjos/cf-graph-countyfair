{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/368180744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/369809945.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499553454.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503139310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507210501.json"
   },
   "data": {
    "bot_rerun": 1606331299.3025439,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525916144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574608078.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/778665301.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911217576.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "goofit-split",
 "hash_type": "sha256",
 "name": "goofit-split",
 "new_version": "2.2.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "goofit",
   "goofit-proc"
  ]
 },
 "pinning_version": "2022.04.15.14.15.37",
 "raw_meta_yaml": "{% set version = \"2.2.3\" %}\n{% set name = \"goofit\" %}\n\n{% set goofit_proc_type = \"cpu\" if cuda_compiler_version|default(\"None\") == \"None\" else \"gpu\" %}\n{% set goofit_cuda_supported = [\"None\", \"9.2\", \"10.0\"] %}\n\npackage:\n  name: goofit-split\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7f80e9a8091bc029a92f562539e330587245885329456d8b7783127b6ae7aae8\n  \nbuild:\n  skip: true  # [win]\n  {% if cuda_compiler_version|default(\"None\") not in goofit_cuda_supported %}\n  skip: true\n  {% endif %}\n  number: 5\n\noutputs:\n  - name: goofit-proc\n    version: \"1.0.0\"\n    build:\n      number: 5\n      string: \"{{ goofit_proc_type }}\"\n    test:\n      commands:\n        - exit 0\n    about:\n      home: https://github.com/conda-forge/goofit-feedstock\n      license: BSD-3-Clause\n      license_family: BSD\n      summary: A meta-package to select CPU or GPU GooFit build.\n\n  - name: goofit\n    version: {{ version }}\n    build:\n      number: 6\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}  # [linux and cuda_compiler_version != \"None\"]\n        - cmake ==3.15.*\n        - make\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64 and cuda_compiler_version == \"None\"]\n      host:\n        - python\n        - scikit-build\n        - pip\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64 and cuda_compiler_version == \"None\"]\n      run:\n        - python\n        - numpy >=1.11.1\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64]\n      run_constrained:\n        - goofit-proc * {{ goofit_proc_type }}\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\n    script: build-cpu.sh  # [not linux or cuda_compiler_version == \"None\"]\n    script: build-gpu.sh  # [linux and cuda_compiler_version != \"None\"]\n\n    test:\n      requires:\n        - pytest\n      source_files:\n        - python/tests/test_exp.py\n      imports:\n        - goofit\n      commands:\n        - $PYTHON -m goofit\n        - $PYTHON -m pytest python/tests/test_exp.py  # [not linux or cuda_compiler_version == \"None\"]\n\nabout:\n  home: https://github.com/GooFit/GooFit\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE\n  summary: A fitting package for GPU and CPU\n  description: |\n    GooFit is split into GPU and CPU versions on Linux. If you want to install for gpus, you can do:\n    \n    ```bash\n    conda install goofit goofit-proc=*=gpu\n    ```\n    \n    You can add `cudatoolkit=10.0` or `9.2` if you want a specific toolkit version.\n    \n    The OpenMP CPU version is default, but can be explicitly requested with:\n    \n    ```bash\n    conda install goofit goofit-proc=*=cpu\n    ```\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n    - danielsibemol\n    - henryiii\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/goofit/goofit-2.2.3.tar.gz"
}