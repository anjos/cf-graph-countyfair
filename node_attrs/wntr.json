{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/234754423.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339409646.json"
   },
   "data": {
    "bot_rerun": 1582200749.9140177,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375517979.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/384828955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/445103704.json"
   },
   "data": {
    "bot_rerun": 1599576695.2001495,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482118770.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502972884.json"
   },
   "data": {
    "bot_rerun": 1605052182.9171498,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519024417.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559616489.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722688630.json"
   },
   "data": {
    "bot_rerun": 1645726080.9291737,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779881775.json"
   },
   "data": {
    "bot_rerun": 1645726080.929442,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/837069008.json"
   },
   "data": {
    "bot_rerun": 1645726080.9295795,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/862735913.json"
   },
   "data": {
    "bot_rerun": 1656021958.0326889,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/977731234.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "wntr",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/USEPA/WNTR",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Water Network Tool for Resilience"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise"
   ]
  },
  "package": {
   "name": "wntr",
   "version": "v0.4.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "c76fb0f1b1c40c1df3122aa575de08f75a62497cc522a081ecb6929ffd8069e0",
   "url": "https://github.com/USEPA/WNTR/archive/0.4.2.zip"
  },
  "test": {
   "commands": [
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves"
   ],
   "imports": [
    "wntr",
    "wntr",
    "wntr"
   ],
   "requires": [
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "networkx",
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "folium",
    "matplotlib",
    "nose",
    "openpyxl",
    "plotly",
    "utm"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/USEPA/WNTR",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Water Network Tool for Resilience"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise"
   ]
  },
  "package": {
   "name": "wntr",
   "version": "v0.4.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "c76fb0f1b1c40c1df3122aa575de08f75a62497cc522a081ecb6929ffd8069e0",
   "url": "https://github.com/USEPA/WNTR/archive/0.4.2.zip"
  },
  "test": {
   "commands": [
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves"
   ],
   "imports": [
    "wntr",
    "wntr",
    "wntr",
    "wntr",
    "wntr",
    "wntr",
    "wntr",
    "wntr",
    "wntr"
   ],
   "requires": [
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib"
   ]
  }
 },
 "name": "wntr",
 "new_version": "0.4.2",
 "new_version_attempts": {
  "0.2.2": 828,
  "0.2.3": 1,
  "0.4.0": 155,
  "0.4.1": 87,
  "0.4.2": 9
 },
 "new_version_errors": {
  "0.2.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.2' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "0.2.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.2.3' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "0.4.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.0' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "0.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "0.4.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.2' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/USEPA/WNTR",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Water Network Tool for Resilience"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise"
   ]
  },
  "package": {
   "name": "wntr",
   "version": "v0.4.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "c76fb0f1b1c40c1df3122aa575de08f75a62497cc522a081ecb6929ffd8069e0",
   "url": "https://github.com/USEPA/WNTR/archive/0.4.2.zip"
  },
  "test": {
   "commands": [
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves"
   ],
   "imports": [
    "wntr",
    "wntr",
    "wntr"
   ],
   "requires": [
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "networkx",
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "folium",
    "matplotlib",
    "nose",
    "openpyxl",
    "plotly",
    "utm"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "wntr"
  ]
 },
 "pinning_version": "2022.06.23.17.21.28",
 "raw_meta_yaml": "{% set name = \"wntr\" %}\n{% set version = \"v0.4.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/USEPA/WNTR/archive/0.4.2.zip\n  sha256: c76fb0f1b1c40c1df3122aa575de08f75a62497cc522a081ecb6929ffd8069e0\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - python\n    - pip\n  host:\n    - python\n    - pip\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - networkx\n    - pandas\n    - scipy\n    - matplotlib-base\n\ntest:\n  imports:\n    - wntr\n  requires:\n    - nose\n    - plotly\n    - folium\n    - utm\n    - openpyxl\n    - matplotlib\n  commands:\n    - nosetests -v wntr.tests.test_network_controls\n    - nosetests -v wntr.tests.test_network_valves\n\nabout:\n  home: https://github.com/USEPA/WNTR\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: 'Water Network Tool for Resilience'\n\nextra:\n  recipe-maintainers:\n    - michaelbynum\n    - kaklise\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "matplotlib-base",
   "networkx",
   "numpy",
   "pandas",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "matplotlib-base",
    "networkx",
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "folium",
    "matplotlib",
    "nose",
    "openpyxl",
    "plotly",
    "utm"
   ]
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "networkx",
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "folium",
    "matplotlib",
    "nose",
    "openpyxl",
    "plotly",
    "utm"
   ]
  }
 },
 "url": "https://github.com/USEPA/WNTR/archive/0.4.2.zip",
 "version": "v0.4.2",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/USEPA/WNTR",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Water Network Tool for Resilience"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise",
    "michaelbynum",
    "kaklise"
   ]
  },
  "package": {
   "name": "wntr",
   "version": "v0.4.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip",
    "cxx_compiler_stub",
    "python",
    "pip"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy",
    "python",
    "pip",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "networkx",
    "pandas",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "c76fb0f1b1c40c1df3122aa575de08f75a62497cc522a081ecb6929ffd8069e0",
   "url": "https://github.com/USEPA/WNTR/archive/0.4.2.zip"
  },
  "test": {
   "commands": [
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves",
    "nosetests -v wntr.tests.test_network_controls",
    "nosetests -v wntr.tests.test_network_valves"
   ],
   "imports": [
    "wntr",
    "wntr",
    "wntr"
   ],
   "requires": [
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib",
    "nose",
    "plotly",
    "folium",
    "utm",
    "openpyxl",
    "matplotlib"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "networkx",
    "numpy",
    "pandas",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "folium",
    "matplotlib",
    "nose",
    "openpyxl",
    "plotly",
    "utm"
   ]
  }
 }
}