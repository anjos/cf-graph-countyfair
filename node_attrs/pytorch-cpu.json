{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/241520094.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336081523.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392303271.json"
   },
   "data": {
    "bot_rerun": 1597087694.6140175,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394415328.json"
   },
   "data": {
    "bot_rerun": 1597087694.614917,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465691856.json"
   },
   "data": {
    "bot_rerun": 1607914885.0663946,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465697317.json"
   },
   "data": {
    "bot_rerun": 1607914885.0665913,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539096345.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pytorch-cpu",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre"
   ]
  },
  "package": {
   "name": "pytorch-cpu",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git"
   ],
   "host": [
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config"
   ],
   "run": [
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "git_rev": "b31f58de6fa8bbda5353b3c77d9be4914399724d",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch"
   ]
  },
  "test": {
   "commands": [
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true"
   ],
   "imports": [
    "torch",
    "torch",
    "torch"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "mock",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "mock",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "mock"
   ],
   "source_files": [
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "cmake",
    "future",
    "git",
    "libblas",
    "libuv",
    "mkl",
    "mkl-devel",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "typing"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "libblas",
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pydot",
    "pytest",
    "setuptools",
    "tabulate"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre"
   ]
  },
  "package": {
   "name": "pytorch-cpu",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2-git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2-git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2-git"
   ],
   "host": [
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "m2-git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "cmake",
    "ninja",
    "m2-git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "cmake",
    "ninja",
    "m2-git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing"
   ],
   "run": [
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "llvm-openmp",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "llvm-openmp",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "llvm-openmp",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "git_rev": "b31f58de6fa8bbda5353b3c77d9be4914399724d",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch"
   ]
  },
  "test": {
   "commands": [
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "python ./test/run_test.py",
    "python ./test/run_test.py",
    "python ./test/run_test.py"
   ],
   "imports": [
    "torch",
    "torch",
    "torch",
    "torch",
    "torch",
    "torch",
    "torch",
    "torch",
    "torch"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "mock",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "mock",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "mock",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "name": "pytorch-cpu",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre"
   ]
  },
  "package": {
   "name": "pytorch-cpu",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git"
   ],
   "host": [
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config",
    "cmake",
    "ninja",
    "git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "libuv",
    "pkg-config"
   ],
   "run": [
    "mkl 2020",
    "libblas * *_mkl",
    "llvm-openmp",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "llvm-openmp",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "llvm-openmp",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "git_rev": "b31f58de6fa8bbda5353b3c77d9be4914399724d",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch"
   ]
  },
  "test": {
   "commands": [
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
    "OMP_NUM_THREADS=4 python ./test/run_test.py || true"
   ],
   "imports": [
    "torch",
    "torch",
    "torch"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot"
   ],
   "source_files": [
    "test",
    "test",
    "test"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "cmake",
    "future",
    "git",
    "libblas",
    "libuv",
    "mkl",
    "mkl-devel",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "typing"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "libblas",
    "llvm-openmp",
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "pydot",
    "pytest",
    "setuptools",
    "tabulate"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytorch-cpu"
  ]
 },
 "pinning_version": "2020.12.12.12.24.07",
 "pre_pr_migrator_status": {
  "python39": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1035, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 221, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 183, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"1.6.0\" %}\n{% set commit = \"b31f58de6fa8bbda5353b3c77d9be4914399724d\" %}\n\npackage:\n  name: pytorch-{{ pytorch_variant }}\n  version: {{ version }}\n\nsource:\n  # for local testing use a tarball including submodules\n  git_url: https://github.com/pytorch/pytorch.git\n  git_tag: {{ commit }}\n  patches:\n    # https://github.com/pytorch/pytorch/pull/49281\n    - fix_std_stdint.patch\n    # cpp_extension patch does not apply cleanly on master\n    # we should try to upstream again on the next version\n    - cpp_extension.patch\n    # It is unclear that upstream will allow us to integrate the \n    # shared linker path bellow until their intel compiler issues\n    # are resolved.\n    - remove_shared_linker_flag_override.patch\n    - nccl_socket.patch\n    - fix_dispatch_apply_auto.patch\n    - fix_map_anonymous.patch\n\nbuild:\n  number: 0\n  string: cuda{{ cudatoolkit | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [pytorch_variant == \"gpu\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [pytorch_variant == \"cpu\"]\n  detect_binary_files_with_prefix: False\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    # Dec 2020: it seems that git is broken on windows, so we use m2-git\n    - patch     # [not win]\n    - m2-patch  # [win]\n    - git       # [not win]\n    - m2-git    # [win]\n  host:\n    # For some reason cmake and ninja need to be installed\n    # alongside python in the host\n    # https://github.com/conda-forge/pytorch-cpu-feedstock/pull/21#discussion_r541397252\n    - cmake\n    - ninja\n    - git       # [not win]\n    - m2-git    # [win]\n    # GPU requirements\n    #- cudatoolkit {{ cudatoolkit }}*  # [pytorch_variant == \"gpu\"]\n    #- cudnn {{ cudnn }}*              # [pytorch_variant == \"gpu\"]\n    #- magma                           # [pytorch_variant == \"gpu\"]\n    # other requirements\n    - python\n    - numpy\n    - pip\n    - setuptools\n    - pyyaml\n    - requests\n    - future\n    - six\n    - cffi\n    - mkl-devel {{ mkl }}\n    - mkl {{ mkl }}\n    - libblas * *_mkl\n    - typing\n    - libuv       # [unix]\n    - pkg-config  # [unix]\n    #- intel-openmp  # [osx]\n  run:\n    - mkl {{ mkl }}\n    - libblas * *_mkl\n    #- intel-openmp   # [osx]\n    - llvm-openmp    # [osx]\n    #- _pytorch_select ==0.1             # [pytorch_variant == \"cpu\"]\n    #- _pytorch_select ==0.2             # [pytorch_variant == \"gpu\"]\n    # GPU requirements\n    #- {{ pin_compatible('cudatoolkit', max_pin='x.x') }}  # [pytorch_variant == \"gpu\"]\n    #- {{ pin_compatible('cudnn') }}                       # [pytorch_variant == \"gpu\"]\n    # other requirements\n    - python\n    - {{ pin_compatible('numpy') }}\n    - cffi\n    - future  # [py2k]\n    - typing  # [py2k]\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - setuptools\n    - hypothesis\n    - pytest\n    - tabulate\n    - pydot\n    - mock  # [linux]\n  imports:\n    - torch\n  source_files:\n    - test\n  commands:\n    - OMP_NUM_THREADS=4 python ./test/run_test.py || true  # [not win]\n    - python ./test/run_test.py  # [win]\n\nabout:\n  home: https://pytorch.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs.\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    - sodre\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cffi",
   "cmake",
   "cxx_compiler_stub",
   "future",
   "git",
   "libblas",
   "libuv",
   "llvm-openmp",
   "m2-git",
   "m2-patch",
   "mkl",
   "mkl-devel",
   "ninja",
   "numpy",
   "patch",
   "pip",
   "pkg-config",
   "python",
   "pyyaml",
   "requests",
   "setuptools",
   "six",
   "typing"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "m2-git",
    "m2-patch",
    "patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cmake",
    "cxx_compiler_stub",
    "future",
    "git",
    "libblas",
    "libuv",
    "m2-git",
    "mkl",
    "mkl-devel",
    "ninja",
    "numpy",
    "openmp",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "typing"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "libblas",
    "llvm-openmp",
    "mkl",
    "numpy",
    "openmp",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pydot",
    "pytest",
    "setuptools",
    "tabulate"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "time": 1568135301.1552057,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "m2-git",
    "m2-patch",
    "patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "cmake",
    "future",
    "git",
    "libblas * *_mkl",
    "libuv",
    "m2-git",
    "mkl 2020",
    "mkl-devel 2020",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "typing"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "libblas * *_mkl",
    "llvm-openmp",
    "mkl 2020",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pydot",
    "pytest",
    "setuptools",
    "tabulate"
   ]
  }
 },
 "url": null,
 "version": "1.6.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre",
    "hmaarrfk",
    "sodre"
   ]
  },
  "package": {
   "name": "pytorch-cpu",
   "version": "1.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2-git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2-git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "m2-git"
   ],
   "host": [
    "cmake",
    "ninja",
    "m2-git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "cmake",
    "ninja",
    "m2-git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing",
    "cmake",
    "ninja",
    "m2-git",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "cffi",
    "mkl-devel 2020",
    "mkl 2020",
    "libblas * *_mkl",
    "typing"
   ],
   "run": [
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi",
    "mkl 2020",
    "libblas * *_mkl",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "git_rev": "b31f58de6fa8bbda5353b3c77d9be4914399724d",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch",
    "fix_std_stdint.patch",
    "cpp_extension.patch",
    "remove_shared_linker_flag_override.patch",
    "nccl_socket.patch",
    "fix_dispatch_apply_auto.patch",
    "fix_map_anonymous.patch"
   ]
  },
  "test": {
   "commands": [
    "python ./test/run_test.py",
    "python ./test/run_test.py",
    "python ./test/run_test.py"
   ],
   "imports": [
    "torch",
    "torch",
    "torch"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "setuptools",
    "hypothesis",
    "pytest",
    "tabulate",
    "pydot"
   ],
   "source_files": [
    "test",
    "test",
    "test"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-git",
    "m2-patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "cmake",
    "future",
    "libblas",
    "m2-git",
    "mkl",
    "mkl-devel",
    "ninja",
    "numpy",
    "pip",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "typing"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "libblas",
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "pydot",
    "pytest",
    "setuptools",
    "tabulate"
   ]
  }
 }
}