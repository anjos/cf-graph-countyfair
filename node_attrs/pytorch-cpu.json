{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/241520094.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336081523.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392303271.json"
   },
   "data": {
    "bot_rerun": 1597087694.6140175,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394415328.json"
   },
   "data": {
    "bot_rerun": 1597087694.614917,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465691856.json"
   },
   "data": {
    "bot_rerun": 1607914885.0663946,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465697317.json"
   },
   "data": {
    "bot_rerun": 1607914885.0665913,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539096345.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542525878.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546237573.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546318866.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552316522.json"
   },
   "data": {
    "bot_rerun": 1621403989.2373397,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555775483.json"
   },
   "data": {
    "bot_rerun": 1615253278.395371,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/580486453.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "nccl_2_8_4_1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/587279750.json"
   },
   "data": {
    "bot_rerun": 1619044728.7369695,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597226017.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/647307164.json"
   },
   "data": {
    "bot_rerun": 1626801698.7498152,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676019620.json"
   },
   "data": {
    "bot_rerun": 1626801698.7500265,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf316"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682974753.json"
   },
   "data": {
    "bot_rerun": 1626801698.7502515,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683174018.json"
   },
   "data": {
    "bot_rerun": 1626801698.7503605,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/693949812.json"
   },
   "data": {
    "bot_rerun": 1627850981.07041,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/696198924.json"
   },
   "data": {
    "bot_rerun": 1627096573.6485262,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/696574393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/700987955.json"
   },
   "data": {
    "bot_rerun": 1629208431.7004108,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/714317646.json"
   },
   "data": {
    "bot_rerun": 1654694615.5939515,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/736075902.json"
   },
   "data": {
    "bot_rerun": 1632076224.0831935,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/737130246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774835583.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/798964066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf319"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/827331958.json"
   },
   "data": {
    "bot_rerun": 1643131648.7846453,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2022"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831879296.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "mkl2022"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905021649.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf320"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964805361.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/969005637.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure"
  }
 },
 "feedstock_name": "pytorch-cpu",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "number": "200"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py37h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py37h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "pytorch-recipe",
   "version": "1.12.1"
  },
  "source": {
   "git_rev": "v1.12.1",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "make",
    "ninja",
    "patch",
    "protobuf",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "cudnn",
    "future",
    "libcblas",
    "libprotobuf",
    "libuv",
    "magma",
    "mkl-devel",
    "nccl",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "cffi",
    "cudnn",
    "magma",
    "ninja",
    "numpy",
    "python",
    "pytorch",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py37h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py37h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "pytorch-recipe",
   "version": "1.12.1"
  },
  "source": {
   "git_rev": "v1.12.1",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "make",
    "ninja",
    "patch",
    "protobuf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "future",
    "libcblas",
    "liblapack",
    "libprotobuf",
    "libuv",
    "numpy",
    "openblas",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "ninja",
    "numpy",
    "python",
    "pytorch",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda112py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py37h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py37h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda110py310h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda110py310h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py39h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py39h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda102py38h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda102py38h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cuda111py37h1234567_200"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch-gpu = 1.12.1",
      "pytorch-cpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda111py37h1234567_200",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py37h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py37h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py37h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py37h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "pytorch-recipe",
   "version": "1.12.1"
  },
  "source": {
   "git_rev": "v1.12.1",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch"
   ]
  }
 },
 "name": "pytorch-recipe",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py37h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "mkl-devel 2022",
      "libcblas * *_mkl",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py37h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "pytorch-recipe",
   "version": "1.12.1"
  },
  "source": {
   "git_rev": "v1.12.1",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "llvm-openmp",
    "ninja",
    "patch",
    "protobuf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "future",
    "libcblas",
    "libprotobuf",
    "libuv",
    "mkl-devel",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "llvm-openmp",
    "ninja",
    "numpy",
    "python",
    "pytorch",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "pip",
    "pydot",
    "pytest",
    "tabulate"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py39h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py39h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py38h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py38h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_py310h1234567_0"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake  != 3.23.0",
      "ninja",
      "protobuf 3.20"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "cffi",
      "libcblas",
      "liblapack",
      "openblas",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "numpy",
      "setuptools",
      "cffi",
      "typing_extensions",
      "ninja"
     ],
     "run_constrained": [
      "pytorch-cpu = 1.12.1",
      "pytorch-gpu = 99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip"
     ],
     "source_files": [
      "test"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_py310h1234567_0",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "pytorch-recipe",
   "version": "1.12.1"
  },
  "source": {
   "git_rev": "v1.12.1",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch",
    "patches/fix_dispatch_apply_auto.patch",
    "patches/link_blas_privately.patch",
    "patches/osx-map_anonymous.patch",
    "patches/75001-fix_USE_MKLDNN.patch",
    "patches/remove_gcc_maximum_requirements.patch"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "llvm-openmp",
    "ninja",
    "patch",
    "protobuf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "future",
    "libcblas",
    "liblapack",
    "libprotobuf",
    "libuv",
    "numpy",
    "openblas",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "llvm-openmp",
    "ninja",
    "numpy",
    "python",
    "pytorch",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "pip",
    "pydot",
    "pytest",
    "tabulate"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytorch",
   "pytorch-gpu"
  ]
 },
 "pinning_version": "2022.06.15.16.25.59",
 "pre_pr_migrator_attempts": {
  "cuda110": 1,
  "cuda111_112": 1,
  "libprotobuf321": 50,
  "python39": 1,
  "windows_cuda": 1
 },
 "pre_pr_migrator_status": {
  "cuda110": "not solvable: master: ['linux_64_cuda_compiler_version11.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n']",
  "cuda111_112": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/670016252\">bot CI job</a>): master: ['win_64_cuda_compiler_version11.1numpy1.17python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.1.*\\n', 'win_64_cuda_compiler_version11.1numpy1.17python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.1numpy1.17python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.1.*\\n', 'win_64_cuda_compiler_version11.1numpy1.17python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.1numpy1.17python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.1.*\\n', 'win_64_cuda_compiler_version11.1numpy1.17python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.1numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.1.*\\n', 'win_64_cuda_compiler_version11.1numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.2numpy1.17python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.2.*\\n', 'win_64_cuda_compiler_version11.2numpy1.17python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.2numpy1.17python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.2.*\\n', 'win_64_cuda_compiler_version11.2numpy1.17python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.2numpy1.17python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.2.*\\n', 'win_64_cuda_compiler_version11.2numpy1.17python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n', 'win_64_cuda_compiler_version11.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested cuda_win-64 11.2.*\\n', 'win_64_cuda_compiler_version11.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.*\\nProblem: nothing provides requested cudnn undefined.*\\n']",
  "libprotobuf321": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2989336190\">bot CI job</a>): main: ['linux_64_c_compiler_version10cuda_compiler_version11.1cudnn8cxx_compiler_version10numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.1cudnn8cxx_compiler_version10numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.1cudnn8cxx_compiler_version10numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.1cudnn8cxx_compiler_version10numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.2cudnn8cxx_compiler_version10numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.2cudnn8cxx_compiler_version10numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.2cudnn8cxx_compiler_version10numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_version11.2cudnn8cxx_compiler_version10numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_versionNonecudnnundefinedcxx_compiler_version10numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_versionNonecudnnundefinedcxx_compiler_version10numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_versionNonecudnnundefinedcxx_compiler_version10numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version10cuda_compiler_versionNonecudnnundefinedcxx_compiler_version10numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version7cuda_compiler_version10.2cudnn7cxx_compiler_version7numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version7cuda_compiler_version10.2cudnn7cxx_compiler_version7numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version7cuda_compiler_version10.2cudnn7cxx_compiler_version7numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version7cuda_compiler_version10.2cudnn7cxx_compiler_version7numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version9cuda_compiler_version11.0cudnn8cxx_compiler_version9numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version9cuda_compiler_version11.0cudnn8cxx_compiler_version9numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version9cuda_compiler_version11.0cudnn8cxx_compiler_version9numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_64_c_compiler_version9cuda_compiler_version11.0cudnn8cxx_compiler_version9numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_aarch64_numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_aarch64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_aarch64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'linux_aarch64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_64_numpy1.19python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_arm64_numpy1.19python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_arm64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n', 'osx_arm64_numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides requested protobuf 3.21.*\\n']",
  "python39": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1035, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 221, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 183, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "windows_cuda": "not solvable: master: ['linux_64_cuda_compiler_version11.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit 8.0* needed by cudnn-7.0.5-cuda8.0_0\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit 8.0* needed by cudnn-7.0.5-cuda8.0_0\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit 8.0* needed by cudnn-7.0.5-cuda8.0_0\\n', 'linux_64_cuda_compiler_version11.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides cudatoolkit 8.0* needed by cudnn-7.0.5-cuda8.0_0\\n', 'linux_64_cuda_compiler_version11.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-ha8d7eb6_0 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version10.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.1numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.1numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.1numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.1numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.2numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.2numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.2numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version10.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\n', 'win_64_cuda_compiler_version11.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested nccl 2.7.8.1.*\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n', 'win_64_cuda_compiler_version11.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package cudnn-7.6.5.32-h2cb8ba8_1 requires cudatoolkit 10.0|10.0.*, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.12.1\" %}\n{% set number = 0 %}\n\n{% if cuda_compiler_version != \"None\" %}\n{% set number = number + 200 %}\n{% endif %}\n\npackage:\n  name: pytorch-recipe\n  version: {{ version }}\n\nsource:\n  # for local testing use a tarball including submodules\n  git_url: https://github.com/pytorch/pytorch.git\n  git_tag: v{{ version }}\n  patches:\n    - patches/fix_dispatch_apply_auto.patch\n    # While this next patch has been accepted upstream, it doesn't seem to have\n    # made it for the 1.12.0 release\n    # https://github.com/pytorch/pytorch/pull/78883\n    - patches/link_blas_privately.patch\n    - patches/osx-map_anonymous.patch\n    - patches/75001-fix_USE_MKLDNN.patch\n    # 2022/07 hmaarrfk\n    # We've patch out the bug in GCC that makes it incompatible\n    # https://github.com/conda-forge/ctng-compilers-feedstock/blob/7ea10c2526445beb9faff23efcc6bc40fc0079b5/recipe/meta.yaml#L23=\n    - patches/remove_gcc_maximum_requirements.patch \n\nbuild:\n  number: {{ number }}\n  skip: true  # [win]\n\noutputs:\n  - name: pytorch\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                                # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: false\n      run_exports:\n        - {{ pin_subpackage('pytorch', max_pin='x.x') }}\n    script: build_pytorch.sh  # [not win]\n    script: bld_pytorch.bat   # [win]\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - cffi                                   # [build_platform != target_platform]\n        - sysroot_linux-64  2.17  # [linux64]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}    # [cuda_compiler_version != \"None\"]\n        # Dec 2020: it seems that git is broken on windows, so we use m2-git\n        - patch     # [not win]\n        - m2-patch  # [win]\n        - git       # [not win]\n        - m2-git    # [win]\n        - libgomp   # [linux]\n        - llvm-openmp    # [osx]\n        # 2022/04/12 hmaarrfk\n        # Issues with recent version of CMake\n        # https://github.com/pytorch/pytorch/issues/74985\n        # Should be fixed in other versions\n        # https://gitlab.kitware.com/cmake/cmake/-/issues/23368\n        - cmake  != 3.23.0\n        - ninja\n        - protobuf {{ libprotobuf }}\n        - make      # [linux]\n      host:\n        # GPU requirements\n        - cudnn                           # [cuda_compiler_version != \"None\"]\n        - nccl                            # [cuda_compiler_version != \"None\"]\n        - magma                           # [cuda_compiler_version != \"None\"]\n        # other requirements\n        - python\n        - numpy\n        - pip\n        - setuptools\n        - pyyaml\n        - requests\n        - future\n        - six\n        - cffi\n        - mkl-devel {{ mkl }}   # [x86]\n        - libcblas * *_mkl      # [x86]\n        - libcblas              # [not x86]\n        - liblapack             # [not x86]\n        - openblas              # [not x86]\n        - libprotobuf\n        - sleef\n        - typing\n        - libuv\n        - pkg-config  # [unix]\n        - typing_extensions\n      run:\n        - llvm-openmp    # [osx]\n        # GPU requirements without run_exports\n        - {{ pin_compatible('cudnn') }}                       # [cuda_compiler_version != \"None\"]\n        - {{ pin_compatible('magma', max_pin='x.x.x') }}      # [cuda_compiler_version != \"None\"]\n        # other requirements\n        - python\n        - {{ pin_compatible('numpy') }}\n        - setuptools\n        - cffi\n        - typing_extensions\n        # Need ninja to load C++ extensions\n        - ninja\n        # avoid that people without GPUs needlessly download ~0.5-1GB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n      run_constrained:\n        # These constraints ensure conflict between pytorch and\n        # pytorch-cpu 1.1 which we built before conda-forge had GPU infrastructure\n        # built into place.\n        # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/65\n        - pytorch-cpu = {{ version }}  # [cuda_compiler_version == \"None\"]\n        - pytorch-gpu = 99999999       # [cuda_compiler_version == \"None\"]\n        - pytorch-gpu = {{ version }}  # [cuda_compiler_version != \"None\"]\n        - pytorch-cpu = 99999999       # [cuda_compiler_version != \"None\"]\n\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - hypothesis\n        - pytest\n        - tabulate\n        - pydot\n        - mock  # [linux]\n        - pip\n      imports:\n        - torch\n      source_files:\n        - test\n      commands:\n        - OMP_NUM_THREADS=4 python ./test/run_test.py || true  # [not win]\n        - python ./test/run_test.py  # [win]\n        # Run pip check so as to ensure that all pytorch packages are installed\n        # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/24\n        - pip check\n        - python -c \"import torch; print(torch.__version__)\"\n        - python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\"  # [x86 and cuda_compiler_version == \"None\"]\n        # At conda-forge, we target versions of OSX that are too old for MPS support\n        # But if users install a newer version of OSX, they will have MPS support\n        # https://github.com/conda-forge/pytorch-cpu-feedstock/pull/123#issuecomment-1186355073\n        # - python -c \"import torch; assert torch.backends.mps.is_available()\" # [osx]\n\n  # 2021/08/01, hmaarrfk\n  # While this seems like a roundabout way of defining the package name\n  # It helps the linter avoid errors on a package not having tests.\n  {% set pytorch_cpu_gpu = \"pytorch-cpu\" %}   # [cuda_compiler_version == \"None\"]\n  {% set pytorch_cpu_gpu = \"pytorch-gpu\" %}   # [cuda_compiler_version != \"None\"]\n  - name: {{ pytorch_cpu_gpu }}\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: False\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - pytorch-cpu                                      # [cuda_compiler_version == \"None\"]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"pytorch\", exact=True) }}\n    test:\n      imports:\n        - torch\n\nabout:\n  home: https://pytorch.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file:\n    - LICENSE\n    - NOTICE\n    - third_party/pybind11/LICENSE\n  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs.\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    - sodre\n    - benjaminrwilson\n  feedstock-name: pytorch-cpu\n",
 "req": {
  "__set__": true,
  "elements": [
   "__cuda",
   "c_compiler_stub",
   "cffi",
   "cmake",
   "cuda_compiler_stub",
   "cudnn",
   "cxx_compiler_stub",
   "future",
   "git",
   "libcblas",
   "libgomp",
   "liblapack",
   "libprotobuf",
   "libuv",
   "llvm-openmp",
   "magma",
   "make",
   "mkl-devel",
   "nccl",
   "ninja",
   "numpy",
   "openblas",
   "patch",
   "pip",
   "pkg-config",
   "protobuf",
   "python",
   "pytorch",
   "pyyaml",
   "requests",
   "setuptools",
   "six",
   "sleef",
   "sysroot_linux-64",
   "typing",
   "typing_extensions"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "llvm-openmp",
    "make",
    "ninja",
    "patch",
    "protobuf",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "ctng-compilers",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "future",
    "libcblas",
    "liblapack",
    "libprotobuf",
    "libuv",
    "linux-sysroot",
    "magma",
    "mkl-devel",
    "nccl",
    "numpy",
    "openblas",
    "openmp",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "c_compiler_stub",
    "cffi",
    "ctng-compilers",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "linux-sysroot",
    "llvm-openmp",
    "magma",
    "ninja",
    "numpy",
    "openmp",
    "python",
    "pytorch",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate"
   ]
  }
 },
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "time": 1568135301.1552057,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake  != 3.23.0",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "llvm-openmp",
    "make",
    "ninja",
    "patch",
    "protobuf 3.20",
    "sysroot_linux-64  2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "cudnn",
    "future",
    "libcblas",
    "libcblas * *_mkl",
    "liblapack",
    "libprotobuf",
    "libuv",
    "magma",
    "mkl-devel 2022",
    "nccl",
    "numpy",
    "openblas",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "cffi",
    "cudnn",
    "llvm-openmp",
    "magma",
    "ninja",
    "numpy",
    "python",
    "pytorch",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate"
   ]
  }
 },
 "url": null,
 "version": "1.12.1"
}