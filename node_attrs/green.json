{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220587213.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220972997.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/261760974.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263465125.json"
   },
   "data": {
    "bot_rerun": 1597087666.1886566,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/267869718.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269766594.json"
   },
   "data": {
    "bot_rerun": 1597087666.1894326,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335865806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/391416957.json"
   },
   "data": {
    "bot_rerun": 1591471454.6923003,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/429397610.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465689666.json"
   },
   "data": {
    "bot_rerun": 1603223660.9517696,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492155726.json"
   },
   "data": {
    "bot_rerun": 1603262901.2371168,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502068313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506997088.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513840942.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/525953654.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552242203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/624892863.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "green",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Green - A clean, colorful, fast python test runner.\nFeatures --------\n- **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful** - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in, optional integration with\n  [coverage](http://nedbatchelder.com/code/coverage/).\n- **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living** - This project grows and changes.  See the\n",
   "dev_url": "https://github.com/CleanCut/green",
   "doc_url": "https://github.com/CleanCut/green#green",
   "home": "https://github.com/CleanCut/green",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/LICENSE",
   "summary": "Green is a clean, colorful, fast python test runner"
  },
  "build": {
   "entry_points": [
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main"
   ],
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer"
   ]
  },
  "package": {
   "name": "green",
   "version": "3.2.4"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size"
   ]
  },
  "source": {
   "fn": "green-3.2.4.tar.gz",
   "sha256": "3473abb4629c8c1af9f6b59a4f9c757315736580053a64bbfd91ff21ccad57a8",
   "url": "https://pypi.io/packages/source/g/green/green-3.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h"
   ],
   "imports": [
    "green",
    "green",
    "green",
    "green",
    "green"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "colorama",
    "coverage",
    "get_terminal_size",
    "python",
    "python-termstyle",
    "unidecode"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Green - A clean, colorful, fast python test runner.\nFeatures --------\n- **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful** - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in, optional integration with\n  [coverage](http://nedbatchelder.com/code/coverage/).\n- **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living** - This project grows and changes.  See the\n",
   "dev_url": "https://github.com/CleanCut/green",
   "doc_url": "https://github.com/CleanCut/green#green",
   "home": "https://github.com/CleanCut/green",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/LICENSE",
   "summary": "Green is a clean, colorful, fast python test runner"
  },
  "build": {
   "entry_points": [
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main"
   ],
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer"
   ]
  },
  "package": {
   "name": "green",
   "version": "3.2.4"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size"
   ]
  },
  "source": {
   "fn": "green-3.2.4.tar.gz",
   "sha256": "3473abb4629c8c1af9f6b59a4f9c757315736580053a64bbfd91ff21ccad57a8",
   "url": "https://pypi.io/packages/source/g/green/green-3.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h"
   ],
   "imports": [
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green",
    "green"
   ]
  }
 },
 "name": "green",
 "new_version": "3.2.6",
 "new_version_attempts": {
  "3.2.1": 1,
  "3.2.2": 1,
  "3.2.3": 1,
  "3.2.4": 1,
  "3.2.5": 1,
  "3.2.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Green - A clean, colorful, fast python test runner.\nFeatures --------\n- **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful** - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in, optional integration with\n  [coverage](http://nedbatchelder.com/code/coverage/).\n- **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living** - This project grows and changes.  See the\n",
   "dev_url": "https://github.com/CleanCut/green",
   "doc_url": "https://github.com/CleanCut/green#green",
   "home": "https://github.com/CleanCut/green",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/LICENSE",
   "summary": "Green is a clean, colorful, fast python test runner"
  },
  "build": {
   "entry_points": [
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main"
   ],
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer"
   ]
  },
  "package": {
   "name": "green",
   "version": "3.2.4"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size"
   ]
  },
  "source": {
   "fn": "green-3.2.4.tar.gz",
   "sha256": "3473abb4629c8c1af9f6b59a4f9c757315736580053a64bbfd91ff21ccad57a8",
   "url": "https://pypi.io/packages/source/g/green/green-3.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "green -h",
    "green -h",
    "green -h",
    "green -h",
    "green -h"
   ],
   "imports": [
    "green",
    "green",
    "green",
    "green",
    "green"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "colorama",
    "coverage",
    "get_terminal_size",
    "python",
    "python-termstyle",
    "unidecode"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "green"
  ]
 },
 "pinning_version": "2021.04.27.07.37.24",
 "raw_meta_yaml": "{% set name = \"green\" %}\n{% set version = \"3.2.4\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 3473abb4629c8c1af9f6b59a4f9c757315736580053a64bbfd91ff21ccad57a8\n\nbuild:\n  number: 0\n  entry_points:\n    - green = green.cmdline:main\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - colorama\n    - python-termstyle\n    - unidecode\n    - mock  # [py2k]\n    - coverage\n    - get_terminal_size\n\ntest:\n  imports:\n    - green\n  commands:\n    - green -h\n\nabout:\n  home: https://github.com/CleanCut/green\n  license: MIT\n  license_family: MIT\n  license_file: {{ environ[\"RECIPE_DIR\"] }}/LICENSE\n  summary: Green is a clean, colorful, fast python test runner\n  description: >\n    Green - A clean, colorful, fast python test runner.\n\n    Features --------\n\n    - **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful**\n    - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in,\n    optional integration with\n      [coverage](http://nedbatchelder.com/code/coverage/).\n    - **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living**\n    - This project grows and changes.  See the\n  doc_url: https://github.com/CleanCut/green#green\n  dev_url: https://github.com/CleanCut/green\n\nextra:\n  recipe-maintainers:\n    - ReimarBauer\n",
 "req": {
  "__set__": true,
  "elements": [
   "colorama",
   "coverage",
   "get_terminal_size",
   "python",
   "python-termstyle",
   "setuptools",
   "unidecode"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "colorama",
    "coverage",
    "get_terminal_size",
    "python",
    "python-termstyle",
    "unidecode"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "colorama",
    "coverage",
    "get_terminal_size",
    "python",
    "python-termstyle",
    "unidecode"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/g/green/green-3.2.4.tar.gz",
 "version": "3.2.4",
 "win_64_meta_yaml": {
  "about": {
   "description": "Green - A clean, colorful, fast python test runner.\nFeatures --------\n- **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful** - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in, optional integration with\n  [coverage](http://nedbatchelder.com/code/coverage/).\n- **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living** - This project grows and changes.  See the\n",
   "dev_url": "https://github.com/CleanCut/green",
   "doc_url": "https://github.com/CleanCut/green#green",
   "home": "https://github.com/CleanCut/green",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/LICENSE",
   "summary": "Green is a clean, colorful, fast python test runner"
  },
  "build": {
   "entry_points": [
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main",
    "green = green.cmdline:main"
   ],
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer",
    "ReimarBauer"
   ]
  },
  "package": {
   "name": "green",
   "version": "3.2.4"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size",
    "python",
    "colorama",
    "python-termstyle",
    "unidecode",
    "coverage",
    "get_terminal_size"
   ]
  },
  "source": {
   "fn": "green-3.2.4.tar.gz",
   "sha256": "3473abb4629c8c1af9f6b59a4f9c757315736580053a64bbfd91ff21ccad57a8",
   "url": "https://pypi.io/packages/source/g/green/green-3.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "green -h",
    "green -h",
    "green -h",
    "green -h"
   ],
   "imports": [
    "green",
    "green",
    "green",
    "green"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "colorama",
    "coverage",
    "get_terminal_size",
    "python",
    "python-termstyle",
    "unidecode"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}