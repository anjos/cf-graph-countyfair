{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/419424002.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "json_schema_validator",
 "hash_type": "sha256",
 "name": "json_schema_validator",
 "new_version": "2.1.0",
 "new_version_attempts": {
  "2.1.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "json_schema_validator"
  ]
 },
 "pinning_version": "2020.05.18.07.24.43",
 "raw_meta_yaml": "{% set name = \"json_schema_validator\" %}\n{% set version = \"2.1.0\" %}\n{% set sha256 = \"83f61d8112f485e0d3f1e72d51610ba3924b179926a8376aef3c038770faf202\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pboettch/json-schema-validator/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - nlohmann_json\n  run:\n    - nlohmann_json\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/nlohmann/json-schema.hpp  # [unix]\n    - test -f ${PREFIX}/lib/libnlohmann_json_schema_validator.so  # [linux]\n    - test -f ${PREFIX}/lib/libnlohmann_json_schema_validator.dylib  # [osx]\n    - test -f %PREFIX%\\Library\\include\\nlohmann\\json-schema.hpp  # [win]\n    - test -f %PREFIX%\\Library\\bin\\nlohmann_json_schema_validator.dll  # [win]\n    - test -f %PREFIX%\\Library\\lib\\nlohmann_json_schema_validator.lib  # [win]\n\nabout:\n  home: https://github.com/pboettch/json-schema-validator\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: JSON schema validator for JSON for Modern C++\n\nextra:\n  recipe-maintainers:\n    - asafkahlon\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.2\n",
 "strong_exports": false,
 "url": "https://github.com/pboettch/json-schema-validator/archive/2.1.0.tar.gz",
 "version": "2.1.0"
}