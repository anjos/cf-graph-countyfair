{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1037340729.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0_1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-scs",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/FlorianSchwendinger/scs",
   "license": "GPL-3.0-only",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Solves convex cone programs via operator splitting. Can solve: linear programs ('LPs'), second-order cone programs ('SOCPs'), semidefinite programs ('SDPs'), exponential cone programs ('ECPs'), and power cone programs ('PCPs'), or problems with any combination of those cones. 'SCS' uses 'AMD' (a set of routines for permuting sparse matrices prior to factorization) and 'LDL' (a sparse 'LDL' factorization and solve package) from 'SuiteSparse' (<https://people.engr.tamu.edu/davis/suitesparse.html>)."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-scs",
   "version": "3.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack"
   ],
   "run": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack"
   ]
  },
  "source": {
   "sha256": "d6881eeec7282f8bfbf60847327786e7f90299e4b8c0b084d8bd11fec7705913",
   "url": [
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('scs')\"",
    "$R -e \"library('scs')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/FlorianSchwendinger/scs",
   "license": "GPL-3.0-only",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Solves convex cone programs via operator splitting. Can solve: linear programs ('LPs'), second-order cone programs ('SOCPs'), semidefinite programs ('SDPs'), exponential cone programs ('ECPs'), and power cone programs ('PCPs'), or problems with any combination of those cones. 'SCS' uses 'AMD' (a set of routines for permuting sparse matrices prior to factorization) and 'LDL' (a sparse 'LDL' factorization and solve package) from 'SuiteSparse' (<https://people.engr.tamu.edu/davis/suitesparse.html>)."
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-scs",
   "version": "3.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make",
    "m2w64_c_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "m2w64_c_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack"
   ],
   "run": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "gcc-libs",
    "libblas",
    "liblapack",
    "r-base",
    "gcc-libs",
    "libblas",
    "liblapack"
   ]
  },
  "source": {
   "sha256": "d6881eeec7282f8bfbf60847327786e7f90299e4b8c0b084d8bd11fec7705913",
   "url": [
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('scs')\"",
    "$R -e \"library('scs')\"",
    "$R -e \"library('scs')\"",
    "$R -e \"library('scs')\"",
    "\"%R%\" -e \"library('scs')\"",
    "\"%R%\" -e \"library('scs')\""
   ]
  }
 },
 "name": "r-scs",
 "new_version": "3.0_1",
 "new_version_attempts": {
  "3.0_1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/FlorianSchwendinger/scs",
   "license": "GPL-3.0-only",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Solves convex cone programs via operator splitting. Can solve: linear programs ('LPs'), second-order cone programs ('SOCPs'), semidefinite programs ('SDPs'), exponential cone programs ('ECPs'), and power cone programs ('PCPs'), or problems with any combination of those cones. 'SCS' uses 'AMD' (a set of routines for permuting sparse matrices prior to factorization) and 'LDL' (a sparse 'LDL' factorization and solve package) from 'SuiteSparse' (<https://people.engr.tamu.edu/davis/suitesparse.html>)."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-scs",
   "version": "3.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack"
   ],
   "run": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack"
   ]
  },
  "source": {
   "sha256": "d6881eeec7282f8bfbf60847327786e7f90299e4b8c0b084d8bd11fec7705913",
   "url": [
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('scs')\"",
    "$R -e \"library('scs')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-scs"
  ]
 },
 "pinning_version": "2022.08.25.22.39.31",
 "pre_pr_migrator_attempts": {
  "r-base42": 1
 },
 "pre_pr_migrator_status": {
  "r-base42": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3168208611\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 278, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"3.0-1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-scs\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/scs_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/scs/scs_{{ version }}.tar.gz\n  sha256: d6881eeec7282f8bfbf60847327786e7f90299e4b8c0b084d8bd11fec7705913\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - libblas\n    - liblapack\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - libblas\n    - liblapack\n\ntest:\n  commands:\n    - $R -e \"library('scs')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('scs')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/FlorianSchwendinger/scs\n  license: GPL-3.0-only\n  summary: \"Solves convex cone programs via operator splitting. Can solve: linear programs ('LPs'), second-order cone programs ('SOCPs'), semidefinite programs ('SDPs'), exponential cone programs ('ECPs'), and power cone programs ('PCPs'), or problems with any combination of those cones. 'SCS' uses 'AMD' (a set of routines\\\n    \\ for permuting sparse matrices prior to factorization) and 'LDL' (a sparse 'LDL' factorization and solve package) from 'SuiteSparse' (<https://people.engr.tamu.edu/davis/suitesparse.html>).\"\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "coreutils",
   "filesystem",
   "gcc-libs",
   "libblas",
   "liblapack",
   "m2w64_c_compiler_stub",
   "make",
   "r-base",
   "sed",
   "zip"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "gcc-libs",
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz"
 ],
 "version": "3.0_1",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/FlorianSchwendinger/scs",
   "license": "GPL-3.0-only",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Solves convex cone programs via operator splitting. Can solve: linear programs ('LPs'), second-order cone programs ('SOCPs'), semidefinite programs ('SDPs'), exponential cone programs ('ECPs'), and power cone programs ('PCPs'), or problems with any combination of those cones. 'SCS' uses 'AMD' (a set of routines for permuting sparse matrices prior to factorization) and 'LDL' (a sparse 'LDL' factorization and solve package) from 'SuiteSparse' (<https://people.engr.tamu.edu/davis/suitesparse.html>)."
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-scs",
   "version": "3.0_1"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "m2w64_c_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "libblas",
    "liblapack",
    "r-base",
    "libblas",
    "liblapack"
   ],
   "run": [
    "r-base",
    "gcc-libs",
    "libblas",
    "liblapack",
    "r-base",
    "gcc-libs",
    "libblas",
    "liblapack"
   ]
  },
  "source": {
   "sha256": "d6881eeec7282f8bfbf60847327786e7f90299e4b8c0b084d8bd11fec7705913",
   "url": [
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/scs_3.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/scs/scs_3.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "\"%R%\" -e \"library('scs')\"",
    "\"%R%\" -e \"library('scs')\""
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "libblas",
    "liblapack",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}