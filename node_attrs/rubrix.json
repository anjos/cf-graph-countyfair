{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/828203495.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836747502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "rubrix",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Rubrix is a **production-ready Python framework for exploring, annotating, and\nmanaging data** in NLP projects.\n\nKey features:\n\n  - **Open**: Rubrix is free, open-source, and 100% compatible with major NLP\n    libraries (Hugging Face transformers, spaCy, Stanford Stanza, Flair, etc.).\n    In fact, you can use and combine your preferred libraries without implementing\n    any specific interface.\n\n  - **End-to-end**: Most annotation tools treat data collection as a one-off\n    activity at the beginning of each project. In real-world projects, data\n    collection is a key activity of the iterative process of ML model development.\n    Once a model goes into production, you want to monitor and analyze its\n    predictions, and collect more data to improve your model over time. Rubrix\n    is designed to close this gap, enabling you to iterate as much as you need.\n\n  - **User and Developer Experience**: The key to sustainable NLP solutions is to\n    make it easier for everyone to contribute to projects. Domain experts should\n    feel comfortable interpreting and annotating data. Data scientists should feel\n    free to experiment and iterate. Engineers should feel in control of data\n    pipelines. Rubrix optimizes the experience for these core users to make your\n    teams more productive.\n\n  - **Beyond hand-labeling**: Classical hand labeling workflows are costly and\n    inefficient, but having humans-in-the-loop is essential. Easily combine\n    hand-labeling with active learning, bulk-labeling, zero-shot models, and\n    weak-supervision in novel data annotation workflows.\n\nPyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\n",
   "dev_url": "https://github.com/recognai/rubrix",
   "doc_url": "https://rubrix.readthedocs.io/en/stable/",
   "home": "https://recogn.ai",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Open-source tool for exploring, labeling, and monitoring data for NLP projects."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray",
    "dcfidalgo"
   ]
  },
  "package": {
   "name": "rubrix",
   "version": "0.8.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools-scm"
   ],
   "run": [
    "python >=3.7",
    "httpx >=0.15.0,<0.16.0",
    "numpy",
    "pandas >=1.0.0,<2.0.0",
    "pydantic >=1.7.1",
    "starlette >=0.13.0,<1.0.0",
    "tqdm >=4.27.0",
    "wrapt >=1.13.0,<1.14.0"
   ]
  },
  "source": {
   "sha256": "de3138335358f9c1944ac625478535dd470b9a3b896e7c29ac31c7b0f1e0a16a",
   "url": "https://pypi.io/packages/source/r/rubrix/rubrix-0.8.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "rubrix",
    "rubrix.client"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools-scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "httpx",
    "numpy",
    "pandas",
    "pydantic",
    "python",
    "starlette",
    "tqdm",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Rubrix is a **production-ready Python framework for exploring, annotating, and\nmanaging data** in NLP projects.\n\nKey features:\n\n  - **Open**: Rubrix is free, open-source, and 100% compatible with major NLP\n    libraries (Hugging Face transformers, spaCy, Stanford Stanza, Flair, etc.).\n    In fact, you can use and combine your preferred libraries without implementing\n    any specific interface.\n\n  - **End-to-end**: Most annotation tools treat data collection as a one-off\n    activity at the beginning of each project. In real-world projects, data\n    collection is a key activity of the iterative process of ML model development.\n    Once a model goes into production, you want to monitor and analyze its\n    predictions, and collect more data to improve your model over time. Rubrix\n    is designed to close this gap, enabling you to iterate as much as you need.\n\n  - **User and Developer Experience**: The key to sustainable NLP solutions is to\n    make it easier for everyone to contribute to projects. Domain experts should\n    feel comfortable interpreting and annotating data. Data scientists should feel\n    free to experiment and iterate. Engineers should feel in control of data\n    pipelines. Rubrix optimizes the experience for these core users to make your\n    teams more productive.\n\n  - **Beyond hand-labeling**: Classical hand labeling workflows are costly and\n    inefficient, but having humans-in-the-loop is essential. Easily combine\n    hand-labeling with active learning, bulk-labeling, zero-shot models, and\n    weak-supervision in novel data annotation workflows.\n\nPyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\n",
   "dev_url": "https://github.com/recognai/rubrix",
   "doc_url": "https://rubrix.readthedocs.io/en/stable/",
   "home": "https://recogn.ai",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Open-source tool for exploring, labeling, and monitoring data for NLP projects."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray",
    "dcfidalgo"
   ]
  },
  "package": {
   "name": "rubrix",
   "version": "0.8.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7",
    "setuptools-scm"
   ],
   "run": [
    "python >=3.7",
    "httpx >=0.15.0,<0.16.0",
    "numpy",
    "pandas >=1.0.0,<2.0.0",
    "pydantic >=1.7.1",
    "starlette >=0.13.0,<1.0.0",
    "tqdm >=4.27.0",
    "wrapt >=1.13.0,<1.14.0"
   ]
  },
  "source": {
   "sha256": "de3138335358f9c1944ac625478535dd470b9a3b896e7c29ac31c7b0f1e0a16a",
   "url": "https://pypi.io/packages/source/r/rubrix/rubrix-0.8.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "rubrix",
    "rubrix.client"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "rubrix",
 "new_version": "0.8.2",
 "new_version_attempts": {
  "0.8.0": 4,
  "0.8.1": 1,
  "0.8.2": 1
 },
 "new_version_errors": {
  "0.8.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.8.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/rubrix-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rubrix"
  ]
 },
 "pinning_version": "2022.01.31.20.15.53",
 "raw_meta_yaml": "{% set name = \"rubrix\" %}\n{% set version = \"0.8.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/rubrix-{{ version }}.tar.gz\n  sha256: de3138335358f9c1944ac625478535dd470b9a3b896e7c29ac31c7b0f1e0a16a\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n    - setuptools-scm\n  run:\n    - python >=3.7\n    - httpx >=0.15.0,<0.16.0\n    - numpy\n    - pandas >=1.0.0,<2.0.0\n    - pydantic >=1.7.1\n    - starlette >=0.13.0,<1.0.0\n    - tqdm >=4.27.0\n    - wrapt >=1.13.0,<1.14.0\n\ntest:\n  imports:\n    - rubrix\n    - rubrix.client\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://recogn.ai\n  summary: Open-source tool for exploring, labeling, and monitoring data for NLP projects.\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    Rubrix is a **production-ready Python framework for exploring, annotating, and \n    managing data** in NLP projects.\n\n    Key features:\n\n      - **Open**: Rubrix is free, open-source, and 100% compatible with major NLP \n        libraries (Hugging Face transformers, spaCy, Stanford Stanza, Flair, etc.). \n        In fact, you can use and combine your preferred libraries without implementing \n        any specific interface.\n\n      - **End-to-end**: Most annotation tools treat data collection as a one-off \n        activity at the beginning of each project. In real-world projects, data \n        collection is a key activity of the iterative process of ML model development. \n        Once a model goes into production, you want to monitor and analyze its \n        predictions, and collect more data to improve your model over time. Rubrix \n        is designed to close this gap, enabling you to iterate as much as you need.\n\n      - **User and Developer Experience**: The key to sustainable NLP solutions is to \n        make it easier for everyone to contribute to projects. Domain experts should \n        feel comfortable interpreting and annotating data. Data scientists should feel \n        free to experiment and iterate. Engineers should feel in control of data \n        pipelines. Rubrix optimizes the experience for these core users to make your \n        teams more productive.\n\n      - **Beyond hand-labeling**: Classical hand labeling workflows are costly and \n        inefficient, but having humans-in-the-loop is essential. Easily combine \n        hand-labeling with active learning, bulk-labeling, zero-shot models, and \n        weak-supervision in novel data annotation workflows.\n\n    PyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\n\n  doc_url: https://rubrix.readthedocs.io/en/stable/\n  dev_url: https://github.com/recognai/rubrix\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n    # Maintainers from rubrix repository\n    - dcfidalgo\n",
 "req": {
  "__set__": true,
  "elements": [
   "httpx",
   "numpy",
   "pandas",
   "pip",
   "pydantic",
   "python",
   "setuptools-scm",
   "starlette",
   "tqdm",
   "wrapt"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools-scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "httpx",
    "numpy",
    "pandas",
    "pydantic",
    "python",
    "starlette",
    "tqdm",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7",
    "setuptools-scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "httpx >=0.15.0,<0.16.0",
    "numpy",
    "pandas >=1.0.0,<2.0.0",
    "pydantic >=1.7.1",
    "python >=3.7",
    "starlette >=0.13.0,<1.0.0",
    "tqdm >=4.27.0",
    "wrapt >=1.13.0,<1.14.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/r/rubrix/rubrix-0.8.1.tar.gz",
 "version": "0.8.1"
}