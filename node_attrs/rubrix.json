{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/828203495.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836747502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838851636.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/849535738.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/858668930.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/874304161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877611787.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/894820947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/897785927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/907929415.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920668888.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/932428142.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943094437.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/952104717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/962310751.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/991925144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006027116.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "rubrix",
 "hash_type": "sha256",
 "name": "rubrix-meta",
 "new_version": "0.16.1",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.11.0": 1,
  "0.12.0": 1,
  "0.12.1": 1,
  "0.13.0": 1,
  "0.13.1": 1,
  "0.13.2": 1,
  "0.13.3": 1,
  "0.14.0": 1,
  "0.14.1": 1,
  "0.14.2": 1,
  "0.15.0": 1,
  "0.16.0": 1,
  "0.16.1": 1,
  "0.8.0": 4,
  "0.8.1": 1,
  "0.8.2": 1,
  "0.9.0": 1
 },
 "new_version_errors": {
  "0.8.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.8.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/rubrix-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rubrix",
   "rubrix-server"
  ]
 },
 "pinning_version": "2022.07.22.15.28.03",
 "raw_meta_yaml": "{% set name = \"rubrix\" %}\n{% set version = \"0.16.1\" %}\n{% set build_num = 0 %}\n\n\n#######################################################\n\n## Subpackage Build Switches\n#  This serves as a meta-level build switch \n#  for the subpackages.\n## How does this work?\n#  If \"use_all_subpackages = True\", this overrides all \n#  other subpackage-specific switches. But, if you only \n#  want to selectively create certain subpackages, then \n#  set \"use_all_subpackages = False\" and \n#  set \"use_<subpackage_name> = True\". \n## Example: \n#  To not build the server-subpackage, you will \n#  set \"use_server_packages = False\" in addition to: \n#  - setting \"use_all_subpackages = False\"\n#  - and all other subpackage-switches to \"True\".\n\n{% set use_all_subpackages = false %}\n\n{% set use_server_packages = true %}\n\n#######################################################\n\n\n#################### BEGIN RECIPE #####################\n\npackage:\n  name: {{ name|lower }}-meta\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/rubrix-{{ version }}.tar.gz\n  sha256: df3a85d482a6224247d15686a233ef9e84e37ff0b9ca0f57892df05fcd0ff6fd\n\nbuild:\n  number: {{ build_num }}\n\noutputs:\n  ### base_packages\n  - name: {{ name|lower }}\n    build:\n      noarch: python\n    script: build_base.sh\n    requirements:\n      host:\n        - pip\n        - python >=3.7\n        - setuptools-scm\n      run:\n        - python >=3.7\n        # base_packages\n        - httpx >=0.15.0,<0.16.0\n        - numpy\n        - packaging >=20.0\n        - pandas >=1.0.0,<2.0.0\n        - pydantic >=1.7.1\n        - tqdm >=4.27.0\n        - wrapt >=1.13.0,<1.14.0\n    test:\n      imports:\n        - rubrix\n        - rubrix.client\n      commands:\n        - pip check\n      requires:\n        - pip\n\n  ### server_packages\n  {% if use_server_packages is defined %}\n  {% if use_server_packages or use_all_subpackages %}\n  {% with subpackage_id = \"server\" %}\n  - name: {{ name|lower }}-{{ subpackage_id }}\n    build:\n      noarch: generic\n      string: {{ build_num }}_{{ subpackage_id }}_extra\n    requirements:\n      run:\n        # RECIPE: \n        # \"server\": base_packages + server_packages\n        - {{ name|lower }} {{ version }}\n        # server_packages\n        - Deprecated >=1.2.0,<1.3.0\n        - PyYAML >=5.4.1,<5.5.0\n        - aiofiles >=0.6.0,<0.7.0\n        - brotli-asgi >=1.1.0,<1.2.0\n        - fastapi >=0.75.0,<0.76.0\n        - hurry.filesize\n        - luqum >=0.11.0,<0.12.0\n        - opensearch-py >=1.0.0,<1.1.0\n        - passlib >=1.7.4,<1.8.0\n        - psutil >=5.8.0,<5.9.0\n        - python-jose >=3.2.0,<3.3.0\n        - python-multipart >=0.0.5,<0.1.0\n        - scikit-learn >=0.24.2\n        - smart_open\n        - stopwordsiso >=0.6.1,<0.7.0\n        - uvicorn-standard >0.15.0,<0.18.0\n        # necessary to pass \"pip check\"\n        - ecdsa <0.15.0\n        - pyasn1 ==0.4.8\n        - rsa ==4.8\n    test:\n      imports:\n        - rubrix\n        - rubrix.client\n        - rubrix.server.server\n      commands:\n        - pip check\n      requires:\n        - pip\n  {% endwith %}\n  {% endif %}\n  {% endif %}\n\nabout:\n  home: https://recogn.ai\n  summary: Open-source tool for exploring, labeling, and monitoring data for NLP projects.\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    Rubrix is a **production-ready Python framework for exploring, annotating, and \n    managing data** in NLP projects.\n\n    Key features:\n\n      - **Open**: Rubrix is free, open-source, and 100% compatible with major NLP \n        libraries (Hugging Face transformers, spaCy, Stanford Stanza, Flair, etc.). \n        In fact, you can use and combine your preferred libraries without implementing \n        any specific interface.\n\n      - **End-to-end**: Most annotation tools treat data collection as a one-off \n        activity at the beginning of each project. In real-world projects, data \n        collection is a key activity of the iterative process of ML model development. \n        Once a model goes into production, you want to monitor and analyze its \n        predictions, and collect more data to improve your model over time. Rubrix \n        is designed to close this gap, enabling you to iterate as much as you need.\n\n      - **User and Developer Experience**: The key to sustainable NLP solutions is to \n        make it easier for everyone to contribute to projects. Domain experts should \n        feel comfortable interpreting and annotating data. Data scientists should feel \n        free to experiment and iterate. Engineers should feel in control of data \n        pipelines. Rubrix optimizes the experience for these core users to make your \n        teams more productive.\n\n      - **Beyond hand-labeling**: Classical hand labeling workflows are costly and \n        inefficient, but having humans-in-the-loop is essential. Easily combine \n        hand-labeling with active learning, bulk-labeling, zero-shot models, and \n        weak-supervision in novel data annotation workflows.\n\n    PyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\n\n  doc_url: https://rubrix.readthedocs.io/en/stable/\n  dev_url: https://github.com/recognai/rubrix\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n    # Maintainers from rubrix repository\n    - dcfidalgo\n\n  feedstock-name: {{ name|lower }}\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/r/rubrix/rubrix-0.16.1.tar.gz",
 "version": "0.16.1"
}