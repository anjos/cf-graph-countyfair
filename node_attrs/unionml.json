{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1020910957.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "unionml",
 "hash_type": "sha256",
 "name": "unionml",
 "new_version": "0.1.3",
 "new_version_attempts": {
  "0.1.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "unionml"
  ]
 },
 "pinning_version": "2022.08.08.19.07.35",
 "raw_meta_yaml": "{% set reqfile = \"requirements.txt\" %}\n{% set name = \"unionml\" %}\n{% set version = \"0.1.3\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/unionml-{{ version }}.tar.gz\n  sha256: f755f85f1ef71b61c895ada99cc2cdb010cf9d045c7facfa4d4cedb5fd02c300\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - unionml = unionml.cli:app\n  script:\n    ## Ensure inclusion of requirements.txt\n    {% set reqfile = \"requirements.txt\" %}\n    {% set reqsource = name ~ \".egg-info/requires.txt\" %}\n    # IF {{ reqfile }} is NOT PRESENT, COPY {{ reqfile }} from {{ reqsource }}\n    - echo -e \"\\n>>> ENSURE INCLUSION OF '{{ reqfile }}' <<<\\n\\n\"\n    - if [ ! -f {{ reqfile }} ] && [ -f {{ reqsource }} ]; then cp {{ reqsource }} {{ reqfile }}; fi  # [not win]\n    #- copy {{ name }}.egg-info\\requires.txt {{ reqfile }}  # [win]\n    - copy {{ reqsource | replace('/', '\\\\') }} {{ reqfile }}  # [win] \n    ## Install package {{ name }} from PyPI \n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - python >=3.7\n    - click\n    - cookiecutter\n    - dataclasses-json\n    - docker-py\n    - fastapi\n    - flytekit >=1.0.0\n    - gitpython\n    - joblib\n    - mangum\n    - numpy\n    - pandas\n    - pydantic\n    - scikit-learn\n    - typer\n    - uvicorn\n    # necessary for gitpython\n    - git\n\ntest:\n  imports:\n    - unionml\n  commands:\n    #- pip check\n    - unionml --help\n  requires:\n    - pip\n\nabout:\n  home: https://pypi.org/project/unionml/\n  summary: The easiest way to build and deploy machine learning microservices.\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    **UnionML** is an open source MLOps framework that aims to reduce the boilerplate and friction\n    that comes with building models and deploying them to production.\n\n    You can create **UnionML Apps** by defining a few core methods that are automatically bundled\n    into ML microservices, starting with model training and offline and online prediction.\n\n    Built on top of [Flyte](https://docs.flyte.org/en/latest/), UnionML provides a high-level\n    interface for productionizing your ML models so that you can focus on curating a better dataset\n    and improving your models.\n\n    To learn more, check out the \uD83D\uDCD6 [documentation](https://unionml.readthedocs.io).\n\n    PyPI: [https://pypi.org/project/unionml/](https://pypi.org/project/unionml/)\n\n  doc_url: https://unionml.readthedocs.io/\n  dev_url: https://github.com/unionai-oss/unionml\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/u/unionml/unionml-0.1.3.tar.gz",
 "version": "0.1.3"
}