{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/654255560.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-simfit",
 "hash_type": "sha256",
 "name": "r-simfit",
 "new_version": "0.1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-simfit"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = '0.1.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-simfit\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/simfit_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/simfit/simfit_{{ version }}.tar.gz\n  sha256: fe512a14a0201072fdc9486b588ff888489ea9f492bb37853fa1f5bbfb9d9372\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-ggplot2\n    - r-magrittr\n  run:\n    - r-base\n    - r-ggplot2\n    - r-magrittr\n\ntest:\n  commands:\n    - $R -e \"library('simfit')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('simfit')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=simfit\n  license: GPL-3.0-only\n  summary: Simulates data from model objects (e.g., from lm(), glm()), and plots this along with\n    the original data to compare how well the simulated data matches the original data\n    to determine model fit.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/simfit_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/simfit/simfit_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/simfit_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/simfit/simfit_0.1.0.tar.gz"
 ],
 "version": "0.1.0"
}