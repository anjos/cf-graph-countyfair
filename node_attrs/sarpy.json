{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/792313704.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.43"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/807159295.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.45"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/811576058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.46"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812043027.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.47"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815654885.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.48"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/816747289.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.49"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/819435626.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.50"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/828279891.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.52"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/832039324.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.53"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836842384.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.54"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/837960386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.55"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/842418783.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.56"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/855311693.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.58"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/862158758.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.59"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/869112815.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.60"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/879760697.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.62"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/883111586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.63"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/886625396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/892530963.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.65"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/901204318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.66"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908498536.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.67"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910539064.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.68"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/912567561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.69"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/959764860.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/962870920.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/974066721.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/985295883.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1024533763.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "sarpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SarPy is a basic Python library to read, write, display, and do simple processing of complex SAR data using the\nNGA SICD format. It has been released by NGA to encourage the use of SAR data standards throughout the\ninternational SAR community. SarPy complements the SIX library (C++) and the MATLAB SAR Toolbox, which are\nimplemented in other languages but have similar goals.\n\nSome sample SICD files can be found here.\n\nIn addition to SICD, SarPy can also read COSMO-SkyMed, RADARSAT-2, Radar Constellation Mission (RCM), and\nSentinel-1 SLC formats and convert them to SICD.\n\nSome examples of how to read complex SAR data using SarPy are provided in docs/sarpy_example.py.\n",
   "dev_url": "https://github.com/ngageoint/sarpy",
   "doc_url": "https://sarpy.readthedocs.io/en/latest/",
   "home": "https://github.com/ngageoint/sarpy",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python tools for reading, writing, and simple processing of complex SAR data and other associated data."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jordan-heemskerk"
   ]
  },
  "package": {
   "name": "sarpy",
   "version": "1.3.5"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "numpy >=1.11.0",
    "python >=3.6",
    "scipy"
   ]
  },
  "source": {
   "sha256": "2cba8b64ac08e374be42e9f60ee6aba0e1bc5026d1a6811b2313da8f0c5a626a",
   "url": "https://pypi.io/packages/source/s/sarpy/sarpy-1.3.5.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "sarpy",
    "sarpy.annotation"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SarPy is a basic Python library to read, write, display, and do simple processing of complex SAR data using the\nNGA SICD format. It has been released by NGA to encourage the use of SAR data standards throughout the\ninternational SAR community. SarPy complements the SIX library (C++) and the MATLAB SAR Toolbox, which are\nimplemented in other languages but have similar goals.\n\nSome sample SICD files can be found here.\n\nIn addition to SICD, SarPy can also read COSMO-SkyMed, RADARSAT-2, Radar Constellation Mission (RCM), and\nSentinel-1 SLC formats and convert them to SICD.\n\nSome examples of how to read complex SAR data using SarPy are provided in docs/sarpy_example.py.\n",
   "dev_url": "https://github.com/ngageoint/sarpy",
   "doc_url": "https://sarpy.readthedocs.io/en/latest/",
   "home": "https://github.com/ngageoint/sarpy",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python tools for reading, writing, and simple processing of complex SAR data and other associated data."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jordan-heemskerk"
   ]
  },
  "package": {
   "name": "sarpy",
   "version": "1.3.5"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6"
   ],
   "run": [
    "numpy >=1.11.0",
    "python >=3.6",
    "scipy"
   ]
  },
  "source": {
   "sha256": "2cba8b64ac08e374be42e9f60ee6aba0e1bc5026d1a6811b2313da8f0c5a626a",
   "url": "https://pypi.io/packages/source/s/sarpy/sarpy-1.3.5.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "sarpy",
    "sarpy.annotation"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "sarpy",
 "new_version": "1.3.6",
 "new_version_attempts": {
  "1.2.43": 1,
  "1.2.45": 1,
  "1.2.46": 1,
  "1.2.47": 1,
  "1.2.48": 1,
  "1.2.49": 1,
  "1.2.50": 1,
  "1.2.52": 1,
  "1.2.53": 1,
  "1.2.54": 1,
  "1.2.55": 1,
  "1.2.56": 1,
  "1.2.58": 1,
  "1.2.59": 1,
  "1.2.60": 1,
  "1.2.62": 1,
  "1.2.63": 1,
  "1.2.64": 1,
  "1.2.65": 1,
  "1.2.66": 1,
  "1.2.67": 1,
  "1.2.68": 1,
  "1.2.69": 1,
  "1.3.0": 1,
  "1.3.2": 1,
  "1.3.3": 1,
  "1.3.4": 1,
  "1.3.5": 8,
  "1.3.6": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "sarpy"
  ]
 },
 "pinning_version": "2022.08.11.23.35.06",
 "pre_pr_migrator_attempts": {
  "version": 1
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2915966997\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 278, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"sarpy\" %}\n{% set version = \"1.3.5\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/sarpy-{{ version }}.tar.gz\n  sha256: 2cba8b64ac08e374be42e9f60ee6aba0e1bc5026d1a6811b2313da8f0c5a626a\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - numpy >=1.11.0\n    - python >=3.6\n    - scipy\n\ntest:\n  imports:\n    - sarpy\n    - sarpy.annotation\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/ngageoint/sarpy\n  summary: Python tools for reading, writing, and simple processing of complex SAR data and other associated data.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  description: |\n    SarPy is a basic Python library to read, write, display, and do simple processing of complex SAR data using the\n    NGA SICD format. It has been released by NGA to encourage the use of SAR data standards throughout the\n    international SAR community. SarPy complements the SIX library (C++) and the MATLAB SAR Toolbox, which are\n    implemented in other languages but have similar goals.\n\n    Some sample SICD files can be found here.\n\n    In addition to SICD, SarPy can also read COSMO-SkyMed, RADARSAT-2, Radar Constellation Mission (RCM), and\n    Sentinel-1 SLC formats and convert them to SICD.\n\n    Some examples of how to read complex SAR data using SarPy are provided in docs/sarpy_example.py.\n  doc_url: https://sarpy.readthedocs.io/en/latest/\n  dev_url: https://github.com/ngageoint/sarpy\n\nextra:\n  recipe-maintainers:\n    - jordan-heemskerk\n",
 "req": {
  "__set__": true,
  "elements": [
   "numpy",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy >=1.11.0",
    "python >=3.6",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/sarpy/sarpy-1.3.5.tar.gz",
 "version": "1.3.5"
}