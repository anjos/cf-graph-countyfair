{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/852601859.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyposeidon",
 "hash_type": "sha256",
 "name": "pyposeidon",
 "new_version": "0.6.0",
 "new_version_attempts": {
  "0.6.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyposeidon",
   "pyposeidon-base"
  ]
 },
 "pinning_version": "2022.02.14.13.20.49",
 "raw_meta_yaml": "{% set name = \"pyposeidon\" %}\n{% set version = \"0.6.0\" %}\n{% set build = 2 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ec-jrc/pyPoseidon/archive/{{ version }}.tar.gz\n  sha256: d2eba8d0710e17b57c7578a4a0433b8e1451b8f19847a36343a0fe57e8b085c7\n\nbuild:\n  noarch: python\n  number: {{ build }}\n\noutputs:\n  - name: pyposeidon-base\n    build:\n      noarch: python\n      script: ${PYTHON} -m pip install . --no-deps -vv --no-build-isolation\n    requirements:\n      host:\n        - pip\n        - python >=3.8,<3.9\n        - poetry-core >=1.0.0\n      run:\n        - python >=3.8,<3.9\n        - pyresample\n        - pygeos >=0.10\n        - rasterio\n        - rioxarray\n        - jigsaw\n        - cfgrib\n        - colorlog\n        - f90nml\n        - zarr\n        - gmsh >=4.8.4\n        - python-gmsh\n        - tqdm\n        - xarray\n        - pandas\n        - geopandas >=0.10.1\n        - numpy\n        - psutil\n        - requests\n        - scipy\n        - netcdf4\n        - dask\n        - shapely =1.7.1\n        - pydap >=3.3.0\n\n    test:\n      imports:\n        - pyposeidon\n\n  - name: pyposeidon\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python >=3.8,<3.9\n      run:\n        - python >=3.8,<3.9\n        - {{ pin_subpackage(\"pyposeidon-base\", exact=True) }}\n        - holoviews\n        - geoviews >=1.9.4\n        - hvplot\n        - ipympl\n        - itkwidgets\n        - mayavi\n        - matplotlib-base >=3.3\n        - cartopy <=0.20\n        - ffmpeg\n        - spatialpandas\n\n    test:\n      imports:\n        - pyposeidon\n\n\nabout:\n  home: https://github.com/ec-jrc/pyposeidon\n  license: EUPL-1.2\n  license_file: LICENSE\n  summary: 'Framework for Hydrodynamic simulations'\n\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    pyPoseidon is a framework to setup, run and analyse geoflows.\n    It warps around several solvers and is using python for the\n    pre/post processing utilizing popular packages\n    such as xarray, pandas, geopandas etc.\n  doc_url: https://pyposeidon.readthedocs.io/\n  dev_url: https://github.com/ec-jrc/pyPoseidon\n\nextra:\n  recipe-maintainers:\n    - brey\n    - pmav99\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://github.com/ec-jrc/pyPoseidon/archive/0.6.0.tar.gz",
 "version": "0.6.0"
}