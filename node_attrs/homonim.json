{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/856613807.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/859697443.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/889659133.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/994767092.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995284600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "homonim",
 "hash_type": "sha256",
 "name": "homonim",
 "new_version": "0.2.3",
 "new_version_attempts": {
  "0.1.4": 1,
  "0.1.5": 1,
  "0.1.6": 1,
  "0.2.1": 1,
  "0.2.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "homonim"
  ]
 },
 "pinning_version": "2022.07.12.18.44.47",
 "raw_meta_yaml": "{% set name = \"homonim\" %}\n{% set version = \"0.2.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/homonim-{{ version }}.tar.gz\n  sha256: 9fa22df461f942dc92e56ecb30630431655cf563359682e84122e3b70e118ab8\n\nbuild:\n  entry_points:\n    - homonim=homonim.cli:cli\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - click >=8\n    - numpy >=1.19\n    - opencv >=4.5\n    - python >=3.6\n    - pyyaml >=5.4\n    - rasterio >=1.1\n    - tqdm >=4.6\n    - cloup >=0.15\n    - tabulate >=0.8\n\ntest:\n  imports:\n    - homonim\n  commands:\n    - homonim --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/dugalh/homonim\n  summary: |\n    Correct aerial and satellite imagery to surface reflectance.\n  license: AGPL-3.0-only\n  license_file: LICENSE\n  description: |\n    `homonim` provides a command line interface and API for correcting \n    remotely sensed imagery to approximate surface reflectance.  It is a form \n    of *spectral harmonisation*, that adjusts for spatially varying \n    atmospheric and anisotropic (BRDF) effects, by fusion with satellite \n    surface reflectance data.  Manual reflectance measurements and target\n    placements are not required.\n    \n    It is useful as a pre-processing step for quantitative mapping \n    applications such as biomass estimation or precision agriculture, and for \n    reducing seamlines and other visual artefacts in image mosaics.  It can be \n    applied to multi-spectral drone, aerial and satellite imagery.\n\n  dev_url: https://github.com/dugalh/homonim\n  doc_url: https://homonim.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - dugalh\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/h/homonim/homonim-0.2.3.tar.gz",
 "version": "0.2.3"
}