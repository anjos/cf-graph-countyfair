{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220437139.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335894906.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340716256.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/361403541.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/387711019.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/617381697.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1099622190.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "pytest-benchmark",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ionelmc/pytest-benchmark",
   "license": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "A py.test fixture for benchmarking code"
  },
  "build": {
   "entry_points": [
    "py.test-benchmark = pytest_benchmark.cli:main",
    "pytest-benchmark = pytest_benchmark.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "astrojuanlu",
    "esloch"
   ]
  },
  "package": {
   "name": "pytest-benchmark",
   "version": "4.0.0"
  },
  "requirements": {
   "host": [
    "python >=3.5",
    "pip"
   ],
   "run": [
    "python >=3.5",
    "pytest >=3.8",
    "py-cpuinfo"
   ]
  },
  "source": {
   "sha256": "fb0785b83efe599a6a956361c0691ae1dbb5318018561af10f3e915caa0048d1",
   "url": "https://pypi.io/packages/source/p/pytest-benchmark/pytest-benchmark-4.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "py.test --traceconfig | grep pytest-benchmark-4.0.0",
    "pytest-benchmark --help",
    "py.test-benchmark --help"
   ],
   "imports": [
    "pytest_benchmark"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "py-cpuinfo",
    "pytest",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/ionelmc/pytest-benchmark",
   "license": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "A py.test fixture for benchmarking code"
  },
  "build": {
   "entry_points": [
    "py.test-benchmark = pytest_benchmark.cli:main",
    "pytest-benchmark = pytest_benchmark.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "astrojuanlu",
    "esloch"
   ]
  },
  "package": {
   "name": "pytest-benchmark",
   "version": "4.0.0"
  },
  "requirements": {
   "host": [
    "python >=3.5",
    "pip"
   ],
   "run": [
    "python >=3.5",
    "pytest >=3.8",
    "py-cpuinfo"
   ]
  },
  "source": {
   "sha256": "fb0785b83efe599a6a956361c0691ae1dbb5318018561af10f3e915caa0048d1",
   "url": "https://pypi.io/packages/source/p/pytest-benchmark/pytest-benchmark-4.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "py.test --traceconfig | grep pytest-benchmark-4.0.0",
    "pytest-benchmark --help",
    "py.test-benchmark --help"
   ],
   "imports": [
    "pytest_benchmark"
   ]
  }
 },
 "name": "pytest-benchmark",
 "new_version": "4.0.0",
 "new_version_attempts": {
  "3.4.1": 1,
  "4.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytest-benchmark"
  ]
 },
 "pinning_version": "2022.10.25.23.05.27",
 "raw_meta_yaml": "{% set name = \"pytest-benchmark\" %}\n{% set version = \"4.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: fb0785b83efe599a6a956361c0691ae1dbb5318018561af10f3e915caa0048d1\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - py.test-benchmark = pytest_benchmark.cli:main\n    - pytest-benchmark = pytest_benchmark.cli:main\n\nrequirements:\n  host:\n    - python >=3.5\n    - pip\n  run:\n    - python >=3.5\n    - pytest >=3.8\n    - py-cpuinfo\n\ntest:\n  imports:\n    - pytest_benchmark\n  commands:\n    - py.test --traceconfig | grep pytest-benchmark-{{ version }}\n    - pytest-benchmark --help\n    - py.test-benchmark --help\n\nabout:\n  home: https://github.com/ionelmc/pytest-benchmark\n  license: BSD-2-Clause\n  license_file: LICENSE\n  summary: A py.test fixture for benchmarking code\n\nextra:\n  recipe-maintainers:\n    - astrojuanlu\n    - esloch\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "py-cpuinfo",
   "pytest",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "py-cpuinfo",
    "pytest",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.5"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "py-cpuinfo",
    "pytest >=3.8",
    "python >=3.5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pytest-benchmark/pytest-benchmark-4.0.0.tar.gz",
 "version": "4.0.0"
}