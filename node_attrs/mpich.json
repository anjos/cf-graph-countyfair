{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/197276282.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209929184.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/282253393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308176664.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340518823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500071789.json"
   },
   "data": {
    "bot_rerun": 1602202239.0540078,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500272663.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521408754.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "mpich",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.\n",
   "dev_url": "https://wiki.mpich.org/mpich/index.php/Main_Page",
   "doc_url": "http://www.mpich.org/documentation/guides",
   "home": "http://www.mpich.org/",
   "license": "LicenseRef-MPICH",
   "license_family": "Other",
   "license_file": "COPYRIGHT",
   "summary": "A high performance widely portable implementation of the MPI standard."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_linux-64 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   }
  ],
  "package": {
   "name": "mpich-mpi",
   "version": "3.4"
  },
  "source": {
   "fn": "mpich-3.4.tar.gz",
   "patches": [
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch"
   ],
   "sha256": "ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b",
   "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gfortran_linux-64"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.\n",
   "dev_url": "https://wiki.mpich.org/mpich/index.php/Main_Page",
   "doc_url": "http://www.mpich.org/documentation/guides",
   "home": "http://www.mpich.org/",
   "license": "LicenseRef-MPICH",
   "license_family": "Other",
   "license_file": "COPYRIGHT",
   "summary": "A high performance widely portable implementation of the MPI standard."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_linux-aarch64 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   }
  ],
  "package": {
   "name": "mpich-mpi",
   "version": "3.4"
  },
  "source": {
   "fn": "mpich-3.4.tar.gz",
   "patches": [
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch"
   ],
   "sha256": "ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b",
   "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gfortran_linux-aarch64"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.\n",
   "dev_url": "https://wiki.mpich.org/mpich/index.php/Main_Page",
   "doc_url": "http://www.mpich.org/documentation/guides",
   "home": "http://www.mpich.org/",
   "license": "LicenseRef-MPICH",
   "license_family": "Other",
   "license_file": "COPYRIGHT",
   "summary": "A high performance widely portable implementation of the MPI standard."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_linux-ppc64le 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   }
  ],
  "package": {
   "name": "mpich-mpi",
   "version": "3.4"
  },
  "source": {
   "fn": "mpich-3.4.tar.gz",
   "patches": [
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch"
   ],
   "sha256": "ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b",
   "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gfortran_linux-ppc64le"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.\n",
   "dev_url": "https://wiki.mpich.org/mpich/index.php/Main_Page",
   "doc_url": "http://www.mpich.org/documentation/guides",
   "home": "http://www.mpich.org/",
   "license": "LicenseRef-MPICH",
   "license_family": "Other",
   "license_file": "COPYRIGHT",
   "summary": "A high performance widely portable implementation of the MPI standard."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_linux-64 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   },
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_linux-aarch64 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   },
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_linux-ppc64le 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo 'ok'"
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   },
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_osx-64 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_3",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   },
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_osx-arm64 11"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   }
  ],
  "package": {
   "name": "mpich-mpi",
   "version": "3.4"
  },
  "source": {
   "fn": "mpich-3.4.tar.gz",
   "patches": [
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch"
   ],
   "sha256": "ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b",
   "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz"
  }
 },
 "name": "mpich-mpi",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.\n",
   "dev_url": "https://wiki.mpich.org/mpich/index.php/Main_Page",
   "doc_url": "http://www.mpich.org/documentation/guides",
   "home": "http://www.mpich.org/",
   "license": "LicenseRef-MPICH",
   "license_family": "Other",
   "license_file": "COPYRIGHT",
   "summary": "A high performance widely portable implementation of the MPI standard."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_osx-64 9"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_2",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   }
  ],
  "package": {
   "name": "mpich-mpi",
   "version": "3.4"
  },
  "source": {
   "fn": "mpich-3.4.tar.gz",
   "patches": [
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch"
   ],
   "sha256": "ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b",
   "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gfortran_osx-64"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.\n",
   "dev_url": "https://wiki.mpich.org/mpich/index.php/Main_Page",
   "doc_url": "http://www.mpich.org/documentation/guides",
   "home": "http://www.mpich.org/",
   "license": "LicenseRef-MPICH",
   "license_family": "Other",
   "license_file": "COPYRIGHT",
   "summary": "A high performance widely portable implementation of the MPI standard."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs": [
   {
    "name": "mpich",
    "requirements": {
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "string": "external_3",
    "test": {
     "commands": [
      "echo \"It works!\""
     ]
    },
    "track_features": [
     "mpich_external"
    ]
   },
   {
    "build": {
     "run_exports": [
      "mpich"
     ]
    },
    "name": "mpich",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "autoconf",
      "automake",
      "libtool",
      "make"
     ],
     "host": [
      "gfortran_osx-arm64 11"
     ],
     "run": [
      "mpi 1.0 mpich"
     ]
    },
    "script": "build-mpi.sh",
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicc",
    "requirements": {
     "run": [
      "mpich",
      "c_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpicxx",
    "requirements": {
     "run": [
      "mpich",
      "cxx_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script": "run_test.sh"
    }
   },
   {
    "build": {
     "script": [
      "echo \"\""
     ]
    },
    "name": "mpich-mpifort",
    "requirements": {
     "run": [
      "mpich",
      "fortran_compiler_stub"
     ]
    },
    "test": {
     "files": [
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script": "run_test.sh"
    }
   }
  ],
  "package": {
   "name": "mpich-mpi",
   "version": "3.4"
  },
  "source": {
   "fn": "mpich-3.4.tar.gz",
   "patches": [
    "0001-Update-config.sub-and-config.guess.patch",
    "0001-Update-config.sub-and-config.guess.patch"
   ],
   "sha256": "ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b",
   "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gfortran_osx-arm64"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mpich",
   "mpich-mpicc",
   "mpich-mpicxx",
   "mpich-mpifort"
  ]
 },
 "pinning_version": "2020.11.15.19.46.57",
 "raw_meta_yaml": "{% set version = \"3.4\" %}\n{% set build = 1 %}\n\n# conda build is not making unique hashes for the different\n# fortran compiler versions\n# we are hacking the build number to do that for now\n{% if fortran_compiler_version == \"9\" %}\n{% set build = build*2 + 0 %}\n{% else %}\n{% set build = build*2 + 1 %}\n{% endif %}\n\npackage:\n  # must not match any outputs for requirements to be handled correctly\n  name: mpich-mpi\n  version: {{ version }}\n\nsource:\n  fn: mpich-{{ version }}.tar.gz\n  url: http://www.mpich.org/static/downloads/{{ version }}/mpich-{{ version }}.tar.gz\n  sha256: ce5e238f0c3c13ab94a64936060cff9964225e3af99df1ea11b130f20036c24b\n  patches:\n    - 0001-Update-config.sub-and-config.guess.patch\n\nbuild:\n  number: {{ build }}\n  skip: True  # [win]\n\noutputs:\n  {% if mpi_type == 'external' %}\n  - name: mpich\n    string: \"{{ mpi_type }}_{{ build }}\"\n    track_features:\n      - mpich_{{ mpi_type }}\n    requirements:\n      run:\n        - mpi 1.0 mpich\n    test:\n      commands:\n        - echo \"It works!\"\n  {% else %}\n  - name: mpich\n    script: build-mpi.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage('mpich', max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - autoconf  # [unix]\n        - automake  # [unix]\n        - libtool   # [unix]\n        - make  # [unix]\n\n      host:\n        - {{ fortran_compiler }}_{{ target_platform }} {{ fortran_compiler_version }}  # hack to force conda to make both fortran abi builds\n      run:\n        - mpi 1.0 mpich\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.sh\n\n  - name: mpich-mpicc\n    build:\n      script:\n        - echo 'ok'  # [not osx]\n        # make CONDA_BUILD_SYSROOT a 'used variable'\n        # so that conda-build knows to pass it to the test env\n        - echo \"{{ CONDA_BUILD_SYSROOT }}\"  # [osx]\n    requirements:\n      run:\n        - {{ pin_subpackage('mpich', exact=True) }}\n        # host C compilers work fine (better) on mac\n        - {{ compiler('c') }}\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.c\n\n  - name: mpich-mpicxx\n    build:\n      script:\n        - echo 'ok'  # [not osx]\n        # make CONDA_BUILD_SYSROOT a 'used variable'\n        # so that conda-build knows to pass it to the test env\n        - echo \"{{ CONDA_BUILD_SYSROOT }}\"  # [osx]\n    requirements:\n      run:\n        - {{ pin_subpackage('mpich', exact=True) }}\n        # host C compilers work fine (better) on mac\n        - {{ compiler('cxx') }}\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.cxx\n\n  - name: mpich-mpifort\n    build:\n      script:\n        - echo 'ok'  # [not osx]\n        # make CONDA_BUILD_SYSROOT a 'used variable'\n        # so that conda-build knows to pass it to the test env\n        - echo \"{{ CONDA_BUILD_SYSROOT }}\"  # [osx]\n    requirements:\n      run:\n        - {{ pin_subpackage('mpich', exact=True) }}\n        - {{ compiler('fortran') }}\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.f\n        - tests/helloworld.f90\n  {% endif %}\n\nabout:\n  home: http://www.mpich.org/\n  license: LicenseRef-MPICH\n  license_file: COPYRIGHT\n  license_family: Other\n  summary: 'A high performance widely portable implementation of the MPI standard.'\n  description: |\n    MPICH is a high performance and widely portable implementation of the\n    Message Passing Interface (MPI) standard.\n  doc_url: http://www.mpich.org/documentation/guides\n  dev_url: https://wiki.mpich.org/mpich/index.php/Main_Page\n\nextra:\n  recipe-maintainers:\n    - astrofrog-conda-forge\n    - bekozi\n    - dalcinl\n    - minrk\n    - msarahan\n    - ocefpaf\n",
 "req": {
  "__set__": true,
  "elements": [
   "autoconf",
   "automake",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "gfortran_linux-64",
   "gfortran_linux-aarch64",
   "gfortran_linux-ppc64le",
   "gfortran_osx-64",
   "gfortran_osx-arm64",
   "libtool",
   "make",
   "mpi",
   "mpich"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "gfortran_linux-64",
    "gfortran_linux-aarch64",
    "gfortran_linux-ppc64le",
    "gfortran_osx-64",
    "gfortran_osx-arm64"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "gfortran_osx-64",
    "mpi",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gfortran_linux-64 9",
    "gfortran_linux-aarch64 9",
    "gfortran_linux-ppc64le 9",
    "gfortran_osx-64 9",
    "gfortran_osx-arm64 11"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi 1.0 mpich",
    "mpich"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz",
 "version": "3.4"
}