{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/375759704.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "baycomp",
 "hash_type": "sha256",
 "name": "baycomp",
 "new_version": "1.0.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "baycomp"
  ]
 },
 "pinning_version": "2020.02.12",
 "raw_meta_yaml": "{% set name = \"baycomp\" %}\n{% set version = \"1.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: c43472c16bd7cdf4884dd4c73dd307e4a3da7097fe49c83cd5e88d75142923b0\n\nbuild:\n  noarch: python\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - scipy\n    - numpy\n    - matplotlib-base\n\ntest:\n  imports:\n    - baycomp\n  commands:\n    - python -m unittest\n\nabout:\n  home: https://github.com/janezd/baycomp\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Library for Bayesian comparison of predictive models'\n\n  description: |\n    A library for comparing results of predictive models on single\n    or multiple data sets using Bayesian approaches. The libary is\n    in pure Python, and depends on numpy, scipy and matplotlib.\n    The more advanced hierarchical tests require pystan, which needs\n    to be installed separately.\n  doc_url: https://baycomp.readthedocs.io/\n  dev_url: https://github.com/janezd/baycomp\n\nextra:\n  recipe-maintainers:\n    - janezd\n",
 "smithy_version": "3.6.8",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/b/baycomp/baycomp-1.0.2.tar.gz",
 "version": "1.0.2"
}