{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/594999982.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gwvet",
 "hash_type": "sha256",
 "name": "gwvet",
 "new_version": "1.0.0",
 "new_version_attempts": {
  "1.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gwvet"
  ]
 },
 "pinning_version": "2021.03.17.15.05.46",
 "raw_meta_yaml": "{% set name = \"gwvet\" %}\n{% set version = \"1.0.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: \"76db8c29b2140a38d0dbf426040a3c5fe91a0b2eb18822861f054df91bc8c352\"\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools\n  run:\n    - astropy >=3.0.0\n    - decorator\n    - dqsegdb\n    - gwdetchar >=2.0.0\n    - gwpy >=2.0.0\n    - gwsumm >=2.0.0\n    - gwtrigfind\n    - lscsoft-glue >=1.60.0\n    - markuppy\n    - matplotlib-base >=3.1.0\n    - numpy >=1.16\n    - python >=3.6\n    - scipy >=1.2.0\n\ntest:\n  imports:\n    - gwvet\n    - gwvet.cli\n    - gwvet.etg\n    - gwvet.hug\n    - gwvet.metric\n    - gwvet.segments\n    - gwvet.tabs\n    - gwvet.triggers\n    - gwvet.vdf\n  commands:\n    # check scripts run ok\n    - python -m gwvet --help\n    - python -m gwvet.hug --help\n    - python -m gwvet.vdf --help\n\nabout:\n  home: \"https://github.com/gwpy/vet\"\n  doc_url: \"https://github.com/gwpy/vet/blob/master/README.rst\"\n  dev_url: \"https://github.com/gwpy/vet\"\n  license: \"GPL-3.0-or-later\"\n  license_family: \"GPL\"\n  license_file: \"LICENSE\"\n  summary: \"Gravitational-wave Veto Evaluation and Testing suite\"\n  description: |\n    GWVET is an extension to the python toolbox GWSumm, used by the LIGO\n    Scientific Collaboration to review and evaluate data-quality veto products\n\nextra:\n  recipe-maintainers:\n    - alurban\n    - areeda\n    - duncanmmacleod\n    - eagoetz\n    - robertbruntz\n",
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/gwvet/gwvet-1.0.0.tar.gz",
 "version": "1.0.0"
}