{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1012168089.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ylearn",
 "hash_type": "sha256",
 "name": "ylearn",
 "new_version": "0.1.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ylearn"
  ]
 },
 "pinning_version": "2022.07.29.13.58.26",
 "raw_meta_yaml": "{% set name = \"ylearn\" %}\n{% set version = \"0.1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f20943dd7a7c4e2f851cf030d4a27d91036677f9d3c2bde013ece4e4ce2e5635\n \nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - numpy\n    - pip\n    - cython\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - pandas >=0.25.3\n    - scikit-learn >=0.22.1\n    - scipy\n    - networkx\n    - ipython\n    - joblib\n    - pydot\n    - graphviz\n    - pytorch  # [not win]\n\ntest:\n  imports:\n    - ylearn\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/DataCanvasIO/YLearn\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: 'YLearn is a python package for causal inference.'\n  description: |\n    YLearn, a pun of \"learn why\", is a python package for causal inference \n    which supports various aspects of causal inference ranging from causal \n    effect identification, estimation, and causal graph discovery, etc.\n  doc_url: https://ylearn.readthedocs.io/\n  dev_url: https://github.com/DataCanvasIO/YLearn\nextra:\n  recipe-maintainers:\n    - lixfz\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/y/ylearn/ylearn-0.1.3.tar.gz",
 "version": "0.1.3"
}