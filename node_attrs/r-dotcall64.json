{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9_5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/204931352.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0_0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/205331371.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231767583.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/298658872.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308850542.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412663234.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412789363.json"
   },
   "data": {
    "bot_rerun": 1591098651.6695838,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/426538921.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505563266.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572054682.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0_1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "r-dotcall64",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell"
   ]
  },
  "package": {
   "name": "r-dotcall64",
   "version": "1.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6",
   "url": [
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell"
   ]
  },
  "package": {
   "name": "r-dotcall64",
   "version": "1.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6",
   "url": [
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\""
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell"
   ]
  },
  "package": {
   "name": "r-dotcall64",
   "version": "1.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6",
   "url": [
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\""
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code."
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell"
   ]
  },
  "package": {
   "name": "r-dotcall64",
   "version": "1.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "r-base",
    "gcc-libs",
    "r-base",
    "gcc-libs"
   ]
  },
  "source": {
   "sha256": "f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6",
   "url": [
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\"",
    "\"%R%\" -e \"library('dotCall64')\"",
    "\"%R%\" -e \"library('dotCall64')\""
   ]
  }
 },
 "name": "r-dotcall64",
 "new_version": "1.0_1",
 "new_version_attempts": {
  "1.0_1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell"
   ]
  },
  "package": {
   "name": "r-dotcall64",
   "version": "1.0_1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "r-base"
   ]
  },
  "source": {
   "sha256": "f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6",
   "url": [
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('dotCall64')\"",
    "$R -e \"library('dotCall64')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-dotcall64"
  ]
 },
 "pinning_version": "2021.02.11.17.33.54",
 "raw_meta_yaml": "{% set version = \"1.0-1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-dotcall64\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/dotCall64_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/dotCall64/dotCall64_{{ version }}.tar.gz\n  sha256: f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}        # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('m2w64_fortran') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('dotCall64')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('dotCall64')\\\"\"  # [win]\n\nabout:\n  home: https://git.math.uzh.ch/reinhard.furrer/dotCall64\n  license: GPL-2.0-or-later\n  summary: Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to\n    C/C++ and Fortran code.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - jsignell\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "coreutils",
   "filesystem",
   "fortran_compiler_stub",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "make",
   "r-base",
   "sed",
   "zip"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
 ],
 "version": "1.0_1",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://git.math.uzh.ch/reinhard.furrer/dotCall64",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Provides .C64(), which is an enhanced version of .C() and .Fortran() from the foreign function interface. .C64() supports long vectors, arguments of type 64-bit integer, and provides a mechanism to avoid unnecessary copies of read-only and write-only arguments. This makes it a convenient and fast interface to C/C++ and Fortran code."
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "jsignell",
    "conda-forge/r",
    "jsignell"
   ]
  },
  "package": {
   "name": "r-dotcall64",
   "version": "1.0_1"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "r-base"
   ],
   "run": [
    "r-base",
    "gcc-libs",
    "r-base",
    "gcc-libs"
   ]
  },
  "source": {
   "sha256": "f10b28fcffb9453b1d8888a72c8fd2112038b5ac33e02a481492c7bd249aa5c6",
   "url": [
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/dotCall64_1.0-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dotCall64/dotCall64_1.0-1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "\"%R%\" -e \"library('dotCall64')\"",
    "\"%R%\" -e \"library('dotCall64')\""
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}