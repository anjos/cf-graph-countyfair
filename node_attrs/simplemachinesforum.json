{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/885244527.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/886746538.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "simplemachinesforum",
 "hash_type": "sha256",
 "name": "simplemachinesforum",
 "new_version": "0.4.4",
 "new_version_attempts": {
  "0.4.3": 1,
  "0.4.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "simplemachinesforum"
  ]
 },
 "pinning_version": "2022.03.22.19.17.12",
 "raw_meta_yaml": "{% set name = \"simplemachinesforum\" %}\n{% set version = \"0.4.4\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/simplemachinesforum-{{ version }}.tar.gz\n  sha256: cf5e3d122781ff76250a6810bfd4f7db22a544a95fef2fb8a606bb8fcc6f5c50\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.0\n  run:\n    - python >=3.0\n    - requests\n    - bs4\n\ntest:\n  imports:\n    - simplemachinesforum\n  commands:\n    - pip check\n  requires:\n    - pip\n    - bs4\n\nabout:\n  home: https://github.com/oliver-zehentleitner/python-simplemachinesforum\n  summary: Python request API to simplemachinesforum\n  description: |\n    # python-simplemachinesforum\n    Python request API to Simple Machines Forum: https://www.simplemachines.org/\n\n    ## Important\n    A forum is for humans, please use this piece of software only in combination with YOUR OWN FORUM or by order of the forum owner itself to provide \n    a valuable service. Be aware that bots are not tolerated on most boards and its use will lead to a ban.\n\n    ## What does it can?\n    - It can create a new topic with `new_topic()` on a remote simple machines forum over the network, all it needs is a valid user account to login.\n    - Given a topic ID, toggle the topic's stickiness with `toggle_sticky()`.\n    - Given a subject name and board, return the topic id for the matching topic with `get_topic_id`.\n    - Use the advanced search feature, and return the list of matches with `advanced_search()`.\n    - Given a board, return the topic id for all currently stickied topics with `get_stickied_posts()`.\n\n  license: MIT\n  license_file: LICENSE\n  dev_url: https://about.me/oliver-zehentleitner\n  doc_url: https://oliver-zehentleitner.github.io/python-simplemachinesforum\n\nextra:\n  recipe-maintainers:\n    - oliver-zehentleitner\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/simplemachinesforum/simplemachinesforum-0.4.4.tar.gz",
 "version": "0.4.4"
}