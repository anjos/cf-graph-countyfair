{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/416074629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689820368.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/872849320.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/965876167.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "darr",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Darr is a Python science library for disk-based NumPy arrays that\npersist in a format that is simple, self-documented and tool-independent.\nIt enables you to work efficiently with potentially very large arrays, while\nkeeping your data easily accessible from a wide range of computing\nenvironments. Even if you don't work with very large arrays, Darr is a very\nconvenient way to store your arrays in a way that keeps them universally\nreadable and documented, which is in line with good scientific practice.\nAuto-documentation includes code for reading the array in a variety of\ncurrent scientific data tools such as Python, R, Julia, IDL, Matlab, Maple,\nand Mathematica. It is trivially easy to share your data with others or\nwith yourself when working in different computing environments, no\nexporting or much explanation required.\n",
   "dev_url": "https://github.com/gbeckers/darr",
   "doc_url": "https://darr.readthedocs.io/",
   "home": "https://github.com/gbeckers/darr",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A Python science library for memory-mapped numeric arrays, based on a format that is self-explanatory and tool-independent."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "gbeckers"
   ]
  },
  "package": {
   "name": "darr",
   "version": "0.5.1"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.6",
    "numpy >=1.12"
   ]
  },
  "source": {
   "sha256": "3971d2f2864803a587d4b6dd49f8dd96298e5a273ca9580c34c41cf51f37092b",
   "url": "https://pypi.io/packages/source/d/darr/darr-0.5.1.tar.gz"
  },
  "test": {
   "imports": [
    "darr"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Darr is a Python science library for disk-based NumPy arrays that\npersist in a format that is simple, self-documented and tool-independent.\nIt enables you to work efficiently with potentially very large arrays, while\nkeeping your data easily accessible from a wide range of computing\nenvironments. Even if you don't work with very large arrays, Darr is a very\nconvenient way to store your arrays in a way that keeps them universally\nreadable and documented, which is in line with good scientific practice.\nAuto-documentation includes code for reading the array in a variety of\ncurrent scientific data tools such as Python, R, Julia, IDL, Matlab, Maple,\nand Mathematica. It is trivially easy to share your data with others or\nwith yourself when working in different computing environments, no\nexporting or much explanation required.\n",
   "dev_url": "https://github.com/gbeckers/darr",
   "doc_url": "https://darr.readthedocs.io/",
   "home": "https://github.com/gbeckers/darr",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A Python science library for memory-mapped numeric arrays, based on a format that is self-explanatory and tool-independent."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "gbeckers"
   ]
  },
  "package": {
   "name": "darr",
   "version": "0.5.1"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.6",
    "numpy >=1.12"
   ]
  },
  "source": {
   "sha256": "3971d2f2864803a587d4b6dd49f8dd96298e5a273ca9580c34c41cf51f37092b",
   "url": "https://pypi.io/packages/source/d/darr/darr-0.5.1.tar.gz"
  },
  "test": {
   "imports": [
    "darr"
   ]
  }
 },
 "name": "darr",
 "new_version": "0.5.2",
 "new_version_attempts": {
  "0.2.2": 1,
  "0.3.0": 1,
  "0.3.2": 1,
  "0.5.0": 1,
  "0.5.2": 1
 },
 "new_version_errors": {
  "0.3.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.3.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "darr"
  ]
 },
 "pinning_version": "2022.06.13.08.34.03",
 "raw_meta_yaml": "{% set name = \"darr\" %}\n{% set version = \"0.5.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 3971d2f2864803a587d4b6dd49f8dd96298e5a273ca9580c34c41cf51f37092b\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools\n  run:\n    - python >=3.6\n    - numpy >=1.12\n\ntest:\n  imports:\n    - darr\n\nabout:\n  home: https://github.com/gbeckers/darr\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: >-\n    A Python science library for memory-mapped numeric arrays, based on a format that is self-explanatory and tool-independent.\n  description: |\n    Darr is a Python science library for disk-based NumPy arrays that\n    persist in a format that is simple, self-documented and tool-independent.\n    It enables you to work efficiently with potentially very large arrays, while\n    keeping your data easily accessible from a wide range of computing\n    environments. Even if you don't work with very large arrays, Darr is a very\n    convenient way to store your arrays in a way that keeps them universally\n    readable and documented, which is in line with good scientific practice. \n    Auto-documentation includes code for reading the array in a variety of \n    current scientific data tools such as Python, R, Julia, IDL, Matlab, Maple, \n    and Mathematica. It is trivially easy to share your data with others or \n    with yourself when working in different computing environments, no \n    exporting or much explanation required.\n  doc_url: https://darr.readthedocs.io/\n  dev_url: https://github.com/gbeckers/darr\n\nextra:\n  recipe-maintainers:\n    - gbeckers\n",
 "req": {
  "__set__": true,
  "elements": [
   "numpy",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy >=1.12",
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/d/darr/darr-0.5.1.tar.gz",
 "version": "0.5.1"
}