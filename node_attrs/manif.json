{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/669938800.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/672454947.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/129f54d8-ab2b-4659-a259-6be959f0c8ac.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775111579.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815037476.json"
   },
   "data": {
    "bot_rerun": 1641431339.4494305,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815157939.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911115789.json"
   },
   "data": {
    "bot_rerun": 1656553891.3770182,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/983292753.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_aarch64",
   "linux_ppc64le": "linux_ppc64le"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "manif",
 "hash_type": "sha256",
 "name": "manif-split",
 "new_version": "0.0.4",
 "new_version_attempts": {
  "0.0.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "manif",
   "manifpy"
  ]
 },
 "pinning_version": "2022.06.29.18.34.42",
 "raw_meta_yaml": "{% set name = \"manif-split\" %}\n{% set version = \"0.0.4\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/artivis/manif/archive/{{ version }}.tar.gz\n    sha256: 739731e1eb83194c4977fa946ee63ba1aa8aadf757d67f3b183f2dfab64eff81\n    patches:\n      - 236.patch\n      - 233.patch  # [win]\n      - 248.patch\n\nbuild:\n  number: 8\n\noutputs:\n  - name: manif\n    script: build_cxx.sh  # [unix]\n    script: bld_cxx.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - ninja\n        - cmake\n      host:\n        - eigen\n        - tl-optional\n        - gtest\n        - gmock\n      run:\n        - eigen\n        - tl-optional\n    test:\n      commands:\n        - test -f ${PREFIX}/include/manif/manif.h  # [not win]\n        - test -f ${PREFIX}/share/manif/cmake/manifConfig.cmake  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\manif\\\\manif.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\share\\\\manif\\\\cmake\\\\manifConfig.cmake exit 1  # [win] \n\n  - name: manifpy\n    script: build_py.sh  # [unix]\n    script: bld_py.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - make                               # [not win]\n        - cmake\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - clang 13  # [win]\n        - lld 13  # [win]\n        - llvm-tools 13  # [win]\n      host:\n        - eigen\n        - tl-optional\n        - python\n        - pip\n        - numpy\n        - pybind11\n        - pybind11-abi\n      run:\n        - python\n        - {{ pin_compatible('numpy', max_pin='x.x') }}\n    test:\n      imports:\n        - manifpy\n\nabout:\n  home: https://github.com/artivis/manif\n  license: MIT\n  license_file: LICENSE\n  summary: A small C++11 header-only library (with Python bindings) for Lie theory.\n\nextra:\n  recipe-maintainers:\n    - traversaro\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/artivis/manif/archive/0.0.4.tar.gz",
 "version": "0.0.4"
}