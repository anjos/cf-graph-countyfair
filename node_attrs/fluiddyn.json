{
 "PRed": [
  {
   "PR": {
    "id": "b1200af2-6e36-41f7-ad4d-6006a2aa7d1d",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375744536.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/396274186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496383338.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513626901.json"
   },
   "data": {
    "bot_rerun": 1604313990.663055,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513985795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/740968625.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/755556236.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4.post0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774530158.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/792872478.json"
   },
   "data": {
    "bot_rerun": 1641399321.3251443,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/814567114.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/814869968.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/839977646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "fluiddyn",
 "hash_type": "sha256",
 "name": "fluiddyn",
 "new_version": "0.5.0",
 "new_version_attempts": {
  "0.3.3": 1,
  "0.3.4": 1,
  "0.3.4.post0": 1,
  "0.4.0": 1,
  "0.4.1": 1,
  "0.5.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fluiddyn"
  ]
 },
 "pinning_version": "2022.02.03.19.17.39",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['linux_64_mpimpichpython3.9.____cpython: Encountered problems while solving.\\nProblem: package scikit-image-0.12.3-np110py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'linux_64_mpinompipython3.9.____cpython: Encountered problems while solving.\\nProblem: package scikit-image-0.12.3-np110py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'linux_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving.\\nProblem: package scikit-image-0.12.3-np110py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'osx_64_mpimpichpython3.9.____cpython: Encountered problems while solving.\\nProblem: package scikit-image-0.12.3-np110py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'osx_64_mpinompipython3.9.____cpython: Encountered problems while solving.\\nProblem: package scikit-image-0.12.3-np110py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'osx_64_mpiopenmpipython3.9.____cpython: Encountered problems while solving.\\nProblem: package scikit-image-0.12.3-np110py27_0 requires python 2.7*, but none of the providers can be installed\\n', 'win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package scipy-0.19.1-py27h069396b_3 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"fluiddyn\" %}\n{% set version = \"0.5.0\" %}\n{% set build = 0 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 0e867dae4bfba3aab9beb26e2508879658b264667e8dfd017789375dd856a779\n\nbuild:\n  number: {{ build }}\n  skip: true  # [py<36]\n  entry_points:\n    - fluidinfo = fluiddyn.util.info:main\n    - fluidnbstripout = fluiddoc.fluidnbstripout:main\n    - fluiddocset = fluiddoc.fluiddocset:main\n    - fluiddump = fluiddyn.io.dump:main\n    - fluidmat2py = fluiddyn.util.matlab2py:main\n    - fluidcluster-help = fluiddyn.clusters:print_help_scheduler\n  script: '{{ PYTHON }} -m pip install .[full] --no-deps --ignore-installed -vv '\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - python\n    - numpy\n    - psutil >=5.2.1\n    - h5py\n    - h5netcdf\n    - nbstripout\n    - scipy\n    - matplotlib-base\n    - imageio\n    - scikit-image\n    - qtpy\n    - distro  # [py>=38]\n    - cached-property  # [py<38]\n    # (quick fix)\n    - setuptools\n\ntest:\n  imports:\n    - fluiddoc\n    - fluiddyn\n    - fluiddyn.calcul\n    - fluiddyn.calcul.test\n    - fluiddyn.clusters\n    - fluiddyn.clusters.test\n    - fluiddyn.io\n    - fluiddyn.io.test\n    - fluiddyn.output\n    - fluiddyn.output.test\n    - fluiddyn.util\n    - fluiddyn.util.matlab2py\n    - fluiddyn.util.matlab2py.test\n    - fluiddyn.util.test\n  commands:\n    - fluidinfo --help\n    - fluidnbstripout --help\n    - fluiddocset --help\n    - fluiddump --help\n    - fluidmat2py --help\n    - fluidcluster-help --help\n\nabout:\n  home: https://foss.heptapod.net/fluiddyn/fluiddyn/\n  license: CECILL-B\n  license_file: LICENSE.txt\n  summary: Framework for studying fluid dynamics.\n  description: |\n    FluidDyn project is an ecosystem of packages for research and teaching in\n    fluid dynamics. The Python package fluiddyn contains basic utilities to\n    manage File I/O for some esoteric formats, publication quality figures, job\n    submission on clusters, MPI powerful classes to handle parameters, arrays,\n    series of files simplified interfaces to calculate FFT, spherical harmonics\n    and much more.\n  doc_url: https://fluiddyn.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - CyrilleBonamy\n    - paugier\n    - ashwinvis\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/f/fluiddyn/fluiddyn-0.5.0.tar.gz",
 "version": "0.5.0"
}