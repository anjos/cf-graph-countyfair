{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/357839619.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/367020423.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/415788977.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/419179626.json"
   },
   "data": {
    "bot_rerun": 1589819708.5274894,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/829574347.json"
   },
   "data": {
    "bot_rerun": 1649958517.1721954,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877608348.json"
   },
   "data": {
    "bot_rerun": 1649958517.1724055,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/907590000.json"
   },
   "data": {
    "bot_rerun": 1649958517.1725154,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/942643959.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gql",
 "hash_type": "sha256",
 "name": "gql-split",
 "new_version": "3.4.0",
 "new_version_attempts": {
  "0.5.0": 1,
  "2.0.0": 1,
  "3.0.0": 1,
  "3.1.0": 1,
  "3.2.0": 1,
  "3.3.0": 1,
  "3.4.0": 1
 },
 "new_version_errors": {
  "3.4.0": "We found a problem parsing the recipe for version '3.4.0': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gql",
   "gql-split",
   "gql-with-aiohttp",
   "gql-with-all",
   "gql-with-botocore",
   "gql-with-requests",
   "gql-with-websockets"
  ]
 },
 "pinning_version": "2022.05.20.08.33.30",
 "raw_meta_yaml": "{% set min_python = \"python >=3.6\" %}\n{% set version = \"3.4.0\" %}\n{% set min_python = \"python >=3.6\" %}\n\npackage:\n  name: gql-split\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/g/gql/gql-{{ version }}.tar.gz\n  sha256: ca81aa8314fa88a8c57dd1ce34941278e0c352d762eb721edcba0387829ea7c0\n\nbuild:\n  noarch: python\n  number: 0\n  entry_points:\n    - gql-cli=gql.cli:gql_cli\n\nrequirements:\n  host:\n    - {{ min_python }}\n    - pip\n  run:\n    - {{ min_python }}\n\ntest:\n  commands:\n    - echo \"tests in outputs\"\n\noutputs:\n  - name: gql\n    build:\n      noarch: python\n      script: {{ PYTHON }} -m pip install . -vv --no-deps\n\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ min_python }}\n        - graphql-core >=3.2,<3.3\n        - yarl >=1.6,<2.0\n        - backoff >=1.11.1,<3.0\n      run_constrained:\n        # aiohttp\n        - aiohttp >=3.7.1,<3.9.0\n        # requests\n        - requests >=2.26,<3\n        - requests-toolbelt >=0.9.1,<1\n        - urllib3 >=1.26\n        # websockets\n        - websockets >=10,<11\n        # boto\n        - botocore >=1.21,<2\n    test:\n      imports:\n        - gql\n      requires:\n        - pip\n      commands:\n        - pip check\n        - gql-cli --help\n        - gql-cli --version\n\n  - name: gql-with-aiohttp\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ pin_subpackage('gql', exact=True) }}\n        - aiohttp\n        - {{ min_python }}\n    test:\n      imports:\n        - gql\n        - gql.transport.aiohttp\n      requires:\n        - pip\n      commands:\n        - pip check\n        - gql-cli --help\n        - gql-cli --version\n    about:\n      summary: GraphQL client for Python - aiohttp transport\n\n  - name: gql-with-requests\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ pin_subpackage('gql', exact=True) }}\n        - {{ min_python }}\n        - requests\n        - requests-toolbelt\n        - urllib3\n    test:\n      imports:\n        - gql\n        - gql.transport.requests\n      requires:\n        - pip\n      commands:\n        - pip check\n        - gql-cli --help\n        - gql-cli --version\n    about:\n      summary: GraphQL client for Python - requests transport\n\n  - name: gql-with-websockets\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ pin_subpackage('gql', exact=True) }}\n        - {{ min_python }}\n        - websockets\n    test:\n      imports:\n        - gql\n        - gql.transport.websockets\n      requires:\n        - pip\n      commands:\n        - pip check\n        - gql-cli --help\n        - gql-cli --version\n    about:\n      summary: GraphQL client for Python - websocket transport\n\n  - name: gql-with-botocore\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ pin_subpackage('gql', exact=True) }}\n        - botocore\n        - {{ min_python }}\n    test:\n      imports:\n        - gql\n        - gql.transport.appsync_auth\n      requires:\n        - pip\n      commands:\n        - pip check\n        - gql-cli --help\n        - gql-cli --version\n    about:\n      summary: GraphQL client for Python - boto transport\n\n  - name: gql-with-all\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ pin_subpackage('gql-with-aiohttp', exact=True) }}\n        - {{ pin_subpackage('gql-with-botocore', exact=True) }}\n        - {{ pin_subpackage('gql-with-requests', exact=True) }}\n        - {{ pin_subpackage('gql-with-websockets', exact=True) }}\n        - {{ pin_subpackage('gql', exact=True) }}\n        - {{ min_python }}\n    test:\n      source_files:\n        - tests\n      requires:\n        - aiofiles\n        - mock\n        - parse\n        - pip\n        - pytest\n        - pytest-asyncio\n        - pytest-console-scripts\n        - pytest-cov\n        - vcrpy\n      commands:\n        - pip check\n        - gql-cli --help\n        - gql-cli --version\n        - pytest tests -vv --no-cov-on-fail --cov gql --cov-report=term-missing:skip-covered --cov-fail-under=99\n\nabout:\n  home: https://github.com/graphql-python/gql\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: GraphQL client for Python\n  description: |-\n    This is a GraphQL client for Python. Plays nicely with graphene,\n    graphql-core, graphql-js and any other GraphQL implementation compatible\n    with the spec.\nextra:\n  feedstock-name: gql\n  recipe-maintainers:\n    - leszekhanusz\n    - ozagordi\n    - KingDarBoja\n    - bollwyvl\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/gql/gql-3.4.0.tar.gz",
 "version": "3.4.0"
}