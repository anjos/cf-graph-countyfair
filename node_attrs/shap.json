{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/207660952.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "v0.22.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/208721600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "v0.23.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/208928403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.23.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/210616035.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.24.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/226716750.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229105373.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.25.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229220566.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.25.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229807380.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.25.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/238200615.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.26.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/241645113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.27.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248462418.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.28.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.28.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278896895.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/289785913.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/289888813.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.29.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/312988918.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315764911.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326383160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.30.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/330199122.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.31.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/337478138.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.32.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/337559682.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.32.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/348689225.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/352525871.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.33.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/357296025.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.34.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374899959.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/381054172.json"
   },
   "data": {
    "bot_rerun": 1586398475.8292356,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.35.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401173200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.35.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/475022951.json"
   },
   "data": {
    "bot_rerun": 1600451154.0386372,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.36.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/489507232.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.36.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491844551.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519121112.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.37.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533044265.json"
   },
   "data": {
    "bot_rerun": 1608145924.620016,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/541388763.json"
   },
   "data": {
    "bot_rerun": 1619646182.6100755,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555131789.json"
   },
   "data": {
    "bot_rerun": 1619646182.610261,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.38.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555892323.json"
   },
   "data": {
    "bot_rerun": 1619646182.6103554,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.38.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/584278481.json"
   },
   "data": {
    "bot_rerun": 1619646182.610437,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.39.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/625621613.json"
   },
   "data": {
    "bot_rerun": 1619699443.5870776,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.39.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/625662268.json"
   },
   "data": {
    "bot_rerun": 1619699443.587532,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/462de01a-5e46-46a4-b127-3608d85e7adf.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/762738539.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.40.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "shap",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap",
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap",
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap",
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "shap",
 "new_version": "0.40.0",
 "new_version_attempts": {
  "0.35.0": 1,
  "0.36.0": 2,
  "0.37.0": 1,
  "0.38.0": 1,
  "0.38.1": 1,
  "0.39.0": 2,
  "0.40.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap",
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "shap"
  ]
 },
 "pinning_version": "2021.10.20.19.16.36",
 "pre_pr_migrator_status": {
  "python39": "not solvable: master: ['linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package scipy-1.5.3-py39hee8e79c_0 requires numpy >=1.19.2,<2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numba-0.50.1-py36h7c3b610_1 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n', 'linux_ppc64le_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numba-0.39.0-py36h04863e7_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n', 'osx_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package matplotlib-base-3.3.1-py36h181983e_0 requires numpy >=1.15.4,<2.0a0, but none of the providers can be installed\\n', 'win_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package sqlite-3.34.0-h8ffe710_0 requires vc >=14.1,<15.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"shap\" %}\n{% set version = \"0.39.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/slundberg/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n    - setuptools\n    - numpy\n  run:\n    - python\n    - numpy\n    - scipy\n    - scikit-learn\n    - pandas\n    - tqdm >4.25.0\n    - slicer 0.0.7\n    - numba\n    - cloudpickle\n\ntest:\n  requires:\n    - pip\n  commands:\n    - pip check\n  imports:\n    - shap\n\nabout:\n  home: https://github.com/slundberg/shap\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A unified approach to explain the output of any machine learning model.\n  description: |\n    SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n  doc_url: https://shap.readthedocs.io/en/latest/\n  dev_url: https://github.com/slundberg/shap\n\nextra:\n  recipe-maintainers:\n    - mrandrewandrade\n    - slundberg\n    - xhochy\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cloudpickle",
   "cxx_compiler_stub",
   "make",
   "numba",
   "numpy",
   "pandas",
   "pip",
   "python",
   "scikit-learn",
   "scipy",
   "setuptools",
   "slicer",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cloudpickle",
    "cxx_compiler_stub",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.13.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer 0.0.7",
    "tqdm >4.25.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz",
 "version": "0.39.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy",
    "mrandrewandrade",
    "slundberg",
    "xhochy"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.39.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
    "tqdm >4.25.0",
    "slicer 0.0.7",
    "numba",
    "cloudpickle"
   ]
  },
  "source": {
   "sha256": "745ff59246c517e13fb29c700c12ee78c1d833078f667676615c11cfdc244c9c",
   "url": "https://github.com/slundberg/shap/archive/v0.39.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "shap",
    "shap",
    "shap",
    "shap"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cloudpickle",
    "numba",
    "numpy",
    "pandas",
    "python",
    "scikit-learn",
    "scipy",
    "slicer",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}