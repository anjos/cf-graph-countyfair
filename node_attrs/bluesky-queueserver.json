{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/753605649.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838606174.json"
   },
   "data": {
    "bot_rerun": 1656087566.910634,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/843510951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/866247175.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/874971298.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/900970301.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904704303.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/977694134.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/978563277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1012871433.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bluesky-queueserver",
 "hash_type": "sha256",
 "name": "bluesky-queueserver",
 "new_version": "0.0.16",
 "new_version_attempts": {
  "0.0.10": 1,
  "0.0.11": 1,
  "0.0.12": 1,
  "0.0.13": 1,
  "0.0.14": 1,
  "0.0.15": 1,
  "0.0.16": 1,
  "0.0.7": 1,
  "0.0.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bluesky-queueserver"
  ]
 },
 "pinning_version": "2022.07.29.16.12.45",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"bluesky-queueserver\" %}\n{% set version = \"0.0.16\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/bluesky-queueserver-{{ version }}.tar.gz\n  sha256: b649a8c20d5cff173ffbe96d66756bdf1a7e12706be2ece63985a430174a95ac\n\nbuild:\n  number: 0\n  skip: true  # [py<37]\n  entry_points:\n    - qserver = bluesky_queueserver.manager.qserver_cli:qserver\n    - start-re-manager = bluesky_queueserver.manager.start_manager:start_manager\n    - qserver-list-plans-devices = bluesky_queueserver.manager.profile_ops:gen_list_of_plans_and_devices_cli\n    - qserver-zmq-keys = bluesky_queueserver.manager.qserver_cli:qserver_zmq_keys\n    - qserver-console-monitor = bluesky_queueserver.manager.output_streaming:qserver_console_monitor_cli\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - aioredis\n    - bluesky\n    - bluesky-kafka  # [not win]\n    - databroker\n    - event-model\n    - json-rpc\n    - jsonschema\n    - matplotlib-base\n    - msgpack-python >=1.0.0\n    - msgpack-numpy\n    - numpydoc\n    - openpyxl\n    - ophyd\n    - pydantic\n    - python\n    - python-multipart\n    - pyyaml\n    - pyzmq\n    - requests\n    - scikit-image\n    - typing-extensions  # [py<38]\n\ntest:\n  imports:\n    - bluesky_queueserver\n    - bluesky_queueserver.manager\n  commands:\n    - qserver --help\n    - start-re-manager --help\n    - qserver-list-plans-devices --help\n    - qserver-zmq-keys --help\n    - qserver-console-monitor --help\n    - python -c \"import os; import bluesky_queueserver; assert os.path.isdir(os.path.join(os.path.dirname(bluesky_queueserver.__file__), 'profile_collection_sim'))\"\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/bluesky/bluesky-queueserver\n  summary: Server for queueing plans\n  license: BSD-3-Clause\n  license_file: LICENSE\n  doc_url: https://blueskyproject.io/bluesky-queueserver\n  dev_url: https://github.com/bluesky/bluesky-queueserver\n\nextra:\n  recipe-maintainers:\n    - dmgav\n    - mrakitin\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/b/bluesky-queueserver/bluesky-queueserver-0.0.16.tar.gz",
 "version": "0.0.16"
}