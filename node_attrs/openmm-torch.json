{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/556820811.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "openmm-torch",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is a plugin for OpenMM that allows neural networks to be\nused for defining forces. It is implemented with PyTorch.\nTo use it, you create a PyTorch model that takes particle\npositions as input and produces energy as output. This plugin\nuses the model to apply forces to particles during a simulation.\n",
   "dev_url": "https://github.com/openmm/openmm-torch",
   "doc_url": "https://github.com/openmm/openmm-torch",
   "home": "https://github.com/openmm/openmm-torch",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "OpenMM plugin to define forces with neural networks"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "1",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm-torch",
   "version": "0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd"
   ],
   "run": [
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system"
   ]
  },
  "source": {
   "sha256": "6ff3c2d903729eb9145c02e694fe943c52cf9263736f9db26bb84511fbb2d71d",
   "url": "https://github.com/openmm/openmm-torch/archive/v0.1.tar.gz"
  },
  "test": {
   "commands": "cd ${CONDA_PREFIX}/share/openmm-torch/tests\nset +e\nsummary=\"\"\nexitcode=0\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  echo \"Running $f...\"\n  ./${f}\n  thisexitcode=$?\n  summary+=\"\\n${f}: \"\n  if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n  ((exitcode+=$thisexitcode))\ndone\necho \"-------\"\necho \"Summary\"\necho \"-------\"\necho -e \"${summary}\"\nexit $exitcode\n",
   "imports": [
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ocl-icd",
    "openmm",
    "pip",
    "python",
    "pytorch-gpu",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ocl-icd",
    "ocl-icd-system",
    "openmm",
    "python",
    "pytorch",
    "pytorch-gpu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is a plugin for OpenMM that allows neural networks to be\nused for defining forces. It is implemented with PyTorch.\nTo use it, you create a PyTorch model that takes particle\npositions as input and produces energy as output. This plugin\nuses the model to apply forces to particles during a simulation.\n",
   "dev_url": "https://github.com/openmm/openmm-torch",
   "doc_url": "https://github.com/openmm/openmm-torch",
   "home": "https://github.com/openmm/openmm-torch",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "OpenMM plugin to define forces with neural networks"
  },
  "build": {
   "missing_dso_whitelist": null,
   "number": "1",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm-torch",
   "version": "0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-gpu",
    "ocl-icd",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader"
   ],
   "run": [
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-gpu",
    "openmm",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple"
   ]
  },
  "source": {
   "sha256": "6ff3c2d903729eb9145c02e694fe943c52cf9263736f9db26bb84511fbb2d71d",
   "url": "https://github.com/openmm/openmm-torch/archive/v0.1.tar.gz"
  },
  "test": {
   "commands": "cd ${CONDA_PREFIX}/share/openmm-torch/tests\nset +e\nsummary=\"\"\nexitcode=0\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  echo \"Running $f...\"\n  ./${f}\n  thisexitcode=$?\n  summary+=\"\\n${f}: \"\n  if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n  ((exitcode+=$thisexitcode))\ndone\necho \"-------\"\necho \"Summary\"\necho \"-------\"\necho -e \"${summary}\"\nexit $exitcode\n",
   "imports": [
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch"
   ]
  }
 },
 "name": "openmm-torch",
 "new_version": "0.1",
 "osx_64_meta_yaml": {
  "about": {
   "description": "This is a plugin for OpenMM that allows neural networks to be\nused for defining forces. It is implemented with PyTorch.\nTo use it, you create a PyTorch model that takes particle\npositions as input and produces energy as output. This plugin\nuses the model to apply forces to particles during a simulation.\n",
   "dev_url": "https://github.com/openmm/openmm-torch",
   "doc_url": "https://github.com/openmm/openmm-torch",
   "home": "https://github.com/openmm/openmm-torch",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "OpenMM plugin to define forces with neural networks"
  },
  "build": {
   "missing_dso_whitelist": null,
   "number": "1",
   "rpaths": [
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.6/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.8/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.7/site-packages/torch/lib",
    "lib/",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/lib/python3.9/site-packages/torch/lib"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm-torch",
   "version": "0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "swig",
    "openmm",
    "pytorch-cpu",
    "khronos-opencl-icd-loader"
   ],
   "run": [
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "pytorch",
    "pytorch-cpu",
    "openmm",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple"
   ]
  },
  "source": {
   "sha256": "6ff3c2d903729eb9145c02e694fe943c52cf9263736f9db26bb84511fbb2d71d",
   "url": "https://github.com/openmm/openmm-torch/archive/v0.1.tar.gz"
  },
  "test": {
   "commands": "cd ${CONDA_PREFIX}/share/openmm-torch/tests\nset +e\nsummary=\"\"\nexitcode=0\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  echo \"Running $f...\"\n  ./${f}\n  thisexitcode=$?\n  summary+=\"\\n${f}: \"\n  if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n  ((exitcode+=$thisexitcode))\ndone\necho \"-------\"\necho \"Summary\"\necho \"-------\"\necho -e \"${summary}\"\nexit $exitcode\n",
   "imports": [
    "openmmtorch",
    "openmmtorch",
    "openmmtorch",
    "openmmtorch"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "openmm",
    "pip",
    "python",
    "pytorch-cpu",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "openmm",
    "python",
    "pytorch",
    "pytorch-cpu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmm-torch"
  ]
 },
 "pinning_version": "2021.01.18.09.10.39",
 "pre_pr_migrator_status": {
  "cuda110": "not solvable: master: ['linux_64_cuda_compiler_version11.0python3.6.____cpython: Encountered problems while solving.\\nProblem: package pytorch-1.2.0-cpu_py36h00be3c6_0 requires _pytorch_select 0.1, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0python3.6.____cpython: Encountered problems while solving.\\nProblem: package pytorch-1.6.0-cuda92py39hde86683_1 requires cudatoolkit 9.2|9.2.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0python3.7.____cpython: Encountered problems while solving.\\nProblem: package pytorch-1.6.0-cuda92py39hde86683_1 requires cudatoolkit 9.2|9.2.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0python3.8.____cpython: Encountered problems while solving.\\nProblem: package pytorch-1.6.0-cuda92py39hde86683_1 requires cudatoolkit 9.2|9.2.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0python3.8.____cpython: Encountered problems while solving.\\nProblem: package pytorch-gpu-1.2.0-0 requires pytorch 1.2.0.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0python3.9.____cpython: Encountered problems while solving.\\nProblem: package pytorch-1.6.0-cuda92py39hde86683_1 requires cudatoolkit 9.2|9.2.*, but none of the providers can be installed\\n', 'linux_64_cuda_compiler_version11.0python3.9.____cpython: Encountered problems while solving.\\nProblem: package pytorch-gpu-1.6.0-cuda100py39hf721545_1 requires pytorch 1.6.0 cuda100py39h2b73809_1, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"openmm-torch\" %}\n{% set version = \"0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openmm/openmm-torch/archive/v{{ version }}.tar.gz\n  sha256: 6ff3c2d903729eb9145c02e694fe943c52cf9263736f9db26bb84511fbb2d71d\n\nbuild:\n  number: 1\n  skip: true  # [win or (linux and cuda_compiler_version in (undefined, 'None'))]\n  rpaths:\n    - lib/\n    - {{ SP_DIR }}/torch/lib\n  missing_dso_whitelist:\n    - \"*/libcuda.*\"  # [linux64 or ppc64le]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - cmake\n    - make\n  host:\n    - python\n    - pip\n    - swig\n    - openmm\n    - pytorch-gpu  # [cuda_compiler_version not in (undefined, 'None')]\n    - pytorch-cpu  # [osx]\n    - ocl-icd  # [linux]\n    - khronos-opencl-icd-loader  # [osx]\n  run:\n    - python\n    - pytorch\n    # ^ needed so conda build does not complain about overlinking\n    - {{ pin_compatible('pytorch-gpu') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - {{ pin_compatible('pytorch-cpu') }}  # [osx]\n    - {{ pin_compatible('openmm',  min_pin='x.x', max_pin='x.x') }}\n    - ocl-icd  # [linux]\n    - ocl-icd-system  # [linux]\n    - khronos-opencl-icd-loader  # [osx]\n    - ocl_icd_wrapper_apple      # [osx]\n\ntest:\n  imports:\n    - openmmtorch\n  commands: |\n    cd ${CONDA_PREFIX}/share/{{ name }}/tests\n    set +e\n    summary=\"\"\n    exitcode=0\n    for f in Test*; do\n      if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n        continue\n      fi\n      echo \"Running $f...\"\n      ./${f}\n      thisexitcode=$?\n      summary+=\"\\n${f}: \"\n      if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n      ((exitcode+=$thisexitcode))\n    done\n    echo \"-------\"\n    echo \"Summary\"\n    echo \"-------\"\n    echo -e \"${summary}\"\n    exit $exitcode\n\nabout:\n  home: https://github.com/openmm/openmm-torch\n  license: MIT\n  license_family: MIT\n  license_file: README.md\n  summary: 'OpenMM plugin to define forces with neural networks'\n  description: |\n    This is a plugin for OpenMM that allows neural networks to be\n    used for defining forces. It is implemented with PyTorch.\n    To use it, you create a PyTorch model that takes particle\n    positions as input and produces energy as output. This plugin\n    uses the model to apply forces to particles during a simulation.\n  doc_url: https://github.com/openmm/openmm-torch\n  dev_url: https://github.com/openmm/openmm-torch\n\nextra:\n  recipe-maintainers:\n    - jaimergp\n    - peastman\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "khronos-opencl-icd-loader",
   "make",
   "ocl-icd",
   "ocl-icd-system",
   "ocl_icd_wrapper_apple",
   "openmm",
   "pip",
   "python",
   "pytorch",
   "pytorch-cpu",
   "pytorch-gpu",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "openmm",
    "pip",
    "python",
    "pytorch-cpu",
    "pytorch-gpu",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "ocl-icd-system",
    "ocl_icd_wrapper_apple",
    "openmm",
    "python",
    "pytorch",
    "pytorch-cpu",
    "pytorch-gpu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "openmm",
    "pip",
    "python",
    "pytorch-cpu",
    "pytorch-gpu",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "ocl-icd-system",
    "ocl_icd_wrapper_apple",
    "openmm",
    "python",
    "pytorch",
    "pytorch-cpu",
    "pytorch-gpu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/openmm/openmm-torch/archive/v0.1.tar.gz",
 "version": "0.1"
}