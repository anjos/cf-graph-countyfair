{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/240efa95-d879-430f-89c5-778c1dd4b15b.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/451597937.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/469795328.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/469897311.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482223798.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519096879.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/537333161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/606621151.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/607741386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/610246125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/630899401.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/633402684.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771926371.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797816479.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920126265.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939505652.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/945310801.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "inspiral-range",
 "hash_type": "sha256",
 "name": "inspiral-range",
 "new_version": "0.9.1",
 "new_version_attempts": {
  "0.4.0": 32,
  "0.4.1": 1,
  "0.4.2": 1,
  "0.5.0": 1,
  "0.6.0": 1,
  "0.7.0": 1,
  "0.7.1": 1,
  "0.7.2": 1,
  "0.8.0": 1,
  "0.8.1": 1,
  "0.8.3": 1,
  "0.9.0": 1,
  "0.9.1": 1
 },
 "new_version_errors": {
  "0.4.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "inspiral-range"
  ]
 },
 "pinning_version": "2022.05.23.15.49.11",
 "pre_pr_migrator_attempts": {
  "pypy37-windows": 1
 },
 "pre_pr_migrator_status": {
  "pypy37-windows": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1420072826\">bot CI job</a>): master: ['linux_64_python3.7.____cpython: Encountered problems while solving:\\n  - package cryptography-2.8-py36h8bdcdef_2 requires python_abi 3.6 *_pypy36_pp73, but none of the providers can be installed\\n', 'linux_64_python3.8.____cpython: Encountered problems while solving:\\n  - package python-3.8.10-hb7a2778_2_cpython requires openssl >=1.1.1l,<1.1.2a, but none of the providers can be installed\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving:\\n  - package cryptography-1.9-py36_0 requires python 3.6*, but none of the providers can be installed\\n', 'osx_64_python3.7.____cpython: Encountered problems while solving:\\n  - package cryptography-2.8-py36h808c589_2 requires python_abi 3.6 *_pypy36_pp73, but none of the providers can be installed\\n', 'osx_64_python3.8.____cpython: Encountered problems while solving:\\n  - package python-3.8.12-h17280f6_0_cpython requires openssl >=1.1.1l,<1.1.2a, but none of the providers can be installed\\n', 'osx_64_python3.9.____cpython: Encountered problems while solving:\\n  - package cryptography-1.9-py36_0 requires python 3.6*, but none of the providers can be installed\\n', 'win_64_python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides coreutils needed by gpstime-0.3.3-py_0\\n', 'win_64_python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides coreutils needed by gpstime-0.3.3-py_0\\n', 'win_64_python3.9.____cpython: Encountered problems while solving:\\n  - package python-3.9.0-h408a966_4_cpython requires openssl >=1.1.1h,<1.1.2a, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"inspiral_range\" %}\n{% set version = \"0.9.1\" %}\n\npackage:\n  name: {{ name|lower|replace('_', '-') }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: c2c4a4c9851f99b22f375a6ffd4359a33a97a1f9bad4e583ba908bad72624b86\n\nbuild:\n  entry_points:\n    - inspiral-range = inspiral_range.__main__:main\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                              # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n  host:\n    - pip\n    - python\n    - setuptools\n    - setuptools-scm\n  run:\n    - astropy\n    - gpstime\n    - numpy\n    - python\n    - python-lal  # [not win]\n    - python-lalsimulation  # [not win]\n    - pyyaml\n    - scipy\n\ntest:\n  source_files:\n    # these are installed, but easier to refer to the ASD files from here\n    - inspiral_range/test\n  requires:\n    - pip\n  commands:\n    # validate requirements\n    - python -m pip check\n    # run the test suite (needs lalsimulation)\n    - python -m inspiral_range.test -dt  # [not win]\n    # check the cli\n    - inspiral-range --asd inspiral_range/test/O2.txt\n    - inspiral-range --asd inspiral_range/test/O3.txt m1=30 m2=30\n\nabout:\n  home: https://git.ligo.org/gwinc/inspiral_range\n  dev_url: https://git.ligo.org/gwinc/inspiral_range\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file:\n    - COPYING\n    - COPYING-GPL-3\n  summary: GW detector inspiral range calculation tools\n  description: |\n    The inspiral_range package provides tools for calculating various binary\n    inspiral range measures useful as figures of merit for gravitational wave\n    detectors characterised by a strain noise spectral density.\n\n    It includes a command-line tool for calculating various inspiral ranges\n    from a supplied file of detector noise spectral density (either ASD or\n    PSD).\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - jrollins\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/inspiral_range/inspiral_range-0.9.1.tar.gz",
 "version": "0.9.1"
}