{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/871970597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/894411301.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.23.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/895080673.json"
   },
   "data": {
    "bot_rerun": 1648733455.2195866,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.23.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/898209015.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.23.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911199350.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/930027370.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.23.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/951899679.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.24.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/961677235.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.24.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "icub-models",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/robotology/icub-models",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE",
   "summary": "Official URDF and SDF models of the iCub humanoid robot."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro"
   ]
  },
  "package": {
   "name": "icub-models",
   "version": "1.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "c392f2edce88cb69caff1d8d1a3e84ed2e7cf1a76d1eeb9f4ea06b165ff6d453",
   "url": "https://github.com/robotology/icub-models/archive/refs/tags/v1.24.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check"
   ],
   "imports": [
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "multisheller",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/robotology/icub-models",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE",
   "summary": "Official URDF and SDF models of the iCub humanoid robot."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro"
   ]
  },
  "package": {
   "name": "icub-models",
   "version": "1.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "c392f2edce88cb69caff1d8d1a3e84ed2e7cf1a76d1eeb9f4ea06b165ff6d453",
   "url": "https://github.com/robotology/icub-models/archive/refs/tags/v1.24.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.so",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check"
   ],
   "imports": [
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "icub-models",
 "new_version": "1.24.1",
 "new_version_attempts": {
  "1.23.1": 1,
  "1.23.2": 2,
  "1.23.4": 1,
  "1.24.0": 1,
  "1.24.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/robotology/icub-models",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE",
   "summary": "Official URDF and SDF models of the iCub humanoid robot."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro"
   ]
  },
  "package": {
   "name": "icub-models",
   "version": "1.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "c392f2edce88cb69caff1d8d1a3e84ed2e7cf1a76d1eeb9f4ea06b165ff6d453",
   "url": "https://github.com/robotology/icub-models/archive/refs/tags/v1.24.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check",
    "test -f ${PREFIX}/include/iCubModels/iCubModels.h",
    "test -f ${PREFIX}/lib/libicub-models.dylib",
    "test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake",
    "test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1",
    "pip check"
   ],
   "imports": [
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "multisheller",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "icub-models"
  ]
 },
 "pinning_version": "2022.06.08.00.21.30",
 "raw_meta_yaml": "{% set name = \"icub-models\" %}\n{% set version = \"1.24.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/robotology/icub-models/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: c392f2edce88cb69caff1d8d1a3e84ed2e7cf1a76d1eeb9f4ea06b165ff6d453\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - pkg-config\n    - ninja\n    - multisheller\n\n  host:\n    - python\n    - pip\n  run:\n    - python\n\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/iCubModels/iCubModels.h  # [not win]\n    - test -f ${PREFIX}/lib/libicub-models.so  # [linux]\n    - test -f ${PREFIX}/lib/libicub-models.dylib  # [osx]\n    - test -f ${PREFIX}/lib/cmake/icub-models/icub-modelsConfig.cmake  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1  # [win]\n    - test $(pip list | grep icub-models | tr -s \" \" | grep $PKG_VERSION | wc -l) -eq 1  # [unix]\n    - pip check\n  imports:\n    - icub_models\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/robotology/icub-models\n  license: CC-BY-SA-4.0\n  license_file: LICENSE\n  summary: Official URDF and SDF models of the iCub humanoid robot.\n\nextra:\n  recipe-maintainers:\n    - traversaro\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "multisheller",
   "ninja",
   "pip",
   "pkg-config",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "multisheller",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "multisheller",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/robotology/icub-models/archive/refs/tags/v1.24.0.tar.gz",
 "version": "1.24.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/robotology/icub-models",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE",
   "summary": "Official URDF and SDF models of the iCub humanoid robot."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models",
    "icub-models"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro",
    "traversaro"
   ]
  },
  "package": {
   "name": "icub-models",
   "version": "1.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "ninja",
    "multisheller"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "c392f2edce88cb69caff1d8d1a3e84ed2e7cf1a76d1eeb9f4ea06b165ff6d453",
   "url": "https://github.com/robotology/icub-models/archive/refs/tags/v1.24.0.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\iCubModels\\\\iCubModels.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\icub-models.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\icub-models.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\CMake\\\\icub-modelsConfig.cmake exit 1",
    "pip check"
   ],
   "imports": [
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models",
    "icub_models"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "multisheller",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}