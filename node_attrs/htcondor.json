{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/342734892.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/343014069.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/358238829.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.9.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378513629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400487630.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400937010.json"
   },
   "data": {
    "bot_rerun": 1591185540.8849888,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb51171"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413853294.json"
   },
   "data": {
    "bot_rerun": 1591208207.0848362,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/420918949.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/424831441.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427160125.json"
   },
   "data": {
    "bot_rerun": 1591199048.9709148,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb51171"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427308795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb51171"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/464071005.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485492730.json"
   },
   "data": {
    "bot_rerun": 1606231259.562246,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502833951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/510137518.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526581324.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526796681.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572645850.json"
   },
   "data": {
    "bot_rerun": 1636534123.8333986,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572728500.json"
   },
   "data": {
    "bot_rerun": 1613670954.6815686,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/572915260.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/575915199.json"
   },
   "data": {
    "bot_rerun": 1615306835.1656804,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/582283058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pcre8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/588949459.json"
   },
   "data": {
    "bot_rerun": 1617707849.68842,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/601068007.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602122117.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "expat23"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/603696281.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8_9_13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/609776832.json"
   },
   "data": {
    "bot_rerun": 1636534123.8345737,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615536045.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9_0_0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645360789.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb5119"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/686207729.json"
   },
   "data": {
    "bot_rerun": 1626363758.3961473,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9_0_2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/699018904.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9_1_1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/702429147.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9_1_2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/716389154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9_1_3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/741842090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9_2_0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/6dd32a92-c3e6-43f7-9e9c-9f6a8c2757cc.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb5119"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/759527729.json"
   },
   "data": {
    "bot_rerun": 1636305893.1964083,
    "branch": "v9.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774870627.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776982674.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/778909104.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/778910082.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.0.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779508691.json"
   },
   "data": {
    "bot_rerun": 1636746496.087519,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779510054.json"
   },
   "data": {
    "bot_rerun": 1636746496.0877037,
    "branch": "v9.0.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779693690.json"
   },
   "data": {
    "bot_rerun": 1644816929.6014001,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779694456.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v9.0.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/787409232.json"
   },
   "data": {
    "bot_rerun": 1639067705.9270704,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/787411271.json"
   },
   "data": {
    "bot_rerun": 1639067705.9273493,
    "branch": "v9.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openssl3"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794178995.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/821958908.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/851621811.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/880357572.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/880762850.json"
   },
   "data": {
    "bot_rerun": 1647446919.0924006,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/881559492.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/915931109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920053815.json"
   },
   "data": {
    "bot_rerun": 1657899942.1175814,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/952676853.json"
   },
   "data": {
    "bot_rerun": 1657899942.1177537,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/997744378.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000269161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "v9.0.x"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "htcondor",
 "hash_type": "sha256",
 "name": "htcondor-build",
 "new_version": "9.10.1",
 "new_version_attempts": {
  "8.9.6": 1,
  "8.9.7": 1,
  "8_9_10": 1,
  "8_9_11": 20,
  "8_9_12": 1,
  "8_9_13": 1,
  "8_9_7": 1,
  "8_9_8": 1,
  "8_9_9": 1,
  "9.10.0": 1,
  "9.10.1": 1,
  "9.4.0": 1,
  "9.5.0": 1,
  "9.6.0": 1,
  "9.7.0": 2,
  "9.8.0": 1,
  "9.8.1": 1,
  "9.9.0": 1,
  "9_0_0": 1,
  "9_0_2": 1,
  "9_1_1": 1,
  "9_1_2": 1,
  "9_1_3": 1,
  "9_2_0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "htcondor",
   "htcondor-classads",
   "htcondor-utils",
   "libcondor_utils",
   "python-htcondor"
  ]
 },
 "pinning_version": "2022.07.18.11.18.34",
 "pre_pr_migrator_attempts": {
  "pypy": 1,
  "pypy37": 1,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "pypy": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1050, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 223, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 216, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "pypy37": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1050, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 223, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 216, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package boost-1.72.0-py27h9de70de_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"htcondor\" %}\n{% set version = \"9.10.1\" %}\n\npackage:\n  # the top-level package should be called `htcondor`, but\n  # because the metapackage needs to specify host dependencies\n  # we have to rename the top-level package so that conda-build\n  # doesn't get confused\n  name: {{ name|lower }}-build\n  version: {{ version }}\n\nsource:\n  url: https://research.cs.wisc.edu/htcondor/tarball/feature/{{ version }}/release/condor-{{ version }}-src.tar.gz\n  sha256: 32849bf93ed11b10ff433143a5adbfd0c64b72acf1123c809acccd3976c6664e\n  patches:\n    # don't build daemons\n    - 0001-cmake-don-t-build-daemons.patch\n    # set C_PYTHONARCHLIB for python\n    - 0002-cmake-set-C_PYTHONARCHLIB-for-python.patch\n    # set install paths\n    - 0003-cmake-set-install-paths-for-conda-builds.patch\n    # set section 7 for classads manpage\n    - 0004-man-set-section-7-for-classads-man-page.patch\n    # don't link libpython\n    - 0005-python-don-t-link-against-libpython.patch\n    # don't rebuild condor_utils for python bindings\n    - 0006-python-link-against-libcondor_utils-as-external.patch\n    # use conda openssl libraries\n    - 0007-osx-use-pre-installed-openssl-libraries.patch\n    # don't rewrite libs on macos\n    - 0008-osx-don-t-run-macosx_rewrite_libs.patch\n    # use local env python in cli tools\n    - 0009-python-env.patch\n\nbuild:\n  error_overdepending: true\n  error_overlinking: true\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - llvm-openmp  # [osx]\n    - make  # [unix]\n    - perl\n    - pkg-config  # [unix]\n    - sphinx\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - {{ cdt('libselinux') }}  # [linux]\n    - boost\n    - expat\n    - krb5\n    - libcurl\n    - libuuid  # [linux]\n    - libxml2\n    - llvm-openmp  # [osx]\n    - munge  # [linux]\n    - openldap\n    - openssl\n    - pcre2\n    - scitokens-cpp >=0.5.0\n    - sqlite\n    - voms  # [linux]\n\noutputs:\n  - name: htcondor-classads\n    build:\n      missing_dso_whitelist:\n        # see https://github.com/conda/conda-build/pull/4529\n        - '**/ld-linux-aarch64.so*'  # [linux and aarch64]\n      run_exports:\n        - {{ pin_subpackage(\"htcondor-classads\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - pcre2\n      run:\n        - pcre2\n    files:\n      - bin/classad*\n      - include/classad\n      - lib/libclassad*\n      - share/man/man*/classad*\n    test:\n      commands:\n        - classad_version\n    about:\n      home: http://htcondor.org/\n      doc_url: https://htcondor.readthedocs.io/\n      dev_url: https://github.com/htcondor/htcondor\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE-2.0.txt\n      summary: HTCondor's classified advertisement language\n      description: |\n        Classified Advertisements (classads) are the lingua franca of\n        HTCondor. They are used for describing jobs, workstations, and other\n        resources. They are exchanged by HTCondor processes to schedule\n        jobs. They are logged to files for statistical and debugging\n        purposes. They are used to enquire about current state of the system.\n\n        A classad is a mapping from attribute names to expressions. In the\n        simplest cases, the expressions are simple constants (integer,\n        floating point, or string). A classad is thus a form of property\n        list. Attribute expressions can also be more complicated. There is a\n        protocol for evaluating an attribute expression of a classad vis a vis\n        another ad. For example, the expression \"other.size > 3\" in one ad\n        evaluates to true if the other ad has an attribute named size and the\n        value of that attribute is (or evaluates to) an integer greater than\n        three. Two classads match if each ad has an attribute requirements\n        that evaluates to true in the context of the other ad. Classad\n        matching is used by the HTCondor central manager to determine the\n        compatibility of jobs and workstations where they may be run.\n\n  - name: libcondor_utils\n    build:\n      ignore_run_exports:\n        # for some reason this isn't actually linked (DMM)\n        - scitokens-cpp  # [osx]\n      run_exports:\n        - {{ pin_subpackage(\"libcondor_utils\", max_pin=\"x.x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - llvm-openmp  # [osx]\n      host:\n        - {{ pin_subpackage('htcondor-classads', exact=True) }}\n        - krb5\n        - libgomp  # [linux]\n        - libuuid  # [linux]\n        - llvm-openmp  # [osx]\n        - munge  # [linux]\n        - openssl\n        - pcre2\n        - scitokens-cpp >=0.5.0\n        - voms  # [linux]\n      run:\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n        - {{ pin_subpackage('htcondor-classads', exact=True) }}\n        - krb5\n        - llvm-openmp  # [osx]\n        - munge  # [linux]\n        - openssl\n        - pcre2\n        - voms  # [linux]\n    files:\n      - lib/libcondor_utils*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libcondor_utils_{{ version|replace('.','_') }}${SHLIB_EXT}  # [unix]\n    about:\n      home: http://htcondor.org/\n      doc_url: https://htcondor.readthedocs.io/\n      dev_url: https://github.com/htcondor/htcondor\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE-2.0.txt\n      summary: HTCondor utilities library\n      description: Just the HTCondor libcondor_utils shared object library.\n\n  - name: htcondor-utils\n    build:\n      ignore_run_exports:\n        # this is just here to help the solver\n        # through a difficult openssl 3 migration\n        - openssl\n      missing_dso_whitelist:\n        # see https://github.com/conda/conda-build/pull/4529\n        - '**/ld-linux-aarch64.so*'  # [linux and aarch64]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - llvm-openmp  # [osx]\n      host:\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ pin_subpackage(\"htcondor-classads\", exact=True) }}\n        - {{ pin_subpackage(\"libcondor_utils\", exact=True) }}\n        - libcurl\n        - libuuid  # [linux]\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - openssl\n      run:\n        - {{ pin_subpackage(\"htcondor-classads\", exact=True) }}\n        - {{ pin_subpackage(\"libcondor_utils\", exact=True) }}\n        - libcurl\n        - libuuid  # [linux]\n        - llvm-openmp  # [osx]\n    files:\n      - bin/condor*\n      - bin/*gahp\n      - etc/condor/*\n      - etc/init.d/condor*\n      - etc/examples/condor\n      - etc/conda/*activate.d/*_condor.sh\n      - lib/Condor*.class\n      - lib/*.jar\n      - lib/libcondorapi*\n      - lib/libchirp*\n      - libexec/condor/*\n      - share/man/man1/condor*.1\n    test:\n      commands:\n        # check executables\n        - condor_q --help\n        - condor_qedit --help\n        - condor_status --help\n        - condor_submit --help\n        - condor_submit_dag --help\n        # check that the local config is used by default\n        - test $(condor_config_val DAGMAN_CONDOR_SUBMIT_EXE) == \"${PREFIX}/bin/condor_submit\"\n    about:\n      home: http://htcondor.org/\n      doc_url: https://htcondor.readthedocs.io/\n      dev_url: https://github.com/htcondor/htcondor\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE-2.0.txt\n      summary: 'HTCondor: High Throughput Computing'\n      description: |\n        HTCondor is a workload management system for high-throughput and\n        high-performance jobs. Like other full-featured batch systems, HTCondor\n        provides a job queuing mechanism, scheduling policy, priority scheme,\n        resource monitoring, and resource management. Users submit their\n        serial or parallel jobs to HTCondor, HTCondor places them into a queue,\n        chooses when and where to run the jobs based upon a policy, carefully\n        monitors their progress, and ultimately informs the user upon\n        completion.\n\n  - name: python-htcondor\n    script: install-python.sh\n    build:\n      ignore_run_exports:\n        - libuuid  # [linux]\n        - openssl\n        - pcre2\n        - python\n      missing_dso_whitelist:\n        # see https://github.com/conda/conda-build/pull/4529\n        - '**/ld-linux-aarch64.so*'  # [linux and aarch64]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - make  # [unix]\n        - pkg-config  # [unix]\n        # extras for cross-compilation\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n        - python                              # [build_platform != target_platform]\n      host:\n        - boost\n        - {{ pin_subpackage('libcondor_utils', exact=True) }}\n        - {{ pin_subpackage('htcondor-classads', exact=True) }}\n        - libuuid  # [linux]\n        - munge  # [linux]\n        - openssl\n        - pcre2\n        - python\n        - setuptools\n      run:\n        - {{ pin_compatible('boost') }}\n        - {{ pin_subpackage('libcondor_utils', exact=True) }}\n        - {{ pin_subpackage('htcondor-classads', exact=True) }}\n        - python\n    test:\n      requires:\n        - htcondor-utils\n        - pip\n        - pytest\n        - pytest-httpserver\n      source_files:\n        - src/condor_tests/conftest.py\n        - src/condor_tests/ornithology/\n        - src/condor_tests/test_htcondor_dags/\n        - src/condor_tests/test_python_bindings_classad.py\n      commands:\n        # check that the pip recognises that package is already installed\n        # mainly by asking pip to install it again, and making sure it doesn't\n        # do anything\n        - python -m pip install --no-deps --index-url nothing {{ name }}\n        # run tests\n        - python -m pytest src/condor_tests/\n      imports:\n        - classad\n        - htcondor\n        - htcondor.dags\n        - htcondor.htchirp\n        - htcondor.personal\n    about:\n      home: http://htcondor.org/\n      doc_url: https://htcondor.readthedocs.io/\n      dev_url: https://github.com/htcondor/htcondor\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE-2.0.txt\n      summary: Python bindings for HTCondor\n      description: |\n        The HTCondor Python bindings aim to expose a high-quality,\n        Pythonic interface to the HTCondor client libraries. They utilize\n        the same C++ libraries as HTCondor itself, meaning they have\n        nearly the same behavior as the command line tools.\n\n  - name: htcondor\n    requirements:\n      host:\n        - python\n      run:\n        - {{ pin_subpackage('htcondor-classads', exact=True) }}\n        - {{ pin_subpackage('libcondor_utils', exact=True) }}\n        - python\n        - {{ pin_subpackage('python-htcondor', exact=True) }}\n        - {{ pin_subpackage('htcondor-utils', exact=True) }}\n    test:\n      imports:\n        - htcondor\n        - classad\n      commands:\n        - condor_q --version\n\nabout:\n  home: http://htcondor.org/\n  doc_url: https://htcondor.readthedocs.io/\n  dev_url: https://github.com/htcondor/htcondor\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE-2.0.txt\n  summary: 'HTCondor: High Throughput Computing'\n  description: |\n    HTCondor is a workload management system for high-throughput and\n    high-performance jobs. Like other full-featured batch systems, HTCondor\n    provides a job queuing mechanism, scheduling policy, priority scheme,\n    resource monitoring, and resource management. Users submit their\n    serial or parallel jobs to HTCondor, HTCondor places them into a queue,\n    chooses when and where to run the jobs based upon a policy, carefully\n    monitors their progress, and ultimately informs the user upon\n    completion.\n\nextra:\n  feedstock-name: htcondor\n  recipe-maintainers:\n    - duncanmmacleod\n    - jasoncpatton\n    - timtheisen\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://research.cs.wisc.edu/htcondor/tarball/feature/9.10.1/release/condor-9.10.1-src.tar.gz",
 "version": "9.10.1"
}