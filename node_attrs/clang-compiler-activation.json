{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/393027692.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454859548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/463667811.json"
   },
   "data": {
    "bot_rerun": 1600812348.3790286,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501474690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514636759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/538494271.json"
   },
   "data": {
    "bot_rerun": 1610786855.2949045,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574666576.json"
   },
   "data": {
    "bot_rerun": 1614543998.004498,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/581589077.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616433233.json"
   },
   "data": {
    "bot_rerun": 1620674343.621285,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/644463802.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/686559077.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/728004223.json"
   },
   "data": {
    "bot_rerun": 1638483657.789078,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747611456.json"
   },
   "data": {
    "bot_rerun": 1636242359.3987792,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774947837.json"
   },
   "data": {
    "bot_rerun": 1638483657.789426,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794126022.json"
   },
   "data": {
    "bot_rerun": 1647015205.0109591,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877631009.json"
   },
   "data": {
    "bot_rerun": 1647519021.7966878,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/882424166.json"
   },
   "data": {
    "bot_rerun": 1653274541.4288075,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943864617.json"
   },
   "data": {
    "bot_rerun": 1653598097.3757856,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/948725491.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "clang-compiler-activation",
 "name": "clang-compiler-activation",
 "new_version": "14.0.3",
 "new_version_attempts": {
  "10.0.1": 1,
  "11.0.0": 1,
  "11.0.1": 51,
  "11.1.0": 2,
  "12.0.0": 5,
  "12.0.1": 1,
  "13.0.0": 131,
  "13.0.1": 190,
  "14.0.0": 20,
  "14.0.1": 15,
  "14.0.2": 3,
  "14.0.3": 31
 },
 "new_version_errors": {
  "11.0.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '11.0.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.tar.xz'\n",
  "12.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '12.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz'\n",
  "13.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '13.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on versions not specified with jinja2\n",
  "13.0.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '13.0.1' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on versions not specified with jinja2\n",
  "14.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '14.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on versions not specified with jinja2\n",
  "14.0.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '14.0.1' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on versions not specified with jinja2\n",
  "14.0.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '14.0.2' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on versions not specified with jinja2\n",
  "14.0.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '14.0.3' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on versions not specified with jinja2\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "clang_bootstrap_osx-64",
   "clang_bootstrap_osx-arm64",
   "clang_osx-64",
   "clang_osx-arm64",
   "clangxx_osx-64",
   "clangxx_osx-arm64"
  ]
 },
 "pinning_version": "2022.05.25.19.48.06",
 "raw_meta_yaml": "{% if version is not defined %}\n{% set version = \"14.0.4\" %}\n{% endif %}\n{% set major_ver = version.split(\".\")[0] %}\n\n{% set build_number = 2 %}\n\npackage:\n  name: clang-compiler-activation\n  version: {{ version }}\n\n# # Originally this was to enable automatic updates from the bot,\n# # but that doesn't work with several LLVM versions at the same time\n# source:\n#   url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n#   sha256: 326335a830f2e32d06d0a36393b5455d17dc73e0bd1211065227ee014f92cbf8  # [version == \"13.0.1\"]\n\nbuild:\n  skip: true  # [win]\n  number: {{ build_number }}\n\nrequirements:\n  build:\n    - cctools_{{ target_platform }}  # [osx]\n    - libcxx {{ version }}\n    - gcc_{{ target_platform }}      # [linux]\n    - clang {{ version }}            # [osx]\n\noutputs:\n  - name: clang_{{ cross_target_platform }}\n    script: install-clang.sh\n    requirements:\n      - clang {{ version }}\n      - llvm-tools {{ version }}\n      - cctools_{{ target_platform }}        # [osx]\n      - cctools_{{ cross_target_platform }}\n      - ld64_{{ cross_target_platform }}\n      - ld64_{{ target_platform }}           # [osx]\n      # this brings in an extra symlink of ld -> x86_64-apple-darwin13.4.0-ld\n      # adding these generated an error w/ libtool: https://github.com/conda-forge/libtool-feedstock/issues/24\n      # - ld64     # [cross_target_platform == target_platform]\n      # - cctools  # [cross_target_platform == target_platform]\n      # This brings in libraries for linux too. Split this again?\n      - compiler-rt {{ version }}\n      # For OSX, compiler-rt library includes both x86_64 and arm64.\n      # Therefore `compiler-rt_osx-64` and `compiler-rt_osx-arm64` are basically the same\n      # and clobber each other. Don't bring both here.\n      - compiler-rt_{{ cross_target_platform }} {{ version }}     # [linux]\n      - gcc_impl_{{ target_platform }}       # [linux]\n    test:\n      commands:\n        - {{ CBUILD }}-clang --version\n        - {{ macos_machine }}-clang --version\n\n  - name: clangxx_{{ cross_target_platform }}\n    script: install-clangxx.sh\n    requirements:\n      build:\n        - cctools_{{ target_platform }}   # [osx]\n      host:\n        - clangxx {{ version }}\n        - libcxx {{ version }}            # [osx]\n        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}\n        - gxx_impl_{{ target_platform }}  # [linux]\n        # hack to force the solver to work\n        - libllvm{{ major_ver }} {{ version }}\n      run:\n        - clangxx {{ version }}\n        # This is not needed in Linux for cross-compiling in a conda-build env, but is needed outside\n        - libcxx >={{ version }}\n        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}\n        - gxx_impl_{{ target_platform }}  # [linux]\n    # Since transitive run_exports are not currently possible\n    # (here I would like the run dependency on clangxx to pull in the run_exports from it).\n    run_exports:\n      strong:\n        - libcxx >={{ version }}\n    test:\n      commands:\n        - echo {{ MACOSX_DEPLOYMENT_TARGET }}  # [linux]\n        - echo {{ uname_kernel_release }}\n        - echo {{ uname_machine }}\n        - echo {{ FINAL_PYTHON_SYSCONFIGDATA_NAME }}\n        - echo {{ CBUILD }}\n        - echo {{ meson_cpu_family }}\n        - {{ CBUILD }}-clang++ --version\n        - {{ macos_machine }}-clang++ --version\n\n  - name: clang_bootstrap_{{ cross_target_platform }}\n    script: install-clang-bootstrap.sh\n    requirements:\n      build:\n        - cctools_{{ target_platform }}  # [osx]\n      host:\n        - clangxx {{ version }}\n        - libcxx {{ version }}           # [cross_target_platform in (\"osx-64\", \"osx-arm64\")]\n        - cctools_{{ cross_target_platform }}\n        - ld64_{{ cross_target_platform }}\n        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}\n        - {{ pin_subpackage('clangxx_' ~ cross_target_platform, exact=True) }}\n        # hack to force the solver to work\n        - libllvm{{ major_ver }} {{ version }}\n    build:\n      always_include_files:\n        - bin/\n        - etc/\n        - include/\n        - lib/\n        - libexec/\n        - share/\n      ignore_run_exports_from:\n        - libllvm{{ major_ver }}\n        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}\n        - {{ pin_subpackage('clangxx_' ~ cross_target_platform, exact=True) }}\n      skip: true  # [not osx]\n    test:\n      commands:\n        - {{ macos_machine }}-clang --version\n        - {{ macos_machine }}-clang++ --version\n    about:\n      home: https://llvm.org\n      license: Apache-2.0\n      license_family: Apache\n      license_file: LLVM_LICENSE.txt\n      summary: clang compiler components in one package for bootstrapping clang\n\nabout:\n  home: http://github.com/conda-forge/clang-compiler-activation-feedstock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: clang compilers for conda-build 3\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - mingwandroid\n    - katietz\n    - h-vetinari\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "time": 1568135311.506797,
 "version": "13.0.1"
}