{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2018"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/214976682.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217496547.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220395232.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229646150.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/236376934.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/257482728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263310198.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/276676998.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/313193098.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/281695876.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326658589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335503522.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/354666893.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/365466661.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/386985631.json"
   },
   "data": {
    "bot_rerun": 1594057913.8341563,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444927921.json"
   },
   "data": {
    "bot_rerun": 1600812322.4597738,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491852163.json"
   },
   "data": {
    "bot_rerun": 1607965631.1071267,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500319227.json"
   },
   "data": {
    "bot_rerun": 1602229090.3666172,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500417938.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/520235856.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539680361.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551537655.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/607977938.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676382516.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680881142.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/748940166.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770222500.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/805520189.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/892543027.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1062976238.json"
   },
   "data": {
    "bot_rerun": 1663787716.4381297,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1063538973.json"
   },
   "data": {
    "bot_rerun": 1663944362.778829,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1065437400.json"
   },
   "data": {
    "bot_rerun": 1663959457.0872843,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1065950281.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "tbb",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libhwloc"
   ]
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libhwloc",
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libhwloc",
    "make",
    "pkg-config",
    "python",
    "tbb"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libhwloc"
   ]
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libhwloc",
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libhwloc",
    "make",
    "pkg-config",
    "python",
    "tbb"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libhwloc"
   ]
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libhwloc",
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libhwloc",
    "make",
    "pkg-config",
    "python",
    "tbb"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt",
    "LICENSE.txt",
    "third-party-programs.txt",
    "LICENSE.txt",
    "third-party-programs.txt",
    "LICENSE.txt",
    "third-party-programs.txt",
    "LICENSE.txt",
    "third-party-programs.txt",
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc",
    "libhwloc",
    "libhwloc",
    "libhwloc",
    "libhwloc",
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil",
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil",
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil",
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil",
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil",
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13"
     ],
     "host": [],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13"
     ],
     "host": [],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   },
   {
    "build": {
     "script": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "ninja",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config",
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config",
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config",
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "python *",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libhwloc",
    "libhwloc",
    "libhwloc",
    "libhwloc"
   ]
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch",
    "0008-Fix-tbb4py-sporadic-test-fails.patch",
    "0008-Fix-tbb4py-sporadic-test-fails.patch",
    "0008-Fix-tbb4py-sporadic-test-fails.patch",
    "0008-Fix-tbb4py-sporadic-test-fails.patch",
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "name": "tbb",
 "new_version": "2021.6.0",
 "new_version_attempts": {
  "2020.2": 884,
  "2020.3": 1495,
  "2021.1.1": 391,
  "2021.2.0": 1,
  "2021.3.0": 1,
  "2021.4.0": 1,
  "2021.5.0": 1,
  "2021.6.0": 4
 },
 "new_version_errors": {
  "2020.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2020.2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/intel/tbb/archive/{{ vtag }}.tar.gz'\n - missing jinja2 variable 'vtag' for selector 'None'\n",
  "2020.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2020.3' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/intel/tbb/archive/{{ vtag }}.tar.gz'\n - missing jinja2 variable 'vtag' for selector 'None'\n",
  "2021.1.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2021.1.1' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'vtag' for selector 'None'\n - could not hash URL template 'https://github.com/intel/tbb/archive/{{ vtag }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13"
     ],
     "host": [],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake"
   ],
   "host": []
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python",
    "tbb"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "make",
      "cmake >=3.13"
     ],
     "host": [],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "make",
      "cmake"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "make",
    "cmake"
   ],
   "host": []
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python",
    "tbb"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tbb",
   "tbb-devel",
   "tbb4py"
  ]
 },
 "pinning_version": "2022.09.23.15.53.14",
 "raw_meta_yaml": "{% set version = \"2021.6.0\" %}\n\n{% set vmajor = version.split('.')[0]|int %}\n{% set vminor = version.split('.')[1]|int %}\n{% set vpatch = version.split('.')[2]|int %}\n{% set vbinary = vmajor - 2009 %}\n\n{% set vtag = \"v%d.%d.%d\" % (vmajor, vminor, vpatch) %}\n\n# Official patch version for the first release of 2021 is 1,\n# but internal patch version is 0, handle it for interface version.\n{% set vinterface = \"%d\" % (vbinary * 1000 + vminor * 10 + (vpatch if vmajor != 2021 or vminor != 1 else 0)) %}\n\n# Libraries on Windows are expected to be installed into LIBRARY_PREFIX.\n# tbb4py files should be installed into PREFIX.\n# See https://docs.conda.io/projects/conda-build/en/latest/user-guide/environment-variables.html.\n# On non-Windows CMAKE_ARGS already contains CMAKE_INSTALL_PREFIX.\n# CMAKE_PREFIX_PATH is needed to discover libhwloc with PkgConfig.\n{% if win %}\n    {% set cmake_args = \"%CMAKE_ARGS% -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX%\" %}\n    {% set cmake_tbb4py_args = \"%CMAKE_ARGS% -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%PREFIX%\" %}\n{% else %}\n    {% set cmake_args = \"$CMAKE_ARGS\" %}\n    {% set cmake_tbb4py_args = \"$CMAKE_ARGS\" %}\n{% endif %}\n\n# Use specific test list agreed with TBB team to cover core functionality on high level.\n# Execution of all tests is too heavy task for packaging CI.\n# test_malloc_compliance is temporary excluded from the list since it causes failures that likely appear due to test implementation or env misconfiguration.\n# oneTBB issue: https://github.com/oneapi-src/oneTBB/issues/700\n# Agreed with oneTBB developers that it is suitable approach since the product is fully tested on oneTBB side.\n{% set tests = \"test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints\" %}\n{% set ctest_regex = \"^(%s)$\" % (tests.replace(' ', '|')) %}\n\n{% set tbb4py_build_dir = \"build_$PKG_HASH\" %}  # [not win]\n{% set tbb4py_build_dir = \"build_%PKG_HASH%\" %}  # [win]\n\npackage:\n  name: tbb\n  version: {{ version }}\n\nsource:\n  fn: {{ vtag }}.tar.gz\n  url: https://github.com/oneapi-src/oneTBB/archive/{{ vtag }}.tar.gz\n  sha256: 4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f\n  patches:\n    - 0008-Fix-tbb4py-sporadic-test-fails.patch\n\nbuild:\n  number: 0\n  ignore_run_exports:\n    - libhwloc\n\nrequirements:\n  build:\n    - python *\n    - {{ compiler('cxx') }}\n    - ninja       # [win]\n    - make        # [not win]\n    - cmake\n    - pkg-config  # [not osx]\n  host:\n    - libhwloc    # [not osx]\n\noutputs:\n  - name: tbb\n    build:\n      script:\n        - set CMAKE_GENERATOR=Ninja      # [win]\n        # unset option that ninja complains about\n        - set CMAKE_GENERATOR_TOOLSET=   # [win]\n        - set CMAKE_GENERATOR_PLATFORM=  # [win]\n        - cmake {{ cmake_args }} -DTBB_TEST=OFF -S . -B build\n        - cmake --build build --parallel\n        - cmake -DCOMPONENT=runtime -P build/cmake_install.cmake\n    test:\n      requires:\n        # any python version is ok for sake of testing of shared libraries\n        - python *\n      commands:\n        {% set libname = \"libtbb.so.\" ~ vbinary ~ \".\" ~ vminor %}          # [linux]\n        {% set libname = \"libtbb.\" ~ vbinary ~ \".\" ~ vminor ~ \".dylib\" %}  # [osx]\n        {% set libname = \"tbb\" ~ vbinary ~ \".dll\" %}                       # [win]\n        {% set win_extra = \"os.add_dll_directory(os.environ['LIBRARY_BIN']); \" if win else \"\" %}\n        - python -c \"import ctypes, os; {{ win_extra }} assert {{ vinterface }} == ctypes.cdll[r'{{ libname }}']['TBB_runtime_interface_version']()\"\n\n  - name: tbb-devel\n    build:\n      script:\n        - set CMAKE_GENERATOR=Ninja      # [win]\n        - set CMAKE_GENERATOR_TOOLSET=   # [win]\n        - set CMAKE_GENERATOR_PLATFORM=  # [win]\n        - cmake {{ cmake_args }} -DTBB_TEST=OFF -S . -B build\n        - cmake --build build --parallel\n        - cmake -DCOMPONENT=devel -P build/cmake_install.cmake\n      run_exports:\n        - tbb >={{ version }}\n      ignore_run_exports:\n        - libhwloc\n    requirements:\n      build:\n        - python *\n        - {{ compiler('cxx') }}\n        - ninja  # [win]\n        - make   # [not win]\n        - cmake >=3.13\n        - pkg-config  # [not osx]\n      host:\n        - libhwloc    # [not osx]\n\n      run:\n        - {{ pin_subpackage('tbb', exact=True) }}        # development package is for specific version of tbb\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - ninja  # [win]\n        - make   # [not win]\n        - cmake\n        - pkg-config  # [not osx]\n        - libhwloc    # [not osx]\n      source_files:\n        - cmake\n        - test\n        - CMakeLists.txt\n        - include  # some tests depend on files from include\n        - src      # some tests depend on files from src\n      commands:\n        - set CMAKE_GENERATOR=Ninja      # [win]\n        - set CMAKE_GENERATOR_TOOLSET=   # [win]\n        - set CMAKE_GENERATOR_PLATFORM=  # [win]\n        # Setting TBB_DIR=TRUE is needed to use libraries from the tested package,\n        # but do not build them from sources; real path to TBBConfig files is not required,\n        # because CMake will successfully find installed tested package.\n        - cmake {{ cmake_args }} -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build\n        - cmake --build test_build --target {{ tests }} --parallel  # build tests\n        - cd test_build\n        - ctest -R \"{{ ctest_regex }}\" --output-on-failure\n\n  - name: tbb4py\n    build:\n      script:\n        - set CMAKE_GENERATOR=Ninja      # [win]\n        - set CMAKE_GENERATOR_TOOLSET=   # [win]\n        - set CMAKE_GENERATOR_PLATFORM=  # [win]\n        - cmake {{ cmake_tbb4py_args }} -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B {{ tbb4py_build_dir }}\n        - cmake --build {{ tbb4py_build_dir }} --target python_build --parallel\n        - cmake -DCOMPONENT=tbb4py -P {{ tbb4py_build_dir }}/cmake_install.cmake\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - {{ compiler('cxx') }}\n        - ninja  # [win]\n        - make   # [not win]\n        - cmake\n        - swig\n      host:\n        - python\n        - {{ pin_subpackage('tbb-devel', exact=True) }}\n      run:\n        - tbb >={{ version }}                            # while python module works with any compatible tbb...\n        - python\n    test:\n      requires:\n        - python\n        - {{ pin_subpackage('tbb', exact=True) }}        # we want to test with this specific tbb package\n      imports:\n        - tbb\n        - TBB\n      commands:\n        - python -m TBB -h\n        - python -m tbb -h\n        - python -m tbb test\n    about:\n      summary: TBB module for Python\n      license: Apache 2.0\n      dev_url: https://github.com/oneapi-src/oneTBB\n\nabout:\n  home: https://github.com/oneapi-src/oneTBB\n  license: Apache-2.0\n  license_file:\n    - LICENSE.txt\n    - third-party-programs.txt\n  summary: High level abstract threading library\n  dev_url: https://github.com/oneapi-src/oneTBB\n  doc_url: https://software.intel.com/en-us/oneapi-tbb-documentation\n\nextra:\n  recipe-maintainers:\n    - anton-malakhov\n    - jschueller\n    - AlexVeprev\n    - isaevil\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "libhwloc",
   "make",
   "ninja",
   "pkg-config",
   "python",
   "swig",
   "tbb",
   "tbb-devel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja",
    "pkg-config",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libhwloc",
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libhwloc",
    "make",
    "ninja",
    "pkg-config",
    "python",
    "tbb"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cmake >=3.13",
    "cxx_compiler_stub",
    "make",
    "ninja",
    "pkg-config",
    "python *",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libhwloc",
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb",
    "tbb >=2021.6.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libhwloc",
    "make",
    "ninja",
    "pkg-config",
    "python",
    "python *",
    "tbb"
   ]
  }
 },
 "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz",
 "version": "2021.6.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/oneapi-src/oneTBB",
   "doc_url": "https://software.intel.com/en-us/oneapi-tbb-documentation",
   "home": "https://github.com/oneapi-src/oneTBB",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "third-party-programs.txt"
   ],
   "summary": "High level abstract threading library"
  },
  "build": {
   "ignore_run_exports": [
    "libhwloc"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller",
    "AlexVeprev",
    "isaevil"
   ]
  },
  "outputs": [
   {
    "build": {
     "script": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=runtime -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb",
    "test": {
     "commands": [
      "python -c \"import ctypes, os;  assert 12060 == ctypes.cdll[r'tbb12.dll']['TBB_runtime_interface_version']()\""
     ],
     "requires": [
      "python *"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libhwloc"
     ],
     "run_exports": [
      "tbb >=2021.6.0"
     ],
     "script": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB_TEST=OFF -S . -B build",
      "cmake --build build --parallel",
      "cmake -DCOMPONENT=devel -P build/cmake_install.cmake"
     ]
    },
    "name": "tbb-devel",
    "requirements": {
     "build": [
      "python *",
      "cxx_compiler_stub",
      "ninja",
      "cmake >=3.13",
      "pkg-config"
     ],
     "host": [
      "libhwloc"
     ],
     "run": [
      "tbb"
     ]
    },
    "test": {
     "commands": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build",
      "cmake --build test_build --target test_parallel_for test_tbb_header conformance_version test_flow_graph test_arena_constraints --parallel",
      "cd test_build",
      "ctest -R \"^(test_parallel_for|test_tbb_header|conformance_version|test_flow_graph|test_arena_constraints)$\" --output-on-failure"
     ],
     "requires": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "pkg-config",
      "libhwloc"
     ],
     "source_files": [
      "cmake",
      "test",
      "CMakeLists.txt",
      "include",
      "src"
     ]
    }
   },
   {
    "about": {
     "dev_url": "https://github.com/oneapi-src/oneTBB",
     "license": "Apache 2.0",
     "summary": "TBB module for Python"
    },
    "build": {
     "script": [
      "set CMAKE_GENERATOR=Ninja",
      "set CMAKE_GENERATOR_TOOLSET=",
      "set CMAKE_GENERATOR_PLATFORM=",
      "cmake $CMAKE_ARGS -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B build_%PKG_HASH%",
      "cmake --build build_%PKG_HASH% --target python_build --parallel",
      "cmake -DCOMPONENT=tbb4py -P build_%PKG_HASH%/cmake_install.cmake"
     ]
    },
    "name": "tbb4py",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "swig"
     ],
     "host": [
      "python",
      "tbb-devel"
     ],
     "run": [
      "tbb >=2021.6.0",
      "python"
     ]
    },
    "test": {
     "commands": [
      "python -m TBB -h",
      "python -m tbb -h",
      "python -m tbb test"
     ],
     "imports": [
      "tbb",
      "TBB"
     ],
     "requires": [
      "python",
      "tbb"
     ]
    }
   }
  ],
  "package": {
   "name": "tbb",
   "version": "2021.6.0"
  },
  "requirements": {
   "build": [
    "python *",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "pkg-config"
   ],
   "host": [
    "libhwloc"
   ]
  },
  "source": {
   "fn": "v2021.6.0.tar.gz",
   "patches": [
    "0008-Fix-tbb4py-sporadic-test-fails.patch"
   ],
   "sha256": "4897dd106d573e9dacda8509ca5af1a0e008755bf9c383ef6777ac490223031f",
   "url": "https://github.com/oneapi-src/oneTBB/archive/v2021.6.0.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "python",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libhwloc",
    "python",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tbb"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libhwloc",
    "ninja",
    "pkg-config",
    "python",
    "tbb"
   ]
  }
 }
}