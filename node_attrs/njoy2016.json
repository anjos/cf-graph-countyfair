{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/910117801.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911039611.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/948717683.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2016.67"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "njoy2016",
 "hash_type": "sha256",
 "name": "njoy2016",
 "new_version": "2016.67",
 "new_version_attempts": {
  "2016.67": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "njoy2016"
  ]
 },
 "pinning_version": "2022.05.25.19.48.06",
 "raw_meta_yaml": "{% set name = \"NJOY2016\" %}\n{% set version = \"2016.67\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/njoy/{{ name }}/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 4d9d3d94146897150f1c702f20e793dafefd1f08729633714ec1be9ff448ec7e\n\nbuild:\n  number: 0\n  skip: true  # [win or py<34]\n\nrequirements:\n  build:\n    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.\n    # Compilers are named 'c', 'cxx' and 'fortran'.\n    - cmake\n    - make\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n  host:\n    - python\n  run:\n    - python\n\ntest:\n  commands:\n    - python -c \"import shutil; assert(shutil.which('njoy') != None)\"\n\nabout:\n  home: https://www.njoy21.io/NJOY2016/\n  summary: Nuclear data processing with legacy NJOY\n  description: |\n    The NJOY Nuclear Data Processing System is a modular computer code designed\n    to read evaluated data in ENDF format, transform the data in various ways,\n    and output the results as libraries designed to be used in various applications.\n    Each module performs a well defined processing task. The modules are essentially\n    independent programs, and they communicate with each other using input and\n    output files, plus a very few common variables.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  doc_url: https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf\n  dev_url: https://github.com/njoy/NJOY2016\n\nextra:\n  recipe-maintainers:\n    - paulromano\n    - kkiesling\n    - nathangibson14\n    - whaeck\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/njoy/NJOY2016/archive/refs/tags/2016.67.tar.gz",
 "version": "2016.67"
}