{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/782825687.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/875198424.json"
   },
   "data": {
    "bot_rerun": 1647063072.251077,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878097212.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "elpa",
 "hash_type": "sha256",
 "name": "elpa",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "elpa"
  ]
 },
 "pinning_version": "2022.03.10.18.35.59",
 "raw_meta_yaml": "{% set name = \"elpa\" %}\n{% set version = \"2021.11.001\" %}\n{% set build = 3 %}\n{% set mpi = mpi or \"nompi\" %}\n\n# ELPA uses suffixes to allow parallel installation of several versions in the same prefix\n{% if mpi == \"nompi\" %}\n{% set elpa_suffix = \"_onenode\" %}\n{% else %}\n{% set elpa_suffix = \"\" %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://elpa.mpcdf.mpg.de/software/tarball-archive/Releases/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: fb361da6c59946661b73e51538d419028f763d7cb9dacf9d8cd5c9cd3fb7802f\n  patches:\n    - fdep-perl.patch\n    - pkgconf.patch\n    - check_thread_affinity.patch\n    - includedir-suffix.patch\n\n{% if mpi == \"nompi\" %}\n{% set build = build + 100 %}\n{% endif %}\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n\n  {% if mpi != \"nompi\" %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  run_exports:\n  {% if mpi != \"nompi\" %}\n    - {{ name }} * {{ mpi_prefix }}_*\n  {% endif %}\n    - {{ pin_subpackage('elpa', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - make\n    - perl\n    - llvm-openmp  # [osx]\n    - libgomp  # [linux]\n  host:\n    - {{ mpi }}  # [mpi != \"nompi\"]\n    - scalapack  # [mpi != \"nompi\"]\n    - libblas\n    - liblapack\n  run:\n    - {{ mpi }}  # [mpi != \"nompi\"]\n    - scalapack  # [mpi != \"nompi\"]\n\ntest:\n  requires:\n    - pkg-config\n  commands:\n    - test -f $PREFIX/lib/libelpa{{ elpa_suffix }}${SHLIB_EXT}\n    - test -f $PREFIX/lib/libelpa{{ elpa_suffix }}_openmp${SHLIB_EXT}\n    - pkg-config {{ name }}{{ elpa_suffix }} --exact-version {{ version }}\n    - pkg-config {{ name }}{{ elpa_suffix }}_openmp --exact-version {{ version }}\n    - {{ name }}2_print_kernels{{ elpa_suffix }}\n    - {{ name }}2_print_kernels{{ elpa_suffix }}_openmp\n\nabout:\n  home: https://elpa.mpcdf.mpg.de/\n  doc_url: https://elpa.mpcdf.mpg.de/documentation/doxygen/ELPA_DOXYGEN_PAGES/ELPA-{{ version }}/html/index.html\n  dev_url: https://gitlab.mpcdf.mpg.de/elpa/elpa\n  license: LGPL-3.0-only\n  license_file:\n    - LICENSE\n    - COPYING/COPYING\n    - COPYING/gpl.txt\n    - COPYING/lgpl.txt\n  summary: Eigenvalue Solvers for Petaflop-Applications\n  description: |\n    The computation of selected or all eigenvalues and eigenvectors of a symmetric\n    (Hermitian) matrix has high relevance for various scientific disciplines.\n    For the calculation of a significant part of the eigensystem typically direct\n    eigensolvers are used. For large problems, the eigensystem calculations with\n    existing solvers can become the computational bottleneck.\n\nextra:\n  recipe-maintainers:\n    - awvwgk\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "url": "https://elpa.mpcdf.mpg.de/software/tarball-archive/Releases/2021.11.001/elpa-2021.11.001.tar.gz",
 "version": "2021.11.001"
}