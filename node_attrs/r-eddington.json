{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/650707524.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-eddington",
 "hash_type": "sha256",
 "name": "r-eddington",
 "new_version": "2.1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-eddington"
  ]
 },
 "pinning_version": "2021.05.21.13.51.08",
 "raw_meta_yaml": "{% set version = '2.1.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-eddington\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/eddington_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/eddington/eddington_{{ version }}.tar.gz\n  sha256: 669dfb94096cfc5aad66494f5cc3e1ca29640fc4e269198c9136c75dbbd8086d\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcpp\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcpp\n\ntest:\n  commands:\n    - $R -e \"library('eddington')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('eddington')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/pegeler/eddington2\n  license: GPL-2.0-or-later\n  summary: Compute a cyclist's Eddington number, including efficiently computing cumulative E\n    over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling>\n    is the maximum number satisfying the condition such that a cyclist has ridden E\n    miles or greater in E days. The algorithm in this package is an improvement over\n    the conventional approach because both summary statistics and cumulative statistics\n    can be computed in linear time, since it does not require initial sorting of the\n    data. These functions may also be used for computing h-indices for authors, a metric\n    described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications\n    of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: eddington\n# Title: Compute a Cyclist's Eddington Number\n# Version: 2.1.1\n# Authors@R: c( person('Paul', 'Egeler', email = 'paulegeler@gmail.com', role = c('aut','cre')), person('Tashi', 'Reigle', role = 'ctb'))\n# Description: Compute a cyclist's Eddington number, including efficiently computing cumulative E over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling> is the maximum number satisfying the condition such that a cyclist has ridden E miles or greater in E days. The algorithm in this package is an improvement over the conventional approach because both summary statistics and cumulative statistics can be computed in linear time, since it does not require initial sorting of the data. These functions may also be used for computing h-indices for authors, a metric described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>.\n# License: GPL (>= 2)\n# Encoding: UTF-8\n# LazyData: true\n# Depends: R (>= 3.4.0)\n# LinkingTo: Rcpp\n# Imports: Rcpp\n# Suggests: testthat, knitr, rmarkdown, dplyr\n# VignetteBuilder: knitr\n# RoxygenNote: 7.1.0\n# URL: https://github.com/pegeler/eddington2\n# BugReports: https://github.com/pegeler/eddington2/issues\n# NeedsCompilation: yes\n# Packaged: 2020-03-21 21:42:55 UTC; pwe\n# Author: Paul Egeler [aut, cre], Tashi Reigle [ctb]\n# Maintainer: Paul Egeler <paulegeler@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2020-03-24 16:30:05 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/eddington_2.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_2.1.1.tar.gz"
 ],
 "version": "2.1.1"
}