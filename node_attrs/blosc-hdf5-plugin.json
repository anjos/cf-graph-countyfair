{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285639977.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "hdf5-1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440849452.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/715713314.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "blosc-hdf5-plugin",
 "hash_type": "sha256",
 "name": "blosc-hdf5-plugin",
 "new_version": "1.0.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "blosc-hdf5-plugin"
  ]
 },
 "pinning_version": "2021.08.18.12.46.46",
 "raw_meta_yaml": "{% set name = \"blosc-hdf5-plugin\" %}\n{% set version = \"1.0.0\" %}\n{% set sha256 = \"007a8bf0c7d0a571615685a4c0bd1768ed9137b7c41d0edf65f3fab71b7c19c1\" %}\n\npackage:\n    name: {{ name }}\n    version: {{ version }}\n\nsource:\n  - url: https://github.com/Blosc/hdf5-blosc/archive/v{{ version }}.tar.gz\n    folder: src\n    sha256: {{ sha256 }}\n  - path: cmake\n    folder: src\n\nbuild:\n  number: 3\n  skip: True  # [win]\n\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n\n  host:\n    - hdf5\n    - blosc\n    - cmake\n    - make\n  run:\n    - blosc\n    - hdf5\n\ntest:\n  files:\n    - test_plugin.py\n  requires:\n    - h5py\n    - python\n  commands:\n    - python test_plugin.py\n\nabout:\n    license: '3-Clause BSD'\n    license_file: 'LICENSE'\n    home: https://github.com/Blosc/hdf5-blosc\n    summary: HDF5 plugin for BLOSC filter\n    description: |\n        The plugin is being placed into HDF5 plugin directory, so it can be dynamically\n        loaded. This enables the usage for other libraries like h5py. We use our own\n        CMakeLists here to enable easy linking against Conda-Forges BLOSC library.\n\nextra:\n  recipe-maintainers:\n    - marscher\n    - tacaswell\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://github.com/Blosc/hdf5-blosc/archive/v1.0.0.tar.gz",
 "version": "1.0.0"
}