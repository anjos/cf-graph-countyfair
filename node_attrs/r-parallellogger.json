{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/840213340.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/960642612.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-parallellogger",
 "hash_type": "sha256",
 "name": "r-parallellogger",
 "new_version": "3.0.1",
 "new_version_attempts": {
  "3.0.0": 1,
  "3.0.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-parallellogger"
  ]
 },
 "pinning_version": "2022.06.06.01.05.55",
 "raw_meta_yaml": "{% set version = \"3.0.1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-parallellogger\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ParallelLogger_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ParallelLogger/ParallelLogger_{{ version }}.tar.gz\n  sha256: a276b8b7dff85c52b7269a6a8bc6cc56e204482e1c5fec04a9b016f99cc77892\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-jsonlite\n    - r-snow\n    - r-xml2\n  run:\n    - r-base\n    - r-jsonlite\n    - r-snow\n    - r-xml2\n\ntest:\n  commands:\n    - $R -e \"library('ParallelLogger')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ParallelLogger')\\\"\"  # [win]\n\nabout:\n  home: https://ohdsi.github.io/ParallelLogger/, https://github.com/OHDSI/ParallelLogger\n  license: Apache-2.0\n  summary: Support for parallel computation with progress bar, and option to stop or proceed on errors. Also provides logging to console and disk, and the logging persists in the parallel threads. Additional functions support function call automation with delayed execution (e.g. for executing functions in parallel).\n  license_family: APACHE\n  license_file:\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: ParallelLogger\n# Type: Package\n# Title: Support for Parallel Computation, Logging, and Function Automation\n# Version: 2.0.2\n# Date: 2021-7-15\n# Authors@R: c( person(\"Martijn\", \"Schuemie\", email = \"schuemie@ohdsi.org\", role = c(\"aut\", \"cre\")), person(\"Marc\", \"Suchard\", role = c(\"aut\")), person(\"Observational Health Data Science and Informatics\", role = c(\"cph\")) )\n# Maintainer: Martijn Schuemie <schuemie@ohdsi.org>\n# Description: Support for parallel computation with progress bar, and option to stop or proceed on errors. Also provides logging to console and disk, and the logging persists in the parallel threads. Additional functions support function call automation with delayed execution (e.g. for executing functions in parallel).\n# License: Apache License 2.0\n# VignetteBuilder: knitr\n# Depends: R (>= 3.1.0)\n# Imports: snow, xml2, jsonlite, methods, utils\n# Suggests: mailR, testthat, shiny, DT, knitr, rmarkdown\n# URL: https://ohdsi.github.io/ParallelLogger/, https://github.com/OHDSI/ParallelLogger\n# BugReports: https://github.com/OHDSI/ParallelLogger/issues\n# NeedsCompilation: no\n# RoxygenNote: 7.1.1\n# Encoding: UTF-8\n# Packaged: 2021-07-15 13:37:36 UTC; MSCHUEMI\n# Author: Martijn Schuemie [aut, cre], Marc Suchard [aut], Observational Health Data Science and Informatics [cph]\n# Repository: CRAN\n# Date/Publication: 2021-07-16 07:30:28 UTC\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/ParallelLogger_3.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ParallelLogger/ParallelLogger_3.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/ParallelLogger_3.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ParallelLogger/ParallelLogger_3.0.1.tar.gz"
 ],
 "version": "3.0.1"
}