{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/414062774.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650765633.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "r-mgrs",
 "hash_type": "sha256",
 "name": "r-mgrs",
 "new_version": "0.2.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-mgrs"
  ]
 },
 "pinning_version": "2021.05.23.06.20.32",
 "raw_meta_yaml": "{% set version = '0.2.1' %}\n\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-mgrs\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url: https://github.com/hrbrmstr/mgrs/archive/v{{ version }}.tar.gz\n  sha256: d2fe4a4db05ac34bbf0ce945ff08a52d53d762e1d609ed174af13cb0dfd4d03a\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\n# Suggests: testthat, covr\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - posix                            # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}git\n    - {{ posix }}zip               # [win]\n\n  host:\n    - r-base\n    - r-rcpp\n    - r-magrittr\n\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcpp\n    - r-magrittr\n\ntest:\n  commands:\n    - $R -e \"library('mgrs')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('mgrs')\\\"\"  # [win]\n\nabout:\n  home: https://gitlab.com/hrbrmstr/mgrs\n  license: MIT\n  summary: The 'Military Grid Reference System' ('MGRS') is the geocoordinate standard used by\n    'NATO' militaries for locating points on the earth. The 'MGRS' is derived from the\n    'Universal Transverse Mercator' ('UTM') grid system and the universal polar stereographic\n    ('UPS') grid system, but uses a different labeling convention. The 'MGRS' is used\n    for the entire earth. Methods are provided to convert 'MGRS' coordinates to and\n    from other coordinate systems.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - agcopenhaver\n    \n# The original CRAN metadata for this package was:\n\n# Package: mgrs\n# Type: Package\n# Title: Convert 'MGRS' ('Military Grid Reference System') Coordinates From/To Other Coordinate Systems\n# Version: 0.2.1\n# Date: 2019-11-28\n# Authors@R: c( person(\"Bob\", \"Rudis\", email = \"bob@rud.is\", role = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0001-5670-2640\")), person(\"Gregory\", \"Smith\", email = \"mith.10305@buckeyemail.osu.edu\", role = c(\"ctb\")) )\n# Maintainer: Bob Rudis <bob@rud.is>\n# Description: The 'Military Grid Reference System' ('MGRS') is the geocoordinate standard used by 'NATO' militaries for locating points on the earth. The 'MGRS' is derived from the 'Universal Transverse Mercator' ('UTM') grid system and the universal polar stereographic ('UPS') grid system, but uses a different labeling convention. The 'MGRS' is used for the entire earth. Methods are provided to convert 'MGRS' coordinates to and from other coordinate systems.\n# URL: https://gitlab.com/hrbrmstr/mgrs\n# BugReports: https://gitlab.com/hrbrmstr/mgrs/issues\n# Encoding: UTF-8\n# Copyright: file inst/COPYRIGHTS\n# License: MIT + file LICENSE\n# Suggests: testthat, covr\n# Depends: R (>= 3.2.0)\n# Imports: Rcpp, magrittr\n# LinkingTo: Rcpp\n# RoxygenNote: 6.1.1\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": "https://github.com/hrbrmstr/mgrs/archive/v0.2.1.tar.gz",
 "version": "0.2.1"
}