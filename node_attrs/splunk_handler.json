{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/200060818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/714457884.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "splunk_handler",
 "hash_type": "sha256",
 "name": "splunk_handler",
 "new_version": "3.0.0",
 "new_version_attempts": {
  "3.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "splunk_handler"
  ]
 },
 "pinning_version": "2021.08.17.12.40.09",
 "raw_meta_yaml": "{% set name = \"splunk_handler\" %}\n{% set version = \"2.2.2\" %}\n{% set sha256 = \"1a2374f1ce2f488fd8e4340460a74804c25ac44a5932fbc287bfc8e7355a1dc5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=2.7\n    - pip\n\n  run:\n    - python >=2.7\n    - requests\n\ntest:\n  imports:\n    - splunk_handler\n\nabout:\n  home: https://github.com/zach-taylor/splunk_handler\n  doc_url: https://github.com/zach-taylor/splunk_handler\n  dev_url: https://github.com/zach-taylor/splunk_handler\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'A Python logging handler that sends your logs to Splunk'\n\n  description: |\n      Splunk Handler is a Python Logger for sending logged events to an installation\n      of Splunk Enterprise. This logger requires the destination Splunk Enterprise \n      server to have enabled and configured the Splunk HTTP Event Collector.\n\nextra:\n  recipe-maintainers:\n    - sodre\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/splunk_handler/splunk_handler-2.2.2.tar.gz",
 "version": "2.2.2"
}