{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/565113600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/629923812.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/861931215.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/985386569.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "sciunit",
 "hash_type": "sha256",
 "name": "sciunit",
 "new_version": "0.2.7",
 "new_version_attempts": {
  "0.2.4": 1,
  "0.2.6": 1,
  "0.2.7": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "sciunit"
  ]
 },
 "pinning_version": "2022.07.01.13.48.55",
 "raw_meta_yaml": "{% set version = \"0.2.3\" %}\n\npackage:\n  name: sciunit\n  version: {{ version }}\n\nsource:\n  url: https://github.com/scidash/sciunit/archive/v{{ version }}.tar.gz\n  sha256: ec036b01497b593d36689f91c98a8519661ad42f71670e2b1d2b11bd051590b1\n\nbuild:\n  noarch: python\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - sciunit = sciunit.__main__:main\n\nrequirements:\n  host:\n    - setuptools\n    - python >=3.6\n    - pip\n  run:\n    - git\n    - quantities\n    - pandas\n    - ipython\n    - matplotlib-base\n    - bs4\n    - lxml\n    - nbconvert\n    - ipykernel\n    - nbformat\n    - gitpython\n    - cerberus >=1.2\n    - importlib-metadata\n    - python >=3.6\n\ntest:\n  imports:\n    - sciunit\n    - sciunit.unit_test\n\nabout:\n  home: http://sciunit.io/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'A test-driven framework for formally validating scientific models against data.'\n  description: |\n    SciUnit is a discipline-agnostic framework for model validation, \n    handling all of the testing workflow by using a implementation-independent \n    interface to models. SciUnit also contains code for visualization \n    of model results, and command line tools for incorporating \n    testing into continuous integration workflows.\n  doc_url: https://sciunit.readthedocs.io/\n  dev_url: https://github.com/scidash/sciunit\n\nextra:\n  recipe-maintainers:\n    - rgerkin\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/scidash/sciunit/archive/v0.2.3.tar.gz",
 "version": "0.2.3"
}