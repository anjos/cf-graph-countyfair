{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/762561470.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/765711160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/795810293.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836259470.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/859455058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "qrules",
 "hash_type": "sha256",
 "name": "qrules",
 "new_version": "0.9.7",
 "new_version_attempts": {
  "0.9.3": 1,
  "0.9.4": 1,
  "0.9.5": 1,
  "0.9.6": 1,
  "0.9.7": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "qrules"
  ]
 },
 "pinning_version": "2022.02.19.23.26.53",
 "raw_meta_yaml": "{% set name = \"QRules\" %}\n{% set version = \"0.9.7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0]|lower }}/{{ name|lower }}/{{ name|lower }}-{{ version }}.tar.gz\n  sha256: ce23327b44976f77313c6ed61772552142581b3fa0f36c88a321c6cd6914e49e\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools_scm\n  run:\n    - python >=3.6\n    - attrs >=20.1.0\n    - jsonschema\n    - particle\n    - python-constraint\n    - PyYAML\n    - tqdm >=4.24.0\n    - typing-extensions\n\ntest:\n  imports:\n    - qrules\n    - qrules.io\n    - qrules.conservation_rules\n    - qrules.particle\n    - qrules.quantum_numbers\n    - qrules.topology\n    - qrules.transition\n\nabout:\n  home: https://github.com/ComPWA/qrules\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Rule based particle reaction problem solver on a quantum number level\n\n  description: |\n    QRules is a Python package for **validating and generating particle reactions**\n    using quantum number conservation rules. The user only has to provide a certain\n    set of boundary conditions (initial and final state, allowed interaction types,\n    expected decay topologies, etc.). QRules will then span the space of allowed\n    quantum numbers over all allowed decay topologies and particle instances that\n    correspond with the sets of allowed quantum numbers it has found.\n\n    The resulting state transition objects are particularly useful for **amplitude\n    analysis / Partial Wave Analysis** as they contain all information (such as\n    expected masses, widths, and spin projections) that is needed to formulate an\n    amplitude model.\n\n  dev_url: https://github.com/ComPWA/qrules\n  doc_url: https://qrules.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - redeboer\n",
 "smithy_version": "3.17.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/q/qrules/qrules-0.9.7.tar.gz",
 "version": "0.9.7"
}