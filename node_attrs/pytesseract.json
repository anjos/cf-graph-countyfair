{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/301746637.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/304670417.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/309108596.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/363852639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/382089968.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405515700.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/456649586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485459685.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/524550134.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/662197948.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pytesseract",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Python-tesseract is a wrapper for Google's Tesseract-OCR Engine.\nIt is also useful as a stand-alone invocation script to tesseract,\nas it can read all image types supported by the Pillow and Leptonica\nimaging libraries, including jpeg, png, gif, bmp, tiff, and others.\nAdditionally, if used as a script, Python-tesseract will print the\nrecognized text instead of writing it to a file\n",
   "home": "https://github.com/madmaze/pytesseract",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Python-tesseract is an optical character recognition (OCR) tool for python."
  },
  "build": {
   "entry_points": [
    "pytesseract = pytesseract.pytesseract:main"
   ],
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mxr-conda",
    "adbeda",
    "agcopenhaver",
    "int3l",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "pytesseract",
   "version": "0.3.7"
  },
  "requirements": {
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pillow"
   ]
  },
  "source": {
   "sha256": "bd68fb3f6d18e374be49a35d9fec8b0cd1243ecfdb454ae79f8670063b205464",
   "url": "https://github.com/madmaze/pytesseract/archive/v0.3.7.tar.gz"
  },
  "test": {
   "imports": [
    "PIL",
    "PIL.Image",
    "pytesseract"
   ],
   "requires": [
    "flake8",
    "pep8-naming",
    "flake8-quotes",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pillow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "flake8",
    "flake8-quotes",
    "pep8-naming",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Python-tesseract is a wrapper for Google's Tesseract-OCR Engine.\nIt is also useful as a stand-alone invocation script to tesseract,\nas it can read all image types supported by the Pillow and Leptonica\nimaging libraries, including jpeg, png, gif, bmp, tiff, and others.\nAdditionally, if used as a script, Python-tesseract will print the\nrecognized text instead of writing it to a file\n",
   "home": "https://github.com/madmaze/pytesseract",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Python-tesseract is an optical character recognition (OCR) tool for python."
  },
  "build": {
   "entry_points": [
    "pytesseract = pytesseract.pytesseract:main"
   ],
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mxr-conda",
    "adbeda",
    "agcopenhaver",
    "int3l",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "pytesseract",
   "version": "0.3.7"
  },
  "requirements": {
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pillow"
   ]
  },
  "source": {
   "sha256": "bd68fb3f6d18e374be49a35d9fec8b0cd1243ecfdb454ae79f8670063b205464",
   "url": "https://github.com/madmaze/pytesseract/archive/v0.3.7.tar.gz"
  },
  "test": {
   "imports": [
    "PIL",
    "PIL.Image",
    "pytesseract"
   ],
   "requires": [
    "flake8",
    "pep8-naming",
    "flake8-quotes",
    "pytest"
   ]
  }
 },
 "name": "pytesseract",
 "new_version": "0.3.8",
 "new_version_attempts": {
  "0.3.4": 1,
  "0.3.5": 1,
  "0.3.6": 189,
  "0.3.7": 1,
  "0.3.8": 1
 },
 "new_version_errors": {
  "0.3.6": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.3.6' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/madmaze/{{ name }}/archive/v{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytesseract"
  ]
 },
 "pinning_version": "2021.06.03.19.30.35",
 "raw_meta_yaml": "{% set name = \"pytesseract\" %}\n{% set version = \"0.3.7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\n\nsource:\n  url: https://github.com/madmaze/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: bd68fb3f6d18e374be49a35d9fec8b0cd1243ecfdb454ae79f8670063b205464\n\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - pytesseract = pytesseract.pytesseract:main\n\n\nrequirements:\n  host:\n    - python\n    - pip\n\n  run:\n    - python\n    - pillow\n\n\ntest:\n  requires:\n    - flake8\n    - pep8-naming\n    - flake8-quotes\n    - pytest\n\n  imports:\n    - PIL\n    - PIL.Image\n    - pytesseract\n\n\nabout:\n  home: https://github.com/madmaze/pytesseract\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Python-tesseract is an optical character recognition (OCR) tool for python.\n\n  description: |\n    Python-tesseract is a wrapper for Google's Tesseract-OCR Engine.\n    It is also useful as a stand-alone invocation script to tesseract,\n    as it can read all image types supported by the Pillow and Leptonica\n    imaging libraries, including jpeg, png, gif, bmp, tiff, and others.\n    Additionally, if used as a script, Python-tesseract will print the\n    recognized text instead of writing it to a file\n\n\nextra:\n  recipe-maintainers:\n    - mxr-conda\n    - adbeda\n    - agcopenhaver\n    - int3l\n    - oblute\n    - rluria14\n",
 "req": {
  "__set__": true,
  "elements": [
   "pillow",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pillow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "flake8",
    "flake8-quotes",
    "pep8-naming",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pillow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "flake8",
    "flake8-quotes",
    "pep8-naming",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/madmaze/pytesseract/archive/v0.3.7.tar.gz",
 "version": "0.3.7"
}