{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/396009788.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf474"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404864969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405575712.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505498602.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547487775.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/619079395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf480"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/692171852.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/693507319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/723778749.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf481"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "nccmp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
   "dev_url": "https://gitlab.com/remikz/nccmp",
   "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
   "home": "https://gitlab.com/remikz/nccmp",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Comparison of NetCDF files"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "zklaus"
   ]
  },
  "package": {
   "name": "nccmp",
   "version": "1.9.0.1"
  },
  "requirements": {
   "build": [
    "make",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf"
   ],
   "run": [
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf"
   ]
  },
  "source": {
   "sha256": "81e9753cf451afe8248d44c841e102349e07cde942b11d1f91b5f85feb622b99",
   "url": "https://gitlab.com/remikz/nccmp/-/archive/1.9.0.1/nccmp-1.9.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/nccmp",
    "nccmp --usage"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
   "dev_url": "https://gitlab.com/remikz/nccmp",
   "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
   "home": "https://gitlab.com/remikz/nccmp",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Comparison of NetCDF files"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "zklaus",
    "zklaus"
   ]
  },
  "package": {
   "name": "nccmp",
   "version": "1.9.0.1"
  },
  "requirements": {
   "build": [
    "make",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf",
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf"
   ],
   "run": [
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf",
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf"
   ]
  },
  "source": {
   "sha256": "81e9753cf451afe8248d44c841e102349e07cde942b11d1f91b5f85feb622b99",
   "url": "https://gitlab.com/remikz/nccmp/-/archive/1.9.0.1/nccmp-1.9.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/nccmp",
    "nccmp --usage",
    "test -f $PREFIX/bin/nccmp",
    "nccmp --usage"
   ]
  }
 },
 "name": "nccmp",
 "new_version": "1.9.0.1",
 "new_version_attempts": {
  "1.8.7.0": 1,
  "1.8.8.0": 1,
  "1.8.9.0": 1,
  "1.9.0.0": 1,
  "1.9.0.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
   "dev_url": "https://gitlab.com/remikz/nccmp",
   "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
   "home": "https://gitlab.com/remikz/nccmp",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Comparison of NetCDF files"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "zklaus"
   ]
  },
  "package": {
   "name": "nccmp",
   "version": "1.9.0.1"
  },
  "requirements": {
   "build": [
    "make",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf"
   ],
   "run": [
    "curl",
    "libcurl",
    "hdf5",
    "libnetcdf"
   ]
  },
  "source": {
   "sha256": "81e9753cf451afe8248d44c841e102349e07cde942b11d1f91b5f85feb622b99",
   "url": "https://gitlab.com/remikz/nccmp/-/archive/1.9.0.1/nccmp-1.9.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/nccmp",
    "nccmp --usage"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nccmp"
  ]
 },
 "pinning_version": "2021.08.31.17.13.10",
 "pre_pr_migrator_status": {
  "hdf51121": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1283769542\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1175, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 239, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 280, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"nccmp\" %}\n{% set version = \"1.9.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/remikz/{{ name }}/-/archive/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 81e9753cf451afe8248d44c841e102349e07cde942b11d1f91b5f85feb622b99\n\nbuild:\n  number: 1\n  # Need to skip win because curl needs vc=9 and hdf5 needs vc>=14\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - make\n    - cmake\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - curl\n    - libcurl\n    - hdf5\n    - libnetcdf\n  run:\n    - curl\n    - libcurl\n    - hdf5\n    - libnetcdf\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/nccmp  # [unix]\n    - nccmp --usage\n\nabout:\n  home: https://gitlab.com/remikz/nccmp\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: Comparison of NetCDF files\n\n  description: |\n    nccmp compares two NetCDF files bitwise, semantically or with a\n    user defined tolerance (absolute or relative percentage). Parallel\n    comparisons are done in local memory without requiring temporary\n    files. Highly recommended for regression testing scientific models\n    or datasets in a test-driven development environment.\n  doc_url: https://gitlab.com/remikz/nccmp/-/blob/master/README.md\n  dev_url: https://gitlab.com/remikz/nccmp\n\nextra:\n  recipe-maintainers:\n    - zklaus\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "curl",
   "cxx_compiler_stub",
   "hdf5",
   "libcurl",
   "libnetcdf",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "hdf5",
    "libcurl",
    "libnetcdf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.com/remikz/nccmp/-/archive/1.9.0.1/nccmp-1.9.0.1.tar.gz",
 "version": "1.9.0.1"
}