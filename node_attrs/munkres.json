{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/487439312.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: 500",
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "munkres",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Munkres module provides an O(n^3) implementation of the Munkres\nalgorithm (also called the Hungarian algorithm or the Kuhn-Munkres\nalgorithm). The algorithm models an assignment problem as an NxM cost\nmatrix, where each element represents the cost of assigning the ith worker\nto the jth job, and it figures out the least-cost solution, choosing a\nsingle item from each row and column in the matrix, such that no row and\nno column are used more than once.\n",
   "dev_url": "https://github.com/bmc/munkres",
   "doc_url": "http://software.clapper.org/munkres/",
   "home": "https://github.com/bmc/munkres",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE.md",
   "summary": "The Munkres module provides an O(n^3) implementation of the Munkres algorithm (also called the Hungarian algorithm or the Kuhn-Munkres algorithm)."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "CJ-Wright"
   ]
  },
  "package": {
   "name": "munkres",
   "version": "1.1.4"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "munkres-1.1.4.tar.gz",
   "sha256": "6a297282895e4f7c27902bb5ad045d06458905daafb80a9ce14b9d87ca391205",
   "url": "https://github.com/bmc/munkres/archive/release-1.1.4.tar.gz"
  },
  "test": {
   "commands": [
    "py.test"
   ],
   "imports": [
    "munkres"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Munkres module provides an O(n^3) implementation of the Munkres\nalgorithm (also called the Hungarian algorithm or the Kuhn-Munkres\nalgorithm). The algorithm models an assignment problem as an NxM cost\nmatrix, where each element represents the cost of assigning the ith worker\nto the jth job, and it figures out the least-cost solution, choosing a\nsingle item from each row and column in the matrix, such that no row and\nno column are used more than once.\n",
   "dev_url": "https://github.com/bmc/munkres",
   "doc_url": "http://software.clapper.org/munkres/",
   "home": "https://github.com/bmc/munkres",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE.md",
   "summary": "The Munkres module provides an O(n^3) implementation of the Munkres algorithm (also called the Hungarian algorithm or the Kuhn-Munkres algorithm)."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra": {
   "recipe-maintainers": [
    "CJ-Wright"
   ]
  },
  "package": {
   "name": "munkres",
   "version": "1.1.4"
  },
  "requirements": {
   "build": [
    "python",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "munkres-1.1.4.tar.gz",
   "sha256": "6a297282895e4f7c27902bb5ad045d06458905daafb80a9ce14b9d87ca391205",
   "url": "https://github.com/bmc/munkres/archive/release-1.1.4.tar.gz"
  },
  "test": {
   "commands": [
    "py.test"
   ],
   "imports": [
    "munkres"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "name": "munkres",
 "new_version": "1.1.4",
 "new_version_attempts": {
  "1.1.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "munkres"
  ]
 },
 "pinning_version": "2020.09.14.18.14.00",
 "raw_meta_yaml": "{% set name = \"munkres\" %}\n{% set version = \"1.1.4\" %}\n{% set sha256 = \"6a297282895e4f7c27902bb5ad045d06458905daafb80a9ce14b9d87ca391205\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/bmc/{{ name }}/archive/release-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  source_files:\n    - test/*\n  requires:\n    - pytest\n  commands:\n    - py.test\n  imports:\n    - munkres\n\nabout:\n  home: https://github.com/bmc/munkres\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.md\n  summary: The Munkres module provides an O(n^3) implementation of the Munkres algorithm (also called the Hungarian algorithm or the Kuhn-Munkres algorithm).\n\n  description: |\n    The Munkres module provides an O(n^3) implementation of the Munkres\n    algorithm (also called the Hungarian algorithm or the Kuhn-Munkres\n    algorithm). The algorithm models an assignment problem as an NxM cost\n    matrix, where each element represents the cost of assigning the ith worker\n    to the jth job, and it figures out the least-cost solution, choosing a\n    single item from each row and column in the matrix, such that no row and\n    no column are used more than once.\n  doc_url: http://software.clapper.org/munkres/\n  dev_url: https://github.com/bmc/munkres\n\nextra:\n  recipe-maintainers:\n    - CJ-Wright\n",
 "req": {
  "__set__": true,
  "elements": [
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://github.com/bmc/munkres/archive/release-1.1.4.tar.gz",
 "version": "1.1.4"
}