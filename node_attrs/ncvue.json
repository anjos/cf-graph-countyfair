{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/967513958.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1111994666.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error Signals.SIGTERM\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1073, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1164, in parse_again\n    self.meta = parse(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 387, in parse\n    data = select_lines(data, ns_cfg(config), variants_in_place=bool(config.variant))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 142, in ns_cfg\n    d[\"luajit\"] = bool(lua[0] == \"2\")\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/xonsh/built_ins.py\", line 61, in newh\n    sys.exit(sig)\nSystemExit: Signals.SIGTERM\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 241, in _parse_meta_yaml_impl\n    raise RuntimeError(str(e))\nRuntimeError: Signals.SIGTERM\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ncvue",
 "hash_type": "sha256",
 "name": "ncvue",
 "new_version": "4.1.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ncvue"
  ]
 },
 "pinning_version": "2022.11.05.21.08.08",
 "raw_meta_yaml": "{% set name = \"ncvue\" %}\n{% set version = \"4.1.2\" %}\n{% set sha256 = \"716f708b1a64a195eb9e19d1909d8d2e0b45f60f97adefcc552f00fe35a51b4b\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/ncvue-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools >=42\n    - setuptools_scm >=3.5\n  run:\n    - cartopy\n    - cython\n    - numpy\n    - matplotlib-base\n    - netcdf4\n    - pykdtree\n    - pyshp\n    - python\n    - scipy\n    - shapely\n    - six\n    - tk  # [linux]\n\ntest:\n  commands:\n    - python -c \"import ncvue\"  # [not linux]\n\napp:\n    entry: python -m ncvue\n    icon: ncvue_icon.png\n    summary: ncvue - a minimal GUI for a quick view of netcdf files\n    type: desk\n    own_environment: True\n\nabout:\n  home: https://github.com/mcuntz/ncvue\n  summary: 'A minimal GUI for a quick view of netcdf files'\n  dev_url: https://github.com/mcuntz/ncvue\n  license: MIT\n  license_file: LICENSE\n  description: |\n    ncvue is a minimal GUI for a quick view of netCDF files. It is aiming to\n    be a drop-in replacement for ncview and panoply, being slightly more\n    general than ncview targeting only maps but providing animations, zooming\n    and panning capabilities unlike panoply. If ncvue is used with maps,\n    it supports mostly structured grids, more precisely the grids supported by\n    cartopy.\n  doc_url: https://mcuntz.github.io/ncvue\n\nextra:\n  recipe-maintainers:\n    - mcuntz\n",
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/ncvue/ncvue-4.1.2.tar.gz",
 "version": "4.1.2"
}