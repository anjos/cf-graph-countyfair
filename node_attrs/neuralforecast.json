{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/913629217.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/915865133.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957021188.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "neuralforecast",
 "hash_type": "sha256",
 "name": "neuralforecast",
 "new_version": "0.1.0",
 "new_version_attempts": {
  "0.0.8": 1,
  "0.0.9": 1,
  "0.1.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "neuralforecast"
  ]
 },
 "pinning_version": "2022.06.02.23.44.30",
 "raw_meta_yaml": "{% set name = \"neuralforecast\" %}\n{% set version = \"0.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/neuralforecast-{{ version }}.tar.gz\n  sha256: a0b71a66f8d35a84a307c4bdbf4c46efe67a946b904c2c15a6d586ae058245af\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - python >=3.7\n    - fastcore\n    - gdown\n    - hyperopt\n    - matplotlib-base\n    - numba\n    - openpyxl\n    - pandas\n    - pip\n    - py7zr >=0.18.1\n    - pytorch-lightning >=1.3.0\n    - requests\n    - scikit-learn\n    - statsmodels\n    - pytorch >=1.4\n    - torchinfo\n    - tqdm\n    - xlrd\n    # The following is necessary to pass pip-check\n    # pyDeprecate==0.3.1 is necessary for PL==1.5.10\n    - pyDeprecate 0.3.1\n    # pyppmd and zipfile-deflate constraints are necessary for py7zr\n    - pyppmd >=0.17.0,<0.18.0\n    - zipfile-deflate64 >=0.2.0\n\ntest:\n  imports:\n    - neuralforecast\n  ## Skipping pip-check (as build keeps failing)\n  # commands:\n  #   - pip check\n  # requires:\n  #   - pip\n\nabout:\n  home: https://github.com/Nixtla/neuralforecast/tree/main/\n  summary: Deep Learning for Time Series Forecasting\n  license: GPL-3.0-only\n  license_file: LICENSE\n  description: |\n    State-of-the-art time series forecasting for PyTorch.\n\n    `NeuralForecast` is a Python library for time series forecasting with \n    deep learning models. It includes *benchmark datasets*, *data-loading \n    utilities*, *evaluation functions*, statistical *tests*, univariate *model \n    benchmarks* and *SOTA* models implemented in PyTorch and PyTorchLightning.\n\n    PyPI: [https://pypi.org/project/neuralforecast/](https://pypi.org/project/neuralforecast/)\n\n  doc_url: https://nixtla.github.io/neuralforecast\n  dev_url: https://github.com/Nixtla/neuralforecast/tree/main/\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/neuralforecast/neuralforecast-0.1.0.tar.gz",
 "version": "0.1.0"
}