{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/80e749e2-490c-440c-8525-cd7bbbddf27c.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/654354540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-mccf1",
 "hash_type": "sha256",
 "name": "r-mccf1",
 "new_version": "1.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-mccf1"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = '1.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-mccf1\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/mccf1_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/mccf1/mccf1_{{ version }}.tar.gz\n  sha256: f98f496cd93cc6d2d48e8f54878114494b6ade54b9fc37988267c7c09cdc7708\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rocr\n    - r-ggplot2\n  run:\n    - r-base\n    - r-rocr\n    - r-ggplot2\n\ntest:\n  commands:\n    - $R -e \"library('mccf1')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('mccf1')\\\"\"  # [win]\n\nabout:\n  home: https://bitbucket.org/hoffmanlab/mccf1/\n  license: GPL-2.0-or-later\n  summary: The MCC-F1 analysis is a method to evaluate the performance of binary classifications.\n    The MCC-F1 curve is more reliable than the Receiver Operating Characteristic (ROC)\n    curve and the Precision-Recall (PR)curve under imbalanced ground truth. The MCC-F1\n    analysis also provides the MCC-F1 metric that integrates classifier performance\n    over varying thresholds, and the best threshold of binary classification.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: mccf1\n# Title: Creates the MCC-F1 Curve and Calculates the MCC-F1 Metric and the Best Threshold\n# Version: 1.1\n# Date: 2019-11-11\n# Authors@R: c(person(\"Chang\", \"Cao\", role = c(\"aut\", \"cre\"), email = \"kirin.cao@mail.utoronto.ca\"), person(\"Michael\", \"Hoffman\", role = \"aut\", email = \"michael.hoffman@utoronto.ca\"), person(\"Davide\", \"Chicco\", role = \"aut\", email = \"davide.chicco@gmail.com\"))\n# Maintainer: Chang Cao <kirin.cao@mail.utoronto.ca>\n# Depends: R (>= 3.3.3), ggplot2\n# Imports: ROCR\n# Description: The MCC-F1 analysis is a method to evaluate the performance of binary classifications. The MCC-F1 curve is more reliable than the Receiver Operating Characteristic (ROC) curve and the Precision-Recall (PR)curve under imbalanced ground truth. The MCC-F1 analysis also provides the MCC-F1 metric that integrates classifier performance over varying thresholds, and the best threshold of binary classification.\n# License: GPL (>= 2)\n# URL: https://bitbucket.org/hoffmanlab/mccf1/\n# BugReports: https://stackoverflow.com/questions/tagged/mccf1\n# RoxygenNote: 6.0.1\n# NeedsCompilation: no\n# Packaged: 2019-11-11 20:45:39 UTC; user\n# Author: Chang Cao [aut, cre], Michael Hoffman [aut], Davide Chicco [aut]\n# Repository: CRAN\n# Date/Publication: 2019-11-11 21:00:03 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/mccf1_1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/mccf1/mccf1_1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/mccf1_1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/mccf1/mccf1_1.1.tar.gz"
 ],
 "version": "1.1"
}