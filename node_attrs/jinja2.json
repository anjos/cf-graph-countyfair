{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200075182.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268064065.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/324814623.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/367657511.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/369215896.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402723160.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/564704752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/642167316.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/647135197.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/749483354.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/777105740.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888694559.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/890095247.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/922234159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jinja2",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Jinja is a fast, expressive, extensible templating engine. Special\nplaceholders in the template allow writing code similar to Python\nsyntax. Then the template is passed data to render the final document.\n\nIt includes:\n\n-   Template inheritance and inclusion.\n-   Define and import macros within templates.\n-   HTML templates can use autoescaping to prevent XSS from untrusted\n    user input.\n-   A sandboxed environment can safely render untrusted templates.\n-   AsyncIO support for generating templates and calling async\n    functions.\n-   I18N support with Babel.\n-   Templates are compiled to optimized Python code just-in-time and\n    cached, or can be compiled ahead-of-time.\n-   Exceptions point to the correct line in templates to make debugging\n    easier.\n-   Extensible filters, tests, functions, and even syntax.\n\nJinja's philosophy is that while application logic belongs in Python if\npossible, it shouldn't make the template designer's job difficult by\nrestricting functionality too much.\n",
   "dev_url": "https://github.com/pallets/jinja/",
   "doc_url": "https://jinja.palletsprojects.com/",
   "home": "https://palletsprojects.com/p/jinja/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.rst",
   "summary": "A very fast and expressive template engine."
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "scopatz",
    "nehaljwani",
    "xylar"
   ]
  },
  "package": {
   "name": "jinja2",
   "version": "3.1.2"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "markupsafe >=2.0",
    "python >=3.7"
   ]
  },
  "source": {
   "fn": "Jinja2-3.1.2.tar.gz",
   "sha256": "31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852",
   "url": "https://pypi.io/packages/source/J/Jinja2/Jinja2-3.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "jinja2"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markupsafe",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Jinja is a fast, expressive, extensible templating engine. Special\nplaceholders in the template allow writing code similar to Python\nsyntax. Then the template is passed data to render the final document.\n\nIt includes:\n\n-   Template inheritance and inclusion.\n-   Define and import macros within templates.\n-   HTML templates can use autoescaping to prevent XSS from untrusted\n    user input.\n-   A sandboxed environment can safely render untrusted templates.\n-   AsyncIO support for generating templates and calling async\n    functions.\n-   I18N support with Babel.\n-   Templates are compiled to optimized Python code just-in-time and\n    cached, or can be compiled ahead-of-time.\n-   Exceptions point to the correct line in templates to make debugging\n    easier.\n-   Extensible filters, tests, functions, and even syntax.\n\nJinja's philosophy is that while application logic belongs in Python if\npossible, it shouldn't make the template designer's job difficult by\nrestricting functionality too much.\n",
   "dev_url": "https://github.com/pallets/jinja/",
   "doc_url": "https://jinja.palletsprojects.com/",
   "home": "https://palletsprojects.com/p/jinja/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.rst",
   "summary": "A very fast and expressive template engine."
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "scopatz",
    "nehaljwani",
    "xylar"
   ]
  },
  "package": {
   "name": "jinja2",
   "version": "3.1.2"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "markupsafe >=2.0",
    "python >=3.7"
   ]
  },
  "source": {
   "fn": "Jinja2-3.1.2.tar.gz",
   "sha256": "31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852",
   "url": "https://pypi.io/packages/source/J/Jinja2/Jinja2-3.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "jinja2"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "jinja2",
 "new_version": "3.1.2",
 "new_version_attempts": {
  "2.11.2": 1,
  "2.11.3": 1,
  "3.0.0": 1,
  "3.0.1": 1,
  "3.0.2": 1,
  "3.0.3": 1,
  "3.1.0": 1,
  "3.1.1": 1,
  "3.1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jinja2"
  ]
 },
 "pinning_version": "2022.04.28.12.57.13",
 "raw_meta_yaml": "{% set name = \"Jinja2\" %}\n{% set version = \"3.1.2\" %}\n{% set sha256 = \"31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - markupsafe >=2.0\n    - python >=3.7\n\ntest:\n  imports:\n    - jinja2\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://palletsprojects.com/p/jinja/\n  license: BSD-3-Clause\n  license_file: LICENSE.rst\n  summary: A very fast and expressive template engine.\n  description: |\n    Jinja is a fast, expressive, extensible templating engine. Special\n    placeholders in the template allow writing code similar to Python\n    syntax. Then the template is passed data to render the final document.\n\n    It includes:\n\n    -   Template inheritance and inclusion.\n    -   Define and import macros within templates.\n    -   HTML templates can use autoescaping to prevent XSS from untrusted\n        user input.\n    -   A sandboxed environment can safely render untrusted templates.\n    -   AsyncIO support for generating templates and calling async\n        functions.\n    -   I18N support with Babel.\n    -   Templates are compiled to optimized Python code just-in-time and\n        cached, or can be compiled ahead-of-time.\n    -   Exceptions point to the correct line in templates to make debugging\n        easier.\n    -   Extensible filters, tests, functions, and even syntax.\n\n    Jinja's philosophy is that while application logic belongs in Python if\n    possible, it shouldn't make the template designer's job difficult by\n    restricting functionality too much.\n  doc_url: https://jinja.palletsprojects.com/\n  dev_url: https://github.com/pallets/jinja/\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - msarahan\n    - scopatz\n    - nehaljwani\n    - xylar\n",
 "req": {
  "__set__": true,
  "elements": [
   "markupsafe",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markupsafe",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markupsafe >=2.0",
    "python >=3.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/J/Jinja2/Jinja2-3.1.2.tar.gz",
 "version": "3.1.2"
}