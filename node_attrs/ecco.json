{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/813770757.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/817153509.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "ecco",
 "hash_type": "sha256",
 "name": "ecco",
 "new_version": "0.1.2",
 "new_version_attempts": {
  "0.1.1": 1,
  "0.1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ecco"
  ]
 },
 "pinning_version": "2022.01.09.15.48.10",
 "raw_meta_yaml": "{% set name = \"ecco\" %}\n{% set version = \"0.1.2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/ecco-{{ version }}.tar.gz\n  sha256: b0b280b3214f19fca28a74aec0e0c332693ccd3f621b79102dac69f902e1ffb2\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - ecco = ecco.cli:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - python >=3.6\n    - captum ~=0.4\n    - pyyaml ~=5.4\n    - scikit-learn ~=0.23\n    - seaborn ~=0.11\n    - transformers ~=4.2\n    # NOTE:\n    # The install_requires does not include \"ipython\"\n    # But, the package build fails without \"ipython\" \n    # on conda-forge.\n    - ipython\n\ntest:\n  imports:\n    - ecco\n  commands:\n    - pip check\n    - ecco --help\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/jalammar/ecco\n  summary: Visualization tools for NLP machine learning models.\n  license: BSD-3-Clause\n  license_file: LICENSE\n  description: |\n    Ecco is a python library for explaining Natural Language \n    Processing models using interactive visualizations.\n\n    It provides multiple interfaces to aid the explanation \n    and intuition of [Transformer][_transformer]-based language models. \n    Read: [Interfaces for Explaining Transformer Language Models][_interfaces].\n\n    Ecco runs inside Jupyter notebooks. It is built on top \n    of [pytorch][_pytorch] and [transformers][_hf-transformers].\n\n    The library is currently an alpha release of a research \n    project. Not production ready. You're welcome to contribute \n    to make it better!\n\n    [_transformer]: https://jalammar.github.io/illustrated-transformer/\n    [_interfaces]: https://jalammar.github.io/explaining-transformers/\n    [_pytorch]: https://pytorch.org/\n    [_hf-transformers]: https://github.com/huggingface/transformers\n\n    List of Web Resources:\n\n      - [Ecco - *Look Inside Language Models*](https://www.eccox.io/)\n      - [Finding the Words to Say: Hidden State Visualizations for Language Models](https://jalammar.github.io/hidden-states/)\n\n  doc_url: https://ecco.readthedocs.io/\n  dev_url: https://github.com/jalammar/ecco\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/e/ecco/ecco-0.1.2.tar.gz",
 "version": "0.1.2"
}