{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/577168291.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/872085043.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libfaketime",
 "hash_type": "sha256",
 "name": "libfaketime",
 "new_version": "0.9.10",
 "new_version_attempts": {
  "0.9.10": 1,
  "0.9.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libfaketime"
  ]
 },
 "pinning_version": "2022.03.04.19.31.39",
 "raw_meta_yaml": "{% set name = \"libfaketime\" %}\n{% set version = \"0.9.8\" %}\n{% set sha256 = \"06288237cd5890eca148489e5b904ed852ed0ffa8424bfb479342f4daa8442a3\" %}\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/wolfcw/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - test_makefile.patch\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make\n\ntest:\n  commands:\n    - faketime --help\n\nabout:\n  home: https://github.com/wolfcw/libfaketime\n  license: GPL-2.0\n  license_family: GPL\n  license_file: COPYING\n  summary: 'libfaketime intercepts various system calls that programs use to retrieve the\n  current date and time.'\n\n  description: |\n    libfaketime intercepts various system calls that programs use to retrieve the\n    current date and time. It then reports modified (faked) dates and times (as\n    specified by you, the user) to these programs. This means you can modify the\n    system time a program sees without having to change the time system-wide.\n\nextra:\n  recipe-maintainers:\n    - pvanheus\n",
 "smithy_version": "3.17.2",
 "strong_exports": false,
 "url": "https://github.com/wolfcw/libfaketime/archive/v0.9.8.tar.gz",
 "version": "0.9.8"
}