{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/675888223.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/892403503.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "azure-keyvault-certificates",
 "hash_type": "sha256",
 "name": "azure-keyvault-certificates",
 "new_version": "4.4.0",
 "new_version_attempts": {
  "4.3.0": 1,
  "4.4.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "azure-keyvault-certificates"
  ]
 },
 "pinning_version": "2022.03.28.19.38.17",
 "raw_meta_yaml": "{% set name = \"azure-keyvault-certificates\" %}\n{% set version = \"4.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip\n  sha256: 0c0154f3801b2384dd7fa4ed60366f4b0ae9111c5ffcca878d05368a004b87cf\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - azure-common ~=1.1\n    - azure-core >=1.20.0,<2.0.0\n    - msrest >=0.6.21\n\ntest:\n  imports:\n    - azure.keyvault.certificates\n    - azure.keyvault.certificates.aio\n\nabout:\n  home: https://docs.microsoft.com/en-au/azure/key-vault/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Azure Key Vault Certificates client library for Python\n  doc_url: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-keyvault-certificates/latest/azure.keyvault.certificates.html\n  dev_url: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates\n\nextra:\n  recipe-maintainers:\n    - dhirschfeld\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/azure-keyvault-certificates/azure-keyvault-certificates-4.4.0.zip",
 "version": "4.4.0"
}