{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203966515.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221611175.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.19.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231761822.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/312042376.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/314624312.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.20.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/348687545.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375121157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/432323272.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513699467.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/563313830.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573744071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/576685898.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/628427187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/628466679.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "mdanalysis",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MDAnalysis is a Python library to analyze trajectories from molecular\ndynamics (MD) simulations. It can read and write most popular formats, and\nprovides a flexible and fast framework for writing custom analysis through\nmaking the underlying data easily available as NumPy arrays.\n",
   "dev_url": "https://github.com/MDAnalysis/mdanalysis",
   "doc_url": "https://www.mdanalysis.org/docs/",
   "home": "https://www.mdanalysis.org",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "An object-oriented library to analyze molecular dynamics trajectories generated by CHARMM, Gromacs, NAMD, LAMMPS, or Amber."
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay"
   ]
  },
  "package": {
   "name": "mdanalysis",
   "version": "1.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython"
   ],
   "run": [
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43"
   ]
  },
  "source": {
   "fn": "MDAnalysis-1.0.1.tar.gz",
   "sha256": "dc2cf34391b5eb1733fca1ab14e0de2e381d2d595c95923403f42cb2e39c9dad",
   "url": "https://pypi.io/packages/source/M/MDAnalysis/MDAnalysis-1.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "biopython",
    "griddataformats",
    "gsd",
    "joblib",
    "matplotlib-base",
    "mmtf-python",
    "netcdf4",
    "networkx",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "seaborn",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MDAnalysis is a Python library to analyze trajectories from molecular\ndynamics (MD) simulations. It can read and write most popular formats, and\nprovides a flexible and fast framework for writing custom analysis through\nmaking the underlying data easily available as NumPy arrays.\n",
   "dev_url": "https://github.com/MDAnalysis/mdanalysis",
   "doc_url": "https://www.mdanalysis.org/docs/",
   "home": "https://www.mdanalysis.org",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "An object-oriented library to analyze molecular dynamics trajectories generated by CHARMM, Gromacs, NAMD, LAMMPS, or Amber."
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay"
   ]
  },
  "package": {
   "name": "mdanalysis",
   "version": "1.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython"
   ],
   "run": [
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43"
   ]
  },
  "source": {
   "fn": "MDAnalysis-1.0.1.tar.gz",
   "sha256": "dc2cf34391b5eb1733fca1ab14e0de2e381d2d595c95923403f42cb2e39c9dad",
   "url": "https://pypi.io/packages/source/M/MDAnalysis/MDAnalysis-1.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances"
   ]
  }
 },
 "name": "mdanalysis",
 "new_version": "1.1.1",
 "new_version_attempts": {
  "1.0.0": 1,
  "1.0.1": 1,
  "1.1.0": 1,
  "1.1.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "MDAnalysis is a Python library to analyze trajectories from molecular\ndynamics (MD) simulations. It can read and write most popular formats, and\nprovides a flexible and fast framework for writing custom analysis through\nmaking the underlying data easily available as NumPy arrays.\n",
   "dev_url": "https://github.com/MDAnalysis/mdanalysis",
   "doc_url": "https://www.mdanalysis.org/docs/",
   "home": "https://www.mdanalysis.org",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "An object-oriented library to analyze molecular dynamics trajectories generated by CHARMM, Gromacs, NAMD, LAMMPS, or Amber."
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay",
    "kain88-de",
    "orbeckst",
    "richardjgowers",
    "ialibay"
   ]
  },
  "package": {
   "name": "mdanalysis",
   "version": "1.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython",
    "python",
    "pip",
    "numpy >=1.13.3,<1.17",
    "cython"
   ],
   "run": [
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43",
    "python",
    "scipy >=1.0.0",
    "numpy >1.13.3,<1.17",
    "matplotlib-base",
    "seaborn",
    "netcdf4 >=1.0",
    "biopython >=1.71,<1.77",
    "networkx >=1.0",
    "griddataformats >=0.4.0",
    "joblib >=0.12,<0.15.0",
    "gsd >=1.4.0",
    "mmtf-python >=1.0",
    "scikit-learn",
    "tqdm >=4.43"
   ]
  },
  "source": {
   "fn": "MDAnalysis-1.0.1.tar.gz",
   "sha256": "dc2cf34391b5eb1733fca1ab14e0de2e381d2d595c95923403f42cb2e39c9dad",
   "url": "https://pypi.io/packages/source/M/MDAnalysis/MDAnalysis-1.0.1.tar.gz"
  },
  "test": {
   "imports": [
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances",
    "MDAnalysis",
    "MDAnalysis.analysis",
    "MDAnalysis.lib.c_distances_openmp",
    "MDAnalysis.lib.c_distances"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "biopython",
    "griddataformats",
    "gsd",
    "joblib",
    "matplotlib-base",
    "mmtf-python",
    "netcdf4",
    "networkx",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "seaborn",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mdanalysis"
  ]
 },
 "pinning_version": "2021.05.01.06.26.24",
 "raw_meta_yaml": "{% set name = \"MDAnalysis\" %}\n{% set version = \"1.0.1\" %}\n{% set sha256 = \"dc2cf34391b5eb1733fca1ab14e0de2e381d2d595c95923403f42cb2e39c9dad\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 3\n  skip: true  # [win]\n  skip: true  # [python_impl == 'pypy']\n  skip: true  # [py>38]\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - numpy >=1.13.3,<1.17\n    - cython\n\n  run:\n    - python\n    - scipy >=1.0.0\n    - numpy >1.13.3,<1.17\n    - matplotlib-base\n    - seaborn\n    - netcdf4 >=1.0\n    - biopython >=1.71,<1.77\n    - networkx >=1.0\n    - griddataformats >=0.4.0\n    - joblib >=0.12,<0.15.0\n    - gsd >=1.9.3  # [win]\n    - gsd >=1.4.0  # [not win]\n    - mmtf-python >=1.0\n    - scikit-learn\n    - tqdm >=4.43\n\ntest:\n  imports:\n    - MDAnalysis\n    - MDAnalysis.analysis\n    - MDAnalysis.lib.c_distances_openmp\n    - MDAnalysis.lib.c_distances\n\nabout:\n  home: https://www.mdanalysis.org\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: An object-oriented library to analyze molecular dynamics trajectories generated by CHARMM, Gromacs, NAMD, LAMMPS, or Amber.\n  description: |\n    MDAnalysis is a Python library to analyze trajectories from molecular\n    dynamics (MD) simulations. It can read and write most popular formats, and\n    provides a flexible and fast framework for writing custom analysis through\n    making the underlying data easily available as NumPy arrays.\n  doc_url: https://www.mdanalysis.org/docs/\n  dev_url: https://github.com/MDAnalysis/mdanalysis\n\nextra:\n  recipe-maintainers:\n    - kain88-de\n    - orbeckst\n    - richardjgowers\n    - ialibay\n",
 "req": {
  "__set__": true,
  "elements": [
   "biopython",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "griddataformats",
   "gsd",
   "joblib",
   "matplotlib-base",
   "mmtf-python",
   "netcdf4",
   "networkx",
   "numpy",
   "pip",
   "python",
   "scikit-learn",
   "scipy",
   "seaborn",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "biopython",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "griddataformats",
    "gsd",
    "joblib",
    "matplotlib-base",
    "mmtf-python",
    "netcdf4",
    "networkx",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "seaborn",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy >=1.13.3,<1.17",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "biopython >=1.71,<1.77",
    "griddataformats >=0.4.0",
    "gsd >=1.4.0",
    "joblib >=0.12,<0.15.0",
    "matplotlib-base",
    "mmtf-python >=1.0",
    "netcdf4 >=1.0",
    "networkx >=1.0",
    "numpy >1.13.3,<1.17",
    "python",
    "scikit-learn",
    "scipy >=1.0.0",
    "seaborn",
    "tqdm >=4.43"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/M/MDAnalysis/MDAnalysis-1.0.1.tar.gz",
 "version": "1.0.1"
}