{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/501725146.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501727383.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502086085.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gdal31"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503953723.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/583962200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gdal32"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650825355.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gdal33"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676696577.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "fmt8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753746404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776666393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/784943392.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gdal34"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812640096.json"
   },
   "data": {
    "bot_rerun": 1654245621.1347587,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/956666907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gdal35"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957231317.json"
   },
   "data": {
    "bot_rerun": 1657635943.2323794,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/993785779.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "fmt9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/994412010.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1011528564.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052496318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1057896707.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1061951353.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1079315349.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1101981176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1106285210.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "lue",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "LUE is software for storing and manipulating large amounts of information\nfor large amounts of objects. This information can optionally have a\nreference in time and space. For example, LUE can represent collections of\nwandering animals and their properties, some of which are changing through\ntime, or the elevation of the surface of one or multiple areas. The software\nis useful, and currently mainly used, in the context of environmental\nmodelling of biological and physical systems, represented by agents and\nfields, but we make sure that the software is as generic as possible,\nallowing it to be useful in other contexts as well.\n\nCurrently, LUE contains two main parts: *LUE data model* and *LUE\nframework*. LUE data model is an implementation of the LUE physical data\nmodel, which allows users to perform I/O to the \"LUE Scientific Database\".\nIt allows for the storage of large amounts of objects and their location\nin time and space, and their properties.\n\nLUE framework is a collection of data types and algorithms that can be\ncombined to translate large amounts of information. It allows computations\nto be performed on hardware ranging from laptops to compute clusters,\nwithout the user having to know about high-performance computing and\nthe related technology.\n",
   "dev_url": "https://github.com/computationalgeography/lue/",
   "doc_url": "https://lue.computationalgeography.org/doc/",
   "home": "https://lue.computationalgeography.org/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "LUE scientific database and environmental modelling framework."
  },
  "build": {
   "number": "2",
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong"
   ]
  },
  "package": {
   "name": "lue",
   "version": "0.3.4"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio"
   ],
   "run": [
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools"
   ]
  },
  "source": {
   "sha256": "64ad28461f9472d541aa3e0ba97f813650a9b247f90e2f382c99ad678a05c59c",
   "url": "https://pcraster.geo.uu.nl/pcraster/packages/src/lue-0.3.4.tar.bz2"
  },
  "test": {
   "commands": [
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "conan",
    "cxx_compiler_stub",
    "git",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "asio",
    "boost-cpp",
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "libhwloc",
    "nlohmann_json",
    "numpy",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "LUE is software for storing and manipulating large amounts of information\nfor large amounts of objects. This information can optionally have a\nreference in time and space. For example, LUE can represent collections of\nwandering animals and their properties, some of which are changing through\ntime, or the elevation of the surface of one or multiple areas. The software\nis useful, and currently mainly used, in the context of environmental\nmodelling of biological and physical systems, represented by agents and\nfields, but we make sure that the software is as generic as possible,\nallowing it to be useful in other contexts as well.\n\nCurrently, LUE contains two main parts: *LUE data model* and *LUE\nframework*. LUE data model is an implementation of the LUE physical data\nmodel, which allows users to perform I/O to the \"LUE Scientific Database\".\nIt allows for the storage of large amounts of objects and their location\nin time and space, and their properties.\n\nLUE framework is a collection of data types and algorithms that can be\ncombined to translate large amounts of information. It allows computations\nto be performed on hardware ranging from laptops to compute clusters,\nwithout the user having to know about high-performance computing and\nthe related technology.\n",
   "dev_url": "https://github.com/computationalgeography/lue/",
   "doc_url": "https://lue.computationalgeography.org/doc/",
   "home": "https://lue.computationalgeography.org/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "LUE scientific database and environmental modelling framework."
  },
  "build": {
   "number": "2",
   "script_env": [
    "TMPDIR",
    "TMPDIR",
    "TMPDIR",
    "TMPDIR"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong"
   ]
  },
  "package": {
   "name": "lue",
   "version": "0.3.4"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio"
   ],
   "run": [
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp"
   ]
  },
  "source": {
   "sha256": "64ad28461f9472d541aa3e0ba97f813650a9b247f90e2f382c99ad678a05c59c",
   "url": "https://pcraster.geo.uu.nl/pcraster/packages/src/lue-0.3.4.tar.bz2"
  },
  "test": {
   "commands": null
  }
 },
 "name": "lue",
 "new_version": "0.3.5",
 "new_version_attempts": {
  "0.3.1": 3,
  "0.3.2": 1,
  "0.3.3": 1,
  "0.3.4": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "LUE is software for storing and manipulating large amounts of information\nfor large amounts of objects. This information can optionally have a\nreference in time and space. For example, LUE can represent collections of\nwandering animals and their properties, some of which are changing through\ntime, or the elevation of the surface of one or multiple areas. The software\nis useful, and currently mainly used, in the context of environmental\nmodelling of biological and physical systems, represented by agents and\nfields, but we make sure that the software is as generic as possible,\nallowing it to be useful in other contexts as well.\n\nCurrently, LUE contains two main parts: *LUE data model* and *LUE\nframework*. LUE data model is an implementation of the LUE physical data\nmodel, which allows users to perform I/O to the \"LUE Scientific Database\".\nIt allows for the storage of large amounts of objects and their location\nin time and space, and their properties.\n\nLUE framework is a collection of data types and algorithms that can be\ncombined to translate large amounts of information. It allows computations\nto be performed on hardware ranging from laptops to compute clusters,\nwithout the user having to know about high-performance computing and\nthe related technology.\n",
   "dev_url": "https://github.com/computationalgeography/lue/",
   "doc_url": "https://lue.computationalgeography.org/doc/",
   "home": "https://lue.computationalgeography.org/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "LUE scientific database and environmental modelling framework."
  },
  "build": {
   "number": "2",
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong"
   ]
  },
  "package": {
   "name": "lue",
   "version": "0.3.4"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio"
   ],
   "run": [
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools"
   ]
  },
  "source": {
   "sha256": "64ad28461f9472d541aa3e0ba97f813650a9b247f90e2f382c99ad678a05c59c",
   "url": "https://pcraster.geo.uu.nl/pcraster/packages/src/lue-0.3.4.tar.bz2"
  },
  "test": {
   "commands": [
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "conan",
    "cxx_compiler_stub",
    "git",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "asio",
    "boost-cpp",
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "libhwloc",
    "nlohmann_json",
    "numpy",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "LUE is software for storing and manipulating large amounts of information\nfor large amounts of objects. This information can optionally have a\nreference in time and space. For example, LUE can represent collections of\nwandering animals and their properties, some of which are changing through\ntime, or the elevation of the surface of one or multiple areas. The software\nis useful, and currently mainly used, in the context of environmental\nmodelling of biological and physical systems, represented by agents and\nfields, but we make sure that the software is as generic as possible,\nallowing it to be useful in other contexts as well.\n\nCurrently, LUE contains two main parts: *LUE data model* and *LUE\nframework*. LUE data model is an implementation of the LUE physical data\nmodel, which allows users to perform I/O to the \"LUE Scientific Database\".\nIt allows for the storage of large amounts of objects and their location\nin time and space, and their properties.\n\nLUE framework is a collection of data types and algorithms that can be\ncombined to translate large amounts of information. It allows computations\nto be performed on hardware ranging from laptops to compute clusters,\nwithout the user having to know about high-performance computing and\nthe related technology.\n",
   "dev_url": "https://github.com/computationalgeography/lue/",
   "doc_url": "https://lue.computationalgeography.org/doc/",
   "home": "https://lue.computationalgeography.org/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "LUE scientific database and environmental modelling framework."
  },
  "build": {
   "number": "2",
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong"
   ]
  },
  "package": {
   "name": "lue",
   "version": "0.3.4"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make",
    "git",
    "conan",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "gperftools",
    "asio"
   ],
   "run": [
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "gperftools"
   ]
  },
  "source": {
   "sha256": "64ad28461f9472d541aa3e0ba97f813650a9b247f90e2f382c99ad678a05c59c",
   "url": "https://pcraster.geo.uu.nl/pcraster/packages/src/lue-0.3.4.tar.bz2"
  },
  "test": {
   "commands": [
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h",
    "lue_translate -h",
    "lue_validate -h"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "conan",
    "cxx_compiler_stub",
    "git",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "asio",
    "boost-cpp",
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "libhwloc",
    "nlohmann_json",
    "numpy",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lue"
  ]
 },
 "pinning_version": "2022.11.01.00.02.24",
 "pre_pr_migrator_attempts": {
  "gdal31": 1
 },
 "pre_pr_migrator_status": {
  "gdal31": "not solvable: ['Encountered problems while solving.\\nProblem: package libgdal-3.1.0-h0b4441a_2 requires hdf5 >=1.10.6,<1.10.7.0a0, but none of the providers can be installed\\n', 'Encountered problems while solving.\\nProblem: package libgdal-3.1.0-h242383b_0 requires hdf5 >=1.10.6,<1.10.7.0a0, but none of the providers can be installed\\n', 'Encountered problems while solving.\\nProblem: package libgdal-3.1.0-h3274ae7_1 requires hdf5 >=1.10.6,<1.10.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"0.3.4\" %}\n\n\npackage:\n  name: lue\n  version: {{ version }}\n\n\nsource:\n  url: https://pcraster.geo.uu.nl/pcraster/packages/src/lue-{{ version }}.tar.bz2\n  sha256: 64ad28461f9472d541aa3e0ba97f813650a9b247f90e2f382c99ad678a05c59c\n\n\nbuild:\n  number: 2\n  skip: true  # [win and py==37]\n  script_env:\n    - TMPDIR                                       # [win]\n\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy >1.17                            # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - make                                         # [unix]\n    - git\n    - conan\n    - cmake\n    - ninja\n\n  host:\n    - python\n    - numpy >1.17\n    - boost-cpp\n    - hdf5\n    - libgdal\n    - pybind11\n    - fmt\n    - docopt.cpp\n    - nlohmann_json\n    - libhwloc\n    - gperftools                                   # [not win]\n    - asio\n\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - hdf5\n    - libgdal\n    - fmt\n    - docopt.cpp\n    - gperftools                                   # [not win]\n\n\ntest:\n  commands:\n    - lue_translate -h                             # [not win]\n    - lue_validate -h                              # [not win]\n\n\nabout:\n  home: https://lue.computationalgeography.org/\n  license: MIT\n  license_file: LICENSE.txt\n  summary: LUE scientific database and environmental modelling framework.\n  description: |\n    LUE is software for storing and manipulating large amounts of information\n    for large amounts of objects. This information can optionally have a\n    reference in time and space. For example, LUE can represent collections of\n    wandering animals and their properties, some of which are changing through\n    time, or the elevation of the surface of one or multiple areas. The software\n    is useful, and currently mainly used, in the context of environmental\n    modelling of biological and physical systems, represented by agents and\n    fields, but we make sure that the software is as generic as possible,\n    allowing it to be useful in other contexts as well.\n\n    Currently, LUE contains two main parts: *LUE data model* and *LUE\n    framework*. LUE data model is an implementation of the LUE physical data\n    model, which allows users to perform I/O to the \"LUE Scientific Database\".\n    It allows for the storage of large amounts of objects and their location\n    in time and space, and their properties.\n\n    LUE framework is a collection of data types and algorithms that can be\n    combined to translate large amounts of information. It allows computations\n    to be performed on hardware ranging from laptops to compute clusters,\n    without the user having to know about high-performance computing and\n    the related technology.\n  doc_url: https://lue.computationalgeography.org/doc/\n  dev_url: https://github.com/computationalgeography/lue/\n\n\nextra:\n  recipe-maintainers:\n    - OliverSchmitz\n    - kordejong\n",
 "req": {
  "__set__": true,
  "elements": [
   "asio",
   "boost-cpp",
   "cmake",
   "conan",
   "cxx_compiler_stub",
   "docopt.cpp",
   "fmt",
   "git",
   "gperftools",
   "hdf5",
   "libgdal",
   "libhwloc",
   "make",
   "ninja",
   "nlohmann_json",
   "numpy",
   "pybind11",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "conan",
    "cxx_compiler_stub",
    "git",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "asio",
    "boost-cpp",
    "cxx_compiler_stub",
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "libhwloc",
    "nlohmann_json",
    "numpy",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "conan",
    "cxx_compiler_stub",
    "git",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "asio",
    "boost-cpp",
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "libhwloc",
    "nlohmann_json",
    "numpy >1.17",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docopt.cpp",
    "fmt",
    "gperftools",
    "hdf5",
    "libgdal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pcraster.geo.uu.nl/pcraster/packages/src/lue-0.3.4.tar.bz2",
 "version": "0.3.4",
 "win_64_meta_yaml": {
  "about": {
   "description": "LUE is software for storing and manipulating large amounts of information\nfor large amounts of objects. This information can optionally have a\nreference in time and space. For example, LUE can represent collections of\nwandering animals and their properties, some of which are changing through\ntime, or the elevation of the surface of one or multiple areas. The software\nis useful, and currently mainly used, in the context of environmental\nmodelling of biological and physical systems, represented by agents and\nfields, but we make sure that the software is as generic as possible,\nallowing it to be useful in other contexts as well.\n\nCurrently, LUE contains two main parts: *LUE data model* and *LUE\nframework*. LUE data model is an implementation of the LUE physical data\nmodel, which allows users to perform I/O to the \"LUE Scientific Database\".\nIt allows for the storage of large amounts of objects and their location\nin time and space, and their properties.\n\nLUE framework is a collection of data types and algorithms that can be\ncombined to translate large amounts of information. It allows computations\nto be performed on hardware ranging from laptops to compute clusters,\nwithout the user having to know about high-performance computing and\nthe related technology.\n",
   "dev_url": "https://github.com/computationalgeography/lue/",
   "doc_url": "https://lue.computationalgeography.org/doc/",
   "home": "https://lue.computationalgeography.org/",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "LUE scientific database and environmental modelling framework."
  },
  "build": {
   "number": "2",
   "script_env": [
    "TMPDIR",
    "TMPDIR",
    "TMPDIR",
    "TMPDIR"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong",
    "OliverSchmitz",
    "kordejong"
   ]
  },
  "package": {
   "name": "lue",
   "version": "0.3.4"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "git",
    "conan",
    "cmake",
    "ninja"
   ],
   "host": [
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio",
    "python",
    "numpy >1.17",
    "boost-cpp",
    "hdf5",
    "libgdal",
    "pybind11",
    "fmt",
    "docopt.cpp",
    "nlohmann_json",
    "libhwloc",
    "asio"
   ],
   "run": [
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp",
    "python",
    "numpy",
    "hdf5",
    "libgdal",
    "fmt",
    "docopt.cpp"
   ]
  },
  "source": {
   "sha256": "64ad28461f9472d541aa3e0ba97f813650a9b247f90e2f382c99ad678a05c59c",
   "url": "https://pcraster.geo.uu.nl/pcraster/packages/src/lue-0.3.4.tar.bz2"
  },
  "test": {
   "commands": null
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "conan",
    "cxx_compiler_stub",
    "git",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "asio",
    "boost-cpp",
    "docopt.cpp",
    "fmt",
    "hdf5",
    "libgdal",
    "libhwloc",
    "nlohmann_json",
    "numpy",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docopt.cpp",
    "fmt",
    "hdf5",
    "libgdal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}