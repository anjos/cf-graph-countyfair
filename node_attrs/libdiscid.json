{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libdiscid",
 "hash_type": "sha256",
 "name": "libdiscid",
 "new_version": "0.6.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libdiscid"
  ]
 },
 "raw_meta_yaml": "{% set name = \"libdiscid\" %}\n{% set version = \"0.6.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/metabrainz/libdiscid/archive/v{{ version }}.tar.gz\n  sha256: a9b73b030603ce707941a3aab4f46649fa5029025e7e2bfbbe0c3c93a86d7b20\n  patches:\n      - 0001-Update-disc_win32.c.patch  # [win]\n      - Cmake.patch\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage('libdiscid', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - ninja  # [win]\n    - make  # [not win]\n    - cmake\n    -  {{ compiler('c') }}\n    - m2-patch  # [win]\ntest:\n  commands:\n    - test -f \"${PREFIX}/lib/libdiscid.so.0\"  # [linux]\n    - test -f \"${PREFIX}/lib/libdiscid.dylib\"  # [osx]\n    - test -f \"${PREFIX}/include/discid/discid.h\"  # [unix]\n    - if not exist %LIBRARY_LIB%\\*discid.dll exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\discid\\discid.h exit 1  # [win]\n\nabout:\n  home: https://musicbrainz.org/doc/libdiscid\n  license: LGPL-2.0-or-later\n  license_family: LGPL\n  license_file: COPYING\n  summary: A Library for creating MusicBrainz DiscIDs\n  dev_url: https://github.com/metabrainz/libdiscid\n  doc_url: https://musicbrainz.org/doc/libdiscid\n\nextra:\n  recipe-maintainers:\n    - HeavyTony2\n",
 "strong_exports": false,
 "url": "https://github.com/metabrainz/libdiscid/archive/v0.6.2.tar.gz",
 "version": "0.6.2"
}