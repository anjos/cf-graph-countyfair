{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/855353301.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/857918734.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/859700783.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/866767182.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/866876190.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "yte",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "YTE is a template engine for YAML format that utilizes the YAML\nstructure in combination with Python expressions for enabling to\ndynamically build YAML documents.\n",
   "dev_url": "https://github.com/koesterlab/yte",
   "doc_url": "https://github.com/koesterlab/yte",
   "home": "https://github.com/koesterlab/yte",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "YAML template engine"
  },
  "build": {
   "entry_points": [
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand"
   ]
  },
  "package": {
   "name": "yte",
   "version": "1.1.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml"
   ],
   "run": [
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "172d4a35ce0b6dbc0ffb5d7c97f9be5c188bad843031659ba85bd145453894d2",
   "url": "https://pypi.io/packages/source/y/yte/yte-1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte"
   ],
   "imports": [
    "yte",
    "yte",
    "yte",
    "yte"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "plac",
    "poetry",
    "python",
    "pyyaml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "plac",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "YTE is a template engine for YAML format that utilizes the YAML\nstructure in combination with Python expressions for enabling to\ndynamically build YAML documents.\n",
   "dev_url": "https://github.com/koesterlab/yte",
   "doc_url": "https://github.com/koesterlab/yte",
   "home": "https://github.com/koesterlab/yte",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "YAML template engine"
  },
  "build": {
   "entry_points": [
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand"
   ]
  },
  "package": {
   "name": "yte",
   "version": "1.1.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml"
   ],
   "run": [
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "172d4a35ce0b6dbc0ffb5d7c97f9be5c188bad843031659ba85bd145453894d2",
   "url": "https://pypi.io/packages/source/y/yte/yte-1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "pip check",
    "yte --help",
    "pip check",
    "yte --help",
    "pip check",
    "yte --help"
   ],
   "imports": [
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte",
    "yte"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "yte",
 "new_version": "1.2.0",
 "new_version_attempts": {
  "0.2.0": 1,
  "1.0.0": 2,
  "1.1.0": 1,
  "1.2.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "YTE is a template engine for YAML format that utilizes the YAML\nstructure in combination with Python expressions for enabling to\ndynamically build YAML documents.\n",
   "dev_url": "https://github.com/koesterlab/yte",
   "doc_url": "https://github.com/koesterlab/yte",
   "home": "https://github.com/koesterlab/yte",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "YAML template engine"
  },
  "build": {
   "entry_points": [
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand"
   ]
  },
  "package": {
   "name": "yte",
   "version": "1.1.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml"
   ],
   "run": [
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "172d4a35ce0b6dbc0ffb5d7c97f9be5c188bad843031659ba85bd145453894d2",
   "url": "https://pypi.io/packages/source/y/yte/yte-1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte",
    "pip check",
    "yte --help",
    "echo -e '?if True:\n  foo: 1' | yte"
   ],
   "imports": [
    "yte",
    "yte",
    "yte",
    "yte"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "plac",
    "poetry",
    "python",
    "pyyaml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "plac",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "yte"
  ]
 },
 "pinning_version": "2022.02.25.15.35.46",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"yte\" %}\n{% set version = \"1.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 172d4a35ce0b6dbc0ffb5d7c97f9be5c188bad843031659ba85bd145453894d2\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [py<37]\n  entry_points:\n    - yte = yte:main\n\nrequirements:\n  host:\n    - python\n    - pip\n    - poetry\n    - plac\n    - pyyaml\n  run:\n    - python\n    - plac\n    - pyyaml\n\ntest:\n  imports:\n    - yte\n  requires:\n    - pip\n  commands:\n    - pip check\n    - yte --help\n    - \"echo -e '?if True:\\n  foo: 1' | yte\"  # [not win]\n\nabout:\n  home: https://github.com/koesterlab/yte\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: YAML template engine\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    YTE is a template engine for YAML format that utilizes the YAML \n    structure in combination with Python expressions for enabling to \n    dynamically build YAML documents.\n  doc_url: https://github.com/koesterlab/yte\n  dev_url: https://github.com/koesterlab/yte\n\nextra:\n  recipe-maintainers:\n    - johanneskoester\n    - fxwiegand\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "plac",
   "poetry",
   "python",
   "pyyaml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "plac",
    "poetry",
    "python",
    "pyyaml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "plac",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.17.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "plac",
    "poetry",
    "python",
    "pyyaml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "plac",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/y/yte/yte-1.1.0.tar.gz",
 "version": "1.1.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "YTE is a template engine for YAML format that utilizes the YAML\nstructure in combination with Python expressions for enabling to\ndynamically build YAML documents.\n",
   "dev_url": "https://github.com/koesterlab/yte",
   "doc_url": "https://github.com/koesterlab/yte",
   "home": "https://github.com/koesterlab/yte",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "YAML template engine"
  },
  "build": {
   "entry_points": [
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main",
    "yte = yte:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand",
    "johanneskoester",
    "fxwiegand"
   ]
  },
  "package": {
   "name": "yte",
   "version": "1.1.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml",
    "python",
    "pip",
    "poetry",
    "plac",
    "pyyaml"
   ],
   "run": [
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml",
    "python",
    "plac",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "172d4a35ce0b6dbc0ffb5d7c97f9be5c188bad843031659ba85bd145453894d2",
   "url": "https://pypi.io/packages/source/y/yte/yte-1.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "yte --help",
    "pip check",
    "yte --help",
    "pip check",
    "yte --help",
    "pip check",
    "yte --help"
   ],
   "imports": [
    "yte",
    "yte",
    "yte",
    "yte"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "plac",
    "poetry",
    "python",
    "pyyaml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "plac",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}