{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "ksonnet",
 "hash_type": "sha256",
 "name": "ksonnet",
 "new_version": "0.13.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ksonnet"
  ]
 },
 "raw_meta_yaml": "{% set name = \"ksonnet\" %}\n{% set version = \"0.13.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ksonnet/ksonnet/releases/download/v{{ version }}/ks_{{ version }}_darwin_amd64.tar.gz  # [osx]\n  sha256: 5e4bf4ef3eec3c47082c95ded07fd32b70c214134626bca8d7a6a424ea7ffeb8  # [osx]\n\n  url: https://github.com/ksonnet/ksonnet/releases/download/v{{ version }}/ks_{{ version }}_linux_amd64.tar.gz  # [linux]\n  sha256: fe76e414e5cba3f093e34e1b433f79cd53915e3153b68cff5ba3273cafd8a2a0  # [linux]\n\n  url: https://github.com/ksonnet/ksonnet/releases/download/v{{ version }}/ks_{{ version }}_windows_amd64.zip  # [win]\n  sha256: ca76063a2819ade0c4e2749c59fb92cfd7210d1c1196e7b4c20b0f4b4bd2bebc  # [win]\n\nbuild:\n  number: 0\n\ntest:\n  commands:\n    - ks -h  # [unix]\n    - ks.exe -h  # [win]\n\nabout:\n  home: https://ksonnet.io/\n  license: Apache 2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'A CLI-supported framework for extensible Kubernetes configurations'\n\n  description: |\n    ksonnet is a framework for writing, sharing, and deploying Kubernetes application manifests. With its CLI, you can generate a complete application from scratch in only a few commands, or manage a complex system at scale.\n    Specifically, ksonnet allows you to:\n    * Reuse common manifest patterns (within your app or from external libraries)\n    * Customize manifests directly with powerful object concatenation syntax\n    * Deploy app manifests to multiple environments\n    * Diff across environments to compare two running versions of your app\n    Track the entire state of your app configuration in version controllable files\n    All of this results in a more iterative process for developing manifests, one that can be supplemented by continuous integration (CI).\n  doc_url: https://ksonnet.io/docs/\n  dev_url: https://github.com/ksonnet/ksonnet\n\nextra:\n  recipe-maintainers:\n    - stsukrov\n",
 "strong_exports": false,
 "url": "https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_windows_amd64.zip",
 "version": "0.13.1"
}