{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/795131056.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "trio-parallel",
 "hash_type": "sha256",
 "name": "trio-parallel",
 "new_version": "1.0.0",
 "new_version_attempts": {
  "1.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "trio-parallel"
  ]
 },
 "pinning_version": "2021.12.03.08.21.30",
 "raw_meta_yaml": "{% set name = \"trio-parallel\" %}\n{% set version = \"1.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7be741cf1ab925c97a5f6f334aee469c3e9c98124a0229b4ed2bfe8563940c13\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python =>3.7\n    - pip\n  run:\n    - python =>3.7\n    - trio >=0.18.0\n    - cffi\n    - attrs >=17.3.0\n    - outcome\n\ntest:\n  imports:\n    - trio_parallel\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://trio-parallel.readthedocs.io/\n  license: MIT OR Apache-2.0\n  license_family: OTHER\n  license_file:\n    - LICENSE\n    - LICENSE.APACHE2\n    - LICENSE.MIT\n  summary: 'trio-parallel: CPU parallelism for Trio'\n  description: |\n    Do you have CPU-bound work that just keeps slowing down\n    your Trio event loop no matter what you try? Do you need\n    to get all those cores humming at once? This is the library for you!\n  doc_url: https://trio-parallel.readthedocs.io/\n  dev_url: https://github.com/richardsheridan/trio-parallel\n\nextra:\n  recipe-maintainers:\n    - carlodri\n",
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/t/trio-parallel/trio-parallel-1.0.0.tar.gz",
 "version": "1.0.0"
}