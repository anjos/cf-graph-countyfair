{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/523441399.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528087773.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/634129088.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/637432997.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/805429282.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/928623846.json"
   },
   "data": {
    "bot_rerun": 1651949922.6467803,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/930336778.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/931491703.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939961078.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libnegf",
 "hash_type": "sha256",
 "name": "libnegf",
 "new_version": "1.1.2",
 "new_version_attempts": {
  "1.0.1": 1,
  "1.0.2": 1,
  "1.0.3": 1,
  "1.1.0": 2,
  "1.1.1": 1,
  "1.1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libnegf"
  ]
 },
 "pinning_version": "2022.05.18.07.20.58",
 "pre_pr_migrator_attempts": {
  "gcc930": 1
 },
 "pre_pr_migrator_status": {
  "gcc930": "not solvable: master: ['linux_64_c_compiler_version7fortran_compiler_version7mpimpich: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_mpich_.*\\n', 'linux_64_c_compiler_version7fortran_compiler_version7mpiopenmpi: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_openmpi_.*\\n', 'linux_64_c_compiler_version9fortran_compiler_version9mpimpich: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_mpich_.*\\n', 'linux_64_c_compiler_version9fortran_compiler_version9mpiopenmpi: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_openmpi_.*\\n', 'osx_64_fortran_compiler_version7mpimpich: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_mpich_.*\\n', 'osx_64_fortran_compiler_version7mpiopenmpi: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_openmpi_.*\\n', 'osx_64_fortran_compiler_version9mpimpich: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_mpich_.*\\n', 'osx_64_fortran_compiler_version9mpiopenmpi: Encountered problems while solving.\\nProblem: nothing provides requested mpifx mpi_openmpi_.*\\n']"
 },
 "raw_meta_yaml": "{% set name = \"libnegf\" %}\n{% set version = \"1.1.2\" %}\n{% set build = 0 %}\n{% set mpi = mpi or \"nompi\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 6bbb5e4223773f3b6e24daafd32ecec2b5a09cb2e6413394dce81a03685af312\n\n{% if mpi == \"nompi\" %}\n{% set build = build + 100 %}\n{% endif %}\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n\n  {% if mpi != \"nompi\" %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n  {% if mpi != \"nompi\" %}\n    - {{ name }} * {{ mpi_prefix }}_*\n  {% endif %}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}\n    - cmake\n    - ninja\n    - fypp\n    - {{ mpi }}  # [mpi == \"openmpi\" and build_platform != target_platform]\n  host:\n    - {{ mpi }}  # [mpi != \"nompi\"]\n    - mpifx * mpi_{{ mpi }}_*  # [mpi != 'nompi']\n    - libblas\n    - liblapack\n  run:\n    - {{ mpi }}  # [mpi != \"nompi\"]\n    - {{ pin_compatible('mpifx') }} mpi_{{ mpi }}_*  # [mpi != 'nompi']\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libnegf${SHLIB_EXT}\n\nabout:\n  home: https://github.com/libnegf/libnegf\n  license: LGPL-3.0-or-later\n  license_file:\n    - LICENSE\n  summary: A general library for Non Equilibrium Green's Functions\n\nextra:\n  recipe-maintainers:\n    - awvwgk\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/libnegf/libnegf/archive/v1.1.2.tar.gz",
 "version": "1.1.2"
}