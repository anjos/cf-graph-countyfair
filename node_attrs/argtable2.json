{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209898363.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "argtable2",
 "hash_type": "sha256",
 "name": "argtable2",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "argtable2"
  ]
 },
 "pinning_version": "2018.08.14",
 "raw_meta_yaml": "{% set name = \"argtable2\" %}\n{% set version = \"2.13\" %}\n{% set sha256 = \"8f77e8a7ced5301af6e22f47302fdbc3b1ff41f2b83c43c77ae5ca041771ddbf\" %}\n\npackage:\n    name: {{ name|lower }}\n    version: {{ version }}\n\nsource:\n    fn: {{ name }}-{{ version }}.tar.gz\n    url: http://prdownloads.sourceforge.net/argtable/argtable2-13.tar.gz\n    sha256: {{ sha256 }}\n\nbuild:\n    number: 1001\n    skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libargtable2.dylib  # [osx]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n    - test -f $PREFIX/lib/libargtable2.so  # [linux]\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [linux]\n\nabout:\n    home: http://argtable.sourceforge.net/\n    license: LGPL-2\n    license_family: LGPL\n    license_file: COPYING\n    summary: \"Argtable is an ANSI C command line parser.\"\n\nextra:\n    recipe-maintainers:\n        - hbredin\n        - thomasfillon\n\n\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "http://prdownloads.sourceforge.net/argtable/argtable2-13.tar.gz",
 "version": "2.13"
}