{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "flask-authorize",
 "hash_type": "sha256",
 "name": "flask-authorize",
 "new_version": "0.2.6",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "flask-authorize"
  ]
 },
 "raw_meta_yaml": "{% set name = \"flask-authorize\" %}\n{% set version = \"0.2.6\" %}\n{% set sha256 = \"b3d905552ed69d97131cfcaa62609c6b04440ff6a1da6a0397f0867dea7001c6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/f/flask-authorize/Flask-Authorize-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.3\n    - setuptools\n  run:\n    - flask\n    - flask-sqlalchemy\n    - python >=3.3\n    - six\n    - sqlalchemy\n\ntest:\n  imports:\n    - flask_authorize\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/bprinty/Flask-Authorize\n  summary: Flask plugin for content authorization and access control\n  description: |\n    Flask-Authorize is a Flask extension designed to simplify the process of\n    incorporating Access Control Lists (ACLs) and Role-Based Access Control (RBAC) into\n    applications housing sensitive data, allowing developers to focus on the actual code\n    for their application instead of logic for enforcing permissions. It uses a\n    unix-like permissions scheme for enforcing access permissions on existing content,\n    and also provides mechanisms for globally enforcing permissions throughout an\n    application.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://flask-authorize.readthedocs.io/en/latest/?badge=latest\n\nextra:\n  recipe-maintainers:\n    - paulsaxe\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/f/flask-authorize/Flask-Authorize-0.2.6.tar.gz",
 "version": "0.2.6"
}