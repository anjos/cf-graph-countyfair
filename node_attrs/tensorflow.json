{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.13.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/322909766.json"
   },
   "data": {
    "bot_rerun": 1597087686.7782965,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "id": "2061c0bb-07b6-48c1-8129-ecddef035c12",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/354191972.json"
   },
   "data": {
    "bot_rerun": 1600812328.5920036,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/360612129.json"
   },
   "data": {
    "bot_rerun": 1600812328.5927386,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/366764305.json"
   },
   "data": {
    "bot_rerun": 1600798219.6232567,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/452347790.json"
   },
   "data": {
    "bot_rerun": 1618261506.6537693,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519019213.json"
   },
   "data": {
    "bot_rerun": 1618261506.653986,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613958844.json"
   },
   "data": {
    "bot_rerun": 1619765457.9200556,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613982269.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/614693806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/627057826.json"
   },
   "data": {
    "bot_rerun": 1635084910.0724564,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/634542164.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf316"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/644192758.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/695701998.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp139"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/708122192.json"
   },
   "data": {
    "bot_rerun": 1630686201.2492504,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/709465471.json"
   },
   "data": {
    "bot_rerun": 1630680133.6528847,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/727191552.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/734949486.json"
   },
   "data": {
    "bot_rerun": 1632597032.3338926,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp140"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/762755272.json"
   },
   "data": {
    "bot_rerun": 1635084910.072912,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/763627890.json"
   },
   "data": {
    "bot_rerun": 1635084910.0730107,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp140"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764890885.json"
   },
   "data": {
    "bot_rerun": 1636025500.2903993,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp140"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/767860349.json"
   },
   "data": {
    "bot_rerun": 1636025500.2906384,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/768654540.json"
   },
   "data": {
    "bot_rerun": 1636025500.2907722,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu69"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773254603.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp140"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773262569.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773270542.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu69"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773275529.json"
   },
   "data": {
    "bot_rerun": 1637583559.236467,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773299705.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774384183.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/780044424.json"
   },
   "data": {
    "bot_rerun": 1637583559.2370842,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp141"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/785103195.json"
   },
   "data": {
    "bot_rerun": 1637583559.2372603,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp142"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/786020589.json"
   },
   "data": {
    "bot_rerun": 1638693152.6410556,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp142"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/786096084.json"
   },
   "data": {
    "bot_rerun": 1638995429.0633135,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/786102313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp141"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/789915293.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/790174069.json"
   },
   "data": {
    "bot_rerun": 1638995429.0637343,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/795262696.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp142"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/798256858.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799397337.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf319"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/825312263.json"
   },
   "data": {
    "bot_rerun": 1644142166.178593,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp143"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838590915.json"
   },
   "data": {
    "bot_rerun": 1644142166.1788146,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841039505.json"
   },
   "data": {
    "bot_rerun": 1652188639.4857008,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/858103800.json"
   },
   "data": {
    "bot_rerun": 1652188639.4859028,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp144"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/889789539.json"
   },
   "data": {
    "bot_rerun": 1652188639.4860141,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp145"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896971320.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "icu70"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/932559932.json"
   },
   "data": {
    "bot_rerun": 1652848286.271174,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp144"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/933250137.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/935089270.json"
   },
   "data": {
    "bot_rerun": 1652848286.2718837,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf320"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/937908571.json"
   },
   "data": {
    "bot_rerun": 1652848286.2720885,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/938163507.json"
   },
   "data": {
    "bot_rerun": 1652848286.2722116,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943345889.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/945099860.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "tensorflow",
 "hash_type": "sha256",
 "name": "tensorflow-split",
 "new_version": "2.9.1",
 "new_version_attempts": {
  "2.0.0": 1,
  "2.0.2": 4,
  "2.1.1": 4,
  "2.2.0": 4,
  "2.3.0": 549,
  "2.3.1": 417,
  "2.4.0": 283,
  "2.4.1": 109,
  "2.5.0": 1,
  "2.5.1": 1,
  "2.6.0": 2,
  "2.7.0": 5,
  "2.8.0": 3,
  "2.8.1": 1,
  "2.9.0": 2,
  "2.9.1": 1
 },
 "new_version_errors": {
  "2.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'pyver' for selector 'linux'\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n",
  "2.0.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.0.2' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'pyver' for selector 'linux'\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n",
  "2.1.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.1.1' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'pyver' for selector 'linux'\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n",
  "2.2.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.2.0' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'pyver' for selector 'linux'\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n",
  "2.3.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.3.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n - missing jinja2 variable 'pyver' for selector 'linux'\n",
  "2.3.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.3.1' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'pyver' for selector 'linux'\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n",
  "2.4.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.4.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n - missing jinja2 variable 'pyver' for selector 'linux'\n",
  "2.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - missing jinja2 variable 'pyver' for selector 'linux'\n - could not hash URL template 'https://pypi.io/packages/{{ pyver }}/t/tensorflow/{{ fn }}'\n",
  "2.7.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '2.7.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/tensorflow/tensorflow/archive/v{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libtensorflow",
   "libtensorflow_cc",
   "tensorflow",
   "tensorflow-base",
   "tensorflow-estimator",
   "tensorflow-gpu"
  ]
 },
 "pinning_version": "2022.05.23.15.49.11",
 "pre_pr_migrator_attempts": {
  "abseil_cpp20210324_20211102": 26,
  "armosxaddition": 680,
  "grpc_cpp138": 1,
  "grpc_cpp144": 24,
  "grpc_cpp145": 78,
  "grpc_cpp146": 55,
  "grpc_cpp147": 6,
  "libprotobuf320": 9,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "abseil_cpp20210324_20211102": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2426196026\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1141, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 241, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"../conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "armosxaddition": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2841054766\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 235, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/arch.py\", line 271, in migrate\n    y = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "grpc_cpp138": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1002102324\">bot CI job</a>): master: ['linux_64_python3.6.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-hce63b2e_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_python3.7.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-hce63b2e_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_python3.8.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-hce63b2e_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-hce63b2e_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_python3.6.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_python3.7.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_python3.8.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_python3.9.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.1-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_arm64_python3.8.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.0-h73154ff_0 requires libprotobuf >=3.16.0,<3.17.0a0, but none of the providers can be installed\\n', 'osx_arm64_python3.9.____cpython: Encountered problems while solving:\\n  - package grpc-cpp-1.38.0-h73154ff_0 requires libprotobuf >=3.16.0,<3.17.0a0, but none of the providers can be installed\\n']",
  "grpc_cpp144": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2445433951\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 248, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"../conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "grpc_cpp145": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2508806467\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 248, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"../conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "grpc_cpp146": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2344673865\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1141, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 241, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"../conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "grpc_cpp147": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2802935045\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 248, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"../conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "libprotobuf320": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2833612735\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1150, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 248, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 87, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"remote_ci_setup\" with value \"[]\" (original value: \"[]\")\n  in \"../conda-forge.yml\", line 13, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "python39": "not solvable: master: ['linux_64_python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm9 9.0.1.* 1\\n', 'linux_64_python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm9 9.0.1.* 1\\n', 'linux_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.1-py27_blas_openblash1522bff_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package absl-py-0.7.0-py27_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'osx_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.1-py27_blas_openblash486cb9f_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'osx_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package tensorflow-estimator-1.14.0-py_0 requires tensorflow-base >=1.14.0,<1.15.0a0, but none of the providers can be installed\\n', 'win_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.1-py27h5fc8d92_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package tensorflow-estimator-1.14.0-py_0 requires tensorflow-base >=1.14.0,<1.15.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"2.9.1\" %}\n{% set estimator_version = \"2.9.0\" %}\n\npackage:\n  name: tensorflow-split\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/tensorflow/tensorflow/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 6eaf86ead73e23988fe192da1db68f4d3828bcdd0f3a9dc195935e339c95dbdc\n    patches:\n      - patches/0001-loosen-requirements.patch\n      - patches/fix-absl-stuff.patch\n\n\n  - url: https://github.com/tensorflow/estimator/archive/refs/tags/v{{ estimator_version }}.tar.gz\n    sha256: 62d7b5a574d9c995542f6cb485ff1c18ad115afd9ec6d63437b2aab227c35ef6\n    folder: tensorflow-estimator\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  skip: true  # [python_impl == 'pypy']\n  # We specify a version of abseil_cpp that is compatible with C++17\n  skip: true  # [abseil_cpp != '20211102.0']\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - nsync                                  # [build_platform != target_platform]\n    - snappy                                 # [build_platform != target_platform]\n    - giflib                                 # [build_platform != target_platform]\n    - jpeg                                   # [build_platform != target_platform]\n    - icu                                    # [build_platform != target_platform]\n    - libpng                                 # [build_platform != target_platform]\n    - flatbuffers <2                         # [build_platform != target_platform]\n    - onednn                                 # [build_platform != target_platform]\n    - onednn-cpu-threadpool                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - numpy 1.20.*  # [py<310 and (build_platform != target_platform)]\n    - numpy 1.21.*  # [py>=310 and (build_platform != target_platform)]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n    - bazel 4.2.2\n    - grpc-cpp\n    - libprotobuf\n    - nasm\n    - sed\n    - rsync\n    # realpath is not available from the docker image for cuda <= 10.2\n    # so we install coreutils here\n    - coreutils  # [cuda_compiler_version != \"None\"]\n  host:\n    # GPU requirements for CUDA\n    - cudnn      # [cuda_compiler_version != \"None\"]\n    - nccl       # [cuda_compiler_version != \"None\"]\n    # conda build requirements\n    - python\n    - pip\n    - packaging\n    - zlib\n    - libpng\n    - libcurl\n    - curl         # [win]\n    - unzip        # [not win]\n    - zip          # [not win]\n    - m2-unzip     # [win]\n    - m2-zip       # [win]\n    - openjdk >=8\n    - nsync\n    # TF_SYSTEM_LIBS, see usage in\n    # https://github.com/tensorflow/tensorflow/blob/v{{ version }}/third_party/systemlibs/syslibs_configure.bzl\n    # their versions are specified in\n    # https://github.com/tensorflow/tensorflow/blob/v{{ version }}/tensorflow/workspace2.bzl\n    # but so far there have been no problems with leaving these\n    # unpinned; though some restrictions come in for packages\n    # that are also listed as a requirement for the pip_package.\n    - abseil-cpp\n    - astor\n    - cython\n    - dill\n    - giflib\n    - grpc-cpp\n    # 2022/04/25 hmaarrfk\n    # the latest flatbuffers 2.0.6 seems to have removed a sybmol in a patch release...\n    # https://github.com/Qengineering/TensorFlow_Lite_Pose_RPi_64-bits/issues/3#issuecomment-1034799822\n    - flatbuffers <2\n    - icu\n    - jpeg\n    - libpng\n    - libprotobuf\n    - openssl\n    - pybind11\n    - sqlite\n    - snappy\n    - zlib\n    # requirements specified by the package itself, see\n    # github.com/tensorflow/tensorflow/blob/v{{ version }}/tensorflow/tools/pip_package/setup.py\n    - absl-py >=0.4.0\n    - astunparse >=1.6.0\n    - gast >=0.2.1,<=0.4.0\n    - google-pasta >=0.1.1\n    - h5py >=2.9.0\n    - keras-preprocessing >=1.1.1\n    - numpy 1.20.*  # [py<310]\n    - numpy 1.21.*  # [py>=310]\n    - opt_einsum >=2.3.2\n    - protobuf >=3.9.2\n    - python-flatbuffers >=1.12,<2\n    - six >=1.12\n    - termcolor >=1.1.0\n    - typing_extensions >=3.6.6\n    - wrapt >=1.11.0\n    # TF-API needs to move in sync\n    - tensorboard >=2.9,<2.10\n    - keras >=2.9,<2.10\n\noutputs:\n  # 2021/12/29: hmaarrfk\n  # as of tensorflow 2.7.0 we need the tensorflow-base package to break\n  # circular dependency when buliding tensorflow extra packages This annoying\n  # circularity is broken upstream by the fact that they have to bootstrap\n  # their builds\n  - name: tensorflow-base\n    script: build_pkg.sh  # [not win]\n    script: build_pkg.bat  # [win]\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - tensorflow-cpu          # [cuda_compiler_version == \"None\"]\n      entry_points:\n        - toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main\n        - tflite_convert = tensorflow.lite.python.tflite_convert:main\n        - toco = tensorflow.lite.python.tflite_convert:main\n        - saved_model_cli = tensorflow.python.tools.saved_model_cli:main\n        # The tensorboard package adds this entry point.\n        # - tensorboard = tensorboard.main:run_main\n        - tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main\n        - estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n      host:\n        # GPU reuqirements\n        - cudnn                   # [cuda_compiler_version != \"None\"]\n        - nccl                    # [cuda_compiler_version != \"None\"]\n        # conda build requirements\n        - python\n        - pip\n        - packaging\n        - wheel\n        # TF_SYSTEM_LIBS\n        - abseil-cpp\n        - astor\n        - cython\n        - dill\n        - giflib\n        - grpc-cpp\n        - flatbuffers <2\n        - icu\n        - jpeg\n        - libcurl\n        - libpng\n        - libprotobuf\n        - openssl\n        - pybind11\n        - snappy\n        - sqlite\n        - zlib\n        # requirements specified by the package itself\n        - absl-py >=0.4.0\n        - astunparse >=1.6.0\n        - gast >=0.2.1,<=0.4.0\n        - google-pasta >=0.1.1\n        - h5py >=2.9.0\n        - keras-preprocessing >=1.1.1\n        - numpy 1.20.*  # [py<310]\n        - numpy 1.21.*  # [py>=310]\n        - opt_einsum >=2.3.2\n        - protobuf >=3.9.2\n        - python-flatbuffers >=1.12,<2\n        - six >=1.12\n        - termcolor >=1.1.0\n        - typing_extensions >=3.6.6\n        - wrapt >=1.11.0\n        # TF-API needs to move in sync\n        - tensorboard >=2.9,<2.10\n        - keras >=2.9,<2.10\n      run:\n        - python\n        - packaging\n        - absl-py >=0.4.0\n        - astunparse >=1.6.0\n        - gast >=0.2.1,<=0.4.0\n        - google-pasta >=0.1.1\n        - grpcio {{ grpc_cpp }}.*\n        - h5py >=2.9.0\n        - keras-preprocessing >=1.1.1\n        - {{ pin_compatible('numpy') }}\n        - opt_einsum >=2.3.2\n        - protobuf >=3.9.2\n        - python-flatbuffers >=1.12,<2\n        - six >=1.12\n        - termcolor >=1.1.0\n        - typing_extensions >=3.6.6\n        - wrapt >=1.11.0\n        # TF-API needs to move in sync\n        - tensorboard >=2.9,<2.10\n        - keras >=2.9,<2.10\n        # avoid that people without GPUs needlessly download ~0.5-1GB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n    # TODO: decide on the name of the package\n    # run_constrained:\n    #   What is the difference between these two packages?\n    #   - tensorflow-io-gcs-filesystem >=0.21.0\n    #   - tensorflow-io >=0.21.0\n\n  - name: tensorflow\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - tensorflow-cpu          # [cuda_compiler_version == \"None\"]\n    requirements:\n      host:\n        # Require python so that the CONDA_PY gets populated\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('tensorflow-base', exact=True) }}\n        - {{ pin_subpackage('tensorflow-estimator', exact=True) }}\n        # avoid that people without GPUs needlessly download ~0.5-1GB\n        # This also helps mamba give preference to the CPU build\n        - __cuda  # [cuda_compiler_version != \"None\"]\n    test:\n      files:\n        - test_tensorflow.py\n      requires:\n        - pip\n      imports:\n        - tensorflow\n      commands:\n        - pip check\n        - cat test_tensorflow.py    # [unix]\n        - python test_tensorflow.py\n        - tf_upgrade_v2 --help\n        - saved_model_cli --help\n        - tflite_convert --help     # [not win]\n        - toco_from_protos --help   # [not win]\n        - toco --help               # [not win]\n\n  - name: tensorflow-estimator\n    script: build_estimator.sh   # [not win]\n    script: build_estimator.bat  # [win]\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n        - bazel 4.2.2\n      host:\n        - python\n        - pip\n        - packaging\n        - setuptools\n        - wheel\n        # This ensures that a consistent version of openssl is chosen between\n        # all packages.\n        # https://github.com/conda-forge/conda-forge.github.io/issues/1528\n        - openssl\n        - {{ pin_subpackage('tensorflow-base', exact=True) }}\n      run:\n        - python\n        - {{ pin_subpackage('tensorflow-base', exact=True) }}\n    test:\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: libtensorflow\n    script: cp_libtensorflow.sh\n    build:\n      skip: true  # [win]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      run_exports:\n        # tensorflow makes no ABI guarantees, need to pin to what we built with\n        - libtensorflow {{ version }}\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n      # host requirements to pick up run_exports\n      host:\n        - abseil-cpp 20211102.0\n        - giflib\n        - grpc-cpp\n        - icu\n        - jpeg\n        - libcurl\n        - libpng\n        - libprotobuf\n        - openssl\n        - snappy\n        - sqlite\n        - zlib\n      run:\n        # avoid that people without GPUs needlessly download ~200-300MB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n    test:\n      files:\n        - test_libtensorflow.sh\n        - test_c.c\n      requires:\n        - {{ compiler('c') }}\n      commands:\n        - test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}  # [not win and cuda_compiler_version == \"None\"]\n        - ./test_libtensorflow.sh                        # [not win and cuda_compiler_version == \"None\"]\n\n  - name: libtensorflow_cc\n    script: cp_libtensorflow_cc.sh\n    build:\n      skip: true  # [win]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      run_exports:\n        # tensorflow makes no ABI guarantees, need to pin to what we built with\n        - libtensorflow_cc {{ version }}\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n      # host requirements to pick up run_exports\n      host:\n        - abseil-cpp 20211102.0\n        - giflib\n        - grpc-cpp\n        - icu\n        - jpeg\n        - libcurl\n        - libpng\n        - libprotobuf\n        - openssl\n        - snappy\n        - sqlite\n        - zlib\n      run:\n        # avoid that people without GPUs needlessly download ~200-300MB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n    test:\n      files:\n        - test_libtensorflow_cc.sh\n        - test_cc.cc\n      requires:\n        - {{ compiler('cxx') }}\n      commands:\n        - test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}  # [not win and cuda_compiler_version == \"None\"]\n        - ./test_libtensorflow_cc.sh                        # [not win and cuda_compiler_version == \"None\"]\n\n  # 2021/08/01, hmaarrfk\n  # While this seems like a roundabout way of defining the package name\n  # It helps the linter avoid errors on a package not having tests.\n  {% set tensorflow_cpu_gpu = \"tensorflow-cpu\" %}   # [cuda_compiler_version == \"None\" or cuda_compiler_version is undefined]\n  {% set tensorflow_cpu_gpu = \"tensorflow-gpu\" %}   # [cuda_compiler_version != \"None\"]\n  - name: {{ tensorflow_cpu_gpu }}\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: False\n    requirements:\n      run:\n        - {{ pin_subpackage(\"tensorflow\", exact=True) }}\n    test:\n      imports:\n        - tensorflow\n\nabout:\n  home: http://tensorflow.org/\n  license: Apache-2.0\n  license_file: LICENSE\n  license_family: Apache\n  summary: TensorFlow is an end-to-end open source platform for machine learning.\n  description: |\n    TensorFlow offers multiple levels of abstraction so you can choose the\n    right one for your needs. Build and train models by using the high-level\n    Keras API, which makes getting started with TensorFlow and machine learning\n    easy.\n  dev_url: https://github.com/tensorflow/tensorflow\n  doc_url: https://www.tensorflow.org/get_started/get_started\n  doc_source_url: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src\n\nextra:\n  feedstock-name: tensorflow\n  recipe-maintainers:\n    - farhantejani\n    - ghego\n    - h-vetinari\n    - hajapy\n    - jschueller\n    - njzjz\n    - waitingkuo\n    - xhochy\n    - hmaarrfk\n    - wolfv\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.9.1.tar.gz",
 "version": "2.9.1"
}