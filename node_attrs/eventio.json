{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/508645104.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509650713.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554124594.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/563330945.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/585607745.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1.post1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683025498.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"conda_forge_output_validation\" with value \"True\" (original value: \"True\")\n  in \"../conda-forge.yml\", line 3, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 239, in run",
   "    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 279, in run_post_piggyback_migrations",
   "    mini_migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate",
   "    config = yaml_safe_load(f)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 77, in yaml_safe_load",
   "    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load",
   "    return constructor.get_single_data()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data",
   "    return self.construct_document(node)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document",
   "    for _dummy in generator:",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map",
   "    value = self.construct_mapping(node)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping",
   "    return BaseConstructor.construct_mapping(self, node, deep=deep)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping",
   "    if self.check_mapping_key(node, key_node, mapping, key, value):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key",
   "    raise DuplicateKeyError(*args)",
   "ruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping",
   "  in \"../conda-forge.yml\", line 1, column 1",
   "found duplicate key \"conda_forge_output_validation\" with value \"True\" (original value: \"True\")",
   "  in \"../conda-forge.yml\", line 3, column 1",
   "",
   "To suppress this check see:",
   "    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys",
   "",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "eventio",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio",
    "eventio",
    "eventio"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio",
    "eventio",
    "eventio"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio",
    "eventio",
    "eventio"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio",
    "eventio"
   ]
  }
 },
 "name": "eventio",
 "new_version": "1.5.1.post1",
 "new_version_attempts": {
  "1.5.1": 1,
  "1.5.1.post1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio",
    "eventio",
    "eventio"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "eventio"
  ]
 },
 "pinning_version": "2021.07.02.15.37.15",
 "pre_pr_migrator_attempts": {
  "python310": 241
 },
 "pre_pr_migrator_status": {
  "python310": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1623435109\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 239, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 279, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 386, in migrate\n    config = yaml_safe_load(f)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 77, in yaml_safe_load\n    return ruamel.yaml.YAML(typ=\"safe\", pure=True).load(stream)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 674, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 445, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 263, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"../conda-forge.yml\", line 1, column 1\nfound duplicate key \"conda_forge_output_validation\" with value \"True\" (original value: \"True\")\n  in \"../conda-forge.yml\", line 3, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n"
 },
 "raw_meta_yaml": "{% set name = \"eventio\" %}\n{% set version = \"1.5.1.post1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: True         # [python_impl == 'pypy']\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - numpy\n    - cython\n    - pytest-runner\n    - corsikaio 0.2.*\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - corsikaio 0.2.*\n\ntest:\n  imports:\n    - eventio\n\nabout:\n  home: https://github.com/cta-observatory/pyeventio\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Read-only python implementation of the eventio / sim_telarray data format\n\n  description: |\n    eventio is a read-only implementation of the eventio / sim_telarray data formats\n    as produced by the CORSIKA iact extension and the sim_telarray software.\n    Low-level access to eventio objects is supported as well as a higher\n    level interface for sim_telarray and CORSIKA files.\n  doc_url: https://github.com/cta-observatory/pyeventio\n  dev_url: https://github.com/cta-observatory/pyeventio\n\nextra:\n  recipe-maintainers:\n    - maxnoe\n    - kosack\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "corsikaio",
   "cython",
   "numpy",
   "pip",
   "pytest-runner",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio 0.2.*",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio 0.2.*",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz",
 "version": "1.5.1.post1",
 "win_64_meta_yaml": {
  "about": {
   "description": "eventio is a read-only implementation of the eventio / sim_telarray data formats\nas produced by the CORSIKA iact extension and the sim_telarray software.\nLow-level access to eventio objects is supported as well as a higher\nlevel interface for sim_telarray and CORSIKA files.\n",
   "dev_url": "https://github.com/cta-observatory/pyeventio",
   "doc_url": "https://github.com/cta-observatory/pyeventio",
   "home": "https://github.com/cta-observatory/pyeventio",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Read-only python implementation of the eventio / sim_telarray data format"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack",
    "maxnoe",
    "kosack"
   ]
  },
  "package": {
   "name": "eventio",
   "version": "1.5.1.post1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*",
    "python",
    "pip",
    "numpy",
    "cython",
    "pytest-runner",
    "corsikaio 0.2.*"
   ],
   "run": [
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*",
    "python",
    "numpy",
    "corsikaio 0.2.*"
   ]
  },
  "source": {
   "sha256": "648be57cca1e79e1a396984147d6385cf62b98b5a7a6a6e0ac27c1ea52a55e87",
   "url": "https://pypi.io/packages/source/e/eventio/eventio-1.5.1.post1.tar.gz"
  },
  "test": {
   "imports": [
    "eventio",
    "eventio",
    "eventio",
    "eventio"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "cython",
    "numpy",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "corsikaio",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}