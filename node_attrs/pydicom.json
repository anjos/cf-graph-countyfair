{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220976571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/232509250.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/239706851.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/297319451.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/365005264.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/365020675.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378600287.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/425176758.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514248348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519577037.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/535355452.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705507857.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/721569245.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pydicom",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "pydicom is a pure python package for parsing DICOM files. DICOM is a\nstandard (https://dicomstandard.org) for communicating medical images and\nrelated information such as reports and radiotherapy objects.  pydicom\nmakes it easy to read these complex files into natural pythonic structures\nfor easy manipulation. Modified datasets can be written again to DICOM\nformat files. See the `Getting Started\n<https://pydicom.github.io/pydicom/stable/>`_ page for\ninstallation and basic information, and the `Pydicom User Guide\n",
   "dev_url": "https://github.com/pydicom/pydicom",
   "doc_url": "https://pydicom.github.io/pydicom",
   "home": "http://github.com/pydicom/pydicom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Pure python package for DICOM medical file reading and writing"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "darcymason",
    "glemaitre",
    "arokem"
   ]
  },
  "package": {
   "name": "pydicom",
   "version": "2.2.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "pydicom-2.2.1.tar.gz",
   "sha256": "2d094ad57e17800067da8eefbebcf4a028a56dd909b1c2baefb279d33c600f1d",
   "url": "https://github.com/pydicom/pydicom/archive/v2.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "pydicom"
   ],
   "requires": [
    "setuptools"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "pydicom is a pure python package for parsing DICOM files. DICOM is a\nstandard (https://dicomstandard.org) for communicating medical images and\nrelated information such as reports and radiotherapy objects.  pydicom\nmakes it easy to read these complex files into natural pythonic structures\nfor easy manipulation. Modified datasets can be written again to DICOM\nformat files. See the `Getting Started\n<https://pydicom.github.io/pydicom/stable/>`_ page for\ninstallation and basic information, and the `Pydicom User Guide\n",
   "dev_url": "https://github.com/pydicom/pydicom",
   "doc_url": "https://pydicom.github.io/pydicom",
   "home": "http://github.com/pydicom/pydicom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Pure python package for DICOM medical file reading and writing"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "darcymason",
    "glemaitre",
    "arokem"
   ]
  },
  "package": {
   "name": "pydicom",
   "version": "2.2.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "pydicom-2.2.1.tar.gz",
   "sha256": "2d094ad57e17800067da8eefbebcf4a028a56dd909b1c2baefb279d33c600f1d",
   "url": "https://github.com/pydicom/pydicom/archive/v2.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "pydicom"
   ],
   "requires": [
    "setuptools"
   ]
  }
 },
 "name": "pydicom",
 "new_version": "2.2.2",
 "new_version_attempts": {
  "2.0.0": 1,
  "2.1.0": 1,
  "2.1.1": 1,
  "2.1.2": 1,
  "2.2.0": 1,
  "2.2.1": 1,
  "2.2.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pydicom"
  ]
 },
 "pinning_version": "2021.08.27.17.30.23",
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1297305640\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1175, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 270, in run\n    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 280, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'git diff --name-only e9d861e390ff4cef82b3d073dec1b9f303b92702...HEAD' returned non-zero exit status 128.\n"
 },
 "raw_meta_yaml": "{% set name = \"pydicom\" %}\n{% set version = \"2.2.1\" %}\n{% set sha256 = \"2d094ad57e17800067da8eefbebcf4a028a56dd909b1c2baefb279d33c600f1d\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/pydicom/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - pydicom\n  requires:\n    - setuptools\n\nabout:\n  home: http://github.com/pydicom/pydicom\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Pure python package for DICOM medical file reading and writing\n  description: |\n    pydicom is a pure python package for parsing DICOM files. DICOM is a\n    standard (https://dicomstandard.org) for communicating medical images and\n    related information such as reports and radiotherapy objects.  pydicom\n    makes it easy to read these complex files into natural pythonic structures\n    for easy manipulation. Modified datasets can be written again to DICOM\n    format files. See the `Getting Started\n    <https://pydicom.github.io/pydicom/stable/>`_ page for\n    installation and basic information, and the `Pydicom User Guide\n  doc_url: https://pydicom.github.io/pydicom\n  dev_url: https://github.com/pydicom/pydicom\n\nextra:\n  recipe-maintainers:\n    - darcymason\n    - glemaitre\n    - arokem\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  }
 },
 "url": "https://github.com/pydicom/pydicom/archive/v2.2.1.tar.gz",
 "version": "2.2.1"
}