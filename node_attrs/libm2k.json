{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/501793499.json"
   },
   "data": {
    "bot_rerun": 1603216861.0216901,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502059211.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507209672.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509921732.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/512445598.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552236742.json"
   },
   "data": {
    "bot_rerun": 1612229491.0326493,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/565068587.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/565607519.json"
   },
   "data": {
    "bot_rerun": 1621319900.2496696,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/588997592.json"
   },
   "data": {
    "bot_rerun": 1616198896.7228446,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libiio021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597055300.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libiio021"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643517754.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643518129.json"
   },
   "data": {
    "bot_rerun": 1621211425.5264363,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645411601.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646500898.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "libm2k",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}"
   ],
   "imports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}"
   ],
   "imports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}"
   ],
   "imports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1"
   ],
   "imports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  }
 },
 "name": "libm2k",
 "new_version": "0.4.0",
 "new_version_attempts": {
  "0.3.1": 1,
  "0.3.2": 1,
  "0.4.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}"
   ],
   "imports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}",
    "m2kcli --help",
    "test -f $PREFIX/include/libm2k/m2k.hpp",
    "test -f $PREFIX/lib/libm2k${SHLIB_EXT}"
   ],
   "imports": [
    "libm2k",
    "libm2k"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libm2k"
  ]
 },
 "pinning_version": "2021.05.17.11.22.30",
 "raw_meta_yaml": "{% set name = \"libm2k\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/analogdevicesinc/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33\n  patches:\n    - 0001-Don-t-set-a-specific-architecture-for-OSX.patch\n\nbuild:\n  number: 2\n  run_exports:\n    - {{ pin_subpackage('libm2k', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    # libudev is on its own in CentOS 6, packaged with systemd in CentOS 7\n    - {{ cdt('libudev-devel') }}  # [linux and cdt_name=='cos6']\n    - {{ cdt('systemd-devel') }}  # [linux and cdt_name=='cos7']\n    - make  # [not win]\n    - ninja  # [win]\n    - swig\n    # cross-compilation requirements\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - libiio\n    - python\n    - setuptools\n  run:\n    # libiio run dep included by its run_exports\n    - python\n\ntest:\n  commands:\n    # verify that executables can be run\n    - m2kcli --help\n\n    # verify that headers get installed\n    - test -f $PREFIX/include/libm2k/m2k.hpp  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1  # [win]\n\n    # verify that libraries get installed\n    - test -f $PREFIX/lib/libm2k${SHLIB_EXT}  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1  # [win]\n  imports:\n    - libm2k\n\nabout:\n  home: https://github.com/analogdevicesinc/libm2k\n  license: LGPL-2.1-or-later\n  license_family: LGPL\n  license_file: LICENSE\n  summary: Library for interfacing with the ADALM2000\n  description: |\n    C++ library and python bindings for interfacing with\n    the ADALM2000 portable lab. This library simplifies\n    ADALM2000's functionality into a series of easy to\n    use components.\n  doc_url: https://analogdevicesinc.github.io/libm2k/\n  dev_url: https://github.com/analogdevicesinc/libm2k\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n    - tfcollins\n",
 "req": {
  "__set__": true,
  "elements": [
   "cdt_stub",
   "cmake",
   "cxx_compiler_stub",
   "libiio",
   "make",
   "ninja",
   "python",
   "setuptools",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz",
 "version": "0.4.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "C++ library and python bindings for interfacing with\nthe ADALM2000 portable lab. This library simplifies\nADALM2000's functionality into a series of easy to\nuse components.\n",
   "dev_url": "https://github.com/analogdevicesinc/libm2k",
   "doc_url": "https://analogdevicesinc.github.io/libm2k/",
   "home": "https://github.com/analogdevicesinc/libm2k",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "summary": "Library for interfacing with the ADALM2000"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins",
    "ryanvolz",
    "tfcollins"
   ]
  },
  "package": {
   "name": "libm2k",
   "version": "0.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "swig"
   ],
   "host": [
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools",
    "libiio",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "patches": [
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch",
    "0001-Don-t-set-a-specific-architecture-for-OSX.patch"
   ],
   "sha256": "b0111ffbcb3fd79cede7295affa92005f89204e07f716d1a20930fdc7d426e33",
   "url": "https://github.com/analogdevicesinc/libm2k/archive/v0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1",
    "m2kcli --help",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\libm2k\\\\m2k.hpp exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\libm2k.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\libm2k.lib exit 1"
   ],
   "imports": [
    "libm2k",
    "libm2k",
    "libm2k",
    "libm2k"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiio",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}