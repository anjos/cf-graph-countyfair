{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/624897222.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/18b65f50-185d-466a-9bde-b27e3b5d2b0a.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/9b5d3d83-20dc-456c-9c2a-a8521e4db85a.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/666240011.json"
   },
   "data": {
    "bot_rerun": 1623369329.2324524,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.06.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/667538064.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.06.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/703644870.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.08.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/705767105.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.08.01"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/735942469.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.08.02"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/751978909.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.10.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/756974151.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.10.01"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794964441.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.12.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838582144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.02.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888162483.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda_112_ppc64le_aarch64"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896037482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/899736004.json"
   },
   "data": {
    "bot_rerun": 1649299777.9069266,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "spdlog110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/902083238.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.04.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/902282263.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "spdlog110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911010193.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.04.01"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/960897985.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.06.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/989077635.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.06.01"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1029281836.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.08.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1084986434.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.10.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1110156843.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.10.01"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1110805636.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "spdlog111"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1154636052.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.12.00"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: ValueError(\"variant config in /tmp/tmpouhnu66i/conda_build_config.yaml is ambiguous because it\\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\\nor specifies a subspace that is not fully implemented (To be clear:\\n.. we did not find ['9', '9'] from {'arm_variant_type': ['sbsa'], 'c_compiler_version': ['9', '9'], 'cxx_compiler_version': ['9', '9'], 'fortran_compiler_version': ['9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['11.0', '11.1'], 'cudnn': ['undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7']} in c_compiler_version:['10']).\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpouhnu66i/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9'] from {'arm_variant_type': ['sbsa'], 'c_compiler_version': ['9', '9'], 'cxx_compiler_version': ['9', '9'], 'fortran_compiler_version': ['9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['11.0', '11.1'], 'cudnn': ['undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7']} in c_compiler_version:['10']).\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpouhnu66i/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9'] from {'arm_variant_type': ['sbsa'], 'c_compiler_version': ['9', '9'], 'cxx_compiler_version': ['9', '9'], 'fortran_compiler_version': ['9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['11.0', '11.1'], 'cudnn': ['undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7']} in c_compiler_version:['10']).\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: ValueError(\"variant config in /tmp/tmpouhnu66i/conda_build_config.yaml is ambiguous because it\\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\\nor specifies a subspace that is not fully implemented (To be clear:\\n.. we did not find ['9', '9'] from {'arm_variant_type': ['sbsa'], 'c_compiler_version': ['9', '9'], 'cxx_compiler_version': ['9', '9'], 'fortran_compiler_version': ['9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['11.0', '11.1'], 'cudnn': ['undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7']} in c_compiler_version:['10']).\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 268, in _parse_meta_yaml_impl\n    config, _cbc = _run_parsing()\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 250, in _run_parsing\n    _cbc, _ = conda_build.variants.get_package_combined_spec(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 599, in get_package_combined_spec\n    combined_spec = combine_specs(specs, log_output=config.verbose)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 324, in combine_specs\n    values = _combine_spec_dictionaries(specs, extend_keys=extend_keys, zip_keys=zip_keys,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/variants.py\", line 296, in _combine_spec_dictionaries\n    raise ValueError(\"variant config in {} is ambiguous because it\\n\"\nValueError: variant config in /tmp/tmpouhnu66i/conda_build_config.yaml is ambiguous because it\ndoes not fully implement all zipped keys (To be clear: missing ['docker_image'])\nor specifies a subspace that is not fully implemented (To be clear:\n.. we did not find ['9', '9'] from {'arm_variant_type': ['sbsa'], 'c_compiler_version': ['9', '9'], 'cxx_compiler_version': ['9', '9'], 'fortran_compiler_version': ['9', '9'], 'cuda_compiler': ['nvcc'], 'cuda_compiler_version': ['11.0', '11.1'], 'cudnn': ['undefined', 'undefined'], 'cdt_name': ['cos7', 'cos7']} in c_compiler_version:['10']).\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "librmm",
 "hash_type": "sha256",
 "name": "librmm",
 "new_version": "22.12.00",
 "new_version_attempts": {
  "21.06.00": 2,
  "21.08.00": 1,
  "21.08.01": 1,
  "21.08.02": 1,
  "21.10.00": 1,
  "21.10.01": 1,
  "21.12.00": 1,
  "22.02.00": 1,
  "22.04.00": 1,
  "22.04.01": 1,
  "22.06.00": 1,
  "22.06.01": 1,
  "22.08.00": 1,
  "22.10.00": 1,
  "22.10.01": 1,
  "22.12.00": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "librmm"
  ]
 },
 "pinning_version": "2022.12.08.16.56.34",
 "pre_pr_migrator_attempts": {
  "spdlog190": 41
 },
 "pre_pr_migrator_status": {
  "spdlog190": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1443748256\">bot CI job</a>): master: ['ValueError(\"Variant configuration errors in argument_variants:\\\\n  zip_key entry cuda_compiler_version in group frozenset({\\'docker_image\\', \\'cuda_compiler_version\\', \\'cdt_name\\'}) is a duplicate, keys can only occur in one group\\\\n  zip_key entry cdt_name in group frozenset({\\'docker_image\\', \\'cuda_compiler_version\\', \\'cdt_name\\'}) is a duplicate, keys can only occur in one group\\\\n  zip fields in zip_key group frozenset({\\'cuda_compiler_version\\', \\'cdt_name\\', \\'cudnn\\'}) are not all the same length\")']"
 },
 "raw_meta_yaml": "{% set name = \"librmm\" %}\n{% set version = \"22.08.00\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/rapidsai/rmm/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 8588c6b5633b2fbdd834abbba0d1ea491e26d4f183b90c907615c0a38c2f9dc1\n    folder: rmm\n\nbuild:\n  number: 0\n  skip: true  # [(not linux) or (cuda_compiler_version == \"None\")]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin=\"x.x\") }}\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in the docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - cmake >=3.18\n    - make\n  host:\n    - spdlog\n    - thrust >=1.9.0\n  run:\n    # - spdlog >=1.8.5  # (version constraint set via run_exports)\n    - thrust >=1.9.0\n\ntest:\n  commands:\n    - test -f $PREFIX/include/rmm/thrust_rmm_allocator.h\n    - test -f $PREFIX/include/rmm/logger.hpp\n    - test -f $PREFIX/include/rmm/cuda_stream.hpp\n    - test -f $PREFIX/include/rmm/cuda_stream_view.hpp\n    - test -f $PREFIX/include/rmm/cuda_stream_pool.hpp\n    - test -f $PREFIX/include/rmm/device_uvector.hpp\n    - test -f $PREFIX/include/rmm/device_scalar.hpp\n    - test -f $PREFIX/include/rmm/device_buffer.hpp\n    - test -f $PREFIX/include/rmm/detail/aligned.hpp\n    - test -f $PREFIX/include/rmm/detail/error.hpp\n    - test -f $PREFIX/include/rmm/detail/exec_check_disable.hpp\n    - test -f $PREFIX/include/rmm/mr/device/detail/arena.hpp\n    - test -f $PREFIX/include/rmm/mr/device/detail/free_list.hpp\n    - test -f $PREFIX/include/rmm/mr/device/detail/coalescing_free_list.hpp\n    - test -f $PREFIX/include/rmm/mr/device/detail/fixed_size_free_list.hpp\n    - test -f $PREFIX/include/rmm/mr/device/detail/stream_ordered_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/arena_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/binning_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/cuda_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/device_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/fixed_size_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/limiting_resource_adaptor.hpp\n    - test -f $PREFIX/include/rmm/mr/device/logging_resource_adaptor.hpp\n    - test -f $PREFIX/include/rmm/mr/device/managed_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/owning_wrapper.hpp\n    - test -f $PREFIX/include/rmm/mr/device/per_device_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/pool_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/device/thread_safe_resource_adaptor.hpp\n    - test -f $PREFIX/include/rmm/mr/device/thrust_allocator_adaptor.hpp\n    - test -f $PREFIX/include/rmm/mr/host/host_memory_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/host/new_delete_resource.hpp\n    - test -f $PREFIX/include/rmm/mr/host/pinned_memory_resource.hpp\n    - test ! -d $PREFIX/lib64\n\nabout:\n  home: https://github.com/rapidsai/rmm\n  license: Apache-2.0\n  license_file:\n    - rmm/LICENSE\n  summary: RAPIDS Memory Manager\n\nextra:\n  recipe-maintainers:\n    - rlratzel\n    - kkraus14\n    - leofang\n    - jakirkham\n",
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "url": "https://github.com/rapidsai/rmm/archive/refs/tags/v22.08.00.tar.gz",
 "version": "22.08.00"
}