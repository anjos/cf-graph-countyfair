{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/414617182.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652599274.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-carrier",
 "hash_type": "sha256",
 "name": "r-carrier",
 "new_version": "0.1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-carrier"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = '0.1.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-carrier\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/carrier_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/carrier/carrier_{{ version }}.tar.gz\n  sha256: 0cefc06fbf97a34a44f49e7bef1d0541eb7274fa731adc29c0694a2cade5162f\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-pryr\n    - r-rlang >=0.2.2\n  run:\n    - r-base\n    - r-pryr\n    - r-rlang >=0.2.2\n\ntest:\n  commands:\n    - $R -e \"library('carrier')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('carrier')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/r-lib/carrier\n  license: GPL-3\n  summary: Sending functions to remote processes can be wasteful of resources because they carry\n    their environments with them. With the carrier package, it is easy to create functions\n    that are isolated from their environment. These isolated functions, also called\n    crates, print at the console with their total size and can be easily tested locally\n    before being sent to a remote.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: carrier\n# Title: Isolate Functions for Remote Execution\n# Version: 0.1.0\n# Authors@R: c( person(\"Lionel\", \"Henry\", ,\"lionel@rstudio.com\", c(\"aut\", \"cre\")), person(\"RStudio\", role = \"cph\") )\n# Description: Sending functions to remote processes can be wasteful of resources because they carry their environments with them. With the carrier package, it is easy to create functions that are isolated from their environment. These isolated functions, also called crates, print at the console with their total size and can be easily tested locally before being sent to a remote.\n# Depends: R (>= 3.1.0)\n# Imports: pryr, rlang (>= 0.2.2)\n# Suggests: testthat, covr\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# ByteCompile: true\n# URL: https://github.com/r-lib/carrier\n# BugReports: https://github.com/r-lib/carrier/issues\n# RoxygenNote: 6.1.0\n# NeedsCompilation: no\n# Packaged: 2018-10-11 13:11:29 UTC; lionel\n# Author: Lionel Henry [aut, cre], RStudio [cph]\n# Maintainer: Lionel Henry <lionel@rstudio.com>\n# Repository: CRAN\n# Date/Publication: 2018-10-16 19:10:20 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/carrier_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/carrier/carrier_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/carrier_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/carrier/carrier_0.1.0.tar.gz"
 ],
 "version": "0.1.0"
}