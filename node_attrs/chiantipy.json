{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/676670824.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/676760970.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/900842418.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/971543718.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/979379489.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "chiantipy",
 "hash_type": "sha256",
 "name": "chiantipy",
 "new_version": "0.13.1",
 "new_version_attempts": {
  "0.11.0": 1,
  "0.12.0": 1,
  "0.13.0": 1,
  "0.13.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "chiantipy"
  ]
 },
 "pinning_version": "2022.06.26.11.17.33",
 "raw_meta_yaml": "{% set name = \"ChiantiPy\" %}\n{% set version = \"0.13.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/chianti-atomic/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 6e53d21891baf80ad8138e5765e586112e3ea87b815c88d8a23a2f1aa82a0ab9\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - numpy\n    - scipy\n    - ipyparallel\n    - matplotlib\n    - pyqt\n\ntest:\n  imports:\n    - ChiantiPy\n\nabout:\n  home: https://github.com/chianti-atomic/ChiantiPy\n  summary: a Python interface to the CHIANTI atomic database for astrophysical spectroscopy\n  license: ISC\n  license_file: licenses/LICENSE\n  description: |\n    ChiantiPy is the Python interface to the CHIANTI atomic database for astrophysical \n    spectroscopy. It provides the capability to calculate the emission line and \n    continuum spectrum of an optically thin plasma based on the data in the \n    CHIANTI database.\n  doc_url: https://chiantipy.readthedocs.io/en/latest/\n  dev_url: https://github.com/chianti-atomic/ChiantiPy\n\nextra:\n  recipe-maintainers:\n    - epassaro\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/chianti-atomic/ChiantiPy/archive/v0.13.1.tar.gz",
 "version": "0.13.1"
}