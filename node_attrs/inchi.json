{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/803783394.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "inchi",
 "hash_type": "sha256",
 "name": "inchi",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "inchi"
  ]
 },
 "pinning_version": "2021.12.15.14.57.56",
 "raw_meta_yaml": "{% set name = \"InChI\" %}\n{% set version = \"1.05\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: http://www.inchi-trust.org/download/105/INCHI-1-SRC.zip\n  sha256: 4ac311ca3a16fa75d695ec4fc711e74045c6d6c882dea0dd1055961fba643720\n  patches:\n    # downloaded package comes with no build scripts, need to\n    # provide our own\n    - SConstruct.patch\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage('inchi', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - scons\n\ntest:\n  commands:\n    - inchi-1\n    - test -f $PREFIX/lib/libinchi.so  # [linux]\n    - test -f $PREFIX/lib/libinchi.dylib  # [osx]\n    - if not exist %LIBRARY_LIB%\\inchi.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\inchi.dll exit 1  # [win]\n\nabout:\n  home: https://www.inchi-trust.org/\n  license: LicenseRef-InChI\n  license_file: LICENCE\n  summary: \"InChI: open-source chemical structure representation algorithm\"\n  description: |\n    Originally developed by the International Union of Pure and Applied  Chemistry (IUPAC),\n    the IUPAC International Chemical Identifier (InChI) is a character string generated by\n    computer algorithm. It is a tool to be used in software applications designed and\n    developed by those who choose to use it.\n\n    The InChI algorithm turns chemical structures into machine-readable strings of information.\n    InChIs are unique to the compound they describe and can encode absolute stereochemistry\n    making chemicals and chemistry machine-readable and discoverable. A simple analogy is that\n    InChI is the bar-code for chemistry and chemical structures.\n\n  doc_url: https://www.inchi-trust.org/oer/\n\nextra:\n  recipe-maintainers:\n    - jgullingsrud\n    - mcs07\n",
 "smithy_version": "3.15.1",
 "strong_exports": false,
 "url": "http://www.inchi-trust.org/download/105/INCHI-1-SRC.zip",
 "version": "1.05"
}