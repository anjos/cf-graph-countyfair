{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/727233461.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764730139.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/862810145.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/979399357.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "configupdater",
 "hash_type": "sha256",
 "name": "configupdater",
 "new_version": "3.1.1",
 "new_version_attempts": {
  "3.0": 1,
  "3.0.1": 1,
  "3.1": 1,
  "3.1.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "configupdater"
  ]
 },
 "pinning_version": "2022.06.26.11.17.33",
 "raw_meta_yaml": "{% set name = \"ConfigUpdater\" %}\n{% set version = \"3.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 46f0c74d73efa723776764b43c9739f68052495dd3d734319c1d0eb58511f15b\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools-scm\n  run:\n    - python >=3.6\n    - importlib-metadata\n\ntest:\n  imports:\n    - configupdater\n  requires:\n    - pip\n    - pytest\n    - pytest-cov\n  source_files:\n    - tests\n  commands:\n    - pytest\n    - pip check\n\nabout:\n  home: https://github.com/pyscaffold/configupdater\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Parser like ConfigParser but for updating configuration files\n  description: |\n    The sole purpose of ConfigUpdater is to easily update an INI config file\n    with no changes to the original file except the intended ones. This means\n    comments, the ordering of sections and key/value-pairs as wells as their\n    cases are kept as in the original file. Thus ConfigUpdater provides\n    complementary functionality to Python's ConfigParser which is primarily\n    meant for reading config files and writing *new* ones.\n  doc_url: https://configupdater.readthedocs.io/\n  dev_url: https://github.com/pyscaffold/configupdater\n\nextra:\n  recipe-maintainers:\n    - maresb\n    - FlorianWilhelm\n    - abravalheri\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/C/ConfigUpdater/ConfigUpdater-3.1.1.tar.gz",
 "version": "3.1.1"
}