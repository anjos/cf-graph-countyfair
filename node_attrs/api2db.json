{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "api2db",
 "hash_type": "sha256",
 "name": "api2db",
 "new_version": "1.0.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "api2db"
  ]
 },
 "raw_meta_yaml": "{% set name = \"api2db\" %}\n{% set version = \"1.0.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/api2db-{{ version }}.tar.gz\n  sha256: 0fd32061931fae2e37fcdb8462271e4ee7e7b0d060308f0b68465a2f0c081b3d\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - pmake=api2db.install.project_make:_pmake\n    - pclear=api2db.install.project_clear:_pclear\n    - cadd=api2db.install.collector_add:_cadd\n    - crem=api2db.install.collector_remove:_crem\n    - clist=api2db.install.collector_list:_clist\n    - mlab=api2db.install.make_lab:mlab\n    - rlab=api2db.install.run_lab:rlab\n    - clab=api2db.install.clear_lab:clab\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6,<4.0\n  run:\n    - dill >=0.3.3\n    - google-cloud-bigquery >=2.11.0\n    - pandas >=1.1.5\n    - pandas-gbq >=0.14.1\n    - pyarrow >=3.0.0\n    - python >=3.6,<4.0\n    - requests >=2.25.1\n    - schedule >=1.1.0\n    - sqlalchemy >=1.4.11\n    - sqlalchemy-utils >=0.37.0\n    - urllib3 >=1.26.4\n\ntest:\n  imports:\n    - api2db\n    - api2db.app\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/TristenHarr/api2db\n  doc_url: https://api2db.readthedocs.io/en/latest/\n  summary: Python Api data collection tool\n  license: MIT\n  license_file: LICENSE.txt\n  description: |\n    Use api2db to collect data from any API; perform pre-processing on data;\n     clean and extract features from data, perform post-processing on data, and\n     to store data. apt2db supports: Local storage of data in files using\n     Parquet, pickle, JSON, and CSV format; MySQL; Bigquery; MariaDB; PostgreSQL;\n     Omnisci, with more planned to be added.\n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/api2db/api2db-1.0.1.tar.gz",
 "version": "1.0.1"
}