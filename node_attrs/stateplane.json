{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/213118073.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/306316902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "gdal-3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/443620996.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "stateplane",
 "hash_type": "sha256",
 "name": "stateplane",
 "new_version": "0.4.0",
 "new_version_attempts": {
  "0.4.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "stateplane"
  ]
 },
 "pinning_version": "2020.07.01.21.17.12",
 "raw_meta_yaml": "{% set version = \"0.4.0\" %}\n\npackage:\n  name: stateplane\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/s/stateplane/stateplane-{{ version }}.tar.gz\n  sha256: fe14f35c77ef47e51b6f7eb4b589cfdc297b5932fa6acc0383279ef82b125402\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n  noarch: python\n  entry_points:\n    - stateplane = stateplane.cli:main\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n    - pyproj >=2.4.2\n    - shapely\n    - gdal\n\ntest:\n  imports:\n    - stateplane\n\nabout:\n  home: https://github.com/fitnr/stateplane\n  dev_url: https://github.com/fitnr/stateplane\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: {{ environ[\"RECIPE_DIR\"] }}/LICENSE\n  summary: Convert between state plane projections and long/lat\n  description: |\n    Get the local state plane projection for geographica coordinates, and\n    automatically convert between coordinates and the local state plane\n    projection. Includes state plane projections for the 50 states, DC, Puerto\n    Rico, American Samoa, Guam and the US Virgin Islands.\n\nextra:\n  recipe-maintainers:\n    - moorepants\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/stateplane/stateplane-0.4.0.tar.gz",
 "version": "0.4.0"
}