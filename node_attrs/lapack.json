{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/240815817.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502637430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505157383.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/522665058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/593311522.json"
   },
   "data": {
    "bot_rerun": 1617998185.9976108,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/612700827.json"
   },
   "data": {
    "bot_rerun": 1618031566.5578604,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/612837867.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679523961.json"
   },
   "data": {
    "bot_rerun": 1647063057.650874,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878134540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908497382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "lapack",
 "hash_type": "sha256",
 "name": "blas-split",
 "new_version": "3.10.1",
 "new_version_attempts": {
  "3.10.0": 2,
  "3.10.1": 1,
  "3.9.1": 3
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "blas",
   "blas-devel",
   "lapack",
   "libblas",
   "libcblas",
   "liblapack",
   "liblapacke",
   "libtmglib"
  ]
 },
 "pinning_version": "2022.04.12.21.56.28",
 "raw_meta_yaml": "{% set version = \"3.9.0\" %}\n# if build_num is reset to 0 (for new version), update increment for blas_minor below\n{% set build_num = 5 %}\n{% set version_major = version.split(\".\")[0] %}\n# blas_major denotes major infrastructural change to how blas is managed\n{% set blas_major = \"2\" %}\n# make sure we do not create colliding version strings of output \"blas\"\n# for builds across lapack-versions within the same blas_major\n{% set blas_minor = build_num + 100 %}\n\n{% if unix %}\n{% set library = \"\" %}\n{% else %}\n{% set library = \"Library/\" %}\n{% endif %}\n\npackage:\n  name: blas-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Reference-LAPACK/lapack/archive/v{{ version }}.tar.gz\n  sha256: 106087f1bb5f46afdfba7f569d0cbe23dacb9a07cd24733765a0e89dbe1ad573\n  patches:\n    # Avoid setting current_version and compatibility_version\n    - patches/0001-Avoid-setting-current_version-and-compatibility_vers.patch  # [osx]\n    #\n    # carry upstream patches for build errors/bugs; these can all be removed upon next release\n    # ===FIX BUILD ERRORS===\n    # restore deprecated symbols that were inadvertently removed (from Reference-LAPACK/lapack#367);\n    # squashed with fix-ups Reference-LAPACK/lapack#434 & #437 (cf. xianyi/OpenBLAS#2808 & #2819)\n    - patches/0002-Restore-missing-prototypes-for-deprecated-LAPACK-fun.patch\n    # fix compile errors due to trying to cast complex_float to int (from Reference-LAPACK/lapack#370)\n    - patches/0003-Fix-MinGW-build-error.patch\n    # ===OTHER BUG FIXES===\n    # from Reference-LAPACK/lapack#390, see also xianyi/OpenBLAS#2442\n    - patches/0004-NaN-not-propagating-in-DCOMBSSQ-and-SCOMBSSQ.patch\n    # from Reference-LAPACK/lapack#408, see also xianyi/OpenBLAS#2635\n    - patches/0005-Fix-the-loop-index-scalar-in-ZHEEQUB.f.patch\n    # from Reference-LAPACK/lapack#436, see also xianyi/OpenBLAS#2817\n    - patches/0006-Fix-some-minor-inconsistencies-in-LAPACK-E-_-cz-gesv.patch\n    # from Reference-LAPACK/lapack#443, see also xianyi/OpenBLAS#2845\n    - patches/0007-fix-workspace-query-in-dgelq.patch\n    # from Reference-LAPACK/lapack#445, see also xianyi/OpenBLAS#2864\n    - patches/0008-fix-dlanv2.patch\n\nbuild:\n  number: \"{{ build_num }}\"\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}               # [unix]\n    - {{ compiler(\"fortran\") }}         # [unix]\n    - {{ compiler(\"m2w64_c\") }}         # [win]\n    - {{ compiler(\"m2w64_fortran\") }}   # [win]\n    # This is just for creating the import libaries\n    - vs2017_win-64                     # [win64]\n    - m2w64-make                        # [win]\n    - make\n    - cmake\n\noutputs:\n  - name: libblas\n    build:\n      string: \"{{ build_num }}_h{{ PKG_HASH }}_netlib\"\n      track_features:\n       - blas_netlib\n      run_exports:\n        - {{ pin_subpackage(\"libblas\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}               # [unix]\n        - {{ compiler(\"fortran\") }}         # [unix]\n        - {{ compiler(\"m2w64_c\") }}         # [win]\n        - {{ compiler(\"m2w64_fortran\") }}   # [win]\n      run_constrained:\n        - blas * netlib\n    files:\n      - {{ library }}lib/pkgconfig/blas.pc\n      - {{ library }}lib/cmake/blas-{{ version }}/*.cmake\n      - lib/libblas.so                          # [linux]\n      - lib/libblas.so.{{ version_major }}      # [linux]\n      - lib/libblas.so.{{ version }}            # [linux]\n      - lib/libblas.dylib                       # [osx]\n      - lib/libblas.{{ version_major }}.dylib   # [osx]\n      - lib/libblas.{{ version }}.dylib         # [osx]\n      - Library/bin/libblas.dll                 # [win]\n      - Library/lib/blas.lib                    # [win]\n      - Library/lib/libblas.dll.a               # [win]\n\n  - name: libtmglib\n    build:\n      string: \"{{ build_num }}_h{{ PKG_HASH }}_netlib\"\n      track_features:\n       - blas_netlib\n      run_exports:\n        - {{ pin_subpackage(\"libtmglib\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}               # [unix]\n        - {{ compiler(\"fortran\") }}         # [unix]\n        - {{ compiler(\"m2w64_c\") }}         # [win]\n        - {{ compiler(\"m2w64_fortran\") }}   # [win]\n      run_constrained:\n        - blas * netlib\n    files:\n      - lib/libtmglib.so                          # [linux]\n      - lib/libtmglib.so.{{ version_major }}      # [linux]\n      - lib/libtmglib.so.{{ version }}            # [linux]\n      - lib/libtmglib.dylib                       # [osx]\n      - lib/libtmglib.{{ version_major }}.dylib   # [osx]\n      - lib/libtmglib.{{ version }}.dylib         # [osx]\n      - Library/bin/libtmglib.dll                 # [win]\n      - Library/lib/libtmglib.dll.a               # [win]\n\n  - name: libcblas\n    build:\n      string: \"{{ build_num }}_h{{ PKG_HASH }}_netlib\"\n      track_features:\n        - blas_netlib\n      run_exports:\n        - {{ pin_subpackage(\"libcblas\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}               # [unix]\n        - {{ compiler(\"fortran\") }}         # [unix]\n        - {{ compiler(\"m2w64_c\") }}         # [win]\n        - {{ compiler(\"m2w64_fortran\") }}   # [win]\n      run:\n        - libblas {{ version }}.*\n    files:\n      - {{ library }}include/cblas*.h\n      - {{ library }}lib/pkgconfig/cblas.pc\n      - {{ library }}lib/cmake/cblas-{{ version }}/*.cmake\n      - lib/libcblas.so                          # [linux]\n      - lib/libcblas.so.{{ version_major }}      # [linux]\n      - lib/libcblas.so.{{ version }}            # [linux]\n      - lib/libcblas.dylib                       # [osx]\n      - lib/libcblas.{{ version_major }}.dylib   # [osx]\n      - lib/libcblas.{{ version }}.dylib         # [osx]\n      - Library/bin/libcblas.dll                 # [win]\n      - Library/lib/cblas.lib                    # [win]\n      - Library/lib/libcblas.dll.a               # [win]\n\n  - name: liblapack\n    build:\n      string: \"{{ build_num }}_h{{ PKG_HASH }}_netlib\"\n      track_features:\n        - blas_netlib\n      run_exports:\n        - {{ pin_subpackage(\"liblapack\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}               # [unix]\n        - {{ compiler(\"fortran\") }}         # [unix]\n        - {{ compiler(\"m2w64_c\") }}         # [win]\n        - {{ compiler(\"m2w64_fortran\") }}   # [win]\n      run:\n        - libblas {{ version }}.*\n    files:\n      - {{ library }}lib/pkgconfig/lapack.pc\n      - {{ library }}lib/cmake/lapack-{{ version }}/*.cmake\n      - lib/liblapack.so                          # [linux]\n      - lib/liblapack.so.{{ version_major }}      # [linux]\n      - lib/liblapack.so.{{ version }}            # [linux]\n      - lib/liblapack.dylib                       # [osx]\n      - lib/liblapack.{{ version_major }}.dylib   # [osx]\n      - lib/liblapack.{{ version }}.dylib         # [osx]\n      - Library/bin/liblapack.dll                 # [win]\n      - Library/lib/lapack.lib                    # [win]\n      - Library/lib/liblapack.dll.a               # [win]\n\n  - name: liblapacke\n    build:\n      string: \"{{ build_num }}_h{{ PKG_HASH }}_netlib\"\n      track_features:\n        - blas_netlib\n      run_exports:\n        - {{ pin_subpackage(\"liblapacke\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}               # [unix]\n        - {{ compiler(\"fortran\") }}         # [unix]\n        - {{ compiler(\"m2w64_c\") }}         # [win]\n        - {{ compiler(\"m2w64_fortran\") }}   # [win]\n      run:\n        - libblas    {{ version }}.*\n        - libcblas   {{ version }}.*\n        - liblapack  {{ version }}.*\n    files:\n      - {{ library }}include/lapack*.h\n      - {{ library }}lib/pkgconfig/lapacke.pc\n      - {{ library }}lib/cmake/lapacke-{{ version }}/*.cmake\n      - lib/liblapacke.so                          # [linux]\n      - lib/liblapacke.so.{{ version_major }}      # [linux]\n      - lib/liblapacke.so.{{ version }}            # [linux]\n      - lib/liblapacke.dylib                       # [osx]\n      - lib/liblapacke.{{ version_major }}.dylib   # [osx]\n      - lib/liblapacke.{{ version }}.dylib         # [osx]\n      - Library/bin/liblapacke.dll                 # [win]\n      - Library/lib/lapacke.lib                    # [win]\n      - Library/lib/liblapacke.dll.a               # [win]\n\n  - name: blas-devel\n    build:\n      string: \"{{ build_num }}_netlib\"\n      track_features:\n       - blas_netlib\n    requirements:\n      run:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}\n        - {{ pin_subpackage(\"liblapacke\", exact=True) }}\n\n  # For conda-forge blas selector, see also blas-feedstock\n  - name: blas\n    version: \"{{ blas_major }}.{{ blas_minor }}\"\n    build:\n      string: \"netlib\"\n      track_features:\n       - blas_netlib\n    requirements:\n    - {{ pin_subpackage(\"liblapack\", exact=True) }}\n    - {{ pin_subpackage(\"liblapacke\", exact=True) }}\n    - {{ pin_subpackage(\"libcblas\", exact=True) }}\n    - {{ pin_subpackage(\"libblas\", exact=True) }}\n    - {{ pin_subpackage(\"blas-devel\", exact=True) }}\n    - {{ pin_subpackage(\"libtmglib\", exact=True) }}\n    test:\n      commands:\n        {% for each_lib in ['blas', 'cblas', 'lapack', 'lapacke'] %}\n        - test -f $PREFIX/lib/lib{{ each_lib }}.so                          # [linux]\n        - test -f $PREFIX/lib/lib{{ each_lib }}.so.{{ version_major }}      # [linux]\n        - test -f $PREFIX/lib/lib{{ each_lib }}.so.{{ version }}            # [linux]\n        - test -f $PREFIX/lib/lib{{ each_lib }}.dylib                       # [osx]\n        - test -f $PREFIX/lib/lib{{ each_lib }}.{{ version_major }}.dylib   # [osx]\n        - test -f $PREFIX/lib/lib{{ each_lib }}.{{ version }}.dylib         # [osx]\n        - test -f $PREFIX/lib/pkgconfig/{{ each_lib }}.pc                   # [unix]\n        - if not exist \"%LIBRARY_LIB%\\\\pkgconfig\\\\{{ each_lib }}.pc\" exit 1  # [win]\n        - if not exist \"%LIBRARY_LIB%\\\\{{ each_lib }}.lib\" exit 1           # [win]\n        - if not exist \"%LIBRARY_BIN%\\\\lib{{ each_lib }}.dll\" exit 1        # [win]\n        {% endfor %}\n\n  # For compatiblity (see #33)\n  - name: lapack\n    build:\n      string: \"netlib\"\n    requirements:\n      run:\n        - liblapack {{ version }}.*\n\nabout:\n  home: http://www.netlib.org/lapack\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Linear Algebra PACKage\n\nextra:\n  feedstock-name: lapack\n  recipe-maintainers:\n    - jakirkham\n    - isuruf\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/Reference-LAPACK/lapack/archive/v3.9.0.tar.gz",
 "version": "3.9.0"
}