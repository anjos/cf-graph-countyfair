{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/779023511.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909960173.json"
   },
   "data": {
    "bot_rerun": 1650070703.700082,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911092059.json"
   },
   "data": {
    "bot_rerun": 1650070703.7002919,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911173991.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/5db59f9c-bced-4afb-8d3e-85780e61f411.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6262"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cds-crtools",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://git.ligo.org/cds/dtt.git",
   "home": "https://git.ligo.org/cds/dtt",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "COPYING",
    "COPYING-GPL-3"
   ],
   "summary": "CDS Control Room tools"
  },
  "build": {
   "number": "4"
  },
  "extra": {
   "feedstock-name": "cds-crtools",
   "recipe-maintainers": [
    "duncanmmacleod",
    "evonreis"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dtt/awg*.h",
     "include/gds/dtt/excitation.hh",
     "include/gds/dtt/gdsrand.h",
     "lib/libawg.so*"
    ],
    "name": "libawg",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "DMT is part of the LIGO real-time data acquisition system\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for interfacing with LIGO's data flow manager"
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dfm/dataacc.hh",
     "include/gds/dfm/dfm.hh",
     "include/gds/dfm/dfmapi.hh",
     "include/gds/dfm/dfmfunc.hh",
     "include/gds/dfm/dfmlars.hh",
     "include/gds/dfm/dfmnds.hh",
     "include/gds/dfm/dfmsends.hh",
     "include/gds/dfm/dfmsm.hh",
     "include/gds/dfm/dfmtype.hh",
     "include/gds/dfm/udn.hh",
     "lib/libdfm.so*"
    ],
    "name": "libdfm",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libfantom",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libfantom",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "lib/libdtt.so*"
    ],
    "name": "libdtt",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "expat",
      "gds-base",
      "gds-base-crtools",
      "libawg",
      "libdfm",
      "libfantom",
      "libtestpoint",
      "nds2-client",
      "openssl",
      "readline"
     ],
     "run": [
      "expat",
      "gds-base",
      "gds-base-crtools",
      "libawg",
      "libdfm",
      "libfantom",
      "libtestpoint",
      "nds2-client",
      "readline"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for translation of LIGO data frames and LIGO NDS data."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/fantom/",
     "lib/libfantom.so*"
    ],
    "name": "libfantom",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "gds-lsmp",
      "nds2-client",
      "openssl",
      "readline"
     ],
     "run": [
      "gds-base",
      "gds-lsmp",
      "readline"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "C++ library for manipulating foton filter files."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/foton/Filter*.hh",
     "lib/libfilterfile.so*"
    ],
    "name": "libfilterfile",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libfilterfile${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Functions for creating foton-style filter design windows."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/foton/TLGFilter*.hh",
     "lib/libfilterwiz.so*"
    ],
    "name": "libfilterwiz",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libfilterfile",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libfilterfile"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libsistr` is a library used for streaming custom excitations.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dtt/SIStr.h",
     "lib/libSIStr.so*"
    ],
    "name": "libsistr",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libawg",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libawg",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for manipulating LIGO test points."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dtt/testpoint*",
     "lib/libtestpoint.so*"
    ],
    "name": "libtestpoint",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "The gui libraries provide basic widgets to control room tools apps.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Common libraries used by LIGO control room graphical programs."
    },
    "files": [
     "include/dmtview/",
     "include/dtt/dttgui/",
     "include/gds/dfm/dfmgui.hh",
     "include/gds/dfm/montype.hh",
     "include/gds/dfm/TLGDfmChannels.hh",
     "include/gds/dfm/TLGDfmMonitors.hh",
     "include/gds/dfm/TLGDfmSel.hh",
     "include/gds/dfm/TLGDfmServer.hh",
     "include/gds/dfm/TLGDfmTimes.hh",
     "include/gds/libdax/",
     "lib/libdfmgui.so*",
     "lib/libdmtview.so*",
     "lib/libdttgui.so*",
     "lib/liblidax.so*"
    ],
    "name": "crtools-gui-libraries",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "libdfm",
      "libfantom",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "libdfm",
      "libfantom",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
    },
    "files": [
     "lib/dmtview*.pcm",
     "lib/libRdmtview.so*",
     "lib/dttgui*.pcm",
     "lib/libRdttgui.so*",
     "lib/filterfile*.pcm",
     "lib/libRfilterfile.so*"
    ],
    "name": "crtools-root-libraries",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "crtools-gui-libraries",
      "libfilterfile",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "libfilterfile",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}",
      "root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'"
     ]
    }
   },
   {
    "about": {
     "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Python bindings for foton functions"
    },
    "name": "python-foton",
    "requirements": {
     "build": [
      "cmake",
      "make",
      "pkg-config",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "nds2-client",
      "python",
      "root_base"
     ],
     "run": [
      "crtools-root-libraries",
      "gds-root-extensions-crtools",
      "numpy",
      "python",
      "root_base",
      "scipy"
     ]
    },
    "script": "build-python-foton.sh",
    "test": {
     "commands": [
      "(cd src/python/foton/; python foton_test.py)"
     ],
     "source_files": [
      "src/python/foton/"
     ]
    }
   },
   {
    "about": {
     "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Python bindings to libawg"
    },
    "name": "python-awg",
    "requirements": {
     "build": [
      "cmake",
      "make",
      "pkg-config",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "nds2-client",
      "python",
      "root_base"
     ],
     "run": [
      "libawg",
      "libtestpoint",
      "libsistr",
      "numpy",
      "python",
      "root_base",
      "scipy"
     ]
    },
    "script": "build-python-awg.sh",
    "test": {
     "imports": [
      "awg"
     ]
    }
   },
   {
    "files": [
     "bin/chndump"
    ],
    "name": "chndump",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libdtt",
      "nds2-client"
     ],
     "run": [
      "libdtt"
     ]
    },
    "test": {
     "commands": [
      "chndump -h || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for viewing output of DMT monitors."
    },
    "files": [
     "bin/dmtviewer"
    ],
    "name": "dmtviewer",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "dmtviewer -h"
     ]
    }
   },
   {
    "about": {
     "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for running excitations using LIGO's awgtpman."
    },
    "files": [
     "bin/awggui"
    ],
    "name": "dtt-awggui",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-gui-crtools",
      "libawg",
      "libtestpoint",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-gui-crtools",
      "libawg",
      "libtestpoint",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "awggui -h"
     ]
    }
   },
   {
    "about": {
     "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "bin/awgstream",
     "bin/awgexc_run"
    ],
    "name": "dtt-awgstream",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "libawg",
      "libdtt",
      "libsistr",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "libawg",
      "libdtt",
      "libsistr",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "awgstream",
      "awgexc_run || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command line program for running LIGO's Diagnostics Test Tools"
    },
    "files": [
     "bin/diag"
    ],
    "name": "dtt-diag",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libdtt",
      "nds2-client"
     ],
     "run": [
      "libdtt",
      "nds2-client"
     ]
    },
    "test": {
     "commands": [
      "diag -help"
     ]
    }
   },
   {
    "about": {
     "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
    },
    "files": [
     "bin/diagd"
    ],
    "name": "dtt-diagd",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libdtt",
      "nds2-client"
     ],
     "run": [
      "libdtt"
     ]
    },
    "test": {
     "commands": [
      "test -x ${PREFIX}/bin/diagd"
     ]
    }
   },
   {
    "about": {
     "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
    },
    "files": [
     "bin/diaggui"
    ],
    "name": "dtt-diaggui",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "gds-gui-crtools",
      "crtools-gui-libraries",
      "libdfm",
      "libdtt",
      "libfantom",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "gds-base",
      "gds-gui-crtools",
      "crtools-gui-libraries",
      "libdfm",
      "libdtt",
      "libfantom",
      "root_base",
      "nds2-client"
     ]
    },
    "test": {
     "commands": [
      "diaggui -h"
     ]
    }
   },
   {
    "about": {
     "description": "Monitors include InspiralRange.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Monitors used in LIGO control rooms."
    },
    "files": [
     "bin/InspiralRange"
    ],
    "name": "dtt-monitors",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ]
    },
    "test": {
     "commands": [
      "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
     ]
    }
   },
   {
    "about": {
     "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
    },
    "files": [
     "bin/multiawgstream"
    ],
    "name": "dtt-multiawgstream",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libawg",
      "libdtt",
      "libtestpoint",
      "nds2-client"
     ],
     "run": [
      "gds-base",
      "libawg",
      "libdtt",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "multiawgstream"
     ]
    }
   },
   {
    "about": {
     "description": "Close and open test points on LIGO's real-time data acquisition system\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
    },
    "files": [
     "bin/tpcmd"
    ],
    "name": "dtt-tpcmd",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libtestpoint",
      "nds2-client"
     ],
     "run": [
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "tpcmd -h || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command line tools for XML files produced using DTT."
    },
    "files": [
     "bin/xmlconv",
     "bin/xmldata",
     "bin/xmldir"
    ],
    "name": "dtt-xml-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libdtt",
      "libtestpoint",
      "nds2-client"
     ],
     "run": [
      "gds-base",
      "libdtt",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "xmlconv -h",
      "xmldata -h",
      "xmldir -h"
     ]
    }
   },
   {
    "about": {
     "description": "`fantom` can be used to translate from different LIGO data formats.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command-line program for translation of LIGO frame and NDS data."
    },
    "files": [
     "bin/fantom"
    ],
    "name": "fantom",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libfantom",
      "nds2-client"
     ],
     "run": [
      "libfantom"
     ]
    },
    "test": {
     "commands": [
      "fantom -h || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for designing and generating filters."
    },
    "files": [
     "bin/foton"
    ],
    "name": "foton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "libfilterfile",
      "libfilterwiz",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "libfilterfile",
      "libfilterwiz",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "foton -h"
     ]
    }
   },
   {
    "about": {
     "description": "lidax reads LIGO frame files.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for retrieving LIGO data."
    },
    "files": [
     "bin/lidax",
     "bin/udnls"
    ],
    "name": "lidax",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "libdfm",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "libdfm",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "lidax -h",
      "lidax -H NDSSERVER",
      "udnls -h"
     ]
    }
   },
   {
    "about": {
     "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "CDS Control Room tools"
    },
    "name": "cds-crtools",
    "requirements": {
     "host": [
      "nds2-client",
      "python",
      "root_base"
     ],
     "run": [
      "nds2-client",
      "python",
      "root_base",
      "chndump",
      "dmtviewer",
      "dtt-diag",
      "dtt-diagd",
      "dtt-diaggui",
      "dtt-awggui",
      "dtt-awgstream",
      "dtt-multiawgstream",
      "dtt-tpcmd",
      "dtt-xml-tools",
      "foton",
      "lidax",
      "python-awg",
      "python-foton"
     ]
    },
    "test": {
     "commands": [
      "diaggui -h",
      "foton -h"
     ]
    }
   }
  ],
  "package": {
   "name": "cds-crtools-split",
   "version": "3.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "python >=3",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "cyrus-sasl",
    "expat",
    "fftw",
    "gds-base",
    "gds-base-crtools",
    "gds-gui-crtools",
    "gds-base-gdstrig",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "nds2-client",
    "readline",
    "root_base"
   ]
  },
  "source": {
   "patches": [
    "rpcgen-cpp-path.patch"
   ],
   "sha256": "cd3979dce54a3673117a7eb18fe1bfb4dfc0332454a9e037fe692abc025de5d0",
   "url": "https://git.ligo.org/cds/dtt/-/archive/3.1.2/3.1.2.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "python",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "crtools-gui-libraries",
    "cyrus-sasl",
    "expat",
    "fftw",
    "gds-base",
    "gds-base-crtools",
    "gds-base-gdstrig",
    "gds-gui-crtools",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "libawg",
    "libdfm",
    "libdtt",
    "libfantom",
    "libfilterfile",
    "libfilterwiz",
    "libsistr",
    "libtestpoint",
    "nds2-client",
    "openssl",
    "python",
    "readline",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "chndump",
    "crtools-gui-libraries",
    "crtools-root-libraries",
    "dmtviewer",
    "dtt-awggui",
    "dtt-awgstream",
    "dtt-diag",
    "dtt-diagd",
    "dtt-diaggui",
    "dtt-multiawgstream",
    "dtt-tpcmd",
    "dtt-xml-tools",
    "expat",
    "foton",
    "gds-base",
    "gds-base-crtools",
    "gds-gui-crtools",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "libawg",
    "libdfm",
    "libdtt",
    "libfantom",
    "libfilterfile",
    "libfilterwiz",
    "libsistr",
    "libtestpoint",
    "lidax",
    "nds2-client",
    "numpy",
    "python",
    "python-awg",
    "python-foton",
    "readline",
    "root_base",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://git.ligo.org/cds/dtt.git",
   "home": "https://git.ligo.org/cds/dtt",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "COPYING",
    "COPYING-GPL-3"
   ],
   "summary": "CDS Control Room tools"
  },
  "build": {
   "number": "4"
  },
  "extra": {
   "feedstock-name": "cds-crtools",
   "recipe-maintainers": [
    "duncanmmacleod",
    "evonreis"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dtt/awg*.h",
     "include/gds/dtt/excitation.hh",
     "include/gds/dtt/gdsrand.h",
     "lib/libawg.so*"
    ],
    "name": "libawg",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "DMT is part of the LIGO real-time data acquisition system\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for interfacing with LIGO's data flow manager"
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dfm/dataacc.hh",
     "include/gds/dfm/dfm.hh",
     "include/gds/dfm/dfmapi.hh",
     "include/gds/dfm/dfmfunc.hh",
     "include/gds/dfm/dfmlars.hh",
     "include/gds/dfm/dfmnds.hh",
     "include/gds/dfm/dfmsends.hh",
     "include/gds/dfm/dfmsm.hh",
     "include/gds/dfm/dfmtype.hh",
     "include/gds/dfm/udn.hh",
     "lib/libdfm.so*"
    ],
    "name": "libdfm",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libfantom",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libfantom",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "lib/libdtt.so*"
    ],
    "name": "libdtt",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "expat",
      "gds-base",
      "gds-base-crtools",
      "libawg",
      "libdfm",
      "libfantom",
      "libtestpoint",
      "nds2-client",
      "openssl",
      "readline"
     ],
     "run": [
      "expat",
      "gds-base",
      "gds-base-crtools",
      "libawg",
      "libdfm",
      "libfantom",
      "libtestpoint",
      "nds2-client",
      "readline"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for translation of LIGO data frames and LIGO NDS data."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/fantom/",
     "lib/libfantom.so*"
    ],
    "name": "libfantom",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "gds-lsmp",
      "nds2-client",
      "openssl",
      "readline"
     ],
     "run": [
      "gds-base",
      "gds-lsmp",
      "readline"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "C++ library for manipulating foton filter files."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/foton/Filter*.hh",
     "lib/libfilterfile.so*"
    ],
    "name": "libfilterfile",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libfilterfile${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Functions for creating foton-style filter design windows."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/foton/TLGFilter*.hh",
     "lib/libfilterwiz.so*"
    ],
    "name": "libfilterwiz",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libfilterfile",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libfilterfile"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libsistr` is a library used for streaming custom excitations.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dtt/SIStr.h",
     "lib/libSIStr.so*"
    ],
    "name": "libsistr",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libawg",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base",
      "libawg",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Library for manipulating LIGO test points."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "include/gds/dtt/testpoint*",
     "lib/libtestpoint.so*"
    ],
    "name": "libtestpoint",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "gds-base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "The gui libraries provide basic widgets to control room tools apps.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Common libraries used by LIGO control room graphical programs."
    },
    "files": [
     "include/dmtview/",
     "include/dtt/dttgui/",
     "include/gds/dfm/dfmgui.hh",
     "include/gds/dfm/montype.hh",
     "include/gds/dfm/TLGDfmChannels.hh",
     "include/gds/dfm/TLGDfmMonitors.hh",
     "include/gds/dfm/TLGDfmSel.hh",
     "include/gds/dfm/TLGDfmServer.hh",
     "include/gds/dfm/TLGDfmTimes.hh",
     "include/gds/libdax/",
     "lib/libdfmgui.so*",
     "lib/libdmtview.so*",
     "lib/libdttgui.so*",
     "lib/liblidax.so*"
    ],
    "name": "crtools-gui-libraries",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "libdfm",
      "libfantom",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "libdfm",
      "libfantom",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
     ]
    }
   },
   {
    "about": {
     "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
    },
    "files": [
     "lib/dmtview*.pcm",
     "lib/libRdmtview.so*",
     "lib/dttgui*.pcm",
     "lib/libRdttgui.so*",
     "lib/filterfile*.pcm",
     "lib/libRfilterfile.so*"
    ],
    "name": "crtools-root-libraries",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "crtools-gui-libraries",
      "libfilterfile",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "libfilterfile",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}",
      "root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'"
     ]
    }
   },
   {
    "about": {
     "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Python bindings for foton functions"
    },
    "name": "python-foton",
    "requirements": {
     "build": [
      "cmake",
      "make",
      "pkg-config",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "nds2-client",
      "python",
      "root_base"
     ],
     "run": [
      "crtools-root-libraries",
      "gds-root-extensions-crtools",
      "numpy",
      "python",
      "root_base",
      "scipy"
     ]
    },
    "script": "build-python-foton.sh",
    "test": {
     "commands": [
      "(cd src/python/foton/; python foton_test.py)"
     ],
     "source_files": [
      "src/python/foton/"
     ]
    }
   },
   {
    "about": {
     "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Python bindings to libawg"
    },
    "name": "python-awg",
    "requirements": {
     "build": [
      "cmake",
      "make",
      "pkg-config",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "nds2-client",
      "python",
      "root_base"
     ],
     "run": [
      "libawg",
      "libtestpoint",
      "libsistr",
      "numpy",
      "python",
      "root_base",
      "scipy"
     ]
    },
    "script": "build-python-awg.sh",
    "test": {
     "imports": [
      "awg"
     ]
    }
   },
   {
    "files": [
     "bin/chndump"
    ],
    "name": "chndump",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libdtt",
      "nds2-client"
     ],
     "run": [
      "libdtt"
     ]
    },
    "test": {
     "commands": [
      "chndump -h || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for viewing output of DMT monitors."
    },
    "files": [
     "bin/dmtviewer"
    ],
    "name": "dmtviewer",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-base-crtools",
      "gds-gui-crtools",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "dmtviewer -h"
     ]
    }
   },
   {
    "about": {
     "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for running excitations using LIGO's awgtpman."
    },
    "files": [
     "bin/awggui"
    ],
    "name": "dtt-awggui",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-gui-crtools",
      "libawg",
      "libtestpoint",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "gds-gui-crtools",
      "libawg",
      "libtestpoint",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "awggui -h"
     ]
    }
   },
   {
    "about": {
     "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
    },
    "build": {
     "ignore_run_exports": [
      "openssl"
     ]
    },
    "files": [
     "bin/awgstream",
     "bin/awgexc_run"
    ],
    "name": "dtt-awgstream",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "libawg",
      "libdtt",
      "libsistr",
      "libtestpoint",
      "nds2-client",
      "openssl"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "libawg",
      "libdtt",
      "libsistr",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "awgstream",
      "awgexc_run || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command line program for running LIGO's Diagnostics Test Tools"
    },
    "files": [
     "bin/diag"
    ],
    "name": "dtt-diag",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libdtt",
      "nds2-client"
     ],
     "run": [
      "libdtt",
      "nds2-client"
     ]
    },
    "test": {
     "commands": [
      "diag -help"
     ]
    }
   },
   {
    "about": {
     "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
    },
    "files": [
     "bin/diagd"
    ],
    "name": "dtt-diagd",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libdtt",
      "nds2-client"
     ],
     "run": [
      "libdtt"
     ]
    },
    "test": {
     "commands": [
      "test -x ${PREFIX}/bin/diagd"
     ]
    }
   },
   {
    "about": {
     "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
    },
    "files": [
     "bin/diaggui"
    ],
    "name": "dtt-diaggui",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "gds-gui-crtools",
      "crtools-gui-libraries",
      "libdfm",
      "libdtt",
      "libfantom",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "gds-base",
      "gds-gui-crtools",
      "crtools-gui-libraries",
      "libdfm",
      "libdtt",
      "libfantom",
      "root_base",
      "nds2-client"
     ]
    },
    "test": {
     "commands": [
      "diaggui -h"
     ]
    }
   },
   {
    "about": {
     "description": "Monitors include InspiralRange.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Monitors used in LIGO control rooms."
    },
    "files": [
     "bin/InspiralRange"
    ],
    "name": "dtt-monitors",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ]
    },
    "test": {
     "commands": [
      "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
     ]
    }
   },
   {
    "about": {
     "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
    },
    "files": [
     "bin/multiawgstream"
    ],
    "name": "dtt-multiawgstream",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libawg",
      "libdtt",
      "libtestpoint",
      "nds2-client"
     ],
     "run": [
      "gds-base",
      "libawg",
      "libdtt",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "multiawgstream"
     ]
    }
   },
   {
    "about": {
     "description": "Close and open test points on LIGO's real-time data acquisition system\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
    },
    "files": [
     "bin/tpcmd"
    ],
    "name": "dtt-tpcmd",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libtestpoint",
      "nds2-client"
     ],
     "run": [
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "tpcmd -h || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command line tools for XML files produced using DTT."
    },
    "files": [
     "bin/xmlconv",
     "bin/xmldata",
     "bin/xmldir"
    ],
    "name": "dtt-xml-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "gds-base",
      "libdtt",
      "libtestpoint",
      "nds2-client"
     ],
     "run": [
      "gds-base",
      "libdtt",
      "libtestpoint"
     ]
    },
    "test": {
     "commands": [
      "xmlconv -h",
      "xmldata -h",
      "xmldir -h"
     ]
    }
   },
   {
    "about": {
     "description": "`fantom` can be used to translate from different LIGO data formats.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Command-line program for translation of LIGO frame and NDS data."
    },
    "files": [
     "bin/fantom"
    ],
    "name": "fantom",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "libfantom",
      "nds2-client"
     ],
     "run": [
      "libfantom"
     ]
    },
    "test": {
     "commands": [
      "fantom -h || test $? -eq 1"
     ]
    }
   },
   {
    "about": {
     "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for designing and generating filters."
    },
    "files": [
     "bin/foton"
    ],
    "name": "foton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "libfilterfile",
      "libfilterwiz",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "libfilterfile",
      "libfilterwiz",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "foton -h"
     ]
    }
   },
   {
    "about": {
     "description": "lidax reads LIGO frame files.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "Graphical program for retrieving LIGO data."
    },
    "files": [
     "bin/lidax",
     "bin/udnls"
    ],
    "name": "lidax",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "make",
      "sysroot_linux-64 2.17"
     ],
     "host": [
      "crtools-gui-libraries",
      "gds-base",
      "libdfm",
      "nds2-client",
      "root_base"
     ],
     "run": [
      "crtools-gui-libraries",
      "gds-base",
      "libdfm",
      "root_base"
     ]
    },
    "test": {
     "commands": [
      "lidax -h",
      "lidax -H NDSSERVER",
      "udnls -h"
     ]
    }
   },
   {
    "about": {
     "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
     "dev_url": "https://git.ligo.org/cds/dtt.git",
     "home": "https://git.ligo.org/cds/dtt",
     "license": "GPL-2.0-or-later",
     "license_family": "GPL",
     "license_file": [
      "COPYING",
      "COPYING-GPL-3"
     ],
     "summary": "CDS Control Room tools"
    },
    "name": "cds-crtools",
    "requirements": {
     "host": [
      "nds2-client",
      "python",
      "root_base"
     ],
     "run": [
      "nds2-client",
      "python",
      "root_base",
      "chndump",
      "dmtviewer",
      "dtt-diag",
      "dtt-diagd",
      "dtt-diaggui",
      "dtt-awggui",
      "dtt-awgstream",
      "dtt-multiawgstream",
      "dtt-tpcmd",
      "dtt-xml-tools",
      "foton",
      "lidax",
      "python-awg",
      "python-foton"
     ]
    },
    "test": {
     "commands": [
      "diaggui -h",
      "foton -h"
     ]
    }
   }
  ],
  "package": {
   "name": "cds-crtools-split",
   "version": "3.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "python >=3",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "cyrus-sasl",
    "expat",
    "fftw",
    "gds-base",
    "gds-base-crtools",
    "gds-gui-crtools",
    "gds-base-gdstrig",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "nds2-client",
    "readline",
    "root_base"
   ]
  },
  "source": {
   "patches": [
    "rpcgen-cpp-path.patch"
   ],
   "sha256": "cd3979dce54a3673117a7eb18fe1bfb4dfc0332454a9e037fe692abc025de5d0",
   "url": "https://git.ligo.org/cds/dtt/-/archive/3.1.2/3.1.2.tar.gz"
  }
 },
 "name": "cds-crtools-split",
 "new_version": "3.1.2",
 "new_version_attempts": {
  "3.0.3": 1,
  "3.1.1": 1,
  "3.1.2": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cds-crtools",
   "chndump",
   "crtools-gui-libraries",
   "crtools-root-libraries",
   "dmtviewer",
   "dtt-awggui",
   "dtt-awgstream",
   "dtt-diag",
   "dtt-diagd",
   "dtt-diaggui",
   "dtt-monitors",
   "dtt-multiawgstream",
   "dtt-tpcmd",
   "dtt-xml-tools",
   "fantom",
   "foton",
   "libawg",
   "libdfm",
   "libdtt",
   "libfantom",
   "libfilterfile",
   "libfilterwiz",
   "libsistr",
   "libtestpoint",
   "lidax",
   "python-awg",
   "python-foton"
  ]
 },
 "pinning_version": "2022.04.17.23.07.46",
 "pre_pr_migrator_attempts": {
  "python310": 58,
  "root_base6260": 20
 },
 "pre_pr_migrator_status": {
  "python310": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/2274630817\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1141, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 271, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 287, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "root_base6260": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1956122480\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1135, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 270, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 276, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n"
 },
 "raw_meta_yaml": "{% set name = \"cds-crtools\" %}\n{% set version = \"3.1.2\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://git.ligo.org/cds/dtt/-/archive/{{ version }}/{{ version }}.tar.gz\n  sha256: cd3979dce54a3673117a7eb18fe1bfb4dfc0332454a9e037fe692abc025de5d0\n  patches:\n    # patch rpcgen arguments to find cpp\n    - rpcgen-cpp-path.patch\n\nbuild:\n  number: 4\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n    - pkg-config  # [unix]\n    - python >=3\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - cyrus-sasl\n    - expat\n    - fftw\n    - gds-base\n    - gds-base-crtools\n    - gds-gui-crtools\n    - gds-base-gdstrig\n    - gds-lsmp\n    - gds-root-extensions-crtools\n    - nds2-client\n    - readline\n    - root_base\n\n\noutputs:\n  # -- C libraries ----------\n\n  - name: libawg\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - openssl\n      run:\n        - gds-base\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - include/gds/dtt/awg*.h\n      - include/gds/dtt/excitation.hh\n      - include/gds/dtt/gdsrand.h\n      - lib/libawg{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libawg${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library used to interface with awgtpman, the waveform excitation program used at LIGO\n      description: |\n        `libawg` is an interface for opening, configuring, and controlling excitations\n        on the LIGO real-time data acquisition system.\n\n  - name: libdfm\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - openssl\n      run:\n        - gds-base\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - include/gds/dfm/dataacc.hh\n      - include/gds/dfm/dfm.hh\n      - include/gds/dfm/dfmapi.hh\n      - include/gds/dfm/dfmfunc.hh\n      - include/gds/dfm/dfmlars.hh\n      - include/gds/dfm/dfmnds.hh\n      - include/gds/dfm/dfmsends.hh\n      - include/gds/dfm/dfmsm.hh\n      - include/gds/dfm/dfmtype.hh\n      - include/gds/dfm/udn.hh\n      - lib/libdfm{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for interfacing with LIGO's data flow manager\n      description: |\n        DMT is part of the LIGO real-time data acquisition system\n\n  - name: libdtt\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - expat\n        - gds-base\n        - gds-base-crtools\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - openssl\n        - readline\n      run:\n        - expat\n        - gds-base\n        - gds-base-crtools\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - readline\n\n    files:\n      - lib/libdtt{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library containing the functionality of LIGO's Diagnostics Test Tools.\n      description: |\n        `libdtt` is an interface for creating and running diagnostics tests on\n        the LIGO real-time data acquisition system.\n\n  - name: libfantom\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - gds-lsmp\n        - nds2-client\n        - openssl\n        - readline\n      run:\n        - gds-base\n        - gds-lsmp\n        - readline\n    files:\n      - include/gds/fantom/\n      - lib/libfantom{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for translation of LIGO data frames and LIGO NDS data.\n      description: |\n        `libfantom` is a LIGO data access library for\n        translating data frames and NDS data.\n\n  - name: libfilterfile\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - nds2-client\n        - openssl\n      run:\n        - gds-base\n    files:\n      - include/foton/Filter*.hh\n      - lib/libfilterfile{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libfilterfile${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: C++ library for manipulating foton filter files.\n      description: |\n        `libfilterfile` is an interface for reading and writing foton filter files,\n        used at LIGO to encode filter coefficients.\n\n  - name: libfilterwiz\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - nds2-client\n        - openssl\n      run:\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n    files:\n      - include/foton/TLGFilter*.hh\n      - lib/libfilterwiz{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Functions for creating foton-style filter design windows.\n      description: |\n        Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n        `foton`-style filter design windows for one-off filters.\n\n  - name: libsistr\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - openssl\n      run:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - include/gds/dtt/SIStr.h\n      - lib/libSIStr{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for sending arbitrary data as excitations using LIGO's awgtpman.\n      description: |\n        `libsistr` is a library used for streaming custom excitations.\n\n  - name: libtestpoint\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - nds2-client\n        - openssl\n      run:\n        - gds-base\n    files:\n      - include/gds/dtt/testpoint*\n      - lib/libtestpoint{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for manipulating LIGO test points.\n      description: |\n        `libtestpoint` allows opening and closing of test points on the LIGO\n        real-time data acquisition system.\n\n  - name: crtools-gui-libraries\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - gds-base-crtools\n        - gds-gui-crtools\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - gds-base\n        - gds-base-crtools\n        - gds-gui-crtools\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - root_base\n    files:\n      - include/dmtview/\n      - include/dtt/dttgui/\n      - include/gds/dfm/dfmgui.hh\n      - include/gds/dfm/montype.hh\n      - include/gds/dfm/TLGDfmChannels.hh\n      - include/gds/dfm/TLGDfmMonitors.hh\n      - include/gds/dfm/TLGDfmSel.hh\n      - include/gds/dfm/TLGDfmServer.hh\n      - include/gds/dfm/TLGDfmTimes.hh\n      - include/gds/libdax/\n      - lib/libdfmgui{{ SHLIB_EXT }}*\n      - lib/libdmtview{{ SHLIB_EXT }}*\n      - lib/libdttgui{{ SHLIB_EXT }}*\n      - lib/liblidax{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Common libraries used by LIGO control room graphical programs.\n      description: |\n        The gui libraries provide basic widgets to control room tools apps.\n\n  - name: crtools-root-libraries\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - root_base\n    files:\n      - lib/dmtview*.pcm\n      - lib/libRdmtview{{ SHLIB_EXT }}*\n      - lib/dttgui*.pcm\n      - lib/libRdttgui{{ SHLIB_EXT }}*\n      - lib/filterfile*.pcm\n      - lib/libRfilterfile{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}  # [unix]\n        - root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'  # [linux]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Common ROOT dictionary libraries used by LIGO control room programs.\n      description: |\n        ROOT dictionaries allow dynamic access to C++ objects.\n\n  # -- python libraries -----\n\n  - name: python-foton\n    script: build-python-foton.sh\n    requirements:\n      build:\n        - cmake\n        - make  # [unix]\n        - pkg-config\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - nds2-client\n        - python\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-root-libraries', exact=True) }}\n        - gds-root-extensions-crtools\n        - numpy\n        - python\n        - root_base\n        - scipy\n    test:\n      source_files:\n        - src/python/foton/\n      commands:\n        - (cd src/python/foton/; python foton_test.py)\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Python bindings for foton functions\n      description: |\n        Library for design, inspection and manipulation of filters and\n        LIGO style filter files.\n\n  - name: python-awg\n    script: build-python-awg.sh\n    requirements:\n      build:\n        - cmake\n        - make  # [unix]\n        - pkg-config\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - nds2-client\n        - python\n        - root_base\n      run:\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - {{ pin_subpackage('libsistr', exact=True) }}\n        - numpy\n        - python\n        - root_base\n        - scipy\n    test:\n      imports:\n        - awg\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Python bindings to libawg\n      description: |\n        Create excitations using LIGO\\'s awgtpman using Python.\n        The awg module allows simple python scripting of excitations\n        on the LIGO data acquisition system.\n\n  # -- script packages ------\n\n  - name: chndump\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - nds2-client\n      run:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n    files:\n      - bin/chndump\n    test:\n      commands:\n        # chndump -h returns exit code 1 (command not found is 127)\n        - chndump -h || test $? -eq 1  # [unix]\n\n  - name: dmtviewer\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - gds-base-crtools\n        - gds-gui-crtools\n        - nds2-client\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - gds-base-crtools\n        - gds-gui-crtools\n        - root_base\n    files:\n      - bin/dmtviewer\n    test:\n      commands:\n        - dmtviewer -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for viewing output of DMT monitors.\n      description: |\n        DMT viewer is used in LIGO control rooms to display DMT data.\n\n  - name: dtt-awggui\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - gds-gui-crtools\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - gds-gui-crtools\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - root_base\n    files:\n      - bin/awggui\n    test:\n      commands:\n        - awggui -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for running excitations using LIGO's awgtpman.\n      description: |\n        `awggui` is an interface for creating excitations on LIGO's data\n        acquisition system, including many periodic functions, random noise\n        excitations, and custom user-defined excitations.\n\n  - name: dtt-awgstream\n    build:\n      ignore_run_exports:\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libsistr', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - openssl\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libsistr', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - bin/awgstream\n      - bin/awgexc_run\n    test:\n      commands:\n        - awgstream\n        - awgexc_run || test $? -eq 1  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Stream arbitrary data as an excitation using LIGO's awgtpman.\n      description: |\n        Includes awgexec_run program for streaming excitations from Matlab.\n\n  - name: dtt-diag\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - nds2-client\n      run:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - nds2-client\n    files:\n      - bin/diag\n    test:\n      commands:\n        - diag -help\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command line program for running LIGO's Diagnostics Test Tools\n      description: |\n        `diag` is suitable for scripting diagnostics test and excitations on LIGO's\n        real-time data acquisition system.\n\n  - name: dtt-diagd\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - nds2-client\n      run:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n    files:\n      - bin/diagd\n    test:\n      commands:\n        - test -x ${PREFIX}/bin/diagd  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Daemon for running LIGO's Diagnostics Test Tools remotely\n      description: |\n        `diagd` is suitable for remotely running diagnostics test\n        and excitations on LIGO's real-time data acquisition system.\n\n  - name: dtt-diaggui\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - gds-gui-crtools\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - gds-base\n        - gds-gui-crtools\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - root_base\n        - nds2-client\n    files:\n      - bin/diaggui\n    test:\n      commands:\n        - diaggui -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for running LIGO's Diagnostics Test Tools.\n      description: |\n        `diaggui` is a user interface for running diagnostics tests, creating\n        excitations, calculating results on LIGO's real time system data\n        acquisition system.\n\n  - name: dtt-monitors\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n    files:\n      - bin/InspiralRange\n    test:\n      commands:\n        - echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Monitors used in LIGO control rooms.\n      description: |\n        Monitors include InspiralRange.\n\n  - name: dtt-multiawgstream\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n      run:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - bin/multiawgstream\n    test:\n      commands:\n        - multiawgstream\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Stream multiple arbitrary data sets as excitations using LIGO's awgtpman.\n      description: |\n        Stream arbitrary data to multiple exciatation channels at once on\n        LIGO's real-time data acquisition system.\n\n  - name: dtt-tpcmd\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n      run:\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - bin/tpcmd\n    test:\n      commands:\n        - tpcmd -h || test $? -eq 1  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command line tool for manipulating test points using LIGO's awgtpman.\n      description: |\n        Close and open test points on LIGO's real-time data acquisition system\n\n  - name: dtt-xml-tools\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n      run:\n        - gds-base\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - bin/xmlconv\n      - bin/xmldata\n      - bin/xmldir\n    test:\n      commands:\n        - xmlconv -h\n        - xmldata -h\n        - xmldir -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command line tools for XML files produced using DTT.\n      description: |\n        Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n\n  - name: fantom\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - nds2-client\n      run:\n        - {{ pin_subpackage('libfantom', exact=True) }}\n    files:\n      - bin/fantom\n    test:\n      commands:\n        - fantom -h || test $? -eq 1  # [unix]\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command-line program for translation of LIGO frame and NDS data.\n      description: |\n        `fantom` can be used to translate from different LIGO data formats.\n\n  - name: foton\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - {{ pin_subpackage('libfilterwiz', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - {{ pin_subpackage('libfilterwiz', exact=True) }}\n        - root_base\n    files:\n      - bin/foton\n    test:\n      commands:\n        - foton -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for designing and generating filters.\n      description: |\n        `foton` is used at LIGO to design and display filters,\n        then generate filter files usable by the LIGO real-time\n        data acquisition system.\n        A variety of design strategies are supported.\n\n  - name: lidax\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - root_base\n    files:\n      - bin/lidax\n      - bin/udnls\n    test:\n      commands:\n        - lidax -h\n        - lidax -H NDSSERVER\n        - udnls -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for retrieving LIGO data.\n      description: |\n        lidax reads LIGO frame files.\n\n  # -- metapackage ----------\n\n  - name: cds-crtools\n    requirements:\n      host:\n        - nds2-client\n        - python\n        - root_base\n      run:\n        - nds2-client\n        - python\n        - root_base\n        # all of the outputs\n        - {{ pin_subpackage('chndump', exact=True) }}\n        - {{ pin_subpackage('dmtviewer', exact=True) }}\n        - {{ pin_subpackage('dtt-diag', exact=True) }}\n        - {{ pin_subpackage('dtt-diagd', exact=True) }}\n        - {{ pin_subpackage('dtt-diaggui', exact=True) }}\n        - {{ pin_subpackage('dtt-awggui', exact=True) }}\n        - {{ pin_subpackage('dtt-awgstream', exact=True) }}\n        - {{ pin_subpackage('dtt-multiawgstream', exact=True) }}\n        - {{ pin_subpackage('dtt-tpcmd', exact=True) }}\n        - {{ pin_subpackage('dtt-xml-tools', exact=True) }}\n        - {{ pin_subpackage('foton', exact=True) }}\n        - {{ pin_subpackage('lidax', exact=True) }}\n        - {{ pin_subpackage('python-awg', exact=True) }}\n        - {{ pin_subpackage('python-foton', exact=True) }}\n    test:\n      commands:\n        - diaggui -h\n        - foton -h\n    about:\n      home: https://git.ligo.org/cds/dtt\n      dev_url: https://git.ligo.org/cds/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: CDS Control Room tools\n      description: |\n        cds-crtools is a metapackage that installs several programs\n        used to control LIGO-style interfrometers. The package includes\n        `diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\n        along with `foton`, the filter design program, and others.\n\nabout:\n  home: https://git.ligo.org/cds/dtt\n  dev_url: https://git.ligo.org/cds/dtt.git\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file:\n    - COPYING\n    - COPYING-GPL-3\n  summary: CDS Control Room tools\n\nextra:\n  feedstock-name: cds-crtools\n  recipe-maintainers:\n    - duncanmmacleod\n    - evonreis\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "chndump",
   "cmake",
   "crtools-gui-libraries",
   "crtools-root-libraries",
   "cxx_compiler_stub",
   "cyrus-sasl",
   "dmtviewer",
   "dtt-awggui",
   "dtt-awgstream",
   "dtt-diag",
   "dtt-diagd",
   "dtt-diaggui",
   "dtt-multiawgstream",
   "dtt-tpcmd",
   "dtt-xml-tools",
   "expat",
   "fftw",
   "foton",
   "gds-base",
   "gds-base-crtools",
   "gds-base-gdstrig",
   "gds-gui-crtools",
   "gds-lsmp",
   "gds-root-extensions-crtools",
   "libawg",
   "libdfm",
   "libdtt",
   "libfantom",
   "libfilterfile",
   "libfilterwiz",
   "libsistr",
   "libtestpoint",
   "lidax",
   "make",
   "nds2-client",
   "numpy",
   "openssl",
   "pkg-config",
   "python",
   "python-awg",
   "python-foton",
   "readline",
   "root_base",
   "scipy",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "python",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "crtools-gui-libraries",
    "cxx_compiler_stub",
    "cyrus-sasl",
    "expat",
    "fftw",
    "gds-base",
    "gds-base-crtools",
    "gds-base-gdstrig",
    "gds-gui-crtools",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "libawg",
    "libdfm",
    "libdtt",
    "libfantom",
    "libfilterfile",
    "libfilterwiz",
    "libsistr",
    "libtestpoint",
    "linux-sysroot",
    "nds2-client",
    "openssl",
    "python",
    "readline",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "chndump",
    "crtools-gui-libraries",
    "crtools-root-libraries",
    "cxx_compiler_stub",
    "dmtviewer",
    "dtt-awggui",
    "dtt-awgstream",
    "dtt-diag",
    "dtt-diagd",
    "dtt-diaggui",
    "dtt-multiawgstream",
    "dtt-tpcmd",
    "dtt-xml-tools",
    "expat",
    "foton",
    "gds-base",
    "gds-base-crtools",
    "gds-gui-crtools",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "libawg",
    "libdfm",
    "libdtt",
    "libfantom",
    "libfilterfile",
    "libfilterwiz",
    "libsistr",
    "libtestpoint",
    "lidax",
    "linux-sysroot",
    "nds2-client",
    "numpy",
    "python",
    "python-awg",
    "python-foton",
    "readline",
    "root_base",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "python >=3",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "crtools-gui-libraries",
    "cyrus-sasl",
    "expat",
    "fftw",
    "gds-base",
    "gds-base-crtools",
    "gds-base-gdstrig",
    "gds-gui-crtools",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "libawg",
    "libdfm",
    "libdtt",
    "libfantom",
    "libfilterfile",
    "libfilterwiz",
    "libsistr",
    "libtestpoint",
    "nds2-client",
    "openssl",
    "python",
    "readline",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "chndump",
    "crtools-gui-libraries",
    "crtools-root-libraries",
    "dmtviewer",
    "dtt-awggui",
    "dtt-awgstream",
    "dtt-diag",
    "dtt-diagd",
    "dtt-diaggui",
    "dtt-multiawgstream",
    "dtt-tpcmd",
    "dtt-xml-tools",
    "expat",
    "foton",
    "gds-base",
    "gds-base-crtools",
    "gds-gui-crtools",
    "gds-lsmp",
    "gds-root-extensions-crtools",
    "libawg",
    "libdfm",
    "libdtt",
    "libfantom",
    "libfilterfile",
    "libfilterwiz",
    "libsistr",
    "libtestpoint",
    "lidax",
    "nds2-client",
    "numpy",
    "python",
    "python-awg",
    "python-foton",
    "readline",
    "root_base",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://git.ligo.org/cds/dtt/-/archive/3.1.2/3.1.2.tar.gz",
 "version": "3.1.2"
}