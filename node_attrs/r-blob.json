{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231767603.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/295730741.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/298658990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "RBaseRebuild",
    "migrator_version": 0,
    "name": "r-base-3.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/365033205.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412675801.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652266723.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/695717509.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905177963.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-blob",
 "hash_type": "sha256",
 "name": "r-blob",
 "new_version": "1.2.3",
 "new_version_attempts": {
  "1.2.2": 1,
  "1.2.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-blob"
  ]
 },
 "pinning_version": "2022.04.10.07.10.26",
 "raw_meta_yaml": "{% set version = \"1.2.3\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-blob\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/blob_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/blob/blob_{{ version }}.tar.gz\n  sha256: 2d88d683ee3d1b56b332b5c7769979b5d3994b5d9285ea634ec919576da3631b\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rlang\n    - r-vctrs >=0.2.1\n  run:\n    - r-base\n    - r-rlang\n    - r-vctrs >=0.2.1\n\ntest:\n  commands:\n    - $R -e \"library('blob')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('blob')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/tidyverse/blob\n  license: GPL-3.0-only\n  summary: R's raw vector is useful for storing a single binary object.  What if you want to put a vector of them in a data frame? The 'blob' package provides the blob object, a list of raw vectors, suitable for use as a column in data frame.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - rvalieris\n\n# Package: blob\n# Title: A Simple S3 Class for Representing Vectors of Binary Data ('BLOBS')\n# Version: 1.2.1\n# Authors@R: c(person(given = \"Hadley\", family = \"Wickham\", role = \"aut\"), person(given = \"Kirill\", family = \"Muller\", role = \"cre\", email = \"krlmlr+r@mailbox.org\"), person(given = \"RStudio\", role = \"cph\"))\n# Description: R's raw vector is useful for storing a single binary object.  What if you want to put a vector of them in a data frame? The 'blob' package provides the blob object, a list of raw vectors, suitable for use as a column in data frame.\n# License: GPL-3\n# URL: https://github.com/tidyverse/blob\n# BugReports: https://github.com/tidyverse/blob/issues\n# Imports: methods, rlang, vctrs (>= 0.2.1)\n# Suggests: covr, crayon, pillar (>= 1.2.1), testthat\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 7.0.2\n# NeedsCompilation: no\n# Packaged: 2020-01-20 22:32:38 UTC; kirill\n# Author: Hadley Wickham [aut], Kirill Muller [cre], RStudio [cph]\n# Maintainer: Kirill Muller <krlmlr+r@mailbox.org>\n# Repository: CRAN\n# Date/Publication: 2020-01-20 22:50:02 UTC\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/blob_1.2.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/blob/blob_1.2.3.tar.gz",
  "https://cran.r-project.org/src/contrib/blob_1.2.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/blob/blob_1.2.3.tar.gz"
 ],
 "version": "1.2.3"
}