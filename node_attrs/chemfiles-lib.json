{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/223672283.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/226988859.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/253910526.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260792790.json"
   },
   "data": {
    "bot_rerun": 1579272527.7714074,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/354667724.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/371591358.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552141965.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/618888750.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf480"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/695141126.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/723781710.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf481"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/762559551.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/979400829.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "chemfiles-lib",
 "hash_type": "sha256",
 "name": "chemfiles-lib",
 "new_version": "0.10.2",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.10.1": 1,
  "0.10.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "chemfiles-lib"
  ]
 },
 "pinning_version": "2022.06.26.11.17.33",
 "raw_meta_yaml": "# Chemfiles version and SHA256\n{% set version = \"0.10.2\" %}\n{% set prerelease = \"\" %}\n{% set sha256 = \"2e3b58167f25d561ab19ae06acdc02f26b5640bd6c85e0a5b10fedfec59f5285\" %}\n\n# Chemfiles test data git version and SHA256\n{% set data_git = \"2db410d1f7651776e142676d26ec0d2cccd7b3cd\" %}\n{% set data_sha256 = \"8be5dc48c31a193d93ffe9fc7d0a785fc912427739b94dfee658827c497a7d53\" %}\n\n{% set CMAKE_INSTALL_PREFIX = \"-DCMAKE_INSTALL_PREFIX=$PREFIX\" %}  # [not win]\n{% set CMAKE_INSTALL_PREFIX = \"-DCMAKE_INSTALL_PREFIX=%PREFIX%/Library\" %}  # [win]\n\n{% set CMAKE_COMPILERS = \"\" %}  # [not win]\n{% set CMAKE_COMPILERS = \"-DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe\" %}  # [win]\n\n{% set EXTRA_FLAGS = \"\" %}  # [not win]\n# Remove -GL from CXXFLAGS as this takes too much time and memory\n{% set EXTRA_FLAGS = \"-DCMAKE_CXX_FLAGS=-MD -DCMAKE_C_FLAGS=-MD\" %}  # [win]\n\n{% set CHFL_CONFIG = \"-DCHFL_SYSTEM_NETCDF=OFF -DCHFL_SYSTEM_LZMA=ON -DCHFL_SYSTEM_BZIP2=ON\" %}\n{% set CMAKE_CONFIG = \"-DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON\" %}\n\n{% set TESTS_PATH = \"export DYLD_FALLBACK_LIBRARY_PATH=$(dirname $CLANG)/../lib\" %}  # [osx]\n{% set TESTS_PATH = \"\" %}  # [not osx]\n\npackage:\n  name: chemfiles-lib\n  version: {{ version }}{{ prerelease | list | reject(\"equalto\", \"-\") | join }}\n\nsource:\n  - fn: chemfiles-{{ version }}{{ prerelease }}.tar.gz\n    url: https://github.com/chemfiles/chemfiles/archive/{{ version }}{{ prerelease }}.tar.gz\n    sha256: {{ sha256 }}\n  - url: https://github.com/chemfiles/tests-data/archive/{{ data_git }}.tar.gz\n    sha256: {{ data_sha256 }}\n    folder: tests/data\n\nbuild:\n  skip: true  # [win and vc<14]\n  number: 2\n  script: |\n    cmake -G Ninja {{ CMAKE_COMPILERS }} {{ EXTRA_FLAGS }} {{ CMAKE_CONFIG }} {{ CHFL_CONFIG }} {{ CMAKE_INSTALL_PREFIX }} .\n    cmake  .\n    cmake --build . --config Release --target install\n\nrequirements:\n  build:\n    - cmake\n    - ninja\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - bzip2\n    - xz\n  run:\n    - libcxx >=8  # [osx]\n    - bzip2\n    - xz\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libchemfiles$SHLIB_EXT  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\chemfiles.dll exit 1  # [win]\n\nabout:\n  home: https://chemfiles.org\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Modern library for chemistry file reading and writing\n  doc_url: https://chemfiles.org/chemfiles/{{ version }}/\n  dev_url: https://github.com/chemfiles/chemfiles\n\nextra:\n  recipe-maintainers:\n    - luthaf\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/chemfiles/chemfiles/archive/0.10.2.tar.gz",
 "version": "0.10.2"
}