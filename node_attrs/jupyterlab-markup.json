{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/735673236.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/922233813.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jupyterlab-markup",
 "hash_type": "sha256",
 "name": "jupyterlab-markup",
 "new_version": "2.0.0",
 "new_version_attempts": {
  "1.0.1": 1,
  "2.0.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jupyterlab-markup"
  ]
 },
 "pinning_version": "2022.04.28.12.57.13",
 "raw_meta_yaml": "{% set version = \"2.0.0\" %}\n\npackage:\n  name: jupyterlab-markup\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/j/jupyterlab-markup/jupyterlab_markup-{{ version }}.tar.gz\n  sha256: 58e0e19408881c9fc7e02672a29d0562b665a8f2ba434f90b89d23371a73047c\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    # despite `PIP_NO_BUILD_ISOLATION=1`, unlink the `pyproject.toml`...\n    - {{ PYTHON }} -c \"__import__('pathlib').Path('pyproject.toml').unlink()\"\n    # ... so `--skip-npm` is honored, and we don't need `nodejs` and...\n    - {{ PYTHON }} -m pip install . --install-option=\"--skip-npm\" . -vv\n\nrequirements:\n  host:\n    - jupyter-packaging >=0.10.6,<2\n    - pip\n    - python >=3.7\n  run:\n    - jupyterlab >=3.0,<4.0.0a0\n    - python >=3.7\n\ntest:\n  imports:\n    - jupyterlab_markup\n  commands:\n    - pip check\n    - jupyter labextension list\n    - jupyter labextension list >labextensions 2>&1\n    # use this gnarly `python` instead of `grep` because windows... the version\n    # dots will be kinda loose-goosey... but it's still valid. stars for invisible ANSI codes\n    - python -c \"assert __import__('re').findall('jupyterlab-markup.*v{{ version }}.*enabled.*ok.*jupyterlab_markup', open('labextensions').read().lower())\"\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/agoose77/jupyterlab-markup\n  summary: Extensible markdown rendering support in JupyterLab\n  license: BSD-3-Clause\n  license_file:\n    - LICENSE\n    - jupyterlab_markup/labextension/static/third-party-licenses.json\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - agoose77\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/j/jupyterlab-markup/jupyterlab_markup-2.0.0.tar.gz",
 "version": "2.0.0"
}