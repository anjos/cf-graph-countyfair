{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/331343775.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/361070810.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413980469.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/415468482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428193348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/558457559.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652282101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/659138364.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/814370203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-multinet",
 "hash_type": "sha256",
 "name": "r-multinet",
 "new_version": "4.0.1",
 "new_version_attempts": {
  "3.3": 1,
  "3.3.1": 1,
  "3.3.2": 1,
  "4.0": 1,
  "4.0.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-multinet"
  ]
 },
 "pinning_version": "2022.01.04.19.00.57",
 "raw_meta_yaml": "{% set version = \"4.0.1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-multinet\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/multinet_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/multinet/multinet_{{ version }}.tar.gz\n  sha256: 8f01522bdd425780c9200a0171f89e2740404ed1cb64bc499bb9b87d086f9048\n\nbuild:\n  skip: true  # [win]\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcolorbrewer\n    - r-rcpp >=1.0.1\n    - r-igraph >=1.0.1\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcolorbrewer\n    - r-rcpp >=1.0.1\n    - r-igraph >=1.0.1\n\ntest:\n  commands:\n    - $R -e \"library('multinet')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('multinet')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=multinet\n  license: GPL-2.0-or-later\n  summary: Functions for the creation/generation and analysis of multilayer social networks.\n  license_family: GPL\n  license_file: {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - agcopenhaver\n\n# Package: multinet\n# Type: Package\n# Title: Analysis and Mining of Multilayer Social Networks\n# Version: 3.0.3\n# Date: 2019-07-13\n# Author: Matteo Magnani, Davide Vega, Mikael Dubik (glouvain). The package uses functions from eclat (www.borgelt.net/eclat.html), for association rule mining, Eigen (eigen.tuxfamily.org) and spectra (https://spectralib.org), for matrix manipulation, Infomap (www.mapequation.org), for the Infomap community detection method, and Howard Hinnant's date and time library (https://github.com/HowardHinnant/date). The code from this libraries has been included in our source package.\n# Maintainer: Matteo Magnani <matteo.magnani@it.uu.se>\n# Description: Functions for the creation/generation and analysis of multilayer social networks.\n# License: GPL\n# Depends: igraph (>= 1.0.1), Rcpp (>= 1.0.1), methods, RColorBrewer\n# LinkingTo: Rcpp\n# RcppModules: multinet\n# SystemRequirements: A C++14 compiler\n# NeedsCompilation: yes\n# Repository: CRAN\n# Packaged: 2019-07-13 21:42:18 UTC; matteomagnami\n# Date/Publication: 2019-07-13 22:40:05 UTC\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/multinet/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/multinet/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/multinet/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/multinet_4.0.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/multinet/multinet_4.0.1.tar.gz"
 ],
 "version": "4.0.1"
}