{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/937401756.json"
   },
   "data": {
    "bot_rerun": 1652720294.396088,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/937409866.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/937763652.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/981667665.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1032706778.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1046286275.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1068006784.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "oras",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "doc_url": "https://oras.land/",
   "home": "https://github.com/oras-project/oras",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "library_licenses/"
   ],
   "summary": "ORAS project provides a way to push and pull OCI Artifacts to and from OCI Registries."
  },
  "build": {
   "number": "0",
   "script": [
    "mkdir -p $PREFIX/bin",
    "make build-linux",
    "mv bin/linux/amd64/oras $PREFIX/bin/oras",
    "which oras",
    "bash $RECIPE_DIR/collect_licenses.sh"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv"
   ]
  },
  "package": {
   "name": "oras",
   "version": "0.13.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "make",
    "go-licenses"
   ]
  },
  "source": {
   "sha256": "15a87644123cb99f2ab12301e93c1d752e8da4228e4932977452f3dcf54f3b5c",
   "url": "https://github.com/oras-project/oras/archive/v0.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "oras --help"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "doc_url": "https://oras.land/",
   "home": "https://github.com/oras-project/oras",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "library_licenses/",
    "LICENSE",
    "library_licenses/",
    "LICENSE",
    "library_licenses/",
    "LICENSE",
    "library_licenses/"
   ],
   "summary": "ORAS project provides a way to push and pull OCI Artifacts to and from OCI Registries."
  },
  "build": {
   "number": "0",
   "script": [
    "mkdir -p $PREFIX/bin",
    "make build-linux",
    "mv bin/linux/amd64/oras $PREFIX/bin/oras",
    "which oras",
    "bash $RECIPE_DIR/collect_licenses.sh",
    "mkdir -p $PREFIX/bin",
    "make build-mac",
    "mv bin/darwin/amd64/oras $PREFIX/bin/oras",
    "which oras",
    "bash $RECIPE_DIR/collect_licenses.sh",
    "mkdir -p $PREFIX/bin",
    "make build-mac",
    "mv bin/darwin/amd64/oras $PREFIX/bin/oras",
    "which oras",
    "bash $RECIPE_DIR/collect_licenses.sh",
    "setlocal enableextensions",
    "mkdir -p %PREFIX%\\Library\\bin",
    "make build-windows",
    "move bin\\windows\\amd64\\oras.exe %PREFIX%\\Library\\bin\\oras.exe",
    "bash %RECIPE_DIR%\\\\collect_licenses.sh"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "wolfv",
    "wolfv",
    "wolfv"
   ]
  },
  "package": {
   "name": "oras",
   "version": "0.13.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "make",
    "go-licenses",
    "go_compiler_stub",
    "make",
    "go-licenses",
    "go_compiler_stub",
    "make",
    "go-licenses",
    "go_compiler_stub",
    "m2-make",
    "go-licenses"
   ]
  },
  "source": {
   "sha256": "15a87644123cb99f2ab12301e93c1d752e8da4228e4932977452f3dcf54f3b5c",
   "url": "https://github.com/oras-project/oras/archive/v0.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "oras --help",
    "oras --help",
    "oras --help",
    "oras --help"
   ]
  }
 },
 "name": "oras",
 "new_version": "0.15.0",
 "new_version_attempts": {
  "0.13.0": 1,
  "0.14.0": 1,
  "0.14.1": 1,
  "0.15.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "doc_url": "https://oras.land/",
   "home": "https://github.com/oras-project/oras",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "library_licenses/"
   ],
   "summary": "ORAS project provides a way to push and pull OCI Artifacts to and from OCI Registries."
  },
  "build": {
   "number": "0",
   "script": [
    "mkdir -p $PREFIX/bin",
    "make build-mac",
    "mv bin/darwin/amd64/oras $PREFIX/bin/oras",
    "which oras",
    "bash $RECIPE_DIR/collect_licenses.sh"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv"
   ]
  },
  "package": {
   "name": "oras",
   "version": "0.13.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "make",
    "go-licenses"
   ]
  },
  "source": {
   "sha256": "15a87644123cb99f2ab12301e93c1d752e8da4228e4932977452f3dcf54f3b5c",
   "url": "https://github.com/oras-project/oras/archive/v0.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "oras --help"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "doc_url": "https://oras.land/",
   "home": "https://github.com/oras-project/oras",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "library_licenses/"
   ],
   "summary": "ORAS project provides a way to push and pull OCI Artifacts to and from OCI Registries."
  },
  "build": {
   "number": "0",
   "script": [
    "mkdir -p $PREFIX/bin",
    "make build-mac",
    "mv bin/darwin/amd64/oras $PREFIX/bin/oras",
    "which oras",
    "bash $RECIPE_DIR/collect_licenses.sh"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv"
   ]
  },
  "package": {
   "name": "oras",
   "version": "0.13.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "make",
    "go-licenses"
   ]
  },
  "source": {
   "sha256": "15a87644123cb99f2ab12301e93c1d752e8da4228e4932977452f3dcf54f3b5c",
   "url": "https://github.com/oras-project/oras/archive/v0.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "oras --help"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "oras"
  ]
 },
 "pinning_version": "2022.09.27.00.22.29",
 "raw_meta_yaml": "{% set name = \"oras\" %}\n{% set version = \"0.13.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/oras-project/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 15a87644123cb99f2ab12301e93c1d752e8da4228e4932977452f3dcf54f3b5c\n\nbuild:\n  number: 0\n  script:\n    - mkdir -p $PREFIX/bin                                 # [unix]\n    - make build-mac                                       # [osx and not aarch64]\n    - mv bin/darwin/amd64/oras $PREFIX/bin/oras            # [osx and not aarch64]\n    - make build-linux                                     # [linux and x86_64]\n    - mv bin/linux/amd64/oras $PREFIX/bin/oras             # [linux and x86_64]\n    # Make sure a binary has been installed for all unix platforms\n    - which oras  # [unix]\n    - setlocal enableextensions       # [win]\n    - mkdir -p %PREFIX%\\Library\\bin   # [win]\n    - make build-windows                                   # [win]\n    - move bin\\windows\\amd64\\oras.exe %PREFIX%\\Library\\bin\\oras.exe   # [win]\n    - bash $RECIPE_DIR/collect_licenses.sh  # [unix]\n    - bash %RECIPE_DIR%\\\\collect_licenses.sh  # [win]\n\n    # - make build-mac-arm64\n    # - mv bin/darwin/arm64/oras $PREFIX/bin/oras\n\nrequirements:\n  build:\n    - {{ compiler(\"go\") }}\n    - make  # [not win]\n    - m2-make  # [win]\n    - go-licenses\n\ntest:\n  commands:\n    - oras --help\n\nabout:\n  home: https://github.com/oras-project/oras\n  doc_url: https://oras.land/\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - library_licenses/\n\n  summary: ORAS project provides a way to push and pull OCI Artifacts to and from OCI Registries.\n\nextra:\n  recipe-maintainers:\n    - wolfv\n",
 "req": {
  "__set__": true,
  "elements": [
   "go-licenses",
   "go_compiler_stub",
   "m2-make",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub",
    "m2-make",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub",
    "m2-make",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/oras-project/oras/archive/v0.13.0.tar.gz",
 "version": "0.13.0",
 "win_64_meta_yaml": {
  "about": {
   "doc_url": "https://oras.land/",
   "home": "https://github.com/oras-project/oras",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "library_licenses/"
   ],
   "summary": "ORAS project provides a way to push and pull OCI Artifacts to and from OCI Registries."
  },
  "build": {
   "number": "0",
   "script": [
    "setlocal enableextensions",
    "mkdir -p %PREFIX%\\Library\\bin",
    "make build-windows",
    "move bin\\windows\\amd64\\oras.exe %PREFIX%\\Library\\bin\\oras.exe",
    "bash %RECIPE_DIR%\\\\collect_licenses.sh"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv"
   ]
  },
  "package": {
   "name": "oras",
   "version": "0.13.0"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "m2-make",
    "go-licenses"
   ]
  },
  "source": {
   "sha256": "15a87644123cb99f2ab12301e93c1d752e8da4228e4932977452f3dcf54f3b5c",
   "url": "https://github.com/oras-project/oras/archive/v0.13.0.tar.gz"
  },
  "test": {
   "commands": [
    "oras --help"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub",
    "m2-make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}