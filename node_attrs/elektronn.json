{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196873025.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228149142.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/362846631.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375744458.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505477596.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519103536.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 449, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 444, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse",
   "    response.begin()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into",
   "    return self.read(nbytes, buffer)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read",
   "    return self._sslobj.read(len, buffer)",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 440, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 785, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise",
   "    raise value",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 451, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 340, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 201, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 305, in get_repo",
   "    _sync_default_branches(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 327, in _sync_default_branches",
   "    default_branch = gh.get_repo(f\"conda-forge/{reponame}\").default_branch",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo",
   "    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck",
   "    *self.requestJson(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson",
   "    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode",
   "    status, responseHeaders, output = self.__requestRaw(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw",
   "    response = cnx.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse",
   "    r = verb(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 529, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 645, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 532, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "elektronn",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/ELEKTRONN/ELEKTRONN",
   "doc_url": "http://elektronn.org/documentation/",
   "home": "http://www.elektronn.org/",
   "license": "GPLv3",
   "license_file": "LICENSE.txt",
   "summary": "A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks"
  },
  "build": {
   "number": "1002",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "mdraw"
   ]
  },
  "package": {
   "name": "elektronn",
   "version": "1.0.14"
  },
  "requirements": {
   "build": [
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "cython"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scikit-learn <0.20",
    "scipy",
    "theano <0.10"
   ]
  },
  "source": {
   "fn": "elektronn-1.0.14.tar.gz",
   "sha256": "90b4cc88f89d3c8da443c6c7bfb2c85d6207982160d3b17dbccddc1b9ab9251b",
   "url": "https://pypi.org/packages/source/e/elektronn/elektronn-1.0.14.tar.gz"
  },
  "test": {
   "commands": [
    "elektronn-train --help"
   ],
   "imports": [
    "elektronn",
    "elektronn.net",
    "elektronn.net.convlayer3d",
    "elektronn.training",
    "elektronn.training.trainer",
    "elektronn.training.warping"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "theano"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/ELEKTRONN/ELEKTRONN",
   "doc_url": "http://elektronn.org/documentation/",
   "home": "http://www.elektronn.org/",
   "license": "GPLv3",
   "license_file": "LICENSE.txt",
   "summary": "A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks"
  },
  "build": {
   "number": "1002",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "mdraw"
   ]
  },
  "package": {
   "name": "elektronn",
   "version": "1.0.14"
  },
  "requirements": {
   "build": [
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "cython"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scikit-learn <0.20",
    "scipy",
    "theano <0.10"
   ]
  },
  "source": {
   "fn": "elektronn-1.0.14.tar.gz",
   "sha256": "90b4cc88f89d3c8da443c6c7bfb2c85d6207982160d3b17dbccddc1b9ab9251b",
   "url": "https://pypi.org/packages/source/e/elektronn/elektronn-1.0.14.tar.gz"
  },
  "test": {
   "commands": [
    "elektronn-train --help"
   ],
   "imports": [
    "elektronn",
    "elektronn.net",
    "elektronn.net.convlayer3d",
    "elektronn.training",
    "elektronn.training.trainer",
    "elektronn.training.warping"
   ]
  }
 },
 "name": "elektronn",
 "new_version": "1.0.14",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "elektronn"
  ]
 },
 "pinning_version": "2020.11.10.21.31.03",
 "pre_pr_migrator_attempts": {
  "python310": 535,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python310": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1782178263\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 449, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 444, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1377, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 320, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 281, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 440, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 785, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise\n    raise value\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 451, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 340, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 201, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 305, in get_repo\n    _sync_default_branches(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 327, in _sync_default_branches\n    default_branch = gh.get_repo(f\"conda-forge/{reponame}\").default_branch\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo\n    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck\n    *self.requestJson(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson\n    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode\n    status, responseHeaders, output = self.__requestRaw(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw\n    response = cnx.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse\n    r = verb(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 529, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 645, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 532, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)\n",
  "python39": "not solvable: master: ['No `.ci_support/*.yaml` files found! This can happen when a rerender results in no builds for a recipe (e.g., a recipe is python 2.7 only). This attempted migration is being reported as not solvable.']"
 },
 "raw_meta_yaml": "{% set name = \"elektronn\" %}\n{% set version = \"1.0.14\" %}\n{% set sha256 = \"90b4cc88f89d3c8da443c6c7bfb2c85d6207982160d3b17dbccddc1b9ab9251b\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/e/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1002\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  skip: True  # [not linux64 or not py27]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - setuptools\n    - cython\n\n  run:\n    - python\n    - h5py\n    - matplotlib-base\n    - numpy\n    - scikit-learn <0.20\n    - scipy\n    - theano <0.10\n\ntest:\n  imports:\n    - elektronn\n    - elektronn.net\n    - elektronn.net.convlayer3d\n    - elektronn.training\n    - elektronn.training.trainer\n    - elektronn.training.warping\n  commands:\n    - elektronn-train --help\n\nabout:\n  home: http://www.elektronn.org/\n  license: GPLv3\n  license_file: LICENSE.txt\n  summary: 'A highly configurable toolkit for training 3d/2d CNNs and general Neural Networks'\n  doc_url: http://elektronn.org/documentation/\n  dev_url: https://github.com/ELEKTRONN/ELEKTRONN\n\nextra:\n  recipe-maintainers:\n    - mdraw\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "h5py",
   "matplotlib-base",
   "numpy",
   "python",
   "scikit-learn",
   "scipy",
   "setuptools",
   "theano"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "theano"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scikit-learn <0.20",
    "scipy",
    "theano <0.10"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.org/packages/source/e/elektronn/elektronn-1.0.14.tar.gz",
 "version": "1.0.14"
}