{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/417016567.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/698360593.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "strip-hints",
 "hash_type": "sha256",
 "name": "strip-hints",
 "new_version": "0.1.10",
 "new_version_attempts": {
  "0.1.10": 1,
  "0.1.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "strip-hints"
  ]
 },
 "pinning_version": "2021.07.27.19.47.02",
 "raw_meta_yaml": "{% set name = \"strip-hints\" %}\n{% set version = \"0.1.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n\n  sha256: 828dcfe5104296229171ade81ceeefe81d780490d69ab779168704650016db3b\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - strip-hints = strip_hints.strip_hints_main:process_command_line\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - strip_hints\n\nabout:\n  home: https://github.com/simplejson/simplejson\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Function and command-line program to strip Python type hints.'\n\n  description: |\n    This package provides a command-line command and a corresponding importable function that strips type hints\n    from Python code files. The stripping process leaves runnable code, assuming the rest of the code is runnable\n     in the interpreter version. The program tries to make as few changes as possible to the processed code so that\n      line and column numbers in error messages for the processed code file also correspond to those for\n      the original code file. In most cases, with the default options, both the line and column numbers are preserved.\n  dev_url: https://github.com/abarker/strip-hints\n\nextra:\n  recipe-maintainers:\n    - tanguycdls\n    - radcheb\n",
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/strip-hints/strip-hints-0.1.8.tar.gz",
 "version": "0.1.8"
}