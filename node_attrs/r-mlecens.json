{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/896595523.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1_5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-mlecens",
 "hash_type": "sha256",
 "name": "r-mlecens",
 "new_version": "0.1_5",
 "new_version_attempts": {
  "0.1_5": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-mlecens"
  ]
 },
 "pinning_version": "2022.03.31.18.34.20",
 "raw_meta_yaml": "{% set version = \"0.1-5\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-mlecens\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/MLEcens_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/MLEcens/MLEcens_{{ version }}.tar.gz\n  sha256: 0605393308e4b915e0ca9da2e7fc72b91745ca987046889e26ba51468807b431\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - libblas\n    - liblapack\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - libblas\n    - liblapack\n\ntest:\n  commands:\n    - $R -e \"library('MLEcens')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('MLEcens')\\\"\"  # [win]\n\nabout:\n  home: http://stat.ethz.ch/~maathuis/\n  license: GPL-2.0-or-later\n  summary: This package contains functions to compute the nonparametric maximum likelihood estimator (MLE) for the bivariate distribution of (X,Y), when realizations of (X,Y) cannot be observed directly.  To be more precise, we consider the situation where we observe a set of rectangles that are known to contain the unobservable\n    realizations of (X,Y). We compute the MLE based on such a set of rectangles.  The methods can also be used for univariate censored data (see data set 'cosmesis'), and for censored data with competing risks (see data set 'menopause').  We also provide functions to visualize the observed data and the MLE.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MLEcens/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MLEcens/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MLEcens/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MLEcens/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MLEcens/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/MLEcens_0.1-5.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MLEcens/MLEcens_0.1-5.tar.gz"
 ],
 "version": "0.1_5"
}