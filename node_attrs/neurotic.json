{
 "PRed": [
  {
   "PR": {
    "id": "78269098-3f2e-4540-b035-38b69eac6caa",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/350738651.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/360197277.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/388625048.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413853119.json"
   },
   "data": {
    "bot_rerun": 1590432891.9336674,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496156084.json"
   },
   "data": {
    "bot_rerun": 1603480404.2254171,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509210752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509625324.json"
   },
   "data": {
    "bot_rerun": 1603714162.5206418,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513600560.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841533951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "neurotic",
 "hash_type": "sha256",
 "name": "neurotic",
 "new_version": "1.5.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "neurotic"
  ]
 },
 "pinning_version": "2022.02.07.06.12.16",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by openssl-1.0.2h-vc10_0\\nProblem: nothing provides numpy 1.10* needed by pandas-0.17.0-np110py27_0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"neurotic\" %}\n{% set version = \"1.5.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 846b02aac14e6528262f92425df1228c582c037e3274fff01de96b4daf8cef97\n\nbuild:\n  number: 0\n  entry_points:\n    - neurotic=neurotic.scripts:main\n  skip: True  # [py<36]\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - av\n    - ephyviewer >=1.3.0\n    - numpy\n    - packaging\n    - pandas\n    - pydrive2\n    - pyqt          # [not win]\n    - pyqt !=5.9.2  # [win]\n    - python\n    - python-neo >=0.7.2\n    - pyyaml\n    - quantities\n    - requests\n    - scipy\n    - setuptools\n    - toml\n    - tqdm\n\ntest:\n  imports:\n    - neurotic\n    - neurotic.datasets\n    - neurotic.gui\n    - neurotic.gui.icons\n    - neurotic.tests\n  commands:\n    - neurotic --help\n\nabout:\n  home: https://github.com/jpgill86/neurotic\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Curate, visualize, annotate, and share your behavioral ephys data using Python\n  description: |\n    neurotic is an app for Windows, macOS, and Linux that allows you to easily\n    review and annotate your electrophysiology data and simultaneously captured\n    video. It is an easy way to load your Neo-compatible data into ephyviewer\n    without doing any programming. Share a single metadata file with your\n    colleagues and they too will quickly be looking at the same datasets!\n  doc_url: https://neurotic.readthedocs.io/\n  dev_url: https://github.com/jpgill86/neurotic\n\nextra:\n  recipe-maintainers:\n    - jpgill86\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/neurotic/neurotic-1.5.0.tar.gz",
 "version": "1.5.0"
}