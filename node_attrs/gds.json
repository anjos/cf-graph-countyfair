{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/658498655.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "krb5119"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/658534818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/712088747.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/737986893.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/811709708.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "jsoncpp195"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/846514550.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000750186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "gds",
 "hash_type": "sha256",
 "name": "gds",
 "new_version": "2.19.8",
 "new_version_attempts": {
  "2.19.6": 1,
  "2.19.7": 1,
  "2.19.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gds-base",
   "gds-base-crtools",
   "gds-base-gdstrig",
   "gds-base-monitors",
   "gds-base-runtime",
   "gds-base-web",
   "gds-framexmit",
   "gds-services"
  ]
 },
 "pinning_version": "2022.07.19.11.33.02",
 "raw_meta_yaml": "{% set name = \"gds\" %}\n{% set version = \"2.19.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://software.igwn.org/lscsoft/source/{{ name }}-{{ version }}.tar.gz\n  sha256: 9a382dc09447f5745eeb9c5250f961ba7f2288a94d40773fbce4b99fb68a78d0\n  patches:\n    # fix ldflags\n    - ldflags.patch\n    # use tinfow instead of termcap\n    - termcap.patch\n    # hack the build to make it think we're using macports\n    # see https://git.ligo.org/gds/gds/-/issues/69\n    - macos-building_macports.patch  # [osx]\n    # replace shebang for perl script\n    - perl-shebang.patch\n    # don't attempt to install default-dmt-procmgt\n    - no-default-dmt-procmgt.patch\n\nbuild:\n  error_overdepending: true\n  error_overlinking: true\n  number: 1\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - gnuconfig  # [unix]\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n    - pkg-config\n  host:\n    - expat\n    - fftw\n    - jsoncpp\n    - krb5\n    - libcurl\n    - metaio\n    - ncurses\n    - readline\n    - zlib\n\noutputs:\n  - name: gds-base\n    script: install-base.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"gds-base\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - expat\n        - fftw\n        - jsoncpp\n        - libcurl\n        - metaio\n        - zlib\n      run:\n        - expat\n        - fftw\n        - jsoncpp\n        - libcurl\n        - metaio\n        - libzlib\n    test:\n      requires:\n        - pkg-config\n      commands:\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdslxr\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdslmsg\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdshtml\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsbase\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsparsl\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsdmtsigp\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsjsstack\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdssockutil\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdscntr\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsframefast\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsframeutil\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsdaqs\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gds\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsmath\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsxsil\n        - test -f ${PREFIX}/lib/libgdsbase${SHLIB_EXT}  # [unix]\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: Core libraries required by the rest of the GDS packages\n\n  - name: gds-framexmit\n    script: install-framexmit.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"gds-framexmit\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n      run:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n    test:\n      requires:\n        - pkg-config\n      commands:\n        # check for library\n        - test -f ${PREFIX}/lib/libframexmit${SHLIB_EXT}  # [unix]\n        # check for headers\n        - test -d ${PREFIX}/include/gds/framexmit  # [unix]\n        # check pkg-config\n        - pkg-config --print-errors --exact-version {{ version }} gds-framexmit\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS package low-latency libraries\n      description: Low-latency libraries implement the gds shared memory and interconnects\n\n  - name: gds-base-crtools\n    script: install-base-crtools.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"gds-base-crtools\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - fftw\n        - {{ pin_subpackage('gds-base', exact=True) }}\n      run:\n        - fftw\n        - {{ pin_subpackage('gds-base', exact=True) }}\n    test:\n      requires:\n        - pkg-config\n      commands:\n        # check libraries\n        - test -f ${PREFIX}/lib/libclient${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/lib/libgdsalgo${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/lib/libdmtaccess${SHLIB_EXT}  # [unix]\n        # check pkg-config\n        - pkg-config --print-errors --exact-version {{ version }} gdsalgo\n        - pkg-config --print-errors --exact-version {{ version }} gdsdmtaccess\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS package Frame I/O libraries\n\n  - name: gds-base-gdstrig\n    script: install-base-gdstrig.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"gds-base-gdstrig\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n      run:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n    test:\n      requires:\n        - pkg-config\n      commands:\n        - pkg-config --print-errors --exact-version {{ version }} gdstrig\n        - test -f ${PREFIX}/lib/libgdstrig${SHLIB_EXT}  # [unix]\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: Ligo GDS trigger library\n\n  - name: gds-base-monitors\n    script: install-base-monitors.sh\n    build:\n      ignore_run_exports:\n        # the build needs the c++ compiler, but doesn't\n        # link against it\n        - libcxx  # [osx]\n        - libstdcxx-ng  # [linux]\n      run_exports:\n        - {{ pin_subpackage(\"gds-base-monitors\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}\n      run:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}\n    test:\n      requires:\n        - pkg-config\n      commands:\n        - test -f ${PREFIX}/lib/libmonitor${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/lib/libtclient${SHLIB_EXT}  # [unix]\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdsmonitor  # [unix]\n        - pkg-config --print-errors --exact-version \"{{ version }}\" gdstclient  # [unix]\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS Libraries used by DMT Monitor programs\n\n  - name: gds-base-runtime\n    script: install-base-runtime.sh\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n    test:\n      commands:\n        - test -f ${PREFIX}/share/gds/procmgt/LHO_MonitorDQ_Start  # [unix]\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: DMT run-time software\n\n  - name: gds-base-web\n    script: install-base-web.sh\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n        - {{ pin_subpackage('gds-base-crtools', exact=True) }}\n      run:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n        - {{ pin_subpackage('gds-base-crtools', exact=True) }}\n    test:\n      commands:\n        - webview -h\n        - webxmledit -h\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: DMT web services\n\n  - name: gds-services\n    script: install-services.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"gds-services\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n        - {{ pin_subpackage('gds-base-crtools', exact=True) }}\n        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}\n        - {{ pin_subpackage('gds-base-monitors', exact=True) }}\n        - metaio\n      run:\n        - {{ pin_subpackage('gds-base', exact=True) }}\n        - {{ pin_subpackage('gds-base-crtools', exact=True) }}\n        - {{ pin_subpackage('gds-base-gdstrig', exact=True) }}\n        - {{ pin_subpackage('gds-base-monitors', exact=True) }}\n        - perl\n    test:\n      commands:\n        - AlarmCtrl help\n        - NameCtrl --help\n        - dmt_nameserver --help\n    about:\n      home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS runtime services\n\nabout:\n  home: https://computing.docs.ligo.org/daswgweb/projects/dmt.html\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: LIGO Global Diagnostics System\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - emaros\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://software.igwn.org/lscsoft/source/gds-2.19.8.tar.gz",
 "version": "2.19.8"
}