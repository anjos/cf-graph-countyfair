{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/682795623.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/689e8524-490f-4f23-8d94-06d2234bfb18.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/695535102.json"
   },
   "data": {
    "bot_rerun": 1627646271.4244492,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774900957.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/832290641.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908392372.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "optima",
 "hash_type": "sha256",
 "name": "optima",
 "new_version": "0.2.6",
 "new_version_attempts": {
  "0.2.1": 1,
  "0.2.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "optima"
  ]
 },
 "pinning_version": "2022.04.12.21.56.28",
 "raw_meta_yaml": "{% set version = \"0.2.6\" %}\n\npackage:\n  name: optima\n  version: {{ version }}\n\nsource:\n  url: https://github.com/reaktoro/optima/archive/v{{ version }}.tar.gz\n  sha256: dfbc79b2bc0c7e72e74b676fd40922002075b0136f036754b2f963698403c828\n\n  #  Use the config below to use a branch to test conda-forge builds without creating GitHub releases.\n  #git_url: https://github.com/reaktoro/optima.git\n  #git_rev: master\n  \nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - ccache   # [unix]\n    - clcache  # [win]\n  host:\n    - catch2\n    - eigen4rkt\n    - python\n    - numpy\n    - eigen4rkt\n    - pip\n    - pybind11\n    - pybind11-abi\n    - pybind11-stubgen\n    - setuptools\n    - pytest\n    - pytest-xdist\n  run:\n    - python\n    - numpy\n    - eigen4rkt\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  files:\n    - test/\n  imports:\n    - optima\n\nabout:\n  home: https://github.com/reaktoro/optima\n  license: LGPL-2.1-only\n  license_family: LGPL\n  license_file: LICENSE.md\n  summary: A C++/Python library for linear and non-linear constrained optimization calculations\n  \n  description: |\n    Optima is a general-purpose C++/Python library for solving linear and\n    non-linear constrained optimization problems.\n    \n  doc_url: https://github.com/reaktoro/optima\n  dev_url: https://github.com/reaktoro/optima\n\nextra:\n  recipe-maintainers:\n    - allanleal\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/reaktoro/optima/archive/v0.2.6.tar.gz",
 "version": "0.2.6"
}