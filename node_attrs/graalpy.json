{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1196817525.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "graalpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://graalvm.org/python",
   "license": "UPL-1.0",
   "license_file": "LICENSE_GRAALPY.txt",
   "summary": "GraalPy is a high-performance Python implementation on GraalVM. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp in commands.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timfel",
    "msimacek",
    "isuruf"
   ]
  },
  "outputs": [
   {
    "build": {
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "graalpy >=22.3.0"
      ]
     },
     "skip_compile_pyc": [
      "*.py"
     ],
     "string": "0_graalvm_native",
     "track_features": [
      "openjdk"
     ]
    },
    "name": "graalpy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "pypy3.9 >=7.3.9",
      "make",
      "patch",
      "zlib",
      "git",
      "curl",
      "cmake",
      "patchelf"
     ],
     "host": [
      "zlib"
     ],
     "run": [
      "libzlib",
      "patch",
      "curl",
      "python_abi 3.8.* *_graalpy223_38_native"
     ],
     "run_constrained": [
      "python 3.8.5 0_native223_graalpy"
     ]
    },
    "script": "build_graalpy.sh",
    "test": {
     "commands": [
      "python3 --help",
      "python3 -c \"import platform; print(platform._sys_version())\"",
      "graalpy -m venv --help",
      "graalpy -m venv testvenv",
      "testvenv/bin/graalpy -c \"import _struct; print(_struct.pack('I', 15663050))\""
     ]
    },
    "version": "22.3.0"
   },
   {
    "build": {
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "graalpy",
       "python_abi 3.8.* *_graalpy223_38_native"
      ]
     },
     "string": "0_native223_graalpy",
     "track_features": [
      "graalpy"
     ]
    },
    "name": "python",
    "requirements": {
     "host": [
      "graalpy"
     ],
     "run": [
      "graalpy",
      "python_abi 3.8.* *_graalpy223_38_native"
     ]
    },
    "test": {
     "commands": [
      "python --version",
      "pip -h",
      "test $(python -c \"import sys; print('.'.join(str(i) for i in sys.version_info[:3]))\") == \"3.8.5\"",
      "test $(python -c \"import sys; print(sys.implementation.name)\") == \"graalpy\""
     ],
     "imports": [
      "setuptools"
     ],
     "requires": [
      "setuptools",
      "pip"
     ]
    },
    "version": "3.8.5"
   },
   {
    "build": {
     "number": "0"
    },
    "name": "graalpy-graalvm",
    "requirements": {
     "host": [
      "graalpy"
     ],
     "run": [
      "graalpy"
     ]
    },
    "test": {
     "commands": [
      "java --version"
     ]
    },
    "version": "22.3.0"
   },
   {
    "build": {
     "number": "0",
     "run_exports": {
      "weak": [
       "graalpy-graalvm >=22.3"
      ]
     },
     "string": "0_graalvm223b08",
     "track_features": [
      "graalpy-graalvm"
     ]
    },
    "name": "openjdk",
    "requirements": {
     "host": [
      "graalpy-graalvm"
     ],
     "run": [
      "graalpy-graalvm"
     ]
    },
    "test": {
     "commands": [
      "java --version",
      "javac --version"
     ]
    },
    "version": "17.0.5.8"
   }
  ],
  "package": {
   "name": "graalpy",
   "version": "22.3.0"
  },
  "source": [
   {
    "folder": "labsjdk",
    "sha256": "2e6d80438056b87921dd7725e829a2a91d9dd44a2decf52276739311b78de7bb",
    "url": "https://github.com/graalvm/labs-openjdk-17/releases/download/jvmci-22.3-b08/labsjdk-ce-17.0.5+8-jvmci-22.3-b08-linux-amd64.tar.gz"
   },
   {
    "folder": "mx",
    "patches": [
     "patches/mx-keep-rpath-origin-variable.patch",
     "patches/mx-pypy-support.patch"
    ],
    "sha256": "6719145418c9846fb75686190359c69018ac5e61af113aba35e8542fdf09e09c",
    "url": "https://github.com/graalvm/mx/archive/refs/tags/6.9.7.zip"
   },
   {
    "folder": "graal",
    "patches": [
     "patches/sulong-disable-tests.patch",
     "patches/sulong-relative-rpath.patch"
    ],
    "sha256": "9b714747fbff0b9f477a102a22e6558f697322d8fa89b1ac9956938d3afb3b87",
    "url": "https://github.com/oracle/graal/archive/refs/tags/vm-ce-22.3.0.zip"
   },
   {
    "folder": "graalpython",
    "patches": [
     "patches/graalpy-honour-sysroot.patch",
     "patches/graalpy-reduce-image-build-xmx.patch",
     "patches/graalpy-graalvm-version-tag.patch"
    ],
    "sha256": "72ad9a6e8d8283425768c2838d9f360a42eb1dc6096d0efe44464f4fd5c0982c",
    "url": "https://github.com/oracle/graalpython/archive/refs/tags/vm-ce-22.3.0.zip"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "curl",
    "cxx_compiler_stub",
    "git",
    "make",
    "patch",
    "patchelf",
    "pypy3.9",
    "zlib"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "graalpy",
    "graalpy-graalvm",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "graalpy",
    "graalpy-graalvm",
    "libzlib",
    "patch",
    "python_abi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "setuptools"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://graalvm.org/python",
   "license": "UPL-1.0",
   "license_file": "LICENSE_GRAALPY.txt",
   "summary": "GraalPy is a high-performance Python implementation on GraalVM. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp in commands.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timfel",
    "msimacek",
    "isuruf"
   ]
  },
  "outputs": [
   {
    "build": {
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "graalpy >=22.3.0"
      ]
     },
     "skip_compile_pyc": [
      "*.py"
     ],
     "string": "0_graalvm_native",
     "track_features": [
      "openjdk"
     ]
    },
    "name": "graalpy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "pypy3.9 >=7.3.9",
      "make",
      "patch",
      "zlib",
      "git",
      "curl",
      "cmake",
      "patchelf"
     ],
     "host": [
      "zlib"
     ],
     "run": [
      "libzlib",
      "patch",
      "curl",
      "python_abi 3.8.* *_graalpy223_38_native"
     ],
     "run_constrained": [
      "python 3.8.5 0_native223_graalpy"
     ]
    },
    "script": "build_graalpy.sh",
    "test": {
     "commands": [
      "python3 --help",
      "python3 -c \"import platform; print(platform._sys_version())\"",
      "graalpy -m venv --help",
      "graalpy -m venv testvenv",
      "testvenv/bin/graalpy -c \"import _struct; print(_struct.pack('I', 15663050))\""
     ]
    },
    "version": "22.3.0"
   },
   {
    "build": {
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "graalpy",
       "python_abi 3.8.* *_graalpy223_38_native"
      ]
     },
     "string": "0_native223_graalpy",
     "track_features": [
      "graalpy"
     ]
    },
    "name": "python",
    "requirements": {
     "host": [
      "graalpy"
     ],
     "run": [
      "graalpy",
      "python_abi 3.8.* *_graalpy223_38_native"
     ]
    },
    "test": {
     "commands": [
      "python --version",
      "pip -h",
      "test $(python -c \"import sys; print('.'.join(str(i) for i in sys.version_info[:3]))\") == \"3.8.5\"",
      "test $(python -c \"import sys; print(sys.implementation.name)\") == \"graalpy\""
     ],
     "imports": [
      "setuptools"
     ],
     "requires": [
      "setuptools",
      "pip"
     ]
    },
    "version": "3.8.5"
   },
   {
    "build": {
     "number": "0"
    },
    "name": "graalpy-graalvm",
    "requirements": {
     "host": [
      "graalpy"
     ],
     "run": [
      "graalpy"
     ]
    },
    "test": {
     "commands": [
      "java --version"
     ]
    },
    "version": "22.3.0"
   },
   {
    "build": {
     "number": "0",
     "run_exports": {
      "weak": [
       "graalpy-graalvm >=22.3"
      ]
     },
     "string": "0_graalvm223b08",
     "track_features": [
      "graalpy-graalvm"
     ]
    },
    "name": "openjdk",
    "requirements": {
     "host": [
      "graalpy-graalvm"
     ],
     "run": [
      "graalpy-graalvm"
     ]
    },
    "test": {
     "commands": [
      "java --version",
      "javac --version"
     ]
    },
    "version": "17.0.5.8"
   }
  ],
  "package": {
   "name": "graalpy",
   "version": "22.3.0"
  },
  "source": [
   {
    "folder": "labsjdk",
    "sha256": "2e6d80438056b87921dd7725e829a2a91d9dd44a2decf52276739311b78de7bb",
    "url": "https://github.com/graalvm/labs-openjdk-17/releases/download/jvmci-22.3-b08/labsjdk-ce-17.0.5+8-jvmci-22.3-b08-linux-amd64.tar.gz"
   },
   {
    "folder": "mx",
    "patches": [
     "patches/mx-keep-rpath-origin-variable.patch",
     "patches/mx-pypy-support.patch"
    ],
    "sha256": "6719145418c9846fb75686190359c69018ac5e61af113aba35e8542fdf09e09c",
    "url": "https://github.com/graalvm/mx/archive/refs/tags/6.9.7.zip"
   },
   {
    "folder": "graal",
    "patches": [
     "patches/sulong-disable-tests.patch",
     "patches/sulong-relative-rpath.patch"
    ],
    "sha256": "9b714747fbff0b9f477a102a22e6558f697322d8fa89b1ac9956938d3afb3b87",
    "url": "https://github.com/oracle/graal/archive/refs/tags/vm-ce-22.3.0.zip"
   },
   {
    "folder": "graalpython",
    "patches": [
     "patches/graalpy-honour-sysroot.patch",
     "patches/graalpy-reduce-image-build-xmx.patch",
     "patches/graalpy-graalvm-version-tag.patch"
    ],
    "sha256": "72ad9a6e8d8283425768c2838d9f360a42eb1dc6096d0efe44464f4fd5c0982c",
    "url": "https://github.com/oracle/graalpython/archive/refs/tags/vm-ce-22.3.0.zip"
   }
  ]
 },
 "name": "graalpy",
 "new_version": "17.0.6+9",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "graalpy",
   "graalpy-graalvm",
   "openjdk",
   "python"
  ]
 },
 "pinning_version": "2023.01.12.13.25.31",
 "pre_pr_migrator_attempts": {
  "aarch64andppc64leaddition": 22
 },
 "pre_pr_migrator_status": {
  "aarch64andppc64leaddition": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3924844289\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 340, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "# the graalpy version implies the below versions, so update these together\n{% set version = \"22.3.0\" %}\n{% set gp_python_version = \"3.8.5\" %}\n{% set mx_version = \"6.9.7\" %}\n{% set java_version = \"17.0.5+8\" %}\n{% set jvmci_version = \"22.3-b08\" %}\n\n{% if graalpy_distribution is not defined %}\n{% set graalpy_distribution = \"standalone\" %}\n{% endif %}\n\n# Keep increasing the build_num until we get a new graalpy version. Do not reset\n{% set build_num = \"0\" %}\n\n{% set python_maj_min = \".\".join(gp_python_version.split(\".\")[:2]) %}\n{% set graalpy_maj_min = \".\".join(version.split(\".\")[:2]) %}\n{% set graalpy_abi = \"native\" %}\n\npackage:\n  name: graalpy\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-linux-aarch64.tar.gz  # [build_platform == \"linux-aarch64\"]\n    sha256: 0e27931347df0863e863ef2030fc7fc5a712e0ddce721d2e23592ff5c3bfda76  # [build_platform == \"linux-aarch64\"]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-linux-amd64.tar.gz  # [build_platform == \"linux-64\"]\n    sha256: 2e6d80438056b87921dd7725e829a2a91d9dd44a2decf52276739311b78de7bb  # [build_platform == \"linux-64\"]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-darwin-amd64.tar.gz  # [osx and x86_64]\n    sha256: 99ee23bbcddd3348d2cf3d4ea5e0e32f1fbf24291b33f1dba561a3110e1aad83  # [osx and x86_64]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-darwin-aarch64.tar.gz  # [osx and arm64]\n    sha256: 32df7c956d7fde693b9ac97a90fe0145a73f596d879e360a1fe1953748c8ecde  # [osx and arm64]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-windows-amd64.tar.gz  # [win64]\n    sha256: 3ddfbca8f0803e5acbf5b03e5bff3db1ce8c7cbeb1a44dbd8cbffae7c69e7820  # [win64]\n    folder: labsjdk\n  - url: https://github.com/graalvm/mx/archive/refs/tags/{{ mx_version }}.zip\n    sha256: 6719145418c9846fb75686190359c69018ac5e61af113aba35e8542fdf09e09c\n    folder: mx\n    patches:\n      - patches/mx-keep-rpath-origin-variable.patch\n      - patches/mx-pypy-support.patch\n  - url: https://github.com/oracle/graal/archive/refs/tags/vm-ce-{{ version }}.zip\n    sha256: 9b714747fbff0b9f477a102a22e6558f697322d8fa89b1ac9956938d3afb3b87\n    folder: graal\n    patches:\n      - patches/sulong-disable-tests.patch\n      - patches/sulong-relative-rpath.patch\n  - url: https://github.com/oracle/graalpython/archive/refs/tags/vm-ce-{{ version }}.zip\n    sha256: 72ad9a6e8d8283425768c2838d9f360a42eb1dc6096d0efe44464f4fd5c0982c\n    folder: graalpython\n    patches:\n      - patches/graalpy-honour-sysroot.patch\n      - patches/graalpy-reduce-image-build-xmx.patch\n      - patches/graalpy-fix-lzma.patch  # [osx]\n      - patches/graalpy-graalvm-version-tag.patch\n\nbuild:\n  number: {{ build_num }}\n  skip: true  # [win or osx]\n\noutputs:\n  - name: graalpy\n    version: {{ version }}\n    script: build_graalpy.sh\n    build:\n      skip_compile_pyc:\n        - \"*.py\"\n      number: {{ build_num }}\n      string: {{ build_num }}_{{ graalpy_distribution }}_{{ graalpy_abi }}\n      track_features:  # [graalpy_distribution == \"graalvm\"]\n        - openjdk  # [graalpy_distribution == \"graalvm\"]\n      script_env:  # [graalpy_distribution == \"standalone\"]\n        - GRAALPY_STANDALONE_BUILD=true  # [graalpy_distribution == \"standalone\"]\n      run_exports:\n        weak:\n          - graalpy >={{ version }}\n        noarch:\n          - {{ pin_subpackage(\"python\", max_pin=\"x.x\", min_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - pypy3.9 >=7.3.9\n        - make\n        - patch\n        - zlib\n        - git\n        - curl\n        - cmake\n        - patchelf  # [linux]\n      host:\n        - zlib\n      run:\n        - libzlib\n        - patch\n        - curl\n        - __osx >={{ MACOS_DEPLOYMENT_TARGET|default(\"10.10\") }}  # [osx]\n        - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}\n      run_constrained:\n        - python {{ gp_python_version }} {{ build_num }}_{{ graalpy_abi }}{{ graalpy_maj_min.replace('.', '') }}_graalpy\n    test:\n      commands:\n        - python3 --help\n        - python3 -c \"import platform; print(platform._sys_version())\"\n        - graalpy -m venv --help\n        - graalpy -m venv testvenv\n        - testvenv/bin/graalpy -c \"import _struct; print(_struct.pack('I', 15663050))\"\n\n  - name: python\n    version: {{ gp_python_version }}\n    build:\n      number: {{ build_num }}\n      string: {{ build_num }}_{{ graalpy_abi }}{{ graalpy_maj_min.replace('.', '') }}_graalpy\n      track_features:\n        - graalpy\n      run_exports:\n        weak:\n          - {{ pin_subpackage(\"graalpy\", max_pin=\"x.x\", min_pin=\"x.x\") }}\n          - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}\n        noarch:\n          - {{ pin_subpackage(\"python\", max_pin=\"x.x\", min_pin=\"x.x\") }}\n    requirements:\n      host:\n        - {{ pin_subpackage(\"graalpy\", max_pin=\"x.x.x\", min_pin=\"x.x.x\") }}\n      run:\n        - {{ pin_subpackage(\"graalpy\", max_pin=\"x.x.x\", min_pin=\"x.x.x\") }}\n        - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}\n    test:\n      requires:\n        - setuptools\n        - pip\n      imports:\n        # check that noarch packages work\n        - setuptools\n      commands:\n        - python --version\n        - pip -h\n        - test $(python -c \"import sys; print('.'.join(str(i) for i in sys.version_info[:3]))\") == \"{{ gp_python_version }}\"  # [unix]\n        - test $(python -c \"import sys; print(sys.implementation.name)\") == \"graalpy\"  # [unix]\n\n  - name: graalpy-graalvm\n    version: {{ version }}\n    build:\n      number: {{ build_num }}\n      skip: true  # [graalpy_distribution == \"standalone\"]\n    requirements:\n      host:\n        - {{ pin_subpackage('graalpy', exact=True) }}\n      run:\n        - {{ pin_subpackage('graalpy', exact=True) }}\n    test:\n      commands:\n        - java --version\n\n  - name: openjdk\n    version: {{ java_version.replace(\"+\", \".\") }}\n    build:\n      number: {{ build_num }}\n      string: {{ build_num }}_graalvm{{ jvmci_version.replace(\".\", \"\").replace(\"-\", \"\") }}\n      track_features:\n        - graalpy-graalvm\n      skip: true  # [graalpy_distribution == \"standalone\"]\n      run_exports:\n        weak:\n          - graalpy-graalvm >={{ graalpy_maj_min }}\n    requirements:\n      host:\n        - {{ pin_subpackage(\"graalpy-graalvm\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"graalpy-graalvm\", exact=True) }}\n    test:\n      commands:\n        - java --version\n        - javac --version\n\nabout:\n    home: http://graalvm.org/python\n    license: UPL-1.0\n    license_file: LICENSE_GRAALPY.txt\n    summary: >\n        GraalPy is a high-performance Python implementation on GraalVM. See\n        https://conda-forge.org/blog/posts/2020-03-10-pypy for more information\n        about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp\n        in commands.\n\nextra:\n  recipe-maintainers:\n    - timfel\n    - msimacek\n    - isuruf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "curl",
   "cxx_compiler_stub",
   "git",
   "graalpy",
   "graalpy-graalvm",
   "libzlib",
   "make",
   "patch",
   "patchelf",
   "pypy3.9",
   "python_abi",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "curl",
    "cxx_compiler_stub",
    "git",
    "make",
    "patch",
    "patchelf",
    "pypy3.9",
    "zlib"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "graalpy",
    "graalpy-graalvm",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "graalpy",
    "graalpy-graalvm",
    "libzlib",
    "patch",
    "python_abi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "setuptools"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "curl",
    "cxx_compiler_stub",
    "git",
    "make",
    "patch",
    "patchelf",
    "pypy3.9 >=7.3.9",
    "zlib"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "graalpy",
    "graalpy-graalvm",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "curl",
    "graalpy",
    "graalpy-graalvm",
    "libzlib",
    "patch",
    "python_abi 3.8.* *_graalpy223_38_native"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "setuptools"
   ]
  }
 },
 "url": "https://github.com/graalvm/labs-openjdk-17/releases/download/jvmci-22.3-b08/labsjdk-ce-17.0.5+8-jvmci-22.3-b08-linux-amd64.tar.gz",
 "version": "22.3.0"
}