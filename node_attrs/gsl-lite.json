{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/259626056.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.33.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263181206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.34.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/366958024.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.36.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/417851533.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.37.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/605884539.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.38.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/621607642.json"
   },
   "data": {
    "bot_rerun": 1629828679.9621394,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.38.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/718966909.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.38.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/746257973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.39.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774316589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.40.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gsl-lite",
 "hash_type": "sha256",
 "name": "gsl-lite",
 "new_version": "0.40.0",
 "new_version_attempts": {
  "0.37.0": 1,
  "0.38.0": 1,
  "0.38.1": 2,
  "0.39.0": 1,
  "0.40.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gsl-lite"
  ]
 },
 "pinning_version": "2021.11.05.06.07.08",
 "raw_meta_yaml": "{% set name = \"gsl-lite\" %}\n{% set version = \"0.40.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/martinmoene/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 65af4ec8a1050dac4f1ca4622881bb02a9c3978a9baec289fb56e25412d6cac7\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n\ntest:\n  requires:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n    - ninja\n  files:\n    - test\n\n  commands:\n    - echo on  # [win]\n    - cd test\n\n    - mkdir build_default\n    - cd build_default\n    - cmake .. -G\"NMake Makefiles\" -DCMAKE_BUILD_TYPE=Release  # [win]\n    - cmake .. -G\"$CMAKE_GENERATOR\" -DCMAKE_BUILD_TYPE=Release  # [unix]\n    - cmake --build . --config Release --verbose\n    - ./program  # [unix]\n    - program.exe  # [win]\n    - cd ..\n\n    - mkdir build_ninja\n    - cd build_ninja\n    - cmake .. -G\"Ninja\" -DCMAKE_BUILD_TYPE=Release\n    - cmake --build . --config Release --verbose\n    - ./program  # [unix]\n    - program.exe  # [win]\n\nabout:\n  home: https://github.com/martinmoene/gsl-lite\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A single-file header-only version of ISO C++ Guidelines Support Library (GSL) for C++98, C++11 and later\n\nextra:\n  recipe-maintainers:\n    - tadeu\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": "https://github.com/martinmoene/gsl-lite/archive/v0.40.0.tar.gz",
 "version": "0.40.0"
}