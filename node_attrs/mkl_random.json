{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196996633.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/227969628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/233369473.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262373199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274134671.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274141450.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/314730806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336095942.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393085120.json"
   },
   "data": {
    "bot_rerun": 1597087668.2007542,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404754139.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/486918205.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519076032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "mkl_random",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.",
   "home": "http://github.com/IntelPython/mkl_random",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays."
  },
  "build": {
   "ignore_run_exports": [
    "blas",
    "blas",
    "blas"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk"
   ]
  },
  "package": {
   "name": "mkl_random",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy"
   ]
  },
  "source": {
   "sha256": "fa569a82797dbc6d5eb9a237c632692f85fef4857b01b98a75f12e15a1e8643e",
   "url": "https://github.com/IntelPython/mkl_random/archive/v1.2.0.post0.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random"
   ],
   "imports": [
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand"
   ],
   "requires": [
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mkl-devel",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mkl-service",
    "nose",
    "numpy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.",
   "home": "http://github.com/IntelPython/mkl_random",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays."
  },
  "build": {
   "ignore_run_exports": [
    "blas",
    "blas",
    "blas",
    "blas",
    "blas",
    "blas",
    "blas",
    "blas",
    "blas"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk"
   ]
  },
  "package": {
   "name": "mkl_random",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy"
   ]
  },
  "source": {
   "sha256": "fa569a82797dbc6d5eb9a237c632692f85fef4857b01b98a75f12e15a1e8643e",
   "url": "https://github.com/IntelPython/mkl_random/archive/v1.2.0.post0.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random"
   ],
   "imports": [
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand"
   ],
   "requires": [
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14"
   ]
  }
 },
 "name": "mkl_random",
 "new_version": "1.2.0.post0",
 "new_version_attempts": {
  "1.1.1": 1,
  "1.2.0": 1,
  "1.2.0.post0": 651
 },
 "new_version_errors": {
  "1.2.0.post0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.2.0.post0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/IntelPython/mkl_random/archive/v{{ version }}.post0.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.",
   "home": "http://github.com/IntelPython/mkl_random",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays."
  },
  "build": {
   "ignore_run_exports": [
    "blas",
    "blas",
    "blas"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk"
   ]
  },
  "package": {
   "name": "mkl_random",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*"
   ],
   "run": [
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy"
   ]
  },
  "source": {
   "sha256": "fa569a82797dbc6d5eb9a237c632692f85fef4857b01b98a75f12e15a1e8643e",
   "url": "https://github.com/IntelPython/mkl_random/archive/v1.2.0.post0.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random"
   ],
   "imports": [
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand"
   ],
   "requires": [
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mkl-devel",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mkl-service",
    "nose",
    "numpy"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mkl_random"
  ]
 },
 "pinning_version": "2020.11.10.21.31.03",
 "pre_pr_migrator_status": {
  "python39": "not solvable: master: ['osx_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package python-3.6.9-0_73_pypy requires python_abi 3.6 *_pypy36_pp73, but none of the providers can be installed\\n']",
  "version": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 135, in fetch_repo\n    _run_git_cmd(f\"git checkout --track upstream/{base_branch} {quiet}\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 121, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 512, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git checkout --track upstream/master --quiet' returned non-zero exit status 128.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1018, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 163, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 220, in get_repo\n    if fetch_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 137, in fetch_repo\n    _run_git_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 121, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 512, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git checkout -b master upstream/master --quiet' returned non-zero exit status 128.\n"
 },
 "raw_meta_yaml": "{% set version = \"1.2.0\" %}\n\npackage:\n  name: mkl_random\n  version: {{ version }}\n\nsource:\n  url: https://github.com/IntelPython/mkl_random/archive/v{{ version }}.post0.tar.gz\n  sha256: fa569a82797dbc6d5eb9a237c632692f85fef4857b01b98a75f12e15a1e8643e\n\nbuild:\n  number: 1\n  skip: true  # [win and py27]\n  ignore_run_exports:\n    - blas\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - setuptools\n    - mkl-devel\n    - cython\n    - numpy 1.14.*    # [osx]\n    - numpy    # [not osx]\n  run:\n    - python\n    - mkl\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  commands:\n    - nosetests -v mkl_random\n  requires:\n    - nose\n    - mkl-service\n    - numpy >=1.14\n  imports:\n    - mkl_random\n    - mkl_random.mklrand\n\nabout:\n  home: http://github.com/IntelPython/mkl_random\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  description: NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.\n  summary: Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays.\n\n\nextra:\n  recipe-maintainers:\n    - oleksandr-pavlyk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "mkl",
   "mkl-devel",
   "numpy",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "mkl-devel",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mkl-service",
    "nose",
    "numpy"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mkl-devel",
    "numpy",
    "numpy 1.14.*",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mkl-service",
    "nose",
    "numpy >=1.14"
   ]
  }
 },
 "url": "https://github.com/IntelPython/mkl_random/archive/v1.2.0.post0.tar.gz",
 "version": "1.2.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.",
   "home": "http://github.com/IntelPython/mkl_random",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays."
  },
  "build": {
   "ignore_run_exports": [
    "blas",
    "blas",
    "blas"
   ],
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk"
   ]
  },
  "package": {
   "name": "mkl_random",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy"
   ]
  },
  "source": {
   "sha256": "fa569a82797dbc6d5eb9a237c632692f85fef4857b01b98a75f12e15a1e8643e",
   "url": "https://github.com/IntelPython/mkl_random/archive/v1.2.0.post0.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random"
   ],
   "imports": [
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand"
   ],
   "requires": [
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14",
    "nose",
    "mkl-service",
    "numpy >=1.14"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "mkl-devel",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mkl-service",
    "nose",
    "numpy"
   ]
  }
 }
}