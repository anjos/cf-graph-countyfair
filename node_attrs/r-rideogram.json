{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/413894868.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/657235147.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-rideogram",
 "hash_type": "sha256",
 "name": "r-rideogram",
 "new_version": "0.2.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-rideogram"
  ]
 },
 "pinning_version": "2021.05.28.18.39.39",
 "raw_meta_yaml": "{% set version = '0.2.2' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rideogram\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RIdeogram_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RIdeogram/RIdeogram_{{ version }}.tar.gz\n  sha256: d106e3b347f64f4f82c2e2936b262e712994aff6045e04dd6f9f77aba3a57f73\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-ggplot2\n    - r-grimport2\n    - r-rsvg\n    - r-scales\n    - r-tidyr\n  run:\n    - r-base\n    - r-ggplot2\n    - r-grimport2\n    - r-rsvg\n    - r-scales\n    - r-tidyr\n\ntest:\n  commands:\n    - $R -e \"library('RIdeogram')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RIdeogram')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=RIdeogram\n  license: Artistic-2.0\n  summary: For whole-genome analysis, idiograms are virtually the most intuitive and effective\n    way to map and visualize the genome-wide information. RIdeogram was developed to\n    visualize and map whole-genome data on idiograms with no restriction of species.\n  license_family: OTHER\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/Artistic-2.0'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: RIdeogram\n# Type: Package\n# Title: Drawing SVG Graphics to Visualize and Map Genome-Wide Data on Idiograms\n# Version: 0.2.2\n# Authors@R: c(person(\"Zhaodong\", \"Hao\", email = \"haozd1992@163.com\", role = c(\"aut\", \"cre\")), person(\"Dekang\", \"Lv\", email = \"dekanglv@126.com\", role = \"aut\"), person(\"Ying\", \"Ge\", email = \"geying.tju@gmail.com\", role = \"aut\"), person(\"Jisen\", \"Shi\", email = \"Jshi@njfu.edu.cn\", role = \"aut\"), person(\"Weijers\", \"Dolf\", email = \"dolf.weijers@wur.nl\", role = \"aut\"), person(\"Guangchuang\", \"Yu\", email = \"guangchuangyu@gmail.com\", role = \"aut\"), person(\"Jinhui\", \"Chen\", email = \"chenjh@njfu.edu.cn\", role = \"aut\"))\n# Maintainer: Zhaodong Hao <haozd1992@163.com>\n# Description: For whole-genome analysis, idiograms are virtually the most intuitive and effective way to map and visualize the genome-wide information. RIdeogram was developed to visualize and map whole-genome data on idiograms with no restriction of species.\n# License: Artistic-2.0\n# Encoding: UTF-8\n# LazyData: true\n# Depends: R (>= 3.5.0)\n# Imports: ggplot2, grDevices, grImport2, rsvg, scales, tools, tidyr, utils\n# RoxygenNote: 6.1.1\n# Suggests: knitr, rmarkdown\n# VignetteBuilder: knitr\n# NeedsCompilation: no\n# Packaged: 2020-01-20 10:43:48 UTC; haozhaodong\n# Author: Zhaodong Hao [aut, cre], Dekang Lv [aut], Ying Ge [aut], Jisen Shi [aut], Weijers Dolf [aut], Guangchuang Yu [aut], Jinhui Chen [aut]\n# Repository: CRAN\n# Date/Publication: 2020-01-20 11:20:02 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/RIdeogram_0.2.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RIdeogram/RIdeogram_0.2.2.tar.gz",
  "https://cran.r-project.org/src/contrib/RIdeogram_0.2.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RIdeogram/RIdeogram_0.2.2.tar.gz"
 ],
 "version": "0.2.2"
}