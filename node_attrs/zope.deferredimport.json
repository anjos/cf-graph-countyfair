{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/799749159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "zope.deferredimport",
 "hash_type": "sha256",
 "name": "zope.deferredimport",
 "new_version": "4.4",
 "new_version_attempts": {
  "4.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "zope.deferredimport"
  ]
 },
 "pinning_version": "2021.12.10.07.17.27",
 "raw_meta_yaml": "{% set name = \"zope.deferredimport\" %}\n{% set version = \"4.3.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 57b2345e7b5eef47efcd4f634ff16c93e4265de3dcf325afc7315ade48d909e1\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - zope.proxy\n\ntest:\n  imports:\n    - {{ name }}\n\nabout:\n  home: https://github.com/zopefoundation/zope.deferredimport\n  license: ZPL 2.1\n  license_family: OTHER\n  license_file: LICENSE.txt\n  summary: 'defers import to when objects are actually used'\n  description: |\n    Often, especially for package modules, you want to import names for\n    convenience, but not actually perform the imports until necessary.\n    The zope.deferredimport package provided facilities for defining\n    names in modules that will be imported from somewhere else when\n    used. You can also cause deprecation warnings to be issued when a\n    variable is used.\n  doc_url: https://zopedeferredimport.readthedocs.io/\n  dev_url: https://github.com/zopefoundation/zope.deferredimport\n\nextra:\n  recipe-maintainers:\n    - ChrisBarker-NOAA\n    - daf\n",
 "smithy_version": "3.15.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/z/zope.deferredimport/zope.deferredimport-4.3.1.tar.gz",
 "version": "4.3.1"
}