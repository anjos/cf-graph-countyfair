{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/992292170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "searvey",
 "hash_type": "sha256",
 "name": "searvey",
 "new_version": "0.2.0",
 "new_version_attempts": {
  "0.2.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "searvey"
  ]
 },
 "pinning_version": "2022.07.09.14.16.43",
 "raw_meta_yaml": "{% set name = \"searvey\" %}\n{% set version = \"0.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/oceanmodeling/searvey/archive/v{{ version }}.tar.gz\n  sha256: fe91b5cc9f43cdf412cdc2f5d6f748ed271c06120bcb27d03803c7c0019e4a52\n\nbuild:\n  noarch: python\n  script_env:\n    - __version__={{ version }}\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - pip\n    - python >=3.9\n    - poetry-core >=1.0.0\n  run:\n    - python >=3.9\n    - pandas >=1.3\n    - erddapy >=1.1\n    - geopandas\n    - shapely\n    - xarray\n    - beautifulsoup4\n    - typepigeon >=1.0.5\n    - requests\n    - tqdm\n    - limits\n    - pydantic\n    - html5lib\n    - lxml\n\ntest:\n  imports:\n    - searvey\n    - searvey.coops\n    - searvey.ioc\n  requires:\n     - pytest\n\nabout:\n  home: https://github.com/oceanmodeling/searvey\n  license: GPL-3.0-or-later\n  license_file: LICENSE\n  summary: 'Sea state observational data retrieval'\n\n  description: |\n    Searvey aims to provide near real time observational data related to sea state.\n    Data analysis/clean up to facilitate comparison with numerical models.\n    On demand data retrieval from multiple sources.\n  doc_url: https://searvey.readthedocs.io/\n  dev_url: https://github.com/oceanmodeling/searvey\n\nextra:\n  recipe-maintainers:\n    - zacharyburnett\n    - pmav99\n    - brey\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/oceanmodeling/searvey/archive/v0.2.0.tar.gz",
 "version": "0.2.0"
}