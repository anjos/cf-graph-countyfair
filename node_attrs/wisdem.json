{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/339862145.json"
   },
   "data": {
    "bot_rerun": 1579272528.8694592,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "83bdea5d-a1ec-4043-8357-c55df8044605",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/363364977.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/363908054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/520188113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/055df108-5740-466d-83f2-ed4a0036c058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "wisdem",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. It is built\nin OpenMDAO.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://www.nrel.gov/wind/systems-engineering-models-tools.html",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "203ae9c886bb78999c1fd80bab728d2e07f74522dc4188aba34429527cdc7e26",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "jsonschema",
    "matplotlib-base",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pyside2",
    "pytest",
    "python",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "swig",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. It is built\nin OpenMDAO.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://www.nrel.gov/wind/systems-engineering-models-tools.html",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "203ae9c886bb78999c1fd80bab728d2e07f74522dc4188aba34429527cdc7e26",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "name": "wisdem",
 "new_version": "3.1.0",
 "new_version_attempts": {
  "3.0.0": 2,
  "3.0.1": 1
 },
 "new_version_errors": {
  "3.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.0.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.0.1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. It is built\nin OpenMDAO.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://www.nrel.gov/wind/systems-engineering-models-tools.html",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "203ae9c886bb78999c1fd80bab728d2e07f74522dc4188aba34429527cdc7e26",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "jsonschema",
    "matplotlib-base",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pyside2",
    "pytest",
    "python",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "swig",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "wisdem"
  ]
 },
 "pinning_version": "2020.11.12.19.01.39",
 "pre_pr_migrator_status": {
  "gcc930": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1000, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 218, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 101, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "python39": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1008, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 220, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 101, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set release = \"v3.1.0\" %}\n{% set version = \"3.1.0\" %}\n{% set name = \"wisdem\" %}\n\npackage:\n    name: {{ name|lower }}\n    version: {{ version }}\n\nsource:\n    url: https://github.com/WISDEM/WISDEM/archive/{{ release }}.tar.gz\n    # Download the tar-ball and do: openssl sha256 file.tar.gz to update\n    sha256: 203ae9c886bb78999c1fd80bab728d2e07f74522dc4188aba34429527cdc7e26\n    \nbuild:\n    number: 0\n    script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n    skip: true    # [py<37]\n\nrequirements:\n    build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - {{ compiler('m2w64_c') }}    # [win]\n        - {{ compiler('m2w64_cxx') }}    # [win]\n        - make\n    host:\n        - libblas\n        - libcblas\n        - liblapack\n        - libpython    # [win]\n        - python\n        - pip\n        - numpy\n        - setuptools\n        - cython\n    run:\n        - python\n        # Putting regular numpy is 'host' section and pin_compatible here per conda-forge guidance\n        - {{ pin_compatible('numpy') }}\n        - scipy\n        - pandas\n        - openpyxl\n        - xlrd\n        - cython\n        - swig\n        - jsonschema\n        - ruamel_yaml\n        - pyyaml\n        - openmdao\n        - pytest\n        - pyside2\n        - matplotlib-base\n#        - mpi4py    # [not win] # Fails on conda-forge linux, ask users to do separately\n#        - petsc4py    # [not win] # Fails on conda-forge linux, ask users to do separately\n\ntest:\n    # Fails unless we create conda package for simpy, marmot-agents\n    imports:\n        - wisdem\n\nabout:\n    home: https://www.nrel.gov/wind/systems-engineering-models-tools.html\n    license: Apache-2.0\n    license_file: LICENSE\n    summary: Wind-Plant Integrated System Design and Engineering Model\n    description: |\n        The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\n        set of models for assessing overall wind plant cost of energy (COE). The models\n        use wind turbine and plant cost and energy production as well as financial\n        models to estimate coe and other wind plant system attributes. It is built\n        in OpenMDAO.\n    doc_url: https://wisdem.readthedocs.io\n    dev_url: https://github.com/wisdem/wisdem\n\nextra:\n    recipe-maintainers:\n        - ptrbortolotti\n        - gbarter\n        - johnjasa\n        \n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "fortran_compiler_stub",
   "jsonschema",
   "libblas",
   "libcblas",
   "liblapack",
   "libpython",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "make",
   "matplotlib-base",
   "numpy",
   "openmdao",
   "openpyxl",
   "pandas",
   "pip",
   "pyside2",
   "pytest",
   "python",
   "pyyaml",
   "ruamel_yaml",
   "scipy",
   "setuptools",
   "swig",
   "xlrd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "fortran_compiler_stub",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "fortran_compiler_stub",
    "jsonschema",
    "matplotlib-base",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pyside2",
    "pytest",
    "python",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "swig",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "jsonschema",
    "matplotlib-base",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pyside2",
    "pytest",
    "python",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "swig",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/WISDEM/WISDEM/archive/v3.1.0.tar.gz",
 "version": "3.1.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. It is built\nin OpenMDAO.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://www.nrel.gov/wind/systems-engineering-models-tools.html",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa",
    "ptrbortolotti",
    "gbarter",
    "johnjasa"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "python",
    "pip",
    "numpy",
    "setuptools",
    "cython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "xlrd",
    "cython",
    "swig",
    "jsonschema",
    "ruamel_yaml",
    "pyyaml",
    "openmdao",
    "pytest",
    "pyside2",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "203ae9c886bb78999c1fd80bab728d2e07f74522dc4188aba34429527cdc7e26",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "libpython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "jsonschema",
    "matplotlib-base",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pyside2",
    "pytest",
    "python",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "swig",
    "xlrd"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}