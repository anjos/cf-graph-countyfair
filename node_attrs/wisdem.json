{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/339862145.json"
   },
   "data": {
    "bot_rerun": 1579272528.8694592,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "83bdea5d-a1ec-4043-8357-c55df8044605",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/363364977.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/363908054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/520188113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/055df108-5740-466d-83f2-ed4a0036c058.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552337093.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836640043.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1113900828.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1128514817.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1163069950.json"
   },
   "data": {
    "bot_rerun": 1673448565.1491413,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "wisdem",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. WISDEM is developed by\nthe National Renewable Energy Lab, on top of NASA's OpenMDAO library.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://wisdem.readthedocs.io",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.8.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ],
   "host": [
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools"
   ],
   "run": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "8ad987002966755ea52a90b37ebbaae6e04685cea9954303f5709c09e659b72c",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.8.7.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "python-build",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. WISDEM is developed by\nthe National Renewable Energy Lab, on top of NASA's OpenMDAO library.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://wisdem.readthedocs.io",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.8.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ],
   "host": [
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools"
   ],
   "run": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "8ad987002966755ea52a90b37ebbaae6e04685cea9954303f5709c09e659b72c",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.8.7.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "name": "wisdem",
 "new_version": "3.8.7",
 "new_version_attempts": {
  "3.0.0": 2,
  "3.0.1": 1,
  "3.3.0": 1,
  "3.4.1": 1,
  "3.7": 1,
  "3.8": 1,
  "3.8.2": 1,
  "3.8.6": 1
 },
 "new_version_errors": {
  "3.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.0.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.0.1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.3.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.3.0' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.8": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.8.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.2' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.8.6": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.6' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. WISDEM is developed by\nthe National Renewable Energy Lab, on top of NASA's OpenMDAO library.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://wisdem.readthedocs.io",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.8.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ],
   "host": [
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools"
   ],
   "run": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "8ad987002966755ea52a90b37ebbaae6e04685cea9954303f5709c09e659b72c",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.8.7.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "python-build",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "wisdem"
  ]
 },
 "pinning_version": "2022.12.13.09.45.07",
 "pre_pr_migrator_attempts": {
  "gcc930": 1,
  "pypy38": 7,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "gcc930": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1000, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 218, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 101, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "pypy38": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3915724589\">bot CI job</a>): main: ['linux_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package pyoptsparse-2.6.3-py310h45f5131_1 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'linux_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package pyoptsparse-2.6.3-py310h45f5131_1 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'osx_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package pyoptsparse-2.6.3-py310hddf127e_1 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'osx_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package pyoptsparse-2.6.3-py310hddf127e_1 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'win_64_numpy1.20python3.8.____73_pypy: Encountered problems while solving:\\n  - package pyoptsparse-2.9.0-py310h5ebcfa4_0 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n', 'win_64_numpy1.20python3.9.____73_pypy: Encountered problems while solving:\\n  - package pyoptsparse-2.9.0-py310h5ebcfa4_0 requires python_abi 3.10.* *_cp310, but none of the providers can be installed\\n']",
  "python39": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1008, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 220, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 101, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set release = \"v3.8.7\" %}\n{% set version = \"3.8.7\" %}\n{% set name = \"wisdem\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/WISDEM/WISDEM/archive/{{ release }}.tar.gz\n    # Download the tar-ball and do: openssl sha256 file.tar.gz to update\n  sha256: 8ad987002966755ea52a90b37ebbaae6e04685cea9954303f5709c09e659b72c\n\nbuild:\n  number: 0\n  skip: true  # [py<38]\n  #script: {{ PYTHON }} -m pip install . --no-deps -vv\n  #script: {{ PYTHON }} setup.py install --single-version-externally-managed --record=record.txt\n    \nrequirements:\n  build:\n    - {{ compiler('c') }}         # [not win]\n    - {{ compiler('fortran') }}\n    - {{ compiler('m2w64_c') }}   # [win]\n    - make\n    - meson\n    - ninja\n    - numpy\n    - pkg-config\n    - python\n    - python-build\n    - wheel\n  host:\n    - cython\n#    - libblas\n#    - liblapack\n    - libpython        # [win]\n    - python\n    - python-build\n    - pip\n    - numpy\n    - setuptools\n  run:\n#    - cython\n    - jsonschema\n    - matplotlib-base\n    - nlopt\n    - {{ pin_compatible('numpy') }}\n    - openmdao >=3.18\n    - openpyxl\n    - pandas\n    - pydoe2\n    - pyoptsparse\n    - pytest\n    - python\n    - python-benedict\n    - pyyaml\n    - ruamel_yaml\n    - scipy\n    - simpy\n    - sortedcontainers\n    - statsmodels\n#    - swig\n\n# DO NOT ADD MPI- it breaks the conda build.  Users have to add it afterwards\n# Putting numpy in 'host' section and pin_compatible in run per conda-forge guidance\n    \ntest:\n  imports:\n    - wisdem\n#  requires:\n#      - pip\n#  commands:\n#      - pip install marmot-agents\n#      - python -c \"import unittest; import wisdem.test.test_gluecode.test_gluecode as myt; unittest.TextTestRunner().run(myt.suite() )\"\n\nabout:\n  home: https://wisdem.readthedocs.io\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: Wind-Plant Integrated System Design and Engineering Model\n  description: |\n    The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\n    set of models for assessing overall wind plant cost of energy (COE). The models\n    use wind turbine and plant cost and energy production as well as financial\n    models to estimate coe and other wind plant system attributes. WISDEM is developed by\n    the National Renewable Energy Lab, on top of NASA's OpenMDAO library.\n  doc_url: https://wisdem.readthedocs.io\n  dev_url: https://github.com/wisdem/wisdem\n\nextra:\n  recipe-maintainers:\n    - ptrbortolotti\n    - gbarter\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "fortran_compiler_stub",
   "jsonschema",
   "libpython",
   "m2w64_c_compiler_stub",
   "make",
   "matplotlib-base",
   "meson",
   "ninja",
   "nlopt",
   "numpy",
   "openmdao",
   "openpyxl",
   "pandas",
   "pip",
   "pkg-config",
   "pydoe2",
   "pyoptsparse",
   "pytest",
   "python",
   "python-benedict",
   "python-build",
   "pyyaml",
   "ruamel_yaml",
   "scipy",
   "setuptools",
   "simpy",
   "sortedcontainers",
   "statsmodels",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "fortran_compiler_stub",
    "libpython",
    "numpy",
    "pip",
    "python",
    "python-build",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libpython",
    "numpy",
    "pip",
    "python",
    "python-build",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/WISDEM/WISDEM/archive/v3.8.7.tar.gz",
 "version": "3.8.7",
 "win_64_meta_yaml": {
  "about": {
   "description": "The Wind-Plant Integrated System Design and Engineering Model (WISDEM\u00AE) is a\nset of models for assessing overall wind plant cost of energy (COE). The models\nuse wind turbine and plant cost and energy production as well as financial\nmodels to estimate coe and other wind plant system attributes. WISDEM is developed by\nthe National Renewable Energy Lab, on top of NASA's OpenMDAO library.\n",
   "dev_url": "https://github.com/wisdem/wisdem",
   "doc_url": "https://wisdem.readthedocs.io",
   "home": "https://wisdem.readthedocs.io",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Wind-Plant Integrated System Design and Engineering Model"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter",
    "ptrbortolotti",
    "gbarter"
   ]
  },
  "package": {
   "name": "wisdem",
   "version": "3.8.7"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel",
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ],
   "host": [
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools",
    "cython",
    "libpython",
    "python",
    "python-build",
    "pip",
    "numpy",
    "setuptools"
   ],
   "run": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels",
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao >=3.18",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "8ad987002966755ea52a90b37ebbaae6e04685cea9954303f5709c09e659b72c",
   "url": "https://github.com/WISDEM/WISDEM/archive/v3.8.7.tar.gz"
  },
  "test": {
   "imports": [
    "wisdem",
    "wisdem",
    "wisdem",
    "wisdem"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "make",
    "meson",
    "ninja",
    "numpy",
    "pkg-config",
    "python",
    "python-build",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libpython",
    "numpy",
    "pip",
    "python",
    "python-build",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "jsonschema",
    "matplotlib-base",
    "nlopt",
    "numpy",
    "openmdao",
    "openpyxl",
    "pandas",
    "pydoe2",
    "pyoptsparse",
    "pytest",
    "python",
    "python-benedict",
    "pyyaml",
    "ruamel_yaml",
    "scipy",
    "simpy",
    "sortedcontainers",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}