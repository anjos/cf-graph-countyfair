{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/698234486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/700757492.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/746590792.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/754183057.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/760513016.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/801516940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "meshzoo",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "When generating meshes for FEM/FVM computations, sometimes your geometry is so simple that you don't need a complex mesh generator (like pygmsh, MeshPy, mshr, pygalmesh, dmsh), but something simple and fast that makes use of the structure of the domain. Enter meshzoo.\n",
   "dev_url": "https://github.com/nschloe/meshzoo",
   "doc_url": "https://github.com/nschloe/meshzoo",
   "home": "https://github.com/nschloe/meshzoo",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Collection of explicitly constructed meshes"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "lasergyro"
   ]
  },
  "package": {
   "name": "meshzoo",
   "version": "0.9.0"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip"
   ],
   "run": [
    "python >=3.6",
    "importlib_metadata",
    "numpy"
   ]
  },
  "source": {
   "sha256": "53798e97645cd864eb1ff25ca7f28fb22a3cb763130260a6e4ddb89cdcc51b6a",
   "url": "https://github.com/nschloe/meshzoo/archive/v0.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from pathlib import Path; Path('matplotlibrc').write_text('backend: Template')\"",
    "pip check",
    "pytest --codeblocks README.md",
    "pytest -s tests"
   ],
   "imports": [
    "meshzoo"
   ],
   "requires": [
    "pip",
    "pytest",
    "pytest-codeblocks",
    "pytest-cov",
    "matplotlib-base"
   ],
   "source_files": [
    "README.md",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "pip",
    "pytest",
    "pytest-codeblocks",
    "pytest-cov"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "When generating meshes for FEM/FVM computations, sometimes your geometry is so simple that you don't need a complex mesh generator (like pygmsh, MeshPy, mshr, pygalmesh, dmsh), but something simple and fast that makes use of the structure of the domain. Enter meshzoo.\n",
   "dev_url": "https://github.com/nschloe/meshzoo",
   "doc_url": "https://github.com/nschloe/meshzoo",
   "home": "https://github.com/nschloe/meshzoo",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Collection of explicitly constructed meshes"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "lasergyro"
   ]
  },
  "package": {
   "name": "meshzoo",
   "version": "0.9.0"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "pip"
   ],
   "run": [
    "python >=3.6",
    "importlib_metadata",
    "numpy"
   ]
  },
  "source": {
   "sha256": "53798e97645cd864eb1ff25ca7f28fb22a3cb763130260a6e4ddb89cdcc51b6a",
   "url": "https://github.com/nschloe/meshzoo/archive/v0.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from pathlib import Path; Path('matplotlibrc').write_text('backend: Template')\"",
    "pip check",
    "pytest --codeblocks README.md",
    "pytest -s tests"
   ],
   "imports": [
    "meshzoo"
   ],
   "requires": [
    "pip",
    "pytest",
    "pytest-codeblocks",
    "pytest-cov",
    "matplotlib-base"
   ],
   "source_files": [
    "README.md",
    "tests"
   ]
  }
 },
 "name": "meshzoo",
 "new_version": "0.9.1",
 "new_version_attempts": {
  "0.7.4": 1,
  "0.7.5": 1,
  "0.7.6": 1,
  "0.8.0": 1,
  "0.9.0": 1,
  "0.9.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "meshzoo"
  ]
 },
 "pinning_version": "2021.12.13.11.03.33",
 "raw_meta_yaml": "{% set author = \"nschloe\" %}\n{% set name = \"meshzoo\" %}\n{% set version = \"0.9.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ author }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 53798e97645cd864eb1ff25ca7f28fb22a3cb763130260a6e4ddb89cdcc51b6a\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - importlib_metadata\n    - numpy\n\ntest:\n  imports:\n    - meshzoo\n  requires:\n    - pip\n    - pytest\n    - pytest-codeblocks\n    - pytest-cov\n    - matplotlib-base\n  source_files:\n    - README.md\n    - tests\n  commands:\n    - \"python -c \\\"from pathlib import Path; Path('matplotlibrc').write_text('backend: Template')\\\"\"\n    - pip check\n    - pytest --codeblocks README.md\n    - pytest -s tests\n\nabout:\n  home: https://github.com/{{ author }}/{{ name }}\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: Collection of explicitly constructed meshes\n  description: |\n    When generating meshes for FEM/FVM computations, sometimes your geometry is so simple that you don't need a complex mesh generator (like pygmsh, MeshPy, mshr, pygalmesh, dmsh), but something simple and fast that makes use of the structure of the domain. Enter meshzoo.\n  doc_url: https://github.com/nschloe/meshzoo\n  dev_url: https://github.com/nschloe/meshzoo\n\nextra:\n  recipe-maintainers:\n    - lasergyro\n",
 "req": {
  "__set__": true,
  "elements": [
   "importlib_metadata",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "pip",
    "pytest",
    "pytest-codeblocks",
    "pytest-cov"
   ]
  }
 },
 "smithy_version": "3.15.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "pip",
    "pytest",
    "pytest-codeblocks",
    "pytest-cov"
   ]
  }
 },
 "url": "https://github.com/nschloe/meshzoo/archive/v0.9.0.tar.gz",
 "version": "0.9.0"
}