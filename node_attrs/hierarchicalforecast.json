{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1069553148.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "hierarchicalforecast",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "**HierarchicalForecast** offers a collection of reconciliation methods,\nincluding `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`.\n\n\n* Classic reconciliation methods:\n    - `BottomUp`: Simple addition to the upper levels.\n    - `TopDown`: Distributes the top levels forecasts trough the hierarchies.\n\n* Alternative reconciliation methods:\n    - `MiddleOut`: It anchors the base predictions in a middle level. The levels\n      above the base predictions use the bottom-up approach, while the levels below\n      use a top-down.\n    - `MinTrace`: Minimizes the total forecast variance of the space of coherent\n      forecasts, with the Minimum Trace reconciliation.\n    - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.\n\nPyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)\n",
   "dev_url": "https://github.com/Nixtla/hierarchicalforecast",
   "doc_url": "https://nixtla.github.io/hierarchicalforecast/",
   "home": "https://github.com/Nixtla/hierarchicalforecast/tree/main/",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Hierarchical Methods Time series forecasting"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "hierarchicalforecast",
   "version": "0.0.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "python >=3.7",
    "numba",
    "numpy",
    "packaging",
    "pandas",
    "pip",
    "scikit-learn",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "6ad9fc87b3cf5bdd44a294f4dfd0be852c613a09b47b0c9cdb153d005b141a55",
   "url": "https://pypi.io/packages/source/h/hierarchicalforecast/hierarchicalforecast-0.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "hierarchicalforecast"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "packaging",
    "pandas",
    "pip",
    "python",
    "scikit-learn",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "**HierarchicalForecast** offers a collection of reconciliation methods,\nincluding `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`.\n\n\n* Classic reconciliation methods:\n    - `BottomUp`: Simple addition to the upper levels.\n    - `TopDown`: Distributes the top levels forecasts trough the hierarchies.\n\n* Alternative reconciliation methods:\n    - `MiddleOut`: It anchors the base predictions in a middle level. The levels\n      above the base predictions use the bottom-up approach, while the levels below\n      use a top-down.\n    - `MinTrace`: Minimizes the total forecast variance of the space of coherent\n      forecasts, with the Minimum Trace reconciliation.\n    - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.\n\nPyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)\n",
   "dev_url": "https://github.com/Nixtla/hierarchicalforecast",
   "doc_url": "https://nixtla.github.io/hierarchicalforecast/",
   "home": "https://github.com/Nixtla/hierarchicalforecast/tree/main/",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Hierarchical Methods Time series forecasting"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "hierarchicalforecast",
   "version": "0.0.6"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "python >=3.7",
    "numba",
    "numpy",
    "packaging",
    "pandas",
    "pip",
    "scikit-learn",
    "statsmodels"
   ]
  },
  "source": {
   "sha256": "6ad9fc87b3cf5bdd44a294f4dfd0be852c613a09b47b0c9cdb153d005b141a55",
   "url": "https://pypi.io/packages/source/h/hierarchicalforecast/hierarchicalforecast-0.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "hierarchicalforecast"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "hierarchicalforecast",
 "new_version": "0.1.0",
 "new_version_attempts": {
  "0.1.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hierarchicalforecast"
  ]
 },
 "pinning_version": "2022.09.27.08.36.12",
 "raw_meta_yaml": "{% set name = \"hierarchicalforecast\" %}\n{% set version = \"0.0.6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/hierarchicalforecast-{{ version }}.tar.gz\n  sha256: 6ad9fc87b3cf5bdd44a294f4dfd0be852c613a09b47b0c9cdb153d005b141a55\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - python >=3.7\n    - numba\n    - numpy\n    - packaging\n    - pandas\n    - pip\n    - scikit-learn\n    - statsmodels\n\ntest:\n  imports:\n    - hierarchicalforecast\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/Nixtla/hierarchicalforecast/tree/main/\n  summary: Hierarchical Methods Time series forecasting\n  license: MIT\n  license_file: LICENSE\n  description: |\n    **HierarchicalForecast** offers a collection of reconciliation methods, \n    including `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`. \n\n    ## \uD83C\uDF8A Features \n\n    * Classic reconciliation methods:\n        - `BottomUp`: Simple addition to the upper levels.\n        - `TopDown`: Distributes the top levels forecasts trough the hierarchies.\n\n    * Alternative reconciliation methods:\n        - `MiddleOut`: It anchors the base predictions in a middle level. The levels \n          above the base predictions use the bottom-up approach, while the levels below \n          use a top-down.\n        - `MinTrace`: Minimizes the total forecast variance of the space of coherent \n          forecasts, with the Minimum Trace reconciliation.\n        - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.\n\n    PyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)\n\n  doc_url: https://nixtla.github.io/hierarchicalforecast/\n  dev_url: https://github.com/Nixtla/hierarchicalforecast\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "req": {
  "__set__": true,
  "elements": [
   "numba",
   "numpy",
   "packaging",
   "pandas",
   "pip",
   "python",
   "scikit-learn",
   "statsmodels"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "packaging",
    "pandas",
    "pip",
    "python",
    "scikit-learn",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "packaging",
    "pandas",
    "pip",
    "python >=3.7",
    "scikit-learn",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/h/hierarchicalforecast/hierarchicalforecast-0.0.6.tar.gz",
 "version": "0.0.6"
}