{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/974861470.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp800"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1023517675.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp900"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "river-cpp",
 "hash_type": "sha256",
 "name": "river-cpp",
 "new_version": "1.0.1",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "river-cpp"
  ]
 },
 "pinning_version": "2022.08.11.00.12.17",
 "raw_meta_yaml": "{% set name = \"river-cpp\" %}\n{% set version = \"1.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pbotros/river/archive/refs/tags/v1.0.1.tar.gz\n  sha256: bf56544197697eefaa331daa793c1c9e0f643012860c5fbcba055557e5fca84a\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage(\"river-cpp\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.\n    # Compilers are named 'c', 'cxx' and 'fortran'.\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [not win]\n    - ninja  # [win]\n    - pkg-config\n  host:\n    - boost-cpp\n    - arrow-cpp\n    - glog\n  run:\n    - gflags\n    - boost-cpp\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/river  # [unix]\n    - test -f ${PREFIX}/include/river/river.h  # [unix]\n    - test -f ${PREFIX}/lib/cmake/river/river-config.cmake  # [unix]\n    - test -f ${PREFIX}/lib/libriver.so  # [linux]\n    - test -f ${PREFIX}/lib/libriver.dylib  # [osx]\n    - if exist %LIBRARY_PREFIX%\\include\\river\\river.h (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\river-config.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\bin\\river.dll (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/pbotros/river\n  summary: 'High-throughput, structured, and persistent streaming'\n  description: |\n    A high-throughput, structured streaming framework built atop Redis Streams, with optional support for persistence-to-disk. C++ and Python support.\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - pbotros\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/pbotros/river/archive/refs/tags/v1.0.1.tar.gz",
 "version": "1.0.1"
}