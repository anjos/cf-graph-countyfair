{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/343010817.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/378511246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/413259673.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485572469.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502871296.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559214758.json"
   },
   "data": {
    "bot_rerun": 1636371628.374045,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775067699.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052282982.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052706313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1102442947.json"
   },
   "data": {
    "bot_rerun": 1667404034.5344317,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1105590741.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1108534304.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1169526051.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.12.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1169887293.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.12.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1193972108.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2023.01.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "opencamlib",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "OpenCAMLib (ocl) is a C++ library for creating toolpaths for CNC-machines such as mills and lathes.",
   "dev_url": "https://github.com/aewallin/opencamlib",
   "doc_url": "http://www.anderswallin.net/CAM/",
   "home": "http://www.anderswallin.net/CAM/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING",
   "summary": "OpenCAMLib (ocl)"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen"
   ]
  },
  "package": {
   "name": "opencamlib",
   "version": "2023.01.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp"
   ],
   "host": [
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost"
   ],
   "run": [
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python"
   ]
  },
  "source": {
   "sha256": "07fd9b61c39c4d600e441d67edbafc1015e9e3fabd88b561a647f98fedf31d41",
   "url": "https://github.com/aewallin/opencamlib/archive/2023.01.11.tar.gz"
  },
  "test": {
   "imports": [
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib"
   ],
   "source_files": [
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "python",
    "scikit-build-core"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "OpenCAMLib (ocl) is a C++ library for creating toolpaths for CNC-machines such as mills and lathes.",
   "dev_url": "https://github.com/aewallin/opencamlib",
   "doc_url": "http://www.anderswallin.net/CAM/",
   "home": "http://www.anderswallin.net/CAM/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING",
   "summary": "OpenCAMLib (ocl)"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen"
   ]
  },
  "package": {
   "name": "opencamlib",
   "version": "2023.01.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost"
   ],
   "run": [
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python"
   ]
  },
  "source": {
   "sha256": "07fd9b61c39c4d600e441d67edbafc1015e9e3fabd88b561a647f98fedf31d41",
   "url": "https://github.com/aewallin/opencamlib/archive/2023.01.11.tar.gz"
  },
  "test": {
   "imports": [
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib"
   ],
   "source_files": [
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**"
   ]
  }
 },
 "name": "opencamlib",
 "new_version": "2023.01.11",
 "new_version_attempts": {
  "2022.12.17": 1,
  "2022.12.18": 1,
  "2023.01.11": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "OpenCAMLib (ocl) is a C++ library for creating toolpaths for CNC-machines such as mills and lathes.",
   "dev_url": "https://github.com/aewallin/opencamlib",
   "doc_url": "http://www.anderswallin.net/CAM/",
   "home": "http://www.anderswallin.net/CAM/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING",
   "summary": "OpenCAMLib (ocl)"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen"
   ]
  },
  "package": {
   "name": "opencamlib",
   "version": "2023.01.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost"
   ],
   "run": [
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python"
   ]
  },
  "source": {
   "sha256": "07fd9b61c39c4d600e441d67edbafc1015e9e3fabd88b561a647f98fedf31d41",
   "url": "https://github.com/aewallin/opencamlib/archive/2023.01.11.tar.gz"
  },
  "test": {
   "imports": [
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib"
   ],
   "source_files": [
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "python",
    "scikit-build-core"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "OpenCAMLib (ocl) is a C++ library for creating toolpaths for CNC-machines such as mills and lathes.",
   "dev_url": "https://github.com/aewallin/opencamlib",
   "doc_url": "http://www.anderswallin.net/CAM/",
   "home": "http://www.anderswallin.net/CAM/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING",
   "summary": "OpenCAMLib (ocl)"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen"
   ]
  },
  "package": {
   "name": "opencamlib",
   "version": "2023.01.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost"
   ],
   "run": [
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python"
   ]
  },
  "source": {
   "sha256": "07fd9b61c39c4d600e441d67edbafc1015e9e3fabd88b561a647f98fedf31d41",
   "url": "https://github.com/aewallin/opencamlib/archive/2023.01.11.tar.gz"
  },
  "test": {
   "imports": [
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib"
   ],
   "source_files": [
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "python",
    "scikit-build-core"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "opencamlib"
  ]
 },
 "pinning_version": "2023.01.07.12.45.19",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package boost-1.72.0-py27h9de70de_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'Encountered problems while solving.\\nProblem: package boost-1.72.0-py27hbf1eeb5_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'Encountered problems while solving.\\nProblem: package boost-1.72.0-py36h96a391d_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"opencamlib\" %}\n{% set version = \"2023.01.11\" %}\n{% set sha256 = \"07fd9b61c39c4d600e441d67edbafc1015e9e3fabd88b561a647f98fedf31d41\" %}\n\npackage:\n    name: {{ name }}\n    version: {{ version }}\n\nsource:\n    url: https://github.com/aewallin/{{ name }}/archive/{{ version }}.tar.gz\n    sha256: {{ sha256 }}\n\nbuild:\n    number: 0\n    skip: true  # [py<36]\n\nrequirements:\n    build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - ninja\n        - cmake\n        - make\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux]\n    host:\n        - python\n        - pip\n        - scikit-build-core\n        - boost\n    run:\n        - boost\n        - python\n\ntest:\n  imports:\n    - opencamlib\n  source_files:\n    - examples/python/test.py\n    - stl/**\nabout:\n    home: http://www.anderswallin.net/CAM/\n    license: LGPL-2.1-or-later\n    license_family: LGPL\n    license_file: COPYING\n    summary: OpenCAMLib (ocl)\n    description: OpenCAMLib (ocl) is a C++ library for creating toolpaths for CNC-machines\n                 such as mills and lathes.\n    doc_url: http://www.anderswallin.net/CAM/\n    dev_url: https://github.com/aewallin/opencamlib\n\nextra:\n  recipe-maintainers:\n    - looooo\n    - vespakoen\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "libgomp",
   "llvm-openmp",
   "make",
   "ninja",
   "pip",
   "python",
   "scikit-build-core"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp",
    "pip",
    "python",
    "scikit-build-core"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "python",
    "scikit-build-core"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/aewallin/opencamlib/archive/2023.01.11.tar.gz",
 "version": "2023.01.11",
 "win_64_meta_yaml": {
  "about": {
   "description": "OpenCAMLib (ocl) is a C++ library for creating toolpaths for CNC-machines such as mills and lathes.",
   "dev_url": "https://github.com/aewallin/opencamlib",
   "doc_url": "http://www.anderswallin.net/CAM/",
   "home": "http://www.anderswallin.net/CAM/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING",
   "summary": "OpenCAMLib (ocl)"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen",
    "looooo",
    "vespakoen"
   ]
  },
  "package": {
   "name": "opencamlib",
   "version": "2023.01.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost",
    "python",
    "pip",
    "scikit-build-core",
    "boost"
   ],
   "run": [
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python",
    "boost",
    "python"
   ]
  },
  "source": {
   "sha256": "07fd9b61c39c4d600e441d67edbafc1015e9e3fabd88b561a647f98fedf31d41",
   "url": "https://github.com/aewallin/opencamlib/archive/2023.01.11.tar.gz"
  },
  "test": {
   "imports": [
    "opencamlib",
    "opencamlib",
    "opencamlib",
    "opencamlib"
   ],
   "source_files": [
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**",
    "examples/python/test.py",
    "stl/**"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "pip",
    "python",
    "scikit-build-core"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}