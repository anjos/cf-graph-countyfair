{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/570662694.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570663035.json"
   },
   "data": {
    "bot_rerun": 1612921069.5630896,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570681190.json"
   },
   "data": {
    "bot_rerun": 1612921069.563269,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570695409.json"
   },
   "data": {
    "bot_rerun": 1612921069.5633862,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570696033.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570741418.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570761236.json"
   },
   "data": {
    "bot_rerun": 1612966036.9965868,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570773151.json"
   },
   "data": {
    "bot_rerun": 1612966036.9968066,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571175840.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571193875.json"
   },
   "data": {
    "bot_rerun": 1612978761.239133,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571325856.json"
   },
   "data": {
    "bot_rerun": 1612991829.290068,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571448041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "pynisher",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\nand executes the function inside it. In the end, it returns the function return value. If, for any reason,\nthe function call is not successful, None is returned.\n",
   "dev_url": "https://github.com/automl/pynisher",
   "home": "https://github.com/automl/pynisher",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A small Python library to limit the resources used by a function by executing it inside a subprocess."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer"
   ]
  },
  "package": {
   "name": "pynisher",
   "version": "0.6.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff",
   "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\nand executes the function inside it. In the end, it returns the function return value. If, for any reason,\nthe function call is not successful, None is returned.\n",
   "dev_url": "https://github.com/automl/pynisher",
   "home": "https://github.com/automl/pynisher",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A small Python library to limit the resources used by a function by executing it inside a subprocess."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer"
   ]
  },
  "package": {
   "name": "pynisher",
   "version": "0.6.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff",
   "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\nand executes the function inside it. In the end, it returns the function return value. If, for any reason,\nthe function call is not successful, None is returned.\n",
   "dev_url": "https://github.com/automl/pynisher",
   "home": "https://github.com/automl/pynisher",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A small Python library to limit the resources used by a function by executing it inside a subprocess."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer"
   ]
  },
  "package": {
   "name": "pynisher",
   "version": "0.6.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff",
   "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\nand executes the function inside it. In the end, it returns the function return value. If, for any reason,\nthe function call is not successful, None is returned.\n",
   "dev_url": "https://github.com/automl/pynisher",
   "home": "https://github.com/automl/pynisher",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A small Python library to limit the resources used by a function by executing it inside a subprocess."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer"
   ]
  },
  "package": {
   "name": "pynisher",
   "version": "0.6.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff",
   "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "pynisher",
 "new_version": "0.6.3",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\nand executes the function inside it. In the end, it returns the function return value. If, for any reason,\nthe function call is not successful, None is returned.\n",
   "dev_url": "https://github.com/automl/pynisher",
   "home": "https://github.com/automl/pynisher",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A small Python library to limit the resources used by a function by executing it inside a subprocess."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer"
   ]
  },
  "package": {
   "name": "pynisher",
   "version": "0.6.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff",
   "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher",
    "pynisher"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\nand executes the function inside it. In the end, it returns the function return value. If, for any reason,\nthe function call is not successful, None is returned.\n",
   "dev_url": "https://github.com/automl/pynisher",
   "home": "https://github.com/automl/pynisher",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A small Python library to limit the resources used by a function by executing it inside a subprocess."
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim",
    "mfeurer",
    "BastianZim",
    "mfeurer"
   ]
  },
  "package": {
   "name": "pynisher",
   "version": "0.6.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools",
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff",
   "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynisher",
    "pynisher"
   ],
   "requires": [
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pynisher"
  ]
 },
 "pinning_version": "2021.02.10.13.52.40",
 "raw_meta_yaml": "{% set name = \"pynisher\" %}\n{% set version = \"0.6.3\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: e4e1d9366fc4ca60b4b2354b6d12e65600600a8c7bf4392c84f2f4ff4abc85ff\n\nbuild:\n  number: 2\n  skip: true  # [win or py<36]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - pip\n    - python\n  run:\n    - docutils >=0.3\n    - psutil\n    - python\n    - setuptools\n\ntest:\n  imports:\n    - pynisher\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/automl/pynisher\n  summary: A small Python library to limit the resources used by a function by executing it inside a subprocess.\n  description: |\n    The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,\n    and executes the function inside it. In the end, it returns the function return value. If, for any reason,\n    the function call is not successful, None is returned.\n  license: MIT\n  license_file: LICENSE\n  dev_url: https://github.com/automl/pynisher\n\nextra:\n  recipe-maintainers:\n    - BastianZim\n    - mfeurer\n",
 "req": {
  "__set__": true,
  "elements": [
   "docutils",
   "pip",
   "psutil",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docutils >=0.3",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pynisher/pynisher-0.6.3.tar.gz",
 "version": "0.6.3"
}