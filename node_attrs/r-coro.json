{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/652012033.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/794827165.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1001236243.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-coro",
 "hash_type": "sha256",
 "name": "r-coro",
 "new_version": "1.0.3",
 "new_version_attempts": {
  "1.0.2": 1,
  "1.0.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-coro"
  ]
 },
 "pinning_version": "2022.07.19.11.33.02",
 "raw_meta_yaml": "{% set version = \"1.0.3\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-coro\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/coro_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/coro/coro_{{ version }}.tar.gz\n  sha256: 4e7729b1b1461be7805b2fcad0ed4c04755390dad3f1a2cb9f3af701db6d7d73\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rlang >=0.4.9\n  run:\n    - r-base\n    - r-rlang >=0.4.9\n\ntest:\n  commands:\n    - $R -e \"library('coro')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('coro')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/r-lib/coro\n  license: MIT\n  summary: Provides 'coroutines' for R, a family of functions that can be suspended and resumed later on. This includes 'async' functions (which await) and generators (which yield). 'Async' functions are based on the concurrency framework of the 'promises' package. Generators are based on a dependency free iteration protocol\n    defined in 'coro' and are compatible with iterators from the 'reticulate' package.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - izahn\n\n# Package: coro\n# Title: 'Coroutines' for R\n# Version: 1.0.1\n# Authors@R: c( person(\"Lionel\", \"Henry\", ,\"lionel@rstudio.com\", c(\"aut\", \"cre\")), person(\"RStudio\", role = \"cph\") )\n# Description: Provides 'coroutines' for R, a family of functions that can be suspended and resumed later on. This includes 'async' functions (which await) and generators (which yield). 'Async' functions are based on the concurrency framework of the 'promises' package. Generators are based on a dependency free iteration protocol defined in 'coro' and are compatible with iterators from the 'reticulate' package.\n# Depends: R (>= 3.5.0)\n# Imports: rlang (>= 0.4.9)\n# Suggests: knitr, later (>= 1.1.0), magrittr (>= 2.0.0), promises, reticulate, rmarkdown, testthat (>= 3.0.0)\n# VignetteBuilder: knitr\n# License: MIT + file LICENSE\n# URL: https://github.com/r-lib/coro\n# BugReports: https://github.com/r-lib/coro/issues\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 7.1.1\n# Config/testthat/edition: 3\n# NeedsCompilation: no\n# Packaged: 2020-12-17 18:55:26 UTC; lionel\n# Author: Lionel Henry [aut, cre], RStudio [cph]\n# Maintainer: Lionel Henry <lionel@rstudio.com>\n# Repository: CRAN\n# Date/Publication: 2020-12-17 20:10:02 UTC\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/coro_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/coro/coro_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/coro_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/coro/coro_1.0.3.tar.gz"
 ],
 "version": "1.0.3"
}