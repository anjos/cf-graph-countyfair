{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/374338100.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374341405.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl26"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/16ccf12e-dd34-48ca-9b91-335b99770377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/379090161.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/590254739.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/590816354.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/720044479.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gsl27"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/887112304.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gstreamer120"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/970147386.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gstlal-inspiral",
 "hash_type": "sha256",
 "name": "gstlal-inspiral",
 "new_version": "1.9.3",
 "new_version_attempts": {
  "1.9.1": 1,
  "1.9.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gstlal-inspiral"
  ]
 },
 "pinning_version": "2022.06.16.23.47.53",
 "raw_meta_yaml": "{% set name = \"gstlal-inspiral\" %}\n{% set version = \"1.9.3\" %}\n\n# dependencies\n{% set lscsoft_glue_version = \"2.0.0\" %}\n{% set gobject_introspection_version = \"1.30.0\" %}\n{% set gstlal_version = \"1.9.0\" %}\n{% set gstlal_ugly_version = \"1.9.1\" %}\n{% set lal_version = \"7.1.0\" %}\n{% set lalinspiral_version = \"2.0.0\" %}\n{% set lalmetaio_version = \"2.0.0\" %}\n{% set ligo_gracedb_version = \"2.7.5\" %}\n{% set ligo_scald_version = \"0.7.2\" %}\n{% set ligo_segments_version = \"1.2.0\" %}\n{% set python_ligo_lw_version = \"1.8.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://software.igwn.org/sources/source/{{ name }}-{{ version }}.tar.gz\n  sha256: 6aac723769d15d388f86226d30d108feead3f299d5378286f98d5791479c6931\n  patches:\n    - link-gsl.patch\n    - no-link-libpython.patch  # [osx]\n\nbuild:\n  error_overdepending: true\n  error_overlinking: true\n  ignore_run_exports:\n    # needed by configure, but not used\n    - liblalmetaio\n    - liblalinspiral\n    # not linked, but needed at runtime\n    - gst-plugins-base\n    - gobject-introspection\n    - numpy\n  number: 2\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make  # [unix]\n    - pkg-config >=0.18.0  # [unix]\n  host:\n    - glib\n    - gobject-introspection >={{ gobject_introspection_version }}\n    - gsl\n    - gstreamer\n    - gstlal >={{ gstlal_version }}\n    - liblal >={{ lal_version }}\n    - liblalinspiral >={{ lalinspiral_version }}\n    - liblalmetaio >={{ lalmetaio_version }}\n    - numpy\n    - python\n  run:\n    - gobject-introspection >={{ gobject_introspection_version }}\n    - gsl\n    - gstreamer\n    - gst-plugins-base\n    - gstlal >={{ gstlal_version }}\n    - gstlal-ugly >={{ gstlal_ugly_version }}\n    - h5py\n    - lalapps\n    - liblal >={{ lal_version }}\n    - liblalinspiral >={{ lalinspiral_version }}\n    - liblalmetaio >={{ lalmetaio_version }}\n    - ligo-gracedb >={{ ligo_gracedb_version }}\n    - ligo-segments >={{ ligo_segments_version }}\n    - ligo-scald >={{ ligo_scald_version }}\n    - lscsoft-glue >={{ lscsoft_glue_version }}\n    - {{ pin_compatible('numpy') }}\n    - pandas >=0.17.1\n    - python\n    - python-lal >={{ lal_version }}\n    - python-lalinspiral >={{ lalinspiral_version }}\n    - python-ligo-lw >={{ python_ligo_lw_version }}\n    - scipy <1.9.0a0\n\ntest:\n  imports:\n    - gstlal.chirptime\n    - gstlal.far\n    - gstlal.snglinspiraltable\n  commands:\n    - export GSTLAL_FIR_WHITEN=0\n    - export TMPDIR=$(python -c \"import tempfile; print(tempfile.gettempdir())\")\n    # these imports need the GSTLAL_FIR_WHITEN variable\n    - python -c \"import gstlal.inspiral\"\n    - python -c \"import gstlal.inspiral_pipe\"\n    # check executables\n    - gstlal_inspiral --help\n    - gstlal_inspiral_pipe --help\n    - gstlal_ll_inspiral_pipe --help\n    - gstlal_svd_bank --help\n\nabout:\n  home: https://lscsoft.docs.ligo.org/gstlal/\n  dev_url: https://git.ligo.org/lscsoft/gstlal/\n  doc_url: https://lscsoft.docs.ligo.org/gstlal/\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: GStreamer for GW data analysis (inspiral parts)\n  description: |\n    This package provides a variety of gstreamer elements for\n    gravitational-wave data analysis and some libraries to help write such\n    elements.  The code here sits on top of several other libraries, notably\n    the LIGO Algorithm Library (LAL), FFTW, the GNU Scientific Library (GSL),\n    and, of course, GStreamer.\n    This package contains plugins, libraries, and programs for inspiral data\n    analysis.\n\nextra:\n  recipe-maintainers:\n    - aepace\n    - duncanmmacleod\n    - myNameIsPatrick\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://software.igwn.org/sources/source/gstlal-inspiral-1.9.3.tar.gz",
 "version": "1.9.3"
}