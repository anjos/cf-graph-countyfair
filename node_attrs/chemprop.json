{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/698397241.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/830760095.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/924603102.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/925004131.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1001594570.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "chemprop",
 "hash_type": "sha256",
 "name": "chemprop",
 "new_version": "1.5.2",
 "new_version_attempts": {
  "1.3.1": 1,
  "1.4.1": 1,
  "1.5.0": 1,
  "1.5.1": 1,
  "1.5.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "chemprop"
  ]
 },
 "pinning_version": "2022.07.19.11.33.02",
 "raw_meta_yaml": "{% set name = \"chemprop\" %}\n{% set version = \"1.5.2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/chemprop-{{ version }}.tar.gz\n  sha256: bf8dd5a8a5507233e81630508562b4a4b35a502a451b45694891c3c1ee57d04f\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - chemprop_train=chemprop.train:chemprop_train\n    - chemprop_predict=chemprop.train:chemprop_predict\n    - chemprop_fingerprint=chemprop.train:chemprop_fingerprint\n    - chemprop_hyperopt=chemprop.hyperparameter_optimization:chemprop_hyperopt\n    - chemprop_interpret=chemprop.interpret:chemprop_interpret\n    - chemprop_web=chemprop.web.run:chemprop_web\n    - sklearn_train=chemprop.sklearn_train:sklearn_train\n    - sklearn_predict=chemprop.sklearn_predict:sklearn_predict\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n  run:\n    - flask >=1.1.2\n    - hyperopt >=0.2.3\n    - matplotlib-base >=3.1.3\n    - numpy >=1.18.1\n    - pandas >=1.0.3\n    - pandas-flavor >=0.2.0\n    - python >=3.6\n    - scikit-learn >=0.22.2.post1\n    - scipy >=1.4.1\n    - sphinx >=3.1.2\n    - tensorboardx >=2.0\n    - pytorch >=1.5.1\n    - tqdm >=4.45.0\n    - typed-argument-parser >=1.6.1\n    - rdkit\n\ntest:\n  imports:\n    - chemprop\n    - chemprop.data\n  commands:\n    - pip check\n    - chemprop_train --help\n    - chemprop_predict --help\n    - chemprop_fingerprint --help\n    - chemprop_hyperopt --help\n    - chemprop_interpret --help\n    - chemprop_web --help\n    - sklearn_train --help\n    - sklearn_predict --help\n  requires:\n    - pip\n\nabout:\n  home: http://chemprop.csail.mit.edu/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Message Passing Neural Networks for Molecule Property Prediction\n  description: |\n    This repository contains message passing neural networks for molecular\n    property prediction as described in the paper Analyzing Learned \n    Molecular Representations for Property Prediction and as used in the \n    paper A Deep Learning Approach to Antibiotic Discovery.\n  doc_url: https://chemprop.readthedocs.io/en/latest/\n  dev_url: https://github.com/chemprop/chemprop\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/c/chemprop/chemprop-1.5.2.tar.gz",
 "version": "1.5.2"
}