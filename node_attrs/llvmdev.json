{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/198232206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198532001.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216616853.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219896468.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/238896130.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263060387.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269409109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335475824.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375719053.json"
   },
   "data": {
    "bot_rerun": 1581782826.4616702,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11-init"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/0f6bd94a-29e1-4680-b3b5-312177de293e.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393483270.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454884776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488802790.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499554023.json"
   },
   "data": {
    "bot_rerun": 1602120532.5171561,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501446866.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549908812.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574667619.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616543923.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/686515105.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747510217.json"
   },
   "data": {
    "bot_rerun": 1633212561.07171,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838474200.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/886823892.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908601089.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920361261.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/923375397.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/946919667.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964727550.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/978937578.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1030080681.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libxml2210"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1047174377.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "15.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1061463431.json"
   },
   "data": {
    "bot_rerun": 1663843647.7213259,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "15.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1064003964.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "15.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1076135745.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "15.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1090684193.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "15.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "llvmdev",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv"
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "backtrace",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv"
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools",
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libcxx >=14",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools",
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libcxx >=14",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1",
      "if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": null,
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1",
      "llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 14",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 14",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libxml2",
    "zlib",
    "zstd",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 14",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 14",
    "libxml2",
    "zlib",
    "zstd",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "name": "llvm-package",
 "new_version": "15.0.4",
 "new_version_attempts": {
  "10.0.1": 1,
  "11.0.0": 1,
  "11.0.1": 1,
  "11.1.0": 1,
  "12.0.0": 4,
  "12.0.1": 1,
  "13.0.0": 1,
  "13.0.1": 1,
  "14.0.0": 1,
  "14.0.1": 1,
  "14.0.2": 1,
  "14.0.3": 1,
  "14.0.4": 1,
  "14.0.5": 1,
  "14.0.6": 1,
  "15.0.0": 1,
  "15.0.1": 2,
  "15.0.2": 1,
  "15.0.3": 1,
  "15.0.4": 1
 },
 "new_version_errors": {
  "12.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '12.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz'\n",
  "15.0.4": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '15.0.4' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools",
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libcxx >=14",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 14"
   ],
   "host": [
    "libcxx 14",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "libcxx",
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx",
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools",
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libcxx >=14",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=14"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-15${SHLIB_EXT}"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm15"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 14"
   ],
   "host": [
    "libcxx 14",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libcxx",
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx",
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libllvm15",
   "lit",
   "llvm",
   "llvm-tools",
   "llvmdev"
  ]
 },
 "pinning_version": "2022.10.18.09.43.36",
 "raw_meta_yaml": "{% set version = \"15.0.3\" %}\n{% set major_ver = version.split(\".\")[0] %}\n\npackage:\n  name: llvm-package\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n  sha256: dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88\n  patches:\n    # - patches/intel-D47188-svml-VF.patch    # Fixes vectorizer and extends SVML support\n    # - patches/expect-fastmath-entrypoints-in-add-TLI-mappings.ll.patch # adjusts test added in 10.0.0 for intel-D47188-svml-VF.patch effects\n    # - patches/amd-roc-2.7.0.diff\n    - patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch\n    # backport of zlib patches, can be dropped for v>15.0.3, see\n    # https://reviews.llvm.org/D135457 & https://reviews.llvm.org/D136065\n    - patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch\n\nbuild:\n  number: 1\n  merge_build_host: false\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - python >=3\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n  host:\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    # needs aarch/ppc/arm (re)build of conda-forge/backtrace-feedstock\n    - backtrace                          # [unix and x86]\n    - libxml2\n    - zlib\n    - zstd                               # [build_platform == target_platform]\n\noutputs:\n  # Contains everything\n  - name: llvmdev\n    script: install_llvm.sh  # [not win]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n      host:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - {{ pin_subpackage(\"llvm-tools\", exact=True) }}\n        - libxml2\n        - zlib\n        - zstd     # [build_platform == target_platform]\n      run:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - {{ pin_subpackage(\"llvm-tools\", exact=True) }}\n        - libcxx >={{ cxx_compiler_version }}                           # [osx]\n    test:\n      commands:\n        - $PREFIX/bin/llvm-config --libs                                # [not win]\n        - test -f $PREFIX/include/llvm/Pass.h                           # [not win]\n        - test -f $PREFIX/lib/libLLVMCore.a                             # [not win]\n        - $PREFIX/libexec/llvm/not false                                # [not win]\n        - if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1               # [win]\n        - if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1  # [win]\n\n  # Contains the shared libraries. To make different LLVM libraries co-installable\n  # soversion is appended to the package name.\n  - name: libllvm{{ major_ver }}\n    script: install_llvm.sh  # [not win]\n    build:\n      activate_in_script: true\n      run_exports:   # [not win]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, max_pin=\"x.x\") }}  # [not win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - ninja                    # [not win]\n        - cmake                    # [not win]\n        - python >=3               # [not win]\n      host:\n        - libcxx >={{ cxx_compiler_version }}  # [osx]\n        - libxml2\n        - zlib\n        - zstd                                 # [build_platform == target_platform]\n      run:\n        - libcxx >={{ cxx_compiler_version }}  # [osx]\n    test:\n      commands:\n        - test -f $PREFIX/lib/libLLVM-{{ major_ver }}${SHLIB_EXT}     # [not win]\n\n  # This is a meta package so that people can use the latest libllvm and also\n  # for run_exports\n  - name: llvm\n    build:\n      run_exports:   # [not win]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, max_pin=\"x.x\") }}  # [not win]\n    requirements:\n      build:\n      host:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}     # [not win]\n        - libxml2\n        - zlib\n        - zstd                                                        # [build_platform == target_platform]\n      run:   # [not win]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}     # [not win]\n      run_constrained:   # [not win]\n        - llvmdev   {{ version }}                                     # [not win]\n    test:\n      commands:\n        - echo \"Hello World!\"\n\n  # Contains LLVM tools\n  - name: llvm-tools\n    script: install_llvm.sh  # [not win]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n      host:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - libxml2\n        - zlib\n        - zstd     # [build_platform == target_platform]\n      run:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n      run_constrained:\n        - llvmdev   {{ version }}\n    test:\n      commands:\n        - $PREFIX/bin/llc -version                               # [not win]\n        - if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1           # [win]\n        - llc -version                                           # [win]\n\n  - name: lit\n    build:\n      noarch: python\n      script: python -m pip install llvm/utils/lit --no-deps -vv\n      activate_in_script: true\n      skip: true  # [not linux64]\n      entry_points:\n        - lit = lit.main:main\n    requirements:\n      host:\n        - python >=3\n        - pip\n      run:\n        - python\n    test:\n      imports:\n        - lit\n      commands:\n        - lit -h\n\nabout:\n  home: http://llvm.org/\n  dev_url: https://github.com/llvm/llvm-project\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: llvm/LICENSE.TXT\n  license_family: Apache\n  summary: Development headers and libraries for LLVM\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - inducer\n    - jakirkham\n    - mingwandroid\n    - SylvainCorlay\n    - isuruf\n    - timsnyder\n    - xhochy\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "backtrace",
   "cmake",
   "cxx_compiler_stub",
   "libcxx",
   "libllvm15",
   "libxml2",
   "llvm-tools",
   "ninja",
   "pip",
   "python",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "cxx_compiler_stub",
    "libcxx",
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libcxx",
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx 14",
    "ninja",
    "python >=3"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "libcxx 14",
    "libcxx >=14",
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python >=3",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx >=14",
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz",
 "version": "15.0.3",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15",
      "llvm-tools"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1",
      "if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "libllvm15",
    "requirements": {
     "build": [
      "cxx_compiler_stub"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": null,
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm15",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm15"
     ],
     "run_constrained": [
      "llvmdev   15.0.3"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1",
      "llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "15.0.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch"
   ],
   "sha256": "dd07bdab557866344d85ae21bbeca5259d37b4b0e2ebf6e0481f42d1ba0fee88",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/llvm-project-15.0.3.src.tar.xz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm15",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}