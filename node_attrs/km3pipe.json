{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/746713310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747728346.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/752777528.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774530484.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/782961094.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/787910951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.11.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/891602473.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/897992583.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.12.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/919276451.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.12.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/989074728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "km3pipe",
 "hash_type": "sha256",
 "name": "km3pipe",
 "new_version": "9.13.0",
 "new_version_attempts": {
  "9.10.0": 1,
  "9.11.0": 1,
  "9.11.2": 1,
  "9.11.4": 1,
  "9.12.1": 1,
  "9.12.2": 1,
  "9.12.3": 1,
  "9.13.0": 1,
  "9.9.3": 1,
  "9.9.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "km3pipe"
  ]
 },
 "pinning_version": "2022.07.06.01.52.02",
 "raw_meta_yaml": "{% set name = \"km3pipe\" %}\n{% set version = \"9.12.3\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/km3pipe-{{ version }}.tar.gz\n  sha256: 374b282f7d8a2c2e6e47f87fc7286fad386f09fa7e5c5293d0a1f7dae0edf9a7\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - km3pipe=km3pipe.cmd:main\n    - pipeinspector=pipeinspector.app:main\n    - h5extract=km3pipe.utils.h5extract:main\n    - h5extractf=km3pipe.utils.h5extractf:main\n    - h5info=km3pipe.utils.h5info:main\n    - h5tree=km3pipe.utils.h5tree:main\n    - h5header=km3pipe.utils.h5header:main\n    - ztplot=km3pipe.utils.ztplot:main\n    - k40calib=km3pipe.utils.k40calib:main\n    - triggermap=km3pipe.utils.triggermap:main\n    - nb2sphx=km3pipe.utils.nb2sphx:main\n    - ligiermirror=km3pipe.utils.ligiermirror:main\n    - qrunprocessor=km3pipe.utils.qrunprocessor:main\n    - qrunqaqc=km3pipe.utils.qrunqaqc:main\n    - daqsample=km3pipe.utils.daqsample:main\n    - tres=km3pipe.utils.tres:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools_scm\n  run:\n    - awkward >=1.4\n    - docopt\n    - h5py\n    - km3db >=0.6.0\n    - km3io >=0.20.0\n    - matplotlib-base >=3.0.0\n    - numba >=0.49.0\n    - numpy >=1.17.0\n    - particle >=0.8.0\n    - passlib\n    - python >=3.6\n    - requests\n    - setuptools >=40.6.2\n    - setuptools-scm\n    - pytables >=3.4.2\n    - thepipe >=1.3.5\n    - toml\n    - tqdm\n\ntest:\n  imports:\n    - km3modules\n    - km3pipe\n  commands:\n    - pip check\n    - km3pipe --help\n    - pipeinspector --help\n    - h5extract --help\n    - h5extractf --help\n    - h5info --help\n    - h5tree --help\n    - h5header --help\n    - ztplot --help\n    - k40calib --help\n    - triggermap --help\n    - nb2sphx --help\n    - ligiermirror --help\n    - qrunprocessor --help\n    - qrunqaqc --help\n    - daqsample --help\n    - tres --help\n  requires:\n    - pip\n\nabout:\n  home: http://git.km3net.de/km3py/km3pipe\n  summary: An analysis framework for KM3NeT\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - tamasgal\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/k/km3pipe/km3pipe-9.12.3.tar.gz",
 "version": "9.12.3"
}