{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/205304246.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "async_generator",
 "hash_type": "sha256",
 "name": "async_generator",
 "new_version": "1.10",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "async_generator"
  ]
 },
 "pinning_version": "2018.07.24",
 "raw_meta_yaml": "{% set name = \"async_generator\" %}\n{% set version = \"1.10\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"6ebb3d106c12920aaae42ccb6f787ef5eefdcdd166ea3d628fa8476abe712144\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n  noarch: python\n\nrequirements:\n  build:\n    - python >2.7\n    - pip\n  run:\n    - python >2.7\n\ntest:\n  imports:\n    - async_generator\n    - async_generator._tests\n\nabout:\n  home: https://github.com/python-trio/async_generator\n  license: MIT\n  license_family: MIT\n  # license file not available on sdist yet: https://github.com/python-trio/async_generator/pull/11\n  license_file: ''\n  summary: Async generators and context managers for Python 3.5+\n  description: \"Python 3.6 added async generators, Python 3.7 adds some more tools to make them usable, like contextlib.asynccontextmanager. This library gives you all that back to Python 3.5.\"\n  dev_url: https://github.com/python-trio/async_generator\n\nextra:\n  recipe-maintainers:\n    - nicoddemus\n",
 "smithy_version": "3.1.9",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/a/async_generator/async_generator-1.10.tar.gz",
 "version": "1.10"
}