{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/702360383.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/702477835.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf44215"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "harp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/stcorp/harp",
   "license": "BSD-3-Clause-Clear",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "HARP is a toolset for ingesting, processing and inter-comparing satellite or model data against correlative data. The toolset is composed of a set of command line tools, a C library of analysis functions, and import/export interfaces for Python, R, Matlab, and IDL."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib"
   ],
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer"
   ]
  },
  "package": {
   "name": "harp",
   "version": "1.13"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex"
   ],
   "host": [
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base"
   ],
   "run": [
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "patches": [
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch"
   ],
   "sha256": "730992c1427d77feb2a41ee33c0818b28324f125a0ee99255a55c81997cb263c",
   "url": "https://github.com/stcorp/harp/releases/download/1.13/harp-1.13.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\""
   ],
   "imports": [
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "coda",
    "hdf4",
    "hdf5",
    "jpeg",
    "python",
    "r-base",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "coda",
    "numpy",
    "python",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/stcorp/harp",
   "license": "BSD-3-Clause-Clear",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "HARP is a toolset for ingesting, processing and inter-comparing satellite or model data against correlative data. The toolset is composed of a set of command line tools, a C library of analysis functions, and import/export interfaces for Python, R, Matlab, and IDL."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib"
   ],
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer"
   ]
  },
  "package": {
   "name": "harp",
   "version": "1.13"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex"
   ],
   "host": [
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base"
   ],
   "run": [
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "patches": [
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch"
   ],
   "sha256": "730992c1427d77feb2a41ee33c0818b28324f125a0ee99255a55c81997cb263c",
   "url": "https://github.com/stcorp/harp/releases/download/1.13/harp-1.13.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\""
   ],
   "imports": [
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp"
   ]
  }
 },
 "name": "harp",
 "new_version": "1.13",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/stcorp/harp",
   "license": "BSD-3-Clause-Clear",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "HARP is a toolset for ingesting, processing and inter-comparing satellite or model data against correlative data. The toolset is composed of a set of command line tools, a C library of analysis functions, and import/export interfaces for Python, R, Matlab, and IDL."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib"
   ],
   "script_env": [
    "SDKROOT",
    "SDKROOT",
    "SDKROOT",
    "SDKROOT",
    "SDKROOT",
    "SDKROOT",
    "SDKROOT",
    "SDKROOT"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer"
   ]
  },
  "package": {
   "name": "harp",
   "version": "1.13"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "bison",
    "flex"
   ],
   "host": [
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base"
   ],
   "run": [
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "patches": [
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch"
   ],
   "sha256": "730992c1427d77feb2a41ee33c0818b28324f125a0ee99255a55c81997cb263c",
   "url": "https://github.com/stcorp/harp/releases/download/1.13/harp-1.13.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\"",
    "test -f $PREFIX/lib/libharp$SHLIB_EXT",
    "$R -e \"library('harp')\""
   ],
   "imports": [
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "coda",
    "hdf4",
    "hdf5",
    "jpeg",
    "python",
    "r-base",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "coda",
    "numpy",
    "python",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "harp"
  ]
 },
 "pinning_version": "2021.08.03.12.17.29",
 "raw_meta_yaml": "{% set version = \"1.13\" %}\n\npackage:\n  name: harp\n  version: {{ version }}\n\nsource:\n  url: https://github.com/stcorp/harp/releases/download/{{ version }}/harp-{{ version }}.tar.gz\n  sha256: 730992c1427d77feb2a41ee33c0818b28324f125a0ee99255a55c81997cb263c\n  patches:\n    - findjpeg.patch\n    - findr.patch\n    - rmodule.patch\n\nbuild:\n  number: 0\n  script_env:\n    - SDKROOT  # [osx]\n  rpaths:\n    - lib/R/lib\n    - lib\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [not win]\n    - bison  # [not win]\n    - flex  # [not win]\n    - m2-bison  # [win]\n    - m2-flex  # [win]\n\n  host:\n    - coda\n    - python\n    - zlib\n    - hdf4\n    - hdf5\n    - jpeg\n    - r-base\n\n  run:\n    - r-base\n    - coda\n    - python\n    - numpy\n    - cffi\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libharp$SHLIB_EXT  # [unix]\n    - if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1  # [win]\n    - $R -e \"library('harp')\"  # [unix]\n    - \"\\\"%R%\\\" -e \\\"library('harp')\\\"\"  # [win]\n  imports:\n    - harp\n\nabout:\n  home: https://github.com/stcorp/harp\n  license: BSD-3-Clause-Clear\n  license_family: BSD\n  license_file: COPYING\n  summary: HARP is a toolset for ingesting, processing and inter-comparing satellite or model data against correlative data. The toolset is composed of a set of command line tools, a C library of analysis functions, and import/export interfaces for Python, R, Matlab, and IDL.\n\nextra:\n  recipe-maintainers:\n    - srepmub\n    - svniemeijer\n",
 "req": {
  "__set__": true,
  "elements": [
   "bison",
   "c_compiler_stub",
   "cffi",
   "cmake",
   "coda",
   "cxx_compiler_stub",
   "flex",
   "hdf4",
   "hdf5",
   "jpeg",
   "m2-bison",
   "m2-flex",
   "make",
   "numpy",
   "python",
   "r-base",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m2-bison",
    "m2-flex",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coda",
    "cxx_compiler_stub",
    "hdf4",
    "hdf5",
    "jpeg",
    "python",
    "r-base",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "coda",
    "cxx_compiler_stub",
    "numpy",
    "python",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.11.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m2-bison",
    "m2-flex",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "coda",
    "hdf4",
    "hdf5",
    "jpeg",
    "python",
    "r-base",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "coda",
    "numpy",
    "python",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/stcorp/harp/releases/download/1.13/harp-1.13.tar.gz",
 "version": "1.13",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/stcorp/harp",
   "license": "BSD-3-Clause-Clear",
   "license_family": "BSD",
   "license_file": "COPYING",
   "summary": "HARP is a toolset for ingesting, processing and inter-comparing satellite or model data against correlative data. The toolset is composed of a set of command line tools, a C library of analysis functions, and import/export interfaces for Python, R, Matlab, and IDL."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib",
    "lib/R/lib",
    "lib"
   ],
   "script_env": null
  },
  "extra": {
   "recipe-maintainers": [
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer",
    "srepmub",
    "svniemeijer"
   ]
  },
  "package": {
   "name": "harp",
   "version": "1.13"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "m2-bison",
    "m2-flex"
   ],
   "host": [
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base",
    "coda",
    "python",
    "zlib",
    "hdf4",
    "hdf5",
    "jpeg",
    "r-base"
   ],
   "run": [
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi",
    "r-base",
    "coda",
    "python",
    "numpy",
    "cffi"
   ]
  },
  "source": {
   "patches": [
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch",
    "findjpeg.patch",
    "findr.patch",
    "rmodule.patch"
   ],
   "sha256": "730992c1427d77feb2a41ee33c0818b28324f125a0ee99255a55c81997cb263c",
   "url": "https://github.com/stcorp/harp/releases/download/1.13/harp-1.13.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\"",
    "if not exist \"%LIBRARY_PREFIX%/lib/libharp.lib\" exit 1",
    "if not exist \"%LIBRARY_PREFIX%/bin/harpdump.exe\" exit 1",
    "\"%R%\" -e \"library('harp')\""
   ],
   "imports": [
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp",
    "harp"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "m2-bison",
    "m2-flex"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "coda",
    "hdf4",
    "hdf5",
    "jpeg",
    "python",
    "r-base",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "coda",
    "numpy",
    "python",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}