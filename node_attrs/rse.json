{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/802884313.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.32"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/832192194.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.33"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/834958640.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.34"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877074236.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.35"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/934401725.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998552331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/998900727.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1000556962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.41"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1001705807.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.42"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "rse",
 "hash_type": "sha256",
 "name": "rse",
 "new_version": "0.0.42",
 "new_version_attempts": {
  "0.0.31": 1,
  "0.0.32": 1,
  "0.0.33": 1,
  "0.0.34": 1,
  "0.0.35": 1,
  "0.0.37": 1,
  "0.0.38": 1,
  "0.0.39": 1,
  "0.0.41": 1,
  "0.0.42": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rse"
  ]
 },
 "pinning_version": "2022.07.19.11.33.02",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"rse\" %}\n{% set version = \"0.0.42\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 99462d7514998c334abc4d612366b011e6c14caf943d76f106adf25dc45f8f34\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - rse=rse.client:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3\n    - pytest-runner\n  run:\n    - python >=3\n    - sqlalchemy\n    - requests >=2.23.0\n    - flask\n    - flask-socketio\n    - flask-restful\n    - gevent-websocket\n    - beautifulsoup4\n    - html5lib\n\ntest:\n  imports:\n    - rse\n    - rse.defaults\n    - rse.version\n    - rse.exceptions\n    - rse.utils\n    - rse.utils.colors\n    - rse.utils.command\n    - rse.utils.file\n    - rse.utils.prompt\n    - rse.utils.urls\n    - rse.main\n    - rse.main.criteria\n    - rse.main.taxonomy\n    - rse.main.scrapers\n    - rse.main.scrapers.base\n    - rse.main.scrapers.biotools\n    - rse.main.scrapers.hal\n    - rse.main.scrapers.joss\n    - rse.main.scrapers.rsnl\n    - rse.main.parsers\n    - rse.main.parsers.github\n    - rse.main.parsers.gitlab\n    - rse.main.parsers.zenodo\n    - rse.main.database\n    - rse.main.database.filesystem\n    - rse.main.database.models\n    - rse.main.database.relational\n    - rse.main.database.sqlite\n    - rse.main.config\n    - rse.logger\n    - rse.logger.message\n    - rse.client\n    - rse.client.add\n    - rse.client.annotate\n    - rse.client.clear\n    - rse.client.config\n    - rse.client.exists\n    - rse.client.export\n    - rse.client.generate\n    - rse.client.get\n    - rse.client.init\n    - rse.client.label\n    - rse.client.listing\n    - rse.client.metrics\n    - rse.client.scrape\n    - rse.client.search\n    - rse.client.shell\n    - rse.client.start\n    - rse.client.topics\n    - rse.client.update\n    - rse.app\n    - rse.app.api\n    - rse.app.config\n    - rse.app.export\n    - rse.app.server\n    - rse.app.views\n    - rse.app.views.main\n    - rse.app.views.repositories\n  commands:\n    - rse --help\n    - pip check\n  requires:\n    - pip\n\n\nabout:\n  home: https://github.com/rseng/rse\n  license: MPL-2.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: tools for assessment and categorization of research software\n  description: |\n    The Research Software Encyclopedia (rse) is software to query and otherwise interact \n    with a database of research software, and a research software taxonomy. It is intended \n    for research software engineers to be able to better qualify and quantify the work that they do.\n  doc_url: https://rseng.github.io/rse\n  dev_url: https://github.com/rseng/rse\n\nextra:\n  recipe-maintainers:\n    - vsoch\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/r/rse/rse-0.0.42.tar.gz",
 "version": "0.0.42"
}