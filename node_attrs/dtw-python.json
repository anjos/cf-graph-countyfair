{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/437456952.json"
   },
   "data": {
    "bot_rerun": 1592833733.9187984,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437469663.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437935097.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437967639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/493361385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502123638.json"
   },
   "data": {
    "bot_rerun": 1602594510.5424654,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502400185.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "dtw-python",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A comprehensive implementation of dynamic time warping (DTW)\nalgorithms. DTW computes the optimal (least cumulative distance)\nalignment between points of two time series. Common DTW variants\ncovered include local (slope) and global (window) constraints,\nsubsequence matches, arbitrary distance definitions,\nnormalizations, minimum variance matching, and so on. Provides\ncumulative distances, alignments, specialized plot styles, etc.\n",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main"
   ],
   "number": 1,
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "0947d5eed43bb6eec19325f294adf586defdd70b6ba4a49c2cf25408dcd59b87",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.6.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw",
    "dtw",
    "dtw",
    "dtw"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A comprehensive implementation of dynamic time warping (DTW)\nalgorithms. DTW computes the optimal (least cumulative distance)\nalignment between points of two time series. Common DTW variants\ncovered include local (slope) and global (window) constraints,\nsubsequence matches, arbitrary distance definitions,\nnormalizations, minimum variance matching, and so on. Provides\ncumulative distances, alignments, specialized plot styles, etc.\n",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main"
   ],
   "number": "1",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "0947d5eed43bb6eec19325f294adf586defdd70b6ba4a49c2cf25408dcd59b87",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.6.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw",
    "dtw"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name": "dtw-python",
 "new_version": "1.1.6",
 "new_version_attempts": {
  "1.1.5": 1,
  "1.1.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "A comprehensive implementation of dynamic time warping (DTW)\nalgorithms. DTW computes the optimal (least cumulative distance)\nalignment between points of two time series. Common DTW variants\ncovered include local (slope) and global (window) constraints,\nsubsequence matches, arbitrary distance definitions,\nnormalizations, minimum variance matching, and so on. Provides\ncumulative distances, alignments, specialized plot styles, etc.\n",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main"
   ],
   "number": "1",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "0947d5eed43bb6eec19325f294adf586defdd70b6ba4a49c2cf25408dcd59b87",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.6.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw",
    "dtw",
    "dtw",
    "dtw"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dtw-python"
  ]
 },
 "pinning_version": "2020.10.13.00.03.02",
 "raw_meta_yaml": "{% set name = \"dtw-python\" %}\n{% set version = \"1.1.6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 0947d5eed43bb6eec19325f294adf586defdd70b6ba4a49c2cf25408dcd59b87\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [py<36 or python_impl == 'pypy']\n  entry_points:\n    - dtw = dtw.__main__:main\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - numpy >=1.14\n    - setuptools\n  host:\n    - python\n    - pip\n    - numpy >=1.14\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  imports:\n    - dtw\n  requires:\n    - pytest\n  source_files:\n    - tests\n  commands:\n    - pytest tests\n    - dtw --help\n\nabout:\n  home: https://dynamictimewarping.github.io/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A comprehensive implementation of dynamic time warping (DTW) algorithms.\n\n  description: |\n    A comprehensive implementation of dynamic time warping (DTW)\n    algorithms. DTW computes the optimal (least cumulative distance)\n    alignment between points of two time series. Common DTW variants\n    covered include local (slope) and global (window) constraints,\n    subsequence matches, arbitrary distance definitions,\n    normalizations, minimum variance matching, and so on. Provides\n    cumulative distances, alignments, specialized plot styles, etc.\n  doc_url: https://dynamictimewarping.github.io/python/\n  dev_url: https://github.com/DynamicTimeWarping/dtw-python\n\nextra:\n  recipe-maintainers:\n    - tonigi\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy >=1.14",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.4.tar.gz",
 "version": "1.1.6",
 "win_64_meta_yaml": {
  "about": {
   "description": "A comprehensive implementation of dynamic time warping (DTW)\nalgorithms. DTW computes the optimal (least cumulative distance)\nalignment between points of two time series. Common DTW variants\ncovered include local (slope) and global (window) constraints,\nsubsequence matches, arbitrary distance definitions,\nnormalizations, minimum variance matching, and so on. Provides\ncumulative distances, alignments, specialized plot styles, etc.\n",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main",
    "dtw = dtw.__main__:main"
   ],
   "number": "1",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tonigi",
    "tonigi",
    "tonigi",
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools",
    "c_compiler_stub",
    "numpy >=1.14",
    "setuptools"
   ],
   "host": [
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14",
    "python",
    "pip",
    "numpy >=1.14"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "0947d5eed43bb6eec19325f294adf586defdd70b6ba4a49c2cf25408dcd59b87",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.6.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help",
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw",
    "dtw",
    "dtw",
    "dtw"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "setuptools"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}