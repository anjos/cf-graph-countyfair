{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/528249207.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528249875.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554028315.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602402105.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683881979.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774770729.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905061341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1103800420.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1144867106.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "pynng",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Ergonomic bindings for nanomsg next generation (nng), in Python. pynng\nprovides a nice interface on top of the full power of nng. nng, and\ntherefore pynng, make it easy to communicate between processes on a\nsingle computer or computers across a network. This library is\ncompatible with Python \u2265 3.5. nng is the rewriting of Nanomsg, which\nis the spiritual successor to ZeroMQ.\n",
   "dev_url": "https://github.com/codypiersall/pynng",
   "doc_url": "https://pynng.readthedocs.io/",
   "home": "https://github.com/codypiersall/pynng",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Python bindings for Nanomsg Next Generation."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri"
   ]
  },
  "package": {
   "name": "pynng",
   "version": "0.7.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make"
   ],
   "host": [
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ],
   "run": [
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "a9f86376cdccb6feaa6179e65d684387e86f89440ed6f1b918a4f0502523b83b",
   "url": "https://pypi.io/packages/source/p/pynng/pynng-0.7.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Ergonomic bindings for nanomsg next generation (nng), in Python. pynng\nprovides a nice interface on top of the full power of nng. nng, and\ntherefore pynng, make it easy to communicate between processes on a\nsingle computer or computers across a network. This library is\ncompatible with Python \u2265 3.5. nng is the rewriting of Nanomsg, which\nis the spiritual successor to ZeroMQ.\n",
   "dev_url": "https://github.com/codypiersall/pynng",
   "doc_url": "https://pynng.readthedocs.io/",
   "home": "https://github.com/codypiersall/pynng",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Python bindings for Nanomsg Next Generation."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri"
   ]
  },
  "package": {
   "name": "pynng",
   "version": "0.7.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "make",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja"
   ],
   "host": [
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ],
   "run": [
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "source": {
   "patches": [
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch"
   ],
   "sha256": "a9f86376cdccb6feaa6179e65d684387e86f89440ed6f1b918a4f0502523b83b",
   "url": "https://pypi.io/packages/source/p/pynng/pynng-0.7.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "pynng",
 "new_version": "0.7.2",
 "new_version_attempts": {
  "0.7.1": 1,
  "0.7.2": 4
 },
 "new_version_errors": {
  "0.7.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.7.2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pynng-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pynng"
  ]
 },
 "pinning_version": "2022.12.02.15.22.41",
 "raw_meta_yaml": "{% set name = \"pynng\" %}\n{% set version = \"0.7.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pynng-{{ version }}.tar.gz\n  sha256: a9f86376cdccb6feaa6179e65d684387e86f89440ed6f1b918a4f0502523b83b\n  patches:\n    - fix-windows-builds.patch  # [win]\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [osx]\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n    - ninja\n    - make  # [unix]\n  host:\n    - cffi\n    - pip\n    - pytest-runner\n    - python\n  run:\n    - cffi\n    - python\n    - sniffio\n\ntest:\n  imports:\n    - pynng\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/codypiersall/pynng\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Python bindings for Nanomsg Next Generation.\n  description: |\n    Ergonomic bindings for nanomsg next generation (nng), in Python. pynng\n    provides a nice interface on top of the full power of nng. nng, and\n    therefore pynng, make it easy to communicate between processes on a\n    single computer or computers across a network. This library is\n    compatible with Python \u2265 3.5. nng is the rewriting of Nanomsg, which\n    is the spiritual successor to ZeroMQ.\n  doc_url: https://pynng.readthedocs.io/\n  dev_url: https://github.com/codypiersall/pynng\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - carlodri\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cffi",
   "cmake",
   "make",
   "ninja",
   "pip",
   "pytest-runner",
   "python",
   "sniffio"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pynng/pynng-0.7.2.tar.gz",
 "version": "0.7.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "Ergonomic bindings for nanomsg next generation (nng), in Python. pynng\nprovides a nice interface on top of the full power of nng. nng, and\ntherefore pynng, make it easy to communicate between processes on a\nsingle computer or computers across a network. This library is\ncompatible with Python \u2265 3.5. nng is the rewriting of Nanomsg, which\nis the spiritual successor to ZeroMQ.\n",
   "dev_url": "https://github.com/codypiersall/pynng",
   "doc_url": "https://pynng.readthedocs.io/",
   "home": "https://github.com/codypiersall/pynng",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Python bindings for Nanomsg Next Generation."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri",
    "jan-janssen",
    "carlodri"
   ]
  },
  "package": {
   "name": "pynng",
   "version": "0.7.2"
  },
  "requirements": {
   "build": [
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja",
    "cmake",
    "c_compiler_stub",
    "ninja"
   ],
   "host": [
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python",
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ],
   "run": [
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio",
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "source": {
   "patches": [
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch",
    "fix-windows-builds.patch"
   ],
   "sha256": "a9f86376cdccb6feaa6179e65d684387e86f89440ed6f1b918a4f0502523b83b",
   "url": "https://pypi.io/packages/source/p/pynng/pynng-0.7.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng",
    "pynng"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python",
    "sniffio"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}