{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/963401930.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964434508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "plog",
 "hash_type": "sha256",
 "name": "plog",
 "new_version": "1.1.8",
 "new_version_attempts": {
  "1.1.7": 1,
  "1.1.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "plog"
  ]
 },
 "pinning_version": "2022.06.10.16.38.37",
 "raw_meta_yaml": "{% set name = \"plog\" %}\n{% set version = \"1.1.6\" %}\n{% set sha256 = \"99fbb43772f92664ff086166fdff75cc437e9e50e74efec2fba80765fa6b67ae\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/SergiusTheBest/plog/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - cmake\n    - make  # [unix]\n    - {{ compiler('cxx') }}\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/plog  # [unix]\n    - test -f ${PREFIX}/include/plog/Logger.h  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\plog\\Logger.h (exit 1)  # [win]\n\nabout:\n  home: https://github.com/SergiusTheBest/plog\n  license: MPL-2.0\n  license_family: MOZILLA\n  license_file: LICENSE\n  summary: portable, simple and extensible C++ logging library\n\nextra:\n  recipe-maintainers:\n    - gouarin\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://github.com/SergiusTheBest/plog/archive/1.1.6.tar.gz",
 "version": "1.1.6"
}