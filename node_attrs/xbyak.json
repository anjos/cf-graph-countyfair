{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/401200272.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.891"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/415740527.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.911"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/462558983.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.941"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521293113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.991"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/636806699.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.992"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/662829881.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.993"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/713904780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.995"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/726486147.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.996"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/730205066.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.997"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "xbyak",
 "hash_type": "sha256",
 "name": "xbyak",
 "new_version": "6.60.2",
 "new_version_attempts": {
  "5.891": 1,
  "5.911": 1,
  "5.941": 1,
  "5.991": 1,
  "5.992": 1,
  "5.993": 1,
  "5.995": 1,
  "5.996": 1,
  "5.997": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "xbyak"
  ]
 },
 "pinning_version": "2021.09.08.19.38.37",
 "raw_meta_yaml": "{% set name = \"xbyak\" %}\n{% set version = \"5.992\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/herumi/xbyak/archive/v{{ version }}.tar.gz\n  sha256: 3e9eddca48baa436a175aff050ec7d3cc2e3e9f419f60ed99841a9887ad2c7ae\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  script:\n    - make PREFIX=%LIBRARY_PREFIX% install  # [win]    \n    - make PREFIX=$PREFIX install  # [unix]\n\nrequirements:\n  build:\n    - make\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/xbyak/xbyak.h  # [unix]\n    - test -f ${PREFIX}/include/xbyak/xbyak_mnemonic.h  # [unix]\n    - test -f ${PREFIX}/include/xbyak/xbyak_util.h  # [unix]\n    - if not exist %LIBRARY_INC%\\xbyak.h exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\xbyak_mnemonic.h exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\xbyak_util.h exit 1  # [win]\n\nabout:\n  home: https://github.com/herumi/xbyak\n  summary: JIT assembler for x86(IA32), x64(AMD64, x86-64) by C++\n  dev_url: https://github.com/herumi/xbyak\n  license: BSD-3-Clause\n  license_file: COPYRIGHT\n\nextra:\n  recipe-maintainers:\n    - marcelotrevisani\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://github.com/herumi/xbyak/archive/v5.992.tar.gz",
 "version": "5.992"
}