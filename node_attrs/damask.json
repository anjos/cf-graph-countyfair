{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/370187600.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401534581.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc313"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/176cdb8d-51a8-4127-9522-63d25f9aaecb.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/451615988.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "vtk901"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513617152.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/46579b6b-6df5-420a-90e1-f74c62642128.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/593258217.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/633837711.json"
   },
   "data": {
    "bot_rerun": 1626335302.69773,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc315"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/691498181.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc315"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/769829440.json"
   },
   "data": {
    "bot_rerun": 1635690959.352674,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc316"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/770140817.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc316"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/777285858.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "damask",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask3.mpie.de/development",
   "doc_url": "https://damask3.mpie.de/documentation",
   "home": "https://damask3.mpie.de/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "openmpi",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a5"
  },
  "source": {
   "patches": [
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch"
   ],
   "sha256": "2d2b10901959c26a5bb5c52327cdafc7943bc1b36b77b515b0371221703249ae",
   "url": "https://damask3.mpie.de/download/damask-3.0.0-alpha5.tar.xz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "hdf5",
    "mpich",
    "openmpi",
    "petsc",
    "pip",
    "python",
    "xorg-libxfixes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "openmpi",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask3.mpie.de/development",
   "doc_url": "https://damask3.mpie.de/documentation",
   "home": "https://damask3.mpie.de/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "openmpi",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 <1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "openmpi",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ],
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ],
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ],
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ],
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ],
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ],
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a5"
  },
  "source": {
   "patches": [
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch"
   ],
   "sha256": "2d2b10901959c26a5bb5c52327cdafc7943bc1b36b77b515b0371221703249ae",
   "url": "https://damask3.mpie.de/download/damask-3.0.0-alpha5.tar.xz"
  }
 },
 "name": "damask-pkgs",
 "new_version": "3813",
 "new_version_attempts": {
  "3813": 598
 },
 "new_version_errors": {
  "3813": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3813' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://damask3.mpie.de/download/damask-{{ version }}.tar.xz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask3.mpie.de/development",
   "doc_url": "https://damask3.mpie.de/documentation",
   "home": "https://damask3.mpie.de/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "mpich",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "mpich",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_mpich_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ]
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "openmpi",
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ]
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake"
     ],
     "host": [
      "openmpi",
      "petsc * real_*",
      "hdf5 >=1.12",
      "hdf5 * mpi_openmpi_*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "openmpi",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a5"
  },
  "source": {
   "patches": [
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch"
   ],
   "sha256": "2d2b10901959c26a5bb5c52327cdafc7943bc1b36b77b515b0371221703249ae",
   "url": "https://damask3.mpie.de/download/damask-3.0.0-alpha5.tar.xz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "hdf5",
    "mpich",
    "openmpi",
    "petsc",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "openmpi",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "damask",
   "damask-grid",
   "damask-mesh",
   "python-damask"
  ]
 },
 "pinning_version": "2021.11.10.00.44.44",
 "pre_pr_migrator_attempts": {
  "gcc930": 1,
  "python310": 34,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "gcc930": "not solvable: master: ['linux_64_c_compiler_version9cxx_compiler_version9fortran_compiler_version9numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package petsc-3.13.0-h432f2ec_0 requires libgfortran-ng >=7,<8.0a0, but none of the providers can be installed\\n', 'linux_64_c_compiler_version9cxx_compiler_version9fortran_compiler_version9numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package petsc-3.13.0-h432f2ec_0 requires libgfortran-ng >=7,<8.0a0, but none of the providers can be installed\\n', 'linux_64_c_compiler_version9cxx_compiler_version9fortran_compiler_version9numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package petsc-3.13.0-h432f2ec_0 requires libgfortran-ng >=7,<8.0a0, but none of the providers can be installed\\n', 'linux_64_c_compiler_version9cxx_compiler_version9fortran_compiler_version9numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package petsc-3.13.0-h432f2ec_0 requires libgfortran-ng >=7,<8.0a0, but none of the providers can be installed\\n']",
  "python310": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1516753931\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1129, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 268, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 271, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "python39": "not solvable: ['linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package vtk-8.2.0-py27h3196ccb_208 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set build_number = 1 %}\n{% set version = \"3.0.0-alpha5\" %}\n{% set version_python = \"3.0.0a5\" %}\n{% set sha256 = \"2d2b10901959c26a5bb5c52327cdafc7943bc1b36b77b515b0371221703249ae\" %}\n\n# win: no PETSc, only python\n# linux: HDF5 1.10 to be compatible with vtk\n# osx: HDF5 1.12 because 1.10 has no Fortran lib => metapackage not possible\n\npackage:\n  name: damask-pkgs\n  version: {{ version_python }}\n\nsource:\n  url: https://damask3.mpie.de/download/damask-{{ version }}.tar.xz\n  sha256: {{ sha256 }}\n  patches:\n    - PETSc-HDF5-Fortran.patch\n\nbuild:\n  number: {{ build_number }}\n\noutputs:\n  - name: damask-grid\n    build:\n      script:\n        - PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}\n        - cmake --build build-grid --target install\n      run_exports:\n        - {{ mpi }}\n        - petsc\n        - hdf5\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - pkg-config  # [osx]\n        - cmake\n      host:\n        - {{ mpi }}\n        - petsc * real_*\n        - hdf5 >=1.12  # [osx]\n        - hdf5 <1.12  # [linux]\n        - hdf5 * mpi_{{ mpi }}_*\n      run:\n        - hypre <2.22.1\n        - {{ pin_compatible('petsc', max_pin='x.x') }}\n        - {{ pin_compatible('hdf5', max_pin='x.x') }}\n      run_constrained:\n        - damask =={{ version_python }}\n    test:\n      commands:\n        - export OMPI_MCA_plm=isolated\n        - export OMPI_MCA_btl_vader_single_copy_mechanism=none\n        - export OMP_NUM_THREADS=2\n        - DAMASK_grid --help\n\n  - name: damask-mesh\n    build:\n      script:\n        - PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}\n        - cmake --build build-mesh --target install\n      run_exports:\n        - {{ mpi }}\n        - petsc\n        - hdf5\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - pkg-config  # [osx]\n        - cmake\n      host:\n        - {{ mpi }}\n        - petsc * real_*\n        - hdf5 >=1.12  # [osx]\n        - hdf5 <1.12  # [linux]\n        - hdf5 * mpi_{{ mpi }}_*\n      run:\n        - hypre <2.22.1\n        - {{ pin_compatible('petsc', max_pin='x.x') }}\n        - {{ pin_compatible('hdf5', max_pin='x.x') }}\n      run_constrained:\n        - damask =={{ version_python }}\n    test:\n      commands:\n        - export OMPI_MCA_plm=isolated\n        - export OMPI_MCA_btl_vader_single_copy_mechanism=none\n        - export OMP_NUM_THREADS=2\n        - DAMASK_mesh --help\n\n  - name: python-damask\n    build:\n      script: python -m pip install ./python --no-deps -vv --use-feature=in-tree-build\n      skip: true  # [py<37]\n    requirements:\n      build:\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux]\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ cdt('libxdamage') }}  # [linux]\n        - {{ cdt('libxxf86vm') }}  # [linux]\n        - {{ cdt('libxext') }}     # [linux]\n      host:\n        - xorg-libxfixes  # [linux]\n        - python\n        - pip\n      run:\n        - python\n        - pandas\n        - scipy\n        - h5py >=3.3.0\n        - vtk\n        - matplotlib-base\n        - pyyaml\n      run_constrained:\n        - damask =={{ version_python }}\n    test:\n      imports:\n        - damask\n\n  - name: damask\n    build:\n      script: \n        - \"echo DAMASK metapackage\"\n      skip: true  # [py<37 or win or osx]\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - hypre <2.22.1\n        - {{ mpi }}\n        - {{ pin_subpackage('damask-mesh', exact=True) }}\n        - {{ pin_subpackage('damask-grid', exact=True) }}\n        - {{ pin_subpackage('python-damask', exact=True) }}\n    test:\n      commands:\n        - export OMPI_MCA_plm=isolated\n        - export OMPI_MCA_btl_vader_single_copy_mechanism=none\n        - export OMPI_MCA_rmaps_base_oversubscribe=yes\n        - mpiexec -np 2 DAMASK_grid -h\n        - mpiexec -np 2 DAMASK_mesh -h\n      imports:\n        - damask\n\nabout:\n  home: https://damask3.mpie.de/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'Duesseldorf Advanced Material Simulation Kit'\n\n  description: |\n    At the core of DAMASK is a flexible and hierarchically structured\n    model of material point behavior for the solution of elastoplastic\n    boundary value problems along with damage and thermal physics. Its\n    main purpose is the simulation of crystal plasticity within a\n    finite-strain continuum mechanical framework.\n  doc_url: https://damask3.mpie.de/documentation\n  dev_url: https://damask3.mpie.de/development\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - navyRUB\n    - MarDiehl\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cxx_compiler_stub",
   "damask-grid",
   "damask-mesh",
   "fortran_compiler_stub",
   "h5py",
   "hdf5",
   "hypre",
   "libgomp",
   "llvm-openmp",
   "matplotlib-base",
   "mpich",
   "openmpi",
   "pandas",
   "petsc",
   "pip",
   "pkg-config",
   "python",
   "python-damask",
   "pyyaml",
   "scipy",
   "vtk",
   "xorg-libxfixes"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "mpich",
    "openmp",
    "openmpi",
    "petsc",
    "pip",
    "python",
    "xorg-libxfixes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "damask-grid",
    "damask-mesh",
    "fortran_compiler_stub",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "openmp",
    "openmpi",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "hdf5 * mpi__*",
    "hdf5 * mpi_mpich_*",
    "hdf5 * mpi_openmpi_*",
    "hdf5 <1.12",
    "hdf5 >=1.12",
    "mpich",
    "openmpi",
    "petsc * real_*",
    "pip",
    "python",
    "xorg-libxfixes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py >=3.3.0",
    "hdf5",
    "hypre <2.22.1",
    "matplotlib-base",
    "mpich",
    "openmpi",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://damask3.mpie.de/download/damask-3.0.0-alpha5.tar.xz",
 "version": "3.0.0a5",
 "win_64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask3.mpie.de/development",
   "doc_url": "https://damask3.mpie.de/documentation",
   "home": "https://damask3.mpie.de/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl",
    "jan-janssen",
    "navyRUB",
    "MarDiehl"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ],
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ],
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ],
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ],
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-grid -DDAMASK_SOLVER=grid -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-grid --target install"
     ],
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_grid --help"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      null,
      "petsc",
      "hdf5"
     ],
     "script": [
      "PETSC_DIR=${PREFIX} cmake -B build-mesh -DDAMASK_SOLVER=mesh -DCMAKE_INSTALL_PREFIX=${PREFIX}",
      "cmake --build build-mesh --target install"
     ],
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host": [
      "petsc * real_*",
      "hdf5 * mpi__*"
     ],
     "run": [
      "hypre <2.22.1",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "DAMASK_mesh --help"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv --use-feature=in-tree-build"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a5"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "hypre <2.22.1",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "mpiexec -np 2 DAMASK_grid -h",
      "mpiexec -np 2 DAMASK_mesh -h"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a5"
  },
  "source": {
   "patches": [
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch",
    "PETSc-HDF5-Fortran.patch"
   ],
   "sha256": "2d2b10901959c26a5bb5c52327cdafc7943bc1b36b77b515b0371221703249ae",
   "url": "https://damask3.mpie.de/download/damask-3.0.0-alpha5.tar.xz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "hdf5",
    "petsc",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}