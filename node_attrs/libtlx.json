{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/456649520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.20200222"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "libtlx",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ \u2013 smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down \u2013 small overall size such that is can be included without bloating applications.\n",
   "dev_url": "https://github.com/tlx/tlx",
   "doc_url": "https://tlx.github.io/",
   "home": "https://github.com/tlx/tlx",
   "license": "BSL-1.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libtlx",
   "version": "0.5.20200222"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.5",
    "make"
   ]
  },
  "source": [
   {
    "sha256": "99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d",
    "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/include/tlx/algorithm.hpp",
    "test -f $PREFIX/lib/pkgconfig/tlx.pc",
    "test -f $PREFIX/lib/libtlx.a",
    "conda inspect linkages -p $PREFIX $PKG_NAME"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ \u2013 smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down \u2013 small overall size such that is can be included without bloating applications.\n",
   "dev_url": "https://github.com/tlx/tlx",
   "doc_url": "https://tlx.github.io/",
   "home": "https://github.com/tlx/tlx",
   "license": "BSL-1.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu",
    "angriman",
    "avdgrinten",
    "fabratu",
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libtlx",
   "version": "0.5.20200222"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.5",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.5",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.5",
    "make"
   ]
  },
  "source": [
   {
    "sha256": "99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d",
    "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz"
   },
   {
    "sha256": "99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d",
    "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz"
   },
   {
    "sha256": "99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d",
    "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz"
   }
  ],
  "test": {
   "commands": null
  }
 },
 "name": "libtlx",
 "new_version": "0.5.20200222",
 "new_version_attempts": {
  "0.5.20200222": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ \u2013 smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down \u2013 small overall size such that is can be included without bloating applications.\n",
   "dev_url": "https://github.com/tlx/tlx",
   "doc_url": "https://tlx.github.io/",
   "home": "https://github.com/tlx/tlx",
   "license": "BSL-1.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libtlx",
   "version": "0.5.20200222"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.5",
    "make"
   ]
  },
  "source": [
   {
    "sha256": "99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d",
    "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/include/tlx/algorithm.hpp",
    "test -f $PREFIX/lib/libtlx.a",
    "conda inspect linkages -p $PREFIX $PKG_NAME",
    "conda inspect objects -p $PREFIX $PKG_NAME"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libtlx"
  ]
 },
 "pinning_version": "2020.07.24.15.53.25",
 "raw_meta_yaml": "{% set version = \"0.5.20200222\" %}\n\npackage:\n  name: libtlx\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/tlx/tlx/archive/v{{ version }}.tar.gz\n    sha256: 99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake >=3.5\n    - make\n\ntest:\n  commands:\n    # Verify headers are present\n    - test -f $PREFIX/include/tlx/algorithm.hpp  # [unix]\n\n    # Verify pkg-config file is present\n    - test -f $PREFIX/lib/pkgconfig/tlx.pc  # [linux]\n\n    # Verify static library is present\n    - test -f $PREFIX/lib/libtlx.a  # [unix]\n\n    # conda tools\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n\nabout:\n  home: https://github.com/tlx/tlx\n  license: BSL-1.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL.\n  description: |\n    tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ \u2013 smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down \u2013 small overall size such that is can be included without bloating applications.\n  doc_url: https://tlx.github.io/\n  dev_url: https://github.com/tlx/tlx\n\nextra:\n  recipe-maintainers:\n    - angriman\n    - avdgrinten\n    - fabratu\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.4\n",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake >=3.5",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz",
 "version": "0.5.20200222",
 "win_64_meta_yaml": {
  "about": {
   "description": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ \u2013 smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down \u2013 small overall size such that is can be included without bloating applications.\n",
   "dev_url": "https://github.com/tlx/tlx",
   "doc_url": "https://tlx.github.io/",
   "home": "https://github.com/tlx/tlx",
   "license": "BSL-1.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libtlx",
   "version": "0.5.20200222"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.5",
    "make"
   ]
  },
  "source": [
   {
    "sha256": "99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d",
    "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz"
   }
  ],
  "test": {
   "commands": null
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}