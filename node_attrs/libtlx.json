{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/456649520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.20200222"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "libtlx",
 "hash_type": "sha256",
 "name": "libtlx",
 "new_version": "0.5.20200222",
 "new_version_attempts": {
  "0.5.20200222": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libtlx"
  ]
 },
 "pinning_version": "2020.07.24.15.53.25",
 "raw_meta_yaml": "{% set version = \"0.5.20200222\" %}\n\npackage:\n  name: libtlx\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/tlx/tlx/archive/v{{ version }}.tar.gz\n    sha256: 99e63691af3ada066682243f3a65cd6eb32700071cdd6cfedb18777b5ff5ff4d\nbuild:\n  number: 3\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake >=3.5\n    - make\n\ntest:\n  commands:\n    # Verify headers are present\n    - test -f $PREFIX/include/tlx/algorithm.hpp  # [unix]\n\n    # Verify pkg-config file is present\n    - test -f $PREFIX/lib/pkgconfig/tlx.pc  # [linux]\n\n    # Verify static library is present\n    - test -f $PREFIX/lib/libtlx.a  # [unix]\n\n    # conda tools\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n\nabout:\n  home: https://github.com/tlx/tlx\n  license: BSL-1.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL.\n  description: |\n    tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ \u2013 smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down \u2013 small overall size such that is can be included without bloating applications.\n  doc_url: https://tlx.github.io/\n  dev_url: https://github.com/tlx/tlx\n\nextra:\n  recipe-maintainers:\n    - angriman\n    - avdgrinten\n    - fabratu\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.4\n",
 "strong_exports": false,
 "url": "https://github.com/tlx/tlx/archive/v0.5.20200222.tar.gz",
 "version": "0.5.20200222"
}