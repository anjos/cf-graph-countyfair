{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/693117547.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.6.21.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/701530187.json"
   },
   "data": {
    "bot_rerun": 1628014583.2011554,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.8.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/701929452.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.8.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750741641.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.10.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773854873.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.11.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/815242201.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957625216.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.6.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008016738.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.7.25.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1017002900.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.7.30.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "lixtools",
 "hash_type": "sha256",
 "name": "lixtools",
 "new_version": "2022.7.30.0",
 "new_version_attempts": {
  "2021.10.5.0": 1,
  "2021.11.4.0": 1,
  "2021.6.21.0": 1,
  "2021.8.2.0": 1,
  "2021.8.2.1": 1,
  "2022.1.5.0": 1,
  "2022.6.3.0": 1,
  "2022.7.25.0": 1,
  "2022.7.30.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lixtools"
  ]
 },
 "pinning_version": "2022.08.03.21.47.28",
 "raw_meta_yaml": "{% set name = \"lixtools\" %}\n{% set version = \"2022.7.30.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 4babea839d72113c3ebf586fa1cdadf7c576c999f9e23ad39dd609c86e53c7f2\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - dask\n    - fast-histogram\n    - ipython\n    - ipywidgets\n    - matplotlib-base\n    - numpy\n    # - opencv\n    - openpyxl >=3\n    # - opentrons  # per Lin Yang, that dependendency is not needed for the main code base, as it's used separately.\n    - pandas\n    - pillow\n    - py4xs >=2022.6.3.0\n    - python-barcode\n    # - pyzbar\n    - qrcode\n    - scipy\n    - seaborn\n    - tomopy\n\ntest:\n  imports:\n    - lixtools\n    - lixtools.atsas\n    - lixtools.hdf\n    - lixtools.mailin\n    - lixtools.modeling\n    # - lixtools.notebooks  # per Lin Yang, this import includes an experimental package, not ready for production yet.\n    # - lixtools.ot2  # per Lin Yang, that dependendency is not needed for the main code base, as it's used separately.\n    # - lixtools.webcam  # see the comment above.\n\n  commands:\n    - python -c \"import os, pkg_resources; assert os.path.isfile(pkg_resources.resource_filename('lixtools', 'plate_label_template.html'))\"\n    - python -c \"import os, pkg_resources; assert os.path.isfile(pkg_resources.resource_filename('lixtools', 'template_report.ipynb'))\"\n\nabout:\n  home: https://github.com/NSLS-II-LIX/lixtools\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Software tools for data collection/processing at NSLS-II LiX\n\nextra:\n  recipe-maintainers:\n    - lyang11973\n    - mrakitin\n    - kbeeperez\n    - conda-forge/event-model\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/l/lixtools/lixtools-2022.7.30.0.tar.gz",
 "version": "2022.7.30.0"
}