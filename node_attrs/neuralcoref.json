{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/372726390.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533147587.json"
   },
   "data": {
    "bot_rerun": 1642461562.4899359,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "neuralcoref",
 "hash_type": "sha256",
 "name": "neuralcoref",
 "new_version": "4.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "neuralcoref"
  ]
 },
 "pinning_version": "2020.12.04.20.36.45",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: master: ['linux_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package spacy-2.1.1-py27hc9558a2_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package python-3.6.9-0_73_pypy requires python_abi 3.6 *_pypy36_pp73, but none of the providers can be installed\\n', 'osx_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package spacy-2.1.1-py36h770b8ee_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n', 'osx_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package spacy-2.1.1-py36h770b8ee_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n', 'win_64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package spacy-2.1.1-py36he980bc4_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n', 'win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package spacy-2.1.1-py36he980bc4_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"neuralcoref\" %}\n{% set version = \"4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 23aee7418edf5c2e90b3f9f15931563b07ded8c59de386ae654b403322430ad9\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . -vv --no-deps\n  skip: True  # [(py27) or (win and vc<14)]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - pip\n    - python\n    - jsonschema >=2.6.0,<3.0.0a0\n    - spacy >=2.1.1,<2.1.4a0\n  run:\n    - python\n    - boto3\n    - requests\n    - jsonschema >=2.6.0,<3.0.0a0\n    - spacy >=2.1.1,<2.1.4a0\n\ntest:\n  requires:\n    - pip\n    - pytest\n    - spacy-model-en_core_web_sm >=2.1,<2.2.0a0\n  imports:\n    - neuralcoref\n    - neuralcoref.tests\n    - neuralcoref.train\n  commands:\n    - pytest --pyargs neuralcoref\n    - pip check\n\nabout:\n  home: https://github.com/huggingface/neuralcoref\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: \"Coreference Resolution in spaCy with Neural Networks\"\n  doc_url: https://huggingface.co/coref/\n  dev_url: https://github.com/huggingface/neuralcoref\n\nextra:\n  recipe-maintainers:\n    - oblute\n    - benhuff\n    - rluria14\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/neuralcoref/neuralcoref-4.0.tar.gz",
 "version": "4.0"
}