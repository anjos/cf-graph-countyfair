{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/415596895.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.20181225.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/415597563.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503202551.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521761784.json"
   },
   "data": {
    "bot_rerun": 1636371631.1764264,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.20201116.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775295263.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775592696.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.20201116.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911217728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "go2",
 "hash_type": "sha256",
 "name": "go2",
 "new_version": "2.20201116.1",
 "new_version_attempts": {
  "2.20181225.7": 1,
  "2.20201116.1": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "go2"
  ]
 },
 "pinning_version": "2022.04.15.14.15.37",
 "raw_meta_yaml": "{% set name = \"go2\" %}\n{% set version = \"2.20170703\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 20e443fc51ea66ed03d0b9c47cc22c6e7f8a55f52cde8dc0e60928fd4f2e9e6c\n  patches:\n    - go2.py.patch\n    - setup.py.patch\n\nbuild:\n  number: 3\n  # go2 does not run on Windows\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - sed\n  host:\n    - pip\n    - python\n  run:\n    - pygobject\n    - python\n    - tree\n\ntest:\n  commands:\n    - python -c \"from gi.repository import GObject, GLib\"\n    - test -f ${PREFIX}/bin/go2\n    - test -f ${PREFIX}/lib/go2/go2.sh\n    - test -f ${PREFIX}/lib/go2/go2.py\n    - test -f ${PREFIX}/lib/go2/osfs.py\n    - test -f ${PREFIX}/share/man/man1/go2.1\n    - cat ${PREFIX}/bin/go2\n    - grep -r \"/lib/\" ${PREFIX}/lib/go2\n    - grep -r \"/lib/\" ${PREFIX}/share/man/man1/\n    # go2 --setup returns a 1 if already run and conda-forge runs multiple\n    # builds per CI instance, so return true always.\n    - go2 || true\n    - source ${PREFIX}/lib/go2/go2.sh\n    - go2 -h\n    - go2 --version\n\nabout:\n  home: http://savannah.nongnu.org/projects/go2/\n  license:  GPL-2.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: 'go2 directory finder'\n  dev_url: https://bitbucket.org/DavidVilla/go2/\n\nextra:\n  recipe-maintainers:\n    - moorepants\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/go2/go2-2.20170703.tar.gz",
 "version": "2.20170703"
}