{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/608442348.json"
   },
   "data": {
    "bot_rerun": 1658223544.003266,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/609978927.json"
   },
   "data": {
    "bot_rerun": 1658223544.0034516,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/811513240.json"
   },
   "data": {
    "bot_rerun": 1658223544.003549,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/811575864.json"
   },
   "data": {
    "bot_rerun": 1658223544.0037065,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006513288.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "fortranformat",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "FORTRAN format interpreter for Python.\nGenerates text from a Python list of variables or will read a line of text into Python variables according  to the FORTRAN format statement passed.",
   "dev_url": "https://github.com/brendanarnold/py-fortranformat",
   "doc_url": "https://github.com/brendanarnold/py-fortranformat/blob/master/docs/wiki/guide.md",
   "home": "https://github.com/brendanarnold/py-fortranformat",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Mimics Fortran textual IO in Python"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "smithsp"
   ]
  },
  "package": {
   "name": "fortranformat",
   "version": "1.2.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=2.7"
   ],
   "run": [
    "python >=2.7"
   ]
  },
  "source": {
   "fn": "fortranformat-1.2.0.tar.gz",
   "sha256": "54d21d96f2a9f1e5cbf2d759030edc7ea69496983b4876b21aed539abf79a641",
   "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-1.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "fortranformat"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "FORTRAN format interpreter for Python.\nGenerates text from a Python list of variables or will read a line of text into Python variables according  to the FORTRAN format statement passed.",
   "dev_url": "https://github.com/brendanarnold/py-fortranformat",
   "doc_url": "https://github.com/brendanarnold/py-fortranformat/blob/master/docs/wiki/guide.md",
   "home": "https://github.com/brendanarnold/py-fortranformat",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Mimics Fortran textual IO in Python"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "smithsp"
   ]
  },
  "package": {
   "name": "fortranformat",
   "version": "1.2.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=2.7"
   ],
   "run": [
    "python >=2.7"
   ]
  },
  "source": {
   "fn": "fortranformat-1.2.0.tar.gz",
   "sha256": "54d21d96f2a9f1e5cbf2d759030edc7ea69496983b4876b21aed539abf79a641",
   "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-1.2.0.tar.gz"
  },
  "test": {
   "imports": [
    "fortranformat"
   ]
  }
 },
 "name": "fortranformat",
 "new_version": "1.2.1",
 "new_version_attempts": {
  "1.0.0": 1,
  "1.0.1": 1,
  "1.1.0": 1,
  "1.1.1": 1,
  "1.2.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fortranformat"
  ]
 },
 "pinning_version": "2022.07.22.23.35.10",
 "raw_meta_yaml": "{% set name = \"fortranformat\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 54d21d96f2a9f1e5cbf2d759030edc7ea69496983b4876b21aed539abf79a641\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  noarch: python\n\nrequirements:\n  host:\n    - pip\n    - python >=2.7\n  run:\n    - python >=2.7\n\ntest:\n  imports:\n    - fortranformat\n\nabout:\n  home: https://github.com/brendanarnold/py-fortranformat\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Mimics Fortran textual IO in Python\n  description: \"FORTRAN format interpreter for Python.\\nGenerates text from a Python list of variables or will read a line of text into Python variables according\\\n    \\  to the FORTRAN format statement passed.\"\n  doc_url: https://github.com/brendanarnold/py-fortranformat/blob/master/docs/wiki/guide.md\n  dev_url: https://github.com/brendanarnold/py-fortranformat\n\nextra:\n  recipe-maintainers:\n    - smithsp\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=2.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=2.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-1.2.0.tar.gz",
 "version": "1.2.0"
}