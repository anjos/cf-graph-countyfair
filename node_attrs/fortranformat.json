{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/608442348.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/609978927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "fortranformat",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "FORTRAN format interpreter for Python\nGenerates text from a Python list of variables or will read a line of text into Python variables according  to the FORTRAN format statement passed.\n\nThe library is extensively unit-tested  against the Intel FORTRAN compiler on a Linux platform. Differences between platforms/compilers are generally minor.",
   "dev_url": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "doc_url": "https://bitbucket.org/brendanarnold/py-fortranformat/wiki/Home",
   "home": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "COPYING.txt",
   "summary": "Mimics Fortran textual IO in Python"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "smithsp"
   ]
  },
  "package": {
   "name": "fortranformat",
   "version": "0.2.5"
  },
  "requirements": {
   "build": [
    "python"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "fortranformat-0.2.5.tar.gz",
   "sha256": "6b5fbc1f129c7a70543c3a81f334fb4d57f07df2834b22ce69f6d7e8539cd3f9",
   "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-0.2.5.tar.gz"
  },
  "test": {
   "imports": [
    "fortranformat"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "FORTRAN format interpreter for Python\nGenerates text from a Python list of variables or will read a line of text into Python variables according  to the FORTRAN format statement passed.\n\nThe library is extensively unit-tested  against the Intel FORTRAN compiler on a Linux platform. Differences between platforms/compilers are generally minor.",
   "dev_url": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "doc_url": "https://bitbucket.org/brendanarnold/py-fortranformat/wiki/Home",
   "home": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "COPYING.txt",
   "summary": "Mimics Fortran textual IO in Python"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "smithsp",
    "smithsp",
    "smithsp"
   ]
  },
  "package": {
   "name": "fortranformat",
   "version": "0.2.5"
  },
  "requirements": {
   "build": [
    "python",
    "python",
    "python"
   ],
   "run": [
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "fortranformat-0.2.5.tar.gz",
   "sha256": "6b5fbc1f129c7a70543c3a81f334fb4d57f07df2834b22ce69f6d7e8539cd3f9",
   "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-0.2.5.tar.gz"
  },
  "test": {
   "imports": [
    "fortranformat",
    "fortranformat",
    "fortranformat"
   ]
  }
 },
 "name": "fortranformat",
 "new_version": "1.0.1",
 "new_version_attempts": {
  "1.0.0": 1,
  "1.0.1": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "FORTRAN format interpreter for Python\nGenerates text from a Python list of variables or will read a line of text into Python variables according  to the FORTRAN format statement passed.\n\nThe library is extensively unit-tested  against the Intel FORTRAN compiler on a Linux platform. Differences between platforms/compilers are generally minor.",
   "dev_url": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "doc_url": "https://bitbucket.org/brendanarnold/py-fortranformat/wiki/Home",
   "home": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "COPYING.txt",
   "summary": "Mimics Fortran textual IO in Python"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "smithsp"
   ]
  },
  "package": {
   "name": "fortranformat",
   "version": "0.2.5"
  },
  "requirements": {
   "build": [
    "python"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "fortranformat-0.2.5.tar.gz",
   "sha256": "6b5fbc1f129c7a70543c3a81f334fb4d57f07df2834b22ce69f6d7e8539cd3f9",
   "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-0.2.5.tar.gz"
  },
  "test": {
   "imports": [
    "fortranformat"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fortranformat"
  ]
 },
 "pinning_version": "2021.04.06.13.31.20",
 "raw_meta_yaml": "{% set name = \"fortranformat\" %}\n{% set version = \"0.2.5\" %}\n{% set file_ext = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"6b5fbc1f129c7a70543c3a81f334fb4d57f07df2834b22ce69f6d7e8539cd3f9\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.{{ file_ext }}'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  number: 0\n  script: python setup.py install\n  noarch: python\n\nrequirements:\n  build:\n    - python\n  run:\n    - python\n\ntest:\n  imports:\n    - fortranformat\n\nabout:\n  home: http://bitbucket.org/brendanarnold/py-fortranformat\n  license: MIT\n  license_family: MIT\n  license_file: 'COPYING.txt'\n  summary: Mimics Fortran textual IO in Python\n  description: \"FORTRAN format interpreter for Python\\nGenerates text from a Python list of variables or will read a line of text into Python variables according\\\n    \\  to the FORTRAN format statement passed.\\n\\nThe library is extensively unit-tested \\\n    \\ against the Intel FORTRAN compiler on a Linux platform. Differences between platforms/compilers are generally minor.\"\n  doc_url: 'https://bitbucket.org/brendanarnold/py-fortranformat/wiki/Home'\n  dev_url: 'http://bitbucket.org/brendanarnold/py-fortranformat'\n\nextra:\n  recipe-maintainers: \n    - smithsp\n",
 "req": {
  "__set__": true,
  "elements": [
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-0.2.5.tar.gz",
 "version": "0.2.5",
 "win_64_meta_yaml": {
  "about": {
   "description": "FORTRAN format interpreter for Python\nGenerates text from a Python list of variables or will read a line of text into Python variables according  to the FORTRAN format statement passed.\n\nThe library is extensively unit-tested  against the Intel FORTRAN compiler on a Linux platform. Differences between platforms/compilers are generally minor.",
   "dev_url": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "doc_url": "https://bitbucket.org/brendanarnold/py-fortranformat/wiki/Home",
   "home": "http://bitbucket.org/brendanarnold/py-fortranformat",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "COPYING.txt",
   "summary": "Mimics Fortran textual IO in Python"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install"
  },
  "extra": {
   "recipe-maintainers": [
    "smithsp"
   ]
  },
  "package": {
   "name": "fortranformat",
   "version": "0.2.5"
  },
  "requirements": {
   "build": [
    "python"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "fortranformat-0.2.5.tar.gz",
   "sha256": "6b5fbc1f129c7a70543c3a81f334fb4d57f07df2834b22ce69f6d7e8539cd3f9",
   "url": "https://pypi.io/packages/source/f/fortranformat/fortranformat-0.2.5.tar.gz"
  },
  "test": {
   "imports": [
    "fortranformat"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}