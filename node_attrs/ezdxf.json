{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/234272144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255658700.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/313005581.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315175790.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/324911554.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/368390336.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/369444044.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375680809.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/381798738.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/397930333.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402305898.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/408841270.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/412617644.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/418911663.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/421846973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/428614912.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444244404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/451698992.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485711504.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/489689882.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505394275.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546960581.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547885336.json"
   },
   "data": {
    "bot_rerun": 1609689502.5140119,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547885395.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547902800.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551654072.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555713603.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/568947506.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/602000270.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/612837761.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/622478390.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650625307.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/674052571.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680500804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/692076792.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/721760187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ezdxf",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without loosing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.\n",
   "dev_url": "http://github.com/mozman/ezdxf",
   "doc_url": "https://pythonhosted.org/ezdxf",
   "home": "http://github.com/mozman/ezdxf",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Python package to create/manipulate DXF drawings."
  },
  "build": {
   "entry_points": [
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "csachs",
    "csachs",
    "csachs",
    "csachs"
   ]
  },
  "package": {
   "name": "ezdxf",
   "version": "0.16.6"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions"
   ]
  },
  "source": {
   "fn": "ezdxf-0.16.6.zip",
   "sha256": "c9cd785fe904c4e95928cdf7924326961b2a284e782697d3e9fb3f1d4dd3de43",
   "url": "https://pypi.io/packages/source/e/ezdxf/ezdxf-0.16.6.zip"
  },
  "test": {
   "commands": [
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\""
   ],
   "imports": [
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pyparsing",
    "python",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without loosing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.\n",
   "dev_url": "http://github.com/mozman/ezdxf",
   "doc_url": "https://pythonhosted.org/ezdxf",
   "home": "http://github.com/mozman/ezdxf",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Python package to create/manipulate DXF drawings."
  },
  "build": {
   "entry_points": [
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs",
    "csachs"
   ]
  },
  "package": {
   "name": "ezdxf",
   "version": "0.16.6"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions"
   ]
  },
  "source": {
   "fn": "ezdxf-0.16.6.zip",
   "sha256": "c9cd785fe904c4e95928cdf7924326961b2a284e782697d3e9fb3f1d4dd3de43",
   "url": "https://pypi.io/packages/source/e/ezdxf/ezdxf-0.16.6.zip"
  },
  "test": {
   "commands": [
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\""
   ],
   "imports": [
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf"
   ]
  }
 },
 "name": "ezdxf",
 "new_version": "0.16.6",
 "new_version_attempts": {
  "0.12": 1,
  "0.12.1": 1,
  "0.12.2": 1,
  "0.12.3": 1,
  "0.12.4": 1,
  "0.12.5": 1,
  "0.13": 1,
  "0.13.1": 1,
  "0.14": 1,
  "0.14.1": 1,
  "0.14.2": 1,
  "0.15": 1,
  "0.15.1": 1,
  "0.15.2": 1,
  "0.16": 1,
  "0.16.1": 1,
  "0.16.2": 1,
  "0.16.3": 1,
  "0.16.4": 1,
  "0.16.5": 1,
  "0.16.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without loosing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.\n",
   "dev_url": "http://github.com/mozman/ezdxf",
   "doc_url": "https://pythonhosted.org/ezdxf",
   "home": "http://github.com/mozman/ezdxf",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Python package to create/manipulate DXF drawings."
  },
  "build": {
   "entry_points": [
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "csachs",
    "csachs",
    "csachs",
    "csachs"
   ]
  },
  "package": {
   "name": "ezdxf",
   "version": "0.16.6"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions"
   ]
  },
  "source": {
   "fn": "ezdxf-0.16.6.zip",
   "sha256": "c9cd785fe904c4e95928cdf7924326961b2a284e782697d3e9fb3f1d4dd3de43",
   "url": "https://pypi.io/packages/source/e/ezdxf/ezdxf-0.16.6.zip"
  },
  "test": {
   "commands": [
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\""
   ],
   "imports": [
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pyparsing",
    "python",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ezdxf"
  ]
 },
 "pinning_version": "2021.08.28.07.07.17",
 "raw_meta_yaml": "{% set name = \"ezdxf\" %}\n{% set version = \"0.16.6\" %}\n{% set sha256 = \"c9cd785fe904c4e95928cdf7924326961b2a284e782697d3e9fb3f1d4dd3de43\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.zip\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n  skip: true  # [py<37]\n  entry_points:\n    - ezdxf = ezdxf.__main__:main\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - cython\n  run:\n    - python\n    - pyparsing >=2.0.1\n    - typing_extensions\n\ntest:\n  imports:\n    - ezdxf\n  commands:\n    - ezdxf --help\n    - python -c \"import ezdxf; ezdxf.new()\"\n\nabout:\n  home: http://github.com/mozman/ezdxf\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A Python package to create/manipulate DXF drawings.\n  description: |\n    A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without loosing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.    \n\n  doc_url: https://pythonhosted.org/ezdxf\n  dev_url: http://github.com/mozman/ezdxf\n\nextra:\n  recipe-maintainers:\n    - csachs\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "cython",
   "pip",
   "pyparsing",
   "python",
   "typing_extensions"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "pyparsing",
    "python",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pyparsing >=2.0.1",
    "python",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/e/ezdxf/ezdxf-0.16.6.zip",
 "version": "0.16.6",
 "win_64_meta_yaml": {
  "about": {
   "description": "A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without loosing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.\n",
   "dev_url": "http://github.com/mozman/ezdxf",
   "doc_url": "https://pythonhosted.org/ezdxf",
   "home": "http://github.com/mozman/ezdxf",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Python package to create/manipulate DXF drawings."
  },
  "build": {
   "entry_points": [
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main",
    "ezdxf = ezdxf.__main__:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "csachs",
    "csachs",
    "csachs",
    "csachs"
   ]
  },
  "package": {
   "name": "ezdxf",
   "version": "0.16.6"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run": [
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions",
    "python",
    "pyparsing >=2.0.1",
    "typing_extensions"
   ]
  },
  "source": {
   "fn": "ezdxf-0.16.6.zip",
   "sha256": "c9cd785fe904c4e95928cdf7924326961b2a284e782697d3e9fb3f1d4dd3de43",
   "url": "https://pypi.io/packages/source/e/ezdxf/ezdxf-0.16.6.zip"
  },
  "test": {
   "commands": [
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\"",
    "ezdxf --help",
    "python -c \"import ezdxf; ezdxf.new()\""
   ],
   "imports": [
    "ezdxf",
    "ezdxf",
    "ezdxf",
    "ezdxf"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pyparsing",
    "python",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}