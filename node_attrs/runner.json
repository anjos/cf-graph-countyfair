{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "runner",
 "hash_type": "sha256",
 "name": "runner",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "runner"
  ]
 },
 "raw_meta_yaml": "{% set name = \"runner\" %}\n{% set version = \"1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/TheochemGoettingen/runner-wfas/-/archive/master/runner-wfas-master.tar.gz\n  sha256: f4ed373309dd8c8ca3198d24b2a9a26eb9a5841b6dc1233b6eb59366e628dbfb\n  patches:\n    - mpi.patch  # [mpi != 'nompi']\n\nbuild:\n  number: 3\n  skip: ture  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}\n    - make\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - {{ mpi }}-mpifort  # [mpi != 'nompi']\n  host:\n    - libblas\n    - liblapack\n    - {{ mpi }}  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n\ntest:\n  commands:\n    - RuNNer.serial.x\n\nabout:\n  home: https://www.uni-goettingen.de/de/560580.html\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: 'RuNNer - a Neural Network code for high-dimensional systems'\n  description: |\n    In order to develop Neural Network potential-energy surfaces for a \n    variety of system, we have developed our in-house NN code for \n    high-dimensional systems called RuNNer, which was the first \n    implementation of high-dimensional NN potentials. Much of the \n    methodology has been originally developed with this code.\n  doc_url: https://www.uni-goettingen.de/de/560580.html\n  dev_url: https://gitlab.com/TheochemGoettingen/runner-wfas/\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "strong_exports": false,
 "url": "https://gitlab.com/TheochemGoettingen/runner-wfas/-/archive/master/runner-wfas-master.tar.gz",
 "version": "1.2"
}