{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/198459301.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242323686.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262668035.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/309155256.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "c3f75a2b-594d-441a-a44a-f5e4a5c5c389",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "netcdf-fortran-4.5.x"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/344939575.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "netcdf-fortran-4.5.x"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/420362880.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509627285.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/619023758.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf480"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/724630234.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf481"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/753919020.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1011406353.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "siesta",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SIESTA is both a method and its computer program implementation,\nto perform efficient electronic structure calculations and ab initio\nmolecular dynamics simulations of molecules and solids. SIESTA's\nefficiency stems from the use of strictly localized basis sets and\nfrom the implementation of linear-scaling algorithms which can be\napplied to suitable systems. A very important feature of the code is\nthat its accuracy and cost can be tuned in a wide range, from quick\nexploratory calculations to highly accurate simulations matching the\nquality of other approaches, such as plane-wave and all-electron methods.\n",
   "dev_url": "https://gitlab.com/siesta-project/siesta",
   "home": "https://gitlab.com/siesta-project",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A first-principles materials simulation code using DFT"
  },
  "build": {
   "number": "11",
   "run_exports": [
    "siesta",
    "siesta",
    "siesta"
   ],
   "string": "mpi_openmpi_h1234567_11"
  },
  "extra": {
   "recipe-maintainers": [
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "siesta",
   "version": "4.0.2"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*"
   ],
   "run": [
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*"
   ]
  },
  "source": {
   "fn": "siesta-v4.0.2.tar.bz2",
   "patches": [
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch"
   ],
   "sha256": "04300ba77a32d0ba2844d704e1c404d1417bd8c1ab76dba9d19f074076d9bc18",
   "url": "https://gitlab.com/siesta-project/siesta/-/archive/v4.0.2/siesta-v4.0.2.tar.bz2"
  },
  "test": {
   "source_files": [
    "Tests/**",
    "Tests/**",
    "Tests/**"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fox",
    "hdf5",
    "libblas",
    "liblapack",
    "libnetcdf",
    "netcdf-fortran",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fox",
    "hdf5",
    "libnetcdf",
    "netcdf-fortran",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SIESTA is both a method and its computer program implementation,\nto perform efficient electronic structure calculations and ab initio\nmolecular dynamics simulations of molecules and solids. SIESTA's\nefficiency stems from the use of strictly localized basis sets and\nfrom the implementation of linear-scaling algorithms which can be\napplied to suitable systems. A very important feature of the code is\nthat its accuracy and cost can be tuned in a wide range, from quick\nexploratory calculations to highly accurate simulations matching the\nquality of other approaches, such as plane-wave and all-electron methods.\n",
   "dev_url": "https://gitlab.com/siesta-project/siesta",
   "home": "https://gitlab.com/siesta-project",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A first-principles materials simulation code using DFT"
  },
  "build": {
   "number": "11",
   "run_exports": [
    "siesta",
    "siesta",
    "siesta",
    "siesta",
    "siesta",
    "siesta"
   ],
   "string": "mpi_openmpi_h1234567_11"
  },
  "extra": {
   "recipe-maintainers": [
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "siesta",
   "version": "4.0.2"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*"
   ],
   "run": [
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*"
   ]
  },
  "source": {
   "fn": "siesta-v4.0.2.tar.bz2",
   "patches": [
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch"
   ],
   "sha256": "04300ba77a32d0ba2844d704e1c404d1417bd8c1ab76dba9d19f074076d9bc18",
   "url": "https://gitlab.com/siesta-project/siesta/-/archive/v4.0.2/siesta-v4.0.2.tar.bz2"
  },
  "test": {
   "source_files": [
    "Tests/**",
    "Tests/**",
    "Tests/**",
    "Tests/**",
    "Tests/**",
    "Tests/**"
   ]
  }
 },
 "name": "siesta",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "SIESTA is both a method and its computer program implementation,\nto perform efficient electronic structure calculations and ab initio\nmolecular dynamics simulations of molecules and solids. SIESTA's\nefficiency stems from the use of strictly localized basis sets and\nfrom the implementation of linear-scaling algorithms which can be\napplied to suitable systems. A very important feature of the code is\nthat its accuracy and cost can be tuned in a wide range, from quick\nexploratory calculations to highly accurate simulations matching the\nquality of other approaches, such as plane-wave and all-electron methods.\n",
   "dev_url": "https://gitlab.com/siesta-project/siesta",
   "home": "https://gitlab.com/siesta-project",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A first-principles materials simulation code using DFT"
  },
  "build": {
   "number": "11",
   "run_exports": [
    "siesta",
    "siesta",
    "siesta"
   ],
   "string": "mpi_openmpi_h1234567_11"
  },
  "extra": {
   "recipe-maintainers": [
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen",
    "zerothi",
    "albgar",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "siesta",
   "version": "4.0.2"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "make"
   ],
   "host": [
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*"
   ],
   "run": [
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "zlib",
    "fox",
    "scalapack",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*"
   ]
  },
  "source": {
   "fn": "siesta-v4.0.2.tar.bz2",
   "patches": [
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch",
    "patches/makefile_conda-clean.patch"
   ],
   "sha256": "04300ba77a32d0ba2844d704e1c404d1417bd8c1ab76dba9d19f074076d9bc18",
   "url": "https://gitlab.com/siesta-project/siesta/-/archive/v4.0.2/siesta-v4.0.2.tar.bz2"
  },
  "test": {
   "source_files": [
    "Tests/**",
    "Tests/**",
    "Tests/**"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fox",
    "hdf5",
    "libblas",
    "liblapack",
    "libnetcdf",
    "netcdf-fortran",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fox",
    "hdf5",
    "libnetcdf",
    "netcdf-fortran",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "siesta"
  ]
 },
 "pinning_version": "2022.07.28.19.34.36",
 "pre_pr_migrator_attempts": {
  "gcc930": 1,
  "netcdf_fortran46": 1531
 },
 "pre_pr_migrator_status": {
  "gcc930": "bot error: Traceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 38, in __call__\n    return cls._cache_[arg]\nKeyError: '>=0*,<0+'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 38, in __call__\n    return cls._cache_[arg]\nKeyError: '<0+'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 38, in __call__\n    return cls._cache_[arg]\nKeyError: '0+'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 943, in main\n    hash_type=attrs.get(\"hash_type\", \"sha256\"),\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 250, in run\n    solvable, errors, _ = is_recipe_solvable(feedstock_dir)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 433, in is_recipe_solvable\n    additional_channels=additional_channels,\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 583, in _is_recipe_solvable_on_platform\n    _solvable, _err = mamba_solver.solve(run_req)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 285, in solve\n    _specs = [_norm_spec(s) for s in specs]\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 285, in <listcomp>\n    _specs = [_norm_spec(s) for s in specs]\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 82, in _norm_spec\n    m = MatchSpec(myspec)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/match_spec.py\", line 55, in __call__\n    return super(MatchSpecType, cls).__call__(**parsed)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/match_spec.py\", line 177, in __init__\n    self._match_components = self._build_components(**kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/match_spec.py\", line 403, in _build_components\n    return frozendict(_make_component(key, value) for key, value in iteritems(kwargs))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/match_spec.py\", line 403, in <genexpr>\n    return frozendict(_make_component(key, value) for key, value in iteritems(kwargs))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/match_spec.py\", line 417, in _make_component\n    matcher = _implementors[field_name](value)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 40, in __call__\n    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 497, in __init__\n    vspec_str, matcher, is_exact = self.get_matcher(vspec)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 508, in get_matcher\n    tup = tuple(VersionSpec(s) for s in vspec_tree[1:])\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 508, in <genexpr>\n    tup = tuple(VersionSpec(s) for s in vspec_tree[1:])\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 40, in __call__\n    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 497, in __init__\n    vspec_str, matcher, is_exact = self.get_matcher(vspec)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 546, in get_matcher\n    self.matcher_vo = VersionOrder(vo_str)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 40, in __call__\n    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda/models/version.py\", line 220, in __init__\n    raise InvalidVersionSpec(vstr, \"empty version component\")\nconda.exceptions.InvalidVersionSpec: Invalid version '0+': empty version component\n",
  "netcdf_fortran46": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3795723548\">bot CI job</a>): main: ['linux_64_mpimpich: Encountered problems while solving:\\n  - package libnetcdf-4.8.1-mpi_mpich_h06c54e2_3 requires hdf5 >=1.12.2,<1.12.3.0a0 mpi_mpich_*, but none of the providers can be installed\\n', 'linux_64_mpinompi: Encountered problems while solving:\\n  - package netcdf-fortran-4.6.0-mpi_mpich_hd09bd1e_1 requires libnetcdf >=4.8.1,<4.8.2.0a0 mpi_mpich_*, but none of the providers can be installed\\n', 'linux_64_mpiopenmpi: Encountered problems while solving:\\n  - package netcdf-fortran-4.6.0-mpi_openmpi_hc58b31e_1 requires hdf5 >=1.12.2,<1.12.3.0a0 mpi_openmpi_*, but none of the providers can be installed\\n', 'osx_64_mpimpich: Encountered problems while solving:\\n  - package libnetcdf-4.8.1-mpi_mpich_h5e8bdaf_3 requires hdf5 >=1.12.2,<1.12.3.0a0 mpi_mpich_*, but none of the providers can be installed\\n', 'osx_64_mpinompi: Encountered problems while solving:\\n  - package netcdf-fortran-4.6.0-mpi_mpich_hddcf434_1 requires libnetcdf >=4.8.1,<4.8.2.0a0 mpi_mpich_*, but none of the providers can be installed\\n', 'osx_64_mpiopenmpi: Encountered problems while solving:\\n  - package netcdf-fortran-4.6.0-mpi_openmpi_hfdca3f3_1 requires hdf5 >=1.12.2,<1.12.3.0a0 mpi_openmpi_*, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"siesta\" %}\n{% set siesta_version = \"4.0.2\" %}\n{% set version = siesta_version.split(\"-b\")[0] %}\n{% set sha256 = \"04300ba77a32d0ba2844d704e1c404d1417bd8c1ab76dba9d19f074076d9bc18\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-v{{ siesta_version }}.tar.bz2\n  url: https://gitlab.com/siesta-project/{{ name }}/-/archive/v{{ siesta_version }}/siesta-v{{ siesta_version }}.tar.bz2\n  sha256: {{ sha256 }}\n  patches:\n    # make version.o a phony target\n    - patches/makefile_conda-clean.patch\n\n# Default build version to be stepped with every new build!\n{% set build = 11 %}\n\n# Define build matrix for MPI vs. non-mpi\n## ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == 'nompi' %}\n# prioritize nompi variant via build number\n{% set build = build + 1000 %}\n{% endif %}\n\n{% if mpi != 'nompi' %}\n{% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n{% set mpi_prefix = \"nompi\" %}\n{% endif %}\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    - {{ name }}\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - make  # [not win]\n  host:\n    - libblas\n    - liblapack\n    - {{ mpi }}  # [mpi != 'nompi']\n    - zlib\n    - fox\n    - scalapack  # [mpi != 'nompi']\n    # need to list hdf5, libnetcdf and netcdf-fortran twice to get version\n    # pinning from conda_build_config and build pinning from {{ mpi_prefix }}\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*\n    - libnetcdf\n    - libnetcdf * {{ mpi_prefix }}_*\n    - netcdf-fortran\n    - netcdf-fortran * {{ mpi_prefix }}_*\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - zlib\n    - fox\n    - scalapack  # [mpi != 'nompi']\n    - hdf5 * {{ mpi_prefix }}_*\n    - libnetcdf * {{ mpi_prefix }}_*\n    - netcdf-fortran * {{ mpi_prefix }}_*\n\ntest:\n  source_files:\n    - Tests/**\n\nabout:\n  home: https://gitlab.com/siesta-project\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: A first-principles materials simulation code using DFT\n  description: |\n    SIESTA is both a method and its computer program implementation,\n    to perform efficient electronic structure calculations and ab initio\n    molecular dynamics simulations of molecules and solids. SIESTA's\n    efficiency stems from the use of strictly localized basis sets and\n    from the implementation of linear-scaling algorithms which can be\n    applied to suitable systems. A very important feature of the code is\n    that its accuracy and cost can be tuned in a wide range, from quick\n    exploratory calculations to highly accurate simulations matching the\n    quality of other approaches, such as plane-wave and all-electron methods.\n  dev_url: https://gitlab.com/siesta-project/siesta\n\nextra:\n  recipe-maintainers:\n    - zerothi\n    - albgar\n    - jan-janssen\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fortran_compiler_stub",
   "fox",
   "hdf5",
   "libblas",
   "liblapack",
   "libnetcdf",
   "make",
   "netcdf-fortran",
   "openmpi",
   "scalapack",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "fox",
    "hdf5",
    "libblas",
    "liblapack",
    "libnetcdf",
    "netcdf-fortran",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "fox",
    "hdf5",
    "libnetcdf",
    "netcdf-fortran",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "time": 1568135290.8494737,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fox",
    "hdf5",
    "hdf5 * mpi_openmpi_*",
    "libblas",
    "liblapack",
    "libnetcdf",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fox",
    "hdf5 * mpi_openmpi_*",
    "libnetcdf * mpi_openmpi_*",
    "netcdf-fortran * mpi_openmpi_*",
    "openmpi",
    "scalapack",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.com/siesta-project/siesta/-/archive/v4.0.2/siesta-v4.0.2.tar.bz2",
 "version": "4.0.2"
}