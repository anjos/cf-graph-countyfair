{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "aiounittest",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The aiounittest is a helper library to ease of your pain (and boilerplate),\nwhen writing a test of the asynchronous code (asyncio). You can test:\n\n- synchronous code (same as the unittest.TestCase)\n- asynchronous code, it supports syntax with async/await (Python 3.5+) and\n  asyncio.coroutine/yield from (Python 3.4)\n\nIn the Python 3.8 (release note) and newer consider to use the\nunittest.IsolatedAsyncioTestCase. Builtin unittest module is now\nasyncio-featured.\n",
   "home": "https://github.com/kwarunek/aiounittest",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Test asyncio code more easily."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl"
   ]
  },
  "package": {
   "name": "aiounittest",
   "version": "1.4.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.4"
   ],
   "run": [
    "python >=3.4",
    "wrapt"
   ]
  },
  "source": {
   "sha256": "5bd6b507a0df4f3497340fce3f6d41b8e558f5c0ad266efc7cebe5bc41c6211b",
   "url": "https://pypi.io/packages/source/a/aiounittest/aiounittest-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "aiounittest"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The aiounittest is a helper library to ease of your pain (and boilerplate),\nwhen writing a test of the asynchronous code (asyncio). You can test:\n\n- synchronous code (same as the unittest.TestCase)\n- asynchronous code, it supports syntax with async/await (Python 3.5+) and\n  asyncio.coroutine/yield from (Python 3.4)\n\nIn the Python 3.8 (release note) and newer consider to use the\nunittest.IsolatedAsyncioTestCase. Builtin unittest module is now\nasyncio-featured.\n",
   "home": "https://github.com/kwarunek/aiounittest",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Test asyncio code more easily."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl"
   ]
  },
  "package": {
   "name": "aiounittest",
   "version": "1.4.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.4"
   ],
   "run": [
    "python >=3.4",
    "wrapt"
   ]
  },
  "source": {
   "sha256": "5bd6b507a0df4f3497340fce3f6d41b8e558f5c0ad266efc7cebe5bc41c6211b",
   "url": "https://pypi.io/packages/source/a/aiounittest/aiounittest-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "aiounittest"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "aiounittest",
 "new_version": "1.4.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "aiounittest"
  ]
 },
 "raw_meta_yaml": "{% set name = \"aiounittest\" %}\n{% set version = \"1.4.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/aiounittest-{{ version }}.tar.gz\n  sha256: 5bd6b507a0df4f3497340fce3f6d41b8e558f5c0ad266efc7cebe5bc41c6211b\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.4\n  run:\n    - python >=3.4\n    - wrapt\n\ntest:\n  imports:\n    - aiounittest\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/kwarunek/aiounittest\n  summary: Test asyncio code more easily.\n  license: MIT\n  license_file: LICENSE\n  description: |\n    The aiounittest is a helper library to ease of your pain (and boilerplate),\n    when writing a test of the asynchronous code (asyncio). You can test:\n\n    - synchronous code (same as the unittest.TestCase)\n    - asynchronous code, it supports syntax with async/await (Python 3.5+) and\n      asyncio.coroutine/yield from (Python 3.4)\n\n    In the Python 3.8 (release note) and newer consider to use the\n    unittest.IsolatedAsyncioTestCase. Builtin unittest module is now\n    asyncio-featured.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python",
   "wrapt"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.4"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3.4",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/a/aiounittest/aiounittest-1.4.0.tar.gz",
 "version": "1.4.0"
}