{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199864654.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/218310725.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/218726546.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224849408.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/227281280.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231754886.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242503008.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244308763.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244832962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260524497.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260544685.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266407763.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/290879567.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/295128558.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/353309877.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410102533.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/410663440.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/417903333.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/462928929.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519143274.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "timezonefinder",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is a fast and lightweight python package for looking up the corresponding timezone for given\ncorresponding timezone for a given lat/lng on earth entirely offline.\n\nThis project is derived from and has been successfully tested against\npytzwhere (github), but aims at providing improved performance and usability.\n",
   "dev_url": "https://github.com/MrMinimal64/timezonefinder",
   "home": "https://github.com/MrMinimal64/timezonefinder",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "fast python package for finding the timezone of any point on earth (coordinates) offline"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "snowman2"
   ]
  },
  "package": {
   "name": "timezonefinder",
   "version": "4.5.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python 3",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python 3",
    "numpy",
    "numba"
   ]
  },
  "source": {
   "fn": "timezonefinder-4.5.0.tar.gz",
   "sha256": "99b0cea5abf304e8738ecf5cceae0c0e5182534843f19638a26a220fa212fbad",
   "url": "https://pypi.io/packages/source/t/timezonefinder/timezonefinder-4.5.0.tar.gz"
  },
  "test": {
   "imports": [
    "timezonefinder",
    "timezonefinder.timezonefinder",
    "timezonefinder.helpers"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is a fast and lightweight python package for looking up the corresponding timezone for given\ncorresponding timezone for a given lat/lng on earth entirely offline.\n\nThis project is derived from and has been successfully tested against\npytzwhere (github), but aims at providing improved performance and usability.\n",
   "dev_url": "https://github.com/MrMinimal64/timezonefinder",
   "home": "https://github.com/MrMinimal64/timezonefinder",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "fast python package for finding the timezone of any point on earth (coordinates) offline"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "snowman2"
   ]
  },
  "package": {
   "name": "timezonefinder",
   "version": "4.5.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python 3",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python 3",
    "numpy",
    "numba"
   ]
  },
  "source": {
   "fn": "timezonefinder-4.5.0.tar.gz",
   "sha256": "99b0cea5abf304e8738ecf5cceae0c0e5182534843f19638a26a220fa212fbad",
   "url": "https://pypi.io/packages/source/t/timezonefinder/timezonefinder-4.5.0.tar.gz"
  },
  "test": {
   "imports": [
    "timezonefinder",
    "timezonefinder.timezonefinder",
    "timezonefinder.helpers"
   ]
  }
 },
 "name": "timezonefinder",
 "new_version": "4.5.0",
 "new_version_attempts": {
  "4.3.0": 1,
  "4.3.1": 1,
  "4.4.0": 1,
  "4.4.1": 1,
  "4.5.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "This is a fast and lightweight python package for looking up the corresponding timezone for given\ncorresponding timezone for a given lat/lng on earth entirely offline.\n\nThis project is derived from and has been successfully tested against\npytzwhere (github), but aims at providing improved performance and usability.\n",
   "dev_url": "https://github.com/MrMinimal64/timezonefinder",
   "home": "https://github.com/MrMinimal64/timezonefinder",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "fast python package for finding the timezone of any point on earth (coordinates) offline"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "snowman2"
   ]
  },
  "package": {
   "name": "timezonefinder",
   "version": "4.4.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python 3",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python 3",
    "importlib_resources",
    "numpy",
    "numba"
   ]
  },
  "source": {
   "fn": "timezonefinder-4.4.1.tar.gz",
   "sha256": "c84e0f4b501419349e67972d25c535d9b5fd6c100c319747049b67812a4c6b97",
   "url": "https://pypi.io/packages/source/t/timezonefinder/timezonefinder-4.4.1.tar.gz"
  },
  "test": {
   "imports": [
    "timezonefinder",
    "timezonefinder.timezonefinder",
    "timezonefinder.helpers"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib_resources",
    "numba",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "timezonefinder"
  ]
 },
 "pinning_version": "2020.11.11.10.18.59",
 "raw_meta_yaml": "{% set name = \"timezonefinder\" %}\n{% set version = \"4.5.0\" %}\n{% set sha256 = \"99b0cea5abf304e8738ecf5cceae0c0e5182534843f19638a26a220fa212fbad\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python 3\n    - setuptools\n    - numpy\n  run:\n    - python 3\n    - numpy\n    - numba\n\ntest:\n  imports:\n    - timezonefinder\n    - timezonefinder.timezonefinder\n    - timezonefinder.helpers\n\nabout:\n  home: https://github.com/MrMinimal64/timezonefinder\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: fast python package for finding the timezone of any point on earth (coordinates) offline\n  description: |\n    This is a fast and lightweight python package for looking up the corresponding timezone for given \n    corresponding timezone for a given lat/lng on earth entirely offline.\n\n    This project is derived from and has been successfully tested against\n    pytzwhere (github), but aims at providing improved performance and usability.\n  dev_url: https://github.com/MrMinimal64/timezonefinder\n\nextra:\n  recipe-maintainers:\n    - snowman2\n",
 "req": {
  "__set__": true,
  "elements": [
   "numba",
   "numpy",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python 3",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "python 3"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/timezonefinder/timezonefinder-4.1.0.tar.gz",
 "version": "4.5.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "This is a fast and lightweight python package for looking up the corresponding timezone for given\ncorresponding timezone for a given lat/lng on earth entirely offline.\n\nThis project is derived from and has been successfully tested against\npytzwhere (github), but aims at providing improved performance and usability.\n",
   "dev_url": "https://github.com/MrMinimal64/timezonefinder",
   "home": "https://github.com/MrMinimal64/timezonefinder",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "fast python package for finding the timezone of any point on earth (coordinates) offline"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "snowman2"
   ]
  },
  "package": {
   "name": "timezonefinder",
   "version": "4.4.1"
  },
  "requirements": {
   "host": [
    "pip",
    "python 3",
    "setuptools",
    "numpy"
   ],
   "run": [
    "python 3",
    "importlib_resources",
    "numpy",
    "numba"
   ]
  },
  "source": {
   "fn": "timezonefinder-4.4.1.tar.gz",
   "sha256": "c84e0f4b501419349e67972d25c535d9b5fd6c100c319747049b67812a4c6b97",
   "url": "https://pypi.io/packages/source/t/timezonefinder/timezonefinder-4.4.1.tar.gz"
  },
  "test": {
   "imports": [
    "timezonefinder",
    "timezonefinder.timezonefinder",
    "timezonefinder.helpers"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "importlib_resources",
    "numba",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}