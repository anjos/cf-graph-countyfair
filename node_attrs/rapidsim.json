{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/293937502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/382389456.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root620000"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393662729.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6202"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/406808210.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6204"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435001734.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base622"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/596454759.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6226"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597494317.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6228"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/643824528.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6240"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "rapidsim",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "RapidSim is a fast Monte Carlo generator for simulation of heavy-quark hadron decays.\nIt can be useful for generating background or toy data sets for acceptance studies.\n\n* It uses [`TGenPhaseSpace`](https://root.cern.ch/doc/master/classTGenPhaseSpace.html) to generate b/c quark hadron decays.\n* [FONLL](http://cacciari.web.cern.ch/cacciari/fonll/) is used to give the b/c the correct production kinematics for the LHC.\n* The daughter particle momenta are smeared correctly using user-defined resolutions.\n* Cuts can be made on daughter particle properties (pT, eta, etc).\n* Particle mass hypotheses can be swapped to investigate effect of mis-identification.\n\nA more detailed description can be found here https://arxiv.org/abs/1612.07489\n",
   "dev_url": "https://github.com/gcowan/RapidSim",
   "doc_url": "https://github.com/gcowan/RapidSim",
   "home": "https://github.com/gcowan/RapidSim",
   "license": "MIT AND GPL-3.0-or-later",
   "license_file": "Licence.md",
   "summary": "A fast Monte Carlo generator for simulation of heavy-quark hadron decays"
  },
  "build": {
   "number": "9",
   "skip_compile_pyc": [
    "*/utils/compareParts.py"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr"
   ]
  },
  "package": {
   "name": "rapidsim",
   "version": "1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "sed"
   ],
   "host": [
    "root_base",
    "evtgen"
   ],
   "run_constrained": null
  },
  "source": {
   "patches": [
    "evtgen-linking.patch"
   ],
   "sha256": "14d8043fd40805f3bc144c4e35846392de535bbfee842ea2d1ec9232c7b0c585",
   "url": "https://github.com/gcowan/RapidSim/archive/v1.5.tar.gz"
  },
  "test": {
   "commands": [
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 1000 1",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2Jpsiphi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bd2D0rho0 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2D0Kpi 10000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/D02Kpi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Lb2chicpK 100000",
    "mkdir plots",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"B2Kee\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2Jpsiphi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bd2D0rho0\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2D0Kpi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"D02Kpi\\\")\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "evtgen",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "RapidSim is a fast Monte Carlo generator for simulation of heavy-quark hadron decays.\nIt can be useful for generating background or toy data sets for acceptance studies.\n\n* It uses [`TGenPhaseSpace`](https://root.cern.ch/doc/master/classTGenPhaseSpace.html) to generate b/c quark hadron decays.\n* [FONLL](http://cacciari.web.cern.ch/cacciari/fonll/) is used to give the b/c the correct production kinematics for the LHC.\n* The daughter particle momenta are smeared correctly using user-defined resolutions.\n* Cuts can be made on daughter particle properties (pT, eta, etc).\n* Particle mass hypotheses can be swapped to investigate effect of mis-identification.\n\nA more detailed description can be found here https://arxiv.org/abs/1612.07489\n",
   "dev_url": "https://github.com/gcowan/RapidSim",
   "doc_url": "https://github.com/gcowan/RapidSim",
   "home": "https://github.com/gcowan/RapidSim",
   "license": "MIT AND GPL-3.0-or-later",
   "license_file": "Licence.md",
   "summary": "A fast Monte Carlo generator for simulation of heavy-quark hadron decays"
  },
  "build": {
   "number": "9",
   "skip_compile_pyc": [
    "*/utils/compareParts.py",
    "*/utils/compareParts.py"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr",
    "chrisburr"
   ]
  },
  "package": {
   "name": "rapidsim",
   "version": "1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "sed",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "sed"
   ],
   "host": [
    "root_base",
    "evtgen",
    "root_base",
    "evtgen"
   ],
   "run_constrained": [
    "__osx >=10.13"
   ]
  },
  "source": {
   "patches": [
    "evtgen-linking.patch",
    "evtgen-linking.patch"
   ],
   "sha256": "14d8043fd40805f3bc144c4e35846392de535bbfee842ea2d1ec9232c7b0c585",
   "url": "https://github.com/gcowan/RapidSim/archive/v1.5.tar.gz"
  },
  "test": {
   "commands": [
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 1000 1",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2Jpsiphi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bd2D0rho0 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2D0Kpi 10000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/D02Kpi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Lb2chicpK 100000",
    "mkdir plots",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"B2Kee\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2Jpsiphi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bd2D0rho0\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2D0Kpi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"D02Kpi\\\")\"",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 1000 1",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2Jpsiphi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bd2D0rho0 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2D0Kpi 10000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/D02Kpi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Lb2chicpK 100000",
    "mkdir plots",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"B2Kee\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2Jpsiphi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bd2D0rho0\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2D0Kpi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"D02Kpi\\\")\""
   ]
  }
 },
 "name": "rapidsim",
 "new_version": "1.5",
 "osx_64_meta_yaml": {
  "about": {
   "description": "RapidSim is a fast Monte Carlo generator for simulation of heavy-quark hadron decays.\nIt can be useful for generating background or toy data sets for acceptance studies.\n\n* It uses [`TGenPhaseSpace`](https://root.cern.ch/doc/master/classTGenPhaseSpace.html) to generate b/c quark hadron decays.\n* [FONLL](http://cacciari.web.cern.ch/cacciari/fonll/) is used to give the b/c the correct production kinematics for the LHC.\n* The daughter particle momenta are smeared correctly using user-defined resolutions.\n* Cuts can be made on daughter particle properties (pT, eta, etc).\n* Particle mass hypotheses can be swapped to investigate effect of mis-identification.\n\nA more detailed description can be found here https://arxiv.org/abs/1612.07489\n",
   "dev_url": "https://github.com/gcowan/RapidSim",
   "doc_url": "https://github.com/gcowan/RapidSim",
   "home": "https://github.com/gcowan/RapidSim",
   "license": "MIT AND GPL-3.0-or-later",
   "license_file": "Licence.md",
   "summary": "A fast Monte Carlo generator for simulation of heavy-quark hadron decays"
  },
  "build": {
   "number": "9",
   "skip_compile_pyc": [
    "*/utils/compareParts.py"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "chrisburr"
   ]
  },
  "package": {
   "name": "rapidsim",
   "version": "1.5"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "sed"
   ],
   "host": [
    "root_base",
    "evtgen"
   ],
   "run_constrained": [
    "__osx >=10.13"
   ]
  },
  "source": {
   "patches": [
    "evtgen-linking.patch"
   ],
   "sha256": "14d8043fd40805f3bc144c4e35846392de535bbfee842ea2d1ec9232c7b0c585",
   "url": "https://github.com/gcowan/RapidSim/archive/v1.5.tar.gz"
  },
  "test": {
   "commands": [
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 1000 1",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2Jpsiphi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bd2D0rho0 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2D0Kpi 10000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/D02Kpi 100000",
    "RapidSim.exe ${RAPIDSIM_ROOT}/validation/Lb2chicpK 100000",
    "mkdir plots",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"B2Kee\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2Jpsiphi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bd2D0rho0\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2D0Kpi\\\")\"",
    "root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"D02Kpi\\\")\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "evtgen",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rapidsim"
  ]
 },
 "pinning_version": "2021.05.13.06.28.40",
 "pre_pr_migrator_status": {
  "root_base6240": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/769601846\">bot CI job</a>): master: [\"TypeError('__init__(): incompatible constructor arguments. The following argument types are supported:\\\\n    1. mamba.mamba_api.Transaction(arg0: mamba::MSolver, arg1: mamba.mamba_api.MultiPackageCache, arg2: str)\\\\n\\\\nInvoked with: <mamba.mamba_api.Solver object at 0x7f5f58b28cf0>, <mamba.mamba_api.MultiPackageCache object at 0x7f5f722e2a30>')\"]",
  "root_base6244": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1185294857\">bot CI job</a>): master: ['linux_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 2\\n', 'osx_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 3\\n']"
 },
 "raw_meta_yaml": "{% set name = \"rapidsim\" %}\n{% set version = \"1.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gcowan/RapidSim/archive/v{{ version }}.tar.gz\n  sha256: 14d8043fd40805f3bc144c4e35846392de535bbfee842ea2d1ec9232c7b0c585\n  patches:\n    - evtgen-linking.patch\n\nbuild:\n  number: 9\n  skip: True  # [win]\n  skip_compile_pyc:\n    - \"*/utils/compareParts.py\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make\n    - sed\n  host:\n    - root_base\n    - evtgen\n  run_constrained:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\ntest:\n  commands:\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 1000 1\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/B2Kee 100000\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2Jpsiphi 100000\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bd2D0rho0 100000\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/Bs2D0Kpi 10000\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/D02Kpi 100000\n    - RapidSim.exe ${RAPIDSIM_ROOT}/validation/Lb2chicpK 100000\n\n    - mkdir plots\n    - root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"B2Kee\\\")\"\n    - root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2Jpsiphi\\\")\"\n    - root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bd2D0rho0\\\")\"\n    - root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"Bs2D0Kpi\\\")\"\n    - root -b -q -l \"${RAPIDSIM_ROOT}/validation/compareHistograms.C(\\\"D02Kpi\\\")\"\n\nabout:\n  home: https://github.com/gcowan/RapidSim\n  # Linking to EvtGen forces RapidSim to be relicensed under GPL\n  license: MIT AND GPL-3.0-or-later\n  license_file: Licence.md\n  summary: 'A fast Monte Carlo generator for simulation of heavy-quark hadron decays'\n  description: |\n    RapidSim is a fast Monte Carlo generator for simulation of heavy-quark hadron decays.\n    It can be useful for generating background or toy data sets for acceptance studies.\n\n    * It uses [`TGenPhaseSpace`](https://root.cern.ch/doc/master/classTGenPhaseSpace.html) to generate b/c quark hadron decays.\n    * [FONLL](http://cacciari.web.cern.ch/cacciari/fonll/) is used to give the b/c the correct production kinematics for the LHC.\n    * The daughter particle momenta are smeared correctly using user-defined resolutions.\n    * Cuts can be made on daughter particle properties (pT, eta, etc).\n    * Particle mass hypotheses can be swapped to investigate effect of mis-identification.\n\n    A more detailed description can be found here https://arxiv.org/abs/1612.07489\n  doc_url: https://github.com/gcowan/RapidSim\n  dev_url: https://github.com/gcowan/RapidSim\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "evtgen",
   "make",
   "root_base",
   "sed"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "evtgen",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "evtgen",
    "root_base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/gcowan/RapidSim/archive/v1.5.tar.gz",
 "version": "1.5"
}