{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/774847393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797472237.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/814077319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/816743850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "tensorwaves",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "tensorwaves is a Python package for **validating and generating particle reactions**\nusing quantum number conservation rules. The user only has to provide a certain\nset of boundary conditions (initial and final state, allowed interaction types,\nexpected decay topologies, etc.). tensorwaves will then span the space of allowed\nquantum numbers over all allowed decay topologies and particle instances that\ncorrespond with the sets of allowed quantum numbers it has found.\n\nThe resulting state transition objects are particularly useful for **amplitude\nanalysis / Partial Wave Analysis** as they contain all information (such as\nexpected masses, widths, and spin projections) that is needed to formulate an\namplitude model.\n",
   "dev_url": "https://github.com/ComPWA/tensorwaves",
   "doc_url": "https://tensorwaves.readthedocs.io",
   "home": "https://github.com/ComPWA/tensorwaves",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Python fitter package for multiple computational back-ends"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "redeboer"
   ]
  },
  "package": {
   "name": "tensorwaves",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6,<3.10",
    "attrs >=20.1.0",
    "iminuit >=2.0",
    "numpy",
    "phasespace >=1.2.0,<1.5.0",
    "PyYAML >=5.1",
    "sympy >=1.9",
    "tensorflow >=2.4,<2.8",
    "tqdm >=4.24.0"
   ]
  },
  "source": {
   "sha256": "099ad06b495e7d6354b7f8a303c419bf97dff94c370135366a4fc4d2e67fb118",
   "url": "https://pypi.io/packages/source/t/tensorwaves/tensorwaves-0.4.0.tar.gz"
  },
  "test": {
   "imports": [
    "tensorwaves",
    "tensorwaves.data",
    "tensorwaves.estimator",
    "tensorwaves.function",
    "tensorwaves.interface",
    "tensorwaves.optimizer"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs",
    "iminuit",
    "numpy",
    "phasespace",
    "python",
    "pyyaml",
    "sympy",
    "tensorflow",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "tensorwaves is a Python package for **validating and generating particle reactions**\nusing quantum number conservation rules. The user only has to provide a certain\nset of boundary conditions (initial and final state, allowed interaction types,\nexpected decay topologies, etc.). tensorwaves will then span the space of allowed\nquantum numbers over all allowed decay topologies and particle instances that\ncorrespond with the sets of allowed quantum numbers it has found.\n\nThe resulting state transition objects are particularly useful for **amplitude\nanalysis / Partial Wave Analysis** as they contain all information (such as\nexpected masses, widths, and spin projections) that is needed to formulate an\namplitude model.\n",
   "dev_url": "https://github.com/ComPWA/tensorwaves",
   "doc_url": "https://tensorwaves.readthedocs.io",
   "home": "https://github.com/ComPWA/tensorwaves",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Python fitter package for multiple computational back-ends"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "redeboer"
   ]
  },
  "package": {
   "name": "tensorwaves",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6,<3.10",
    "attrs >=20.1.0",
    "iminuit >=2.0",
    "numpy",
    "phasespace >=1.2.0,<1.5.0",
    "PyYAML >=5.1",
    "sympy >=1.9",
    "tensorflow >=2.4,<2.8",
    "tqdm >=4.24.0"
   ]
  },
  "source": {
   "sha256": "099ad06b495e7d6354b7f8a303c419bf97dff94c370135366a4fc4d2e67fb118",
   "url": "https://pypi.io/packages/source/t/tensorwaves/tensorwaves-0.4.0.tar.gz"
  },
  "test": {
   "imports": [
    "tensorwaves",
    "tensorwaves.data",
    "tensorwaves.estimator",
    "tensorwaves.function",
    "tensorwaves.interface",
    "tensorwaves.optimizer"
   ]
  }
 },
 "name": "tensorwaves",
 "new_version": "0.4.1",
 "new_version_attempts": {
  "0.3.4": 1,
  "0.3.7": 1,
  "0.4.0": 1,
  "0.4.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tensorwaves"
  ]
 },
 "pinning_version": "2022.01.07.19.03.47",
 "raw_meta_yaml": "{% set name = \"TensorWaves\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0]|lower }}/{{ name|lower }}/{{ name|lower }}-{{ version }}.tar.gz\n  sha256: 099ad06b495e7d6354b7f8a303c419bf97dff94c370135366a4fc4d2e67fb118\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6,<3.10\n    - setuptools_scm\n  run:\n    - python >=3.6,<3.10\n    - attrs >=20.1.0\n    - iminuit >=2.0\n    - numpy\n    - phasespace >=1.2.0,<1.5.0\n    - PyYAML >=5.1\n    - sympy >=1.9\n    - tensorflow >=2.4,<2.8\n    - tqdm >=4.24.0\n\ntest:\n  imports:\n    - tensorwaves\n    - tensorwaves.data\n    - tensorwaves.estimator\n    - tensorwaves.function\n    - tensorwaves.interface\n    - tensorwaves.optimizer\n\nabout:\n  home: https://github.com/ComPWA/tensorwaves\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Python fitter package for multiple computational back-ends\n\n  description: |\n    tensorwaves is a Python package for **validating and generating particle reactions**\n    using quantum number conservation rules. The user only has to provide a certain\n    set of boundary conditions (initial and final state, allowed interaction types,\n    expected decay topologies, etc.). tensorwaves will then span the space of allowed\n    quantum numbers over all allowed decay topologies and particle instances that\n    correspond with the sets of allowed quantum numbers it has found.\n\n    The resulting state transition objects are particularly useful for **amplitude\n    analysis / Partial Wave Analysis** as they contain all information (such as\n    expected masses, widths, and spin projections) that is needed to formulate an\n    amplitude model.\n\n  dev_url: https://github.com/ComPWA/tensorwaves\n  doc_url: https://tensorwaves.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - redeboer\n",
 "req": {
  "__set__": true,
  "elements": [
   "attrs",
   "iminuit",
   "numpy",
   "phasespace",
   "pip",
   "python",
   "pyyaml",
   "setuptools_scm",
   "sympy",
   "tensorflow",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs",
    "iminuit",
    "numpy",
    "phasespace",
    "python",
    "pyyaml",
    "sympy",
    "tensorflow",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "PyYAML >=5.1",
    "attrs >=20.1.0",
    "iminuit >=2.0",
    "numpy",
    "phasespace >=1.2.0,<1.5.0",
    "python >=3.6,<3.10",
    "sympy >=1.9",
    "tensorflow >=2.4,<2.8",
    "tqdm >=4.24.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/tensorwaves/tensorwaves-0.4.0.tar.gz",
 "version": "0.4.0"
}