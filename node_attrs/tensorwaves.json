{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/774847393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/797472237.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/814077319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/816743850.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/870602593.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/876697027.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/903899991.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "tensorwaves",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "TensorWaves is a fitter package that optimizes mathematical models to data\nsamples. The models can be any _symbolic_ mathematical expression that is then\nconverted to any computational backend. In addition, TensorWaves provides\nfunctionality to generate toy Monte Carlo data samples. The package is\ndeveloped in parallel with [AmpForm](https://github.com/ComPWA/ampform), which\nimplements physics models, but its 'lambdifying' mechanisms can in principle be\nused independently.\n\nAll documentation can be found on\n[tensorwaves.rtfd.io](https://tensorwaves.readthedocs.io).\n",
   "dev_url": "https://github.com/ComPWA/tensorwaves",
   "doc_url": "https://tensorwaves.readthedocs.io",
   "home": "https://github.com/ComPWA/tensorwaves",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Python fitter package for multiple computational back-ends"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "redeboer"
   ]
  },
  "package": {
   "name": "tensorwaves",
   "version": "0.4.4"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6,<3.10",
    "attrs >=20.1.0",
    "iminuit >=2.0",
    "numpy",
    "PyYAML >=5.1",
    "sympy >=1.9",
    "tqdm >=4.24.0"
   ]
  },
  "source": {
   "sha256": "8e7576741e63626635472d9283feca78909477cde429cd030f403797bf90280b",
   "url": "https://pypi.io/packages/source/t/tensorwaves/tensorwaves-0.4.4.tar.gz"
  },
  "test": {
   "imports": [
    "tensorwaves",
    "tensorwaves.data",
    "tensorwaves.estimator",
    "tensorwaves.function",
    "tensorwaves.interface",
    "tensorwaves.optimizer"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs",
    "iminuit",
    "numpy",
    "python",
    "pyyaml",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "TensorWaves is a fitter package that optimizes mathematical models to data\nsamples. The models can be any _symbolic_ mathematical expression that is then\nconverted to any computational backend. In addition, TensorWaves provides\nfunctionality to generate toy Monte Carlo data samples. The package is\ndeveloped in parallel with [AmpForm](https://github.com/ComPWA/ampform), which\nimplements physics models, but its 'lambdifying' mechanisms can in principle be\nused independently.\n\nAll documentation can be found on\n[tensorwaves.rtfd.io](https://tensorwaves.readthedocs.io).\n",
   "dev_url": "https://github.com/ComPWA/tensorwaves",
   "doc_url": "https://tensorwaves.readthedocs.io",
   "home": "https://github.com/ComPWA/tensorwaves",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Python fitter package for multiple computational back-ends"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "redeboer"
   ]
  },
  "package": {
   "name": "tensorwaves",
   "version": "0.4.4"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ],
   "run": [
    "python >=3.6,<3.10",
    "attrs >=20.1.0",
    "iminuit >=2.0",
    "numpy",
    "PyYAML >=5.1",
    "sympy >=1.9",
    "tqdm >=4.24.0"
   ]
  },
  "source": {
   "sha256": "8e7576741e63626635472d9283feca78909477cde429cd030f403797bf90280b",
   "url": "https://pypi.io/packages/source/t/tensorwaves/tensorwaves-0.4.4.tar.gz"
  },
  "test": {
   "imports": [
    "tensorwaves",
    "tensorwaves.data",
    "tensorwaves.estimator",
    "tensorwaves.function",
    "tensorwaves.interface",
    "tensorwaves.optimizer"
   ]
  }
 },
 "name": "tensorwaves",
 "new_version": "0.4.4",
 "new_version_attempts": {
  "0.3.4": 1,
  "0.3.7": 1,
  "0.4.0": 1,
  "0.4.1": 1,
  "0.4.2": 1,
  "0.4.3": 1,
  "0.4.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tensorwaves"
  ]
 },
 "pinning_version": "2022.04.08.10.49.38",
 "raw_meta_yaml": "{% set name = \"TensorWaves\" %}\n{% set version = \"0.4.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0]|lower }}/{{ name|lower }}/{{ name|lower }}-{{ version }}.tar.gz\n  sha256: 8e7576741e63626635472d9283feca78909477cde429cd030f403797bf90280b\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6,<3.10\n    - setuptools_scm\n  run:\n    - python >=3.6,<3.10\n    - attrs >=20.1.0\n    - iminuit >=2.0\n    - numpy\n    - PyYAML >=5.1\n    - sympy >=1.9\n    - tqdm >=4.24.0\n\ntest:\n  imports:\n    - tensorwaves\n    - tensorwaves.data\n    - tensorwaves.estimator\n    - tensorwaves.function\n    - tensorwaves.interface\n    - tensorwaves.optimizer\n\nabout:\n  home: https://github.com/ComPWA/tensorwaves\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Python fitter package for multiple computational back-ends\n\n  description: |\n    TensorWaves is a fitter package that optimizes mathematical models to data\n    samples. The models can be any _symbolic_ mathematical expression that is then\n    converted to any computational backend. In addition, TensorWaves provides\n    functionality to generate toy Monte Carlo data samples. The package is\n    developed in parallel with [AmpForm](https://github.com/ComPWA/ampform), which\n    implements physics models, but its 'lambdifying' mechanisms can in principle be\n    used independently.\n\n    All documentation can be found on\n    [tensorwaves.rtfd.io](https://tensorwaves.readthedocs.io).\n\n  dev_url: https://github.com/ComPWA/tensorwaves\n  doc_url: https://tensorwaves.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - redeboer\n",
 "req": {
  "__set__": true,
  "elements": [
   "attrs",
   "iminuit",
   "numpy",
   "pip",
   "python",
   "pyyaml",
   "setuptools_scm",
   "sympy",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "attrs",
    "iminuit",
    "numpy",
    "python",
    "pyyaml",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6,<3.10",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "PyYAML >=5.1",
    "attrs >=20.1.0",
    "iminuit >=2.0",
    "numpy",
    "python >=3.6,<3.10",
    "sympy >=1.9",
    "tqdm >=4.24.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/tensorwaves/tensorwaves-0.4.4.tar.gz",
 "version": "0.4.4"
}