{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/900233773.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "triton",
 "hash_type": "sha256",
 "name": "triton",
 "new_version": "1.1.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "triton"
  ]
 },
 "pinning_version": "2022.04.05.10.19.05",
 "raw_meta_yaml": "{% set version = \"1.1.2\" %}\n\npackage:\n  name: triton\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openai/triton/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 44040696460f1d02a7251dd59468d7405982b55e112a9999ec759718066f7708\n  patches:\n    - patches/0001-patch-include-paths-in-setup.py.patch\n    - patches/0002-add-missing-header.patch\n    - patches/0003-properly-point-to-triton-includes.patch\n    - patches/0004-point-to-system-CUDA-instead-of-vendored-header.patch\n\nbuild:\n  number: 0\n  # TODO: windows support should be available from next version;\n  #       CPU-only support still under development\n  skip: true  # [win or cuda_compiler_version == \"None\"]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - make\n    - cmake\n  host:\n    - python\n    - pip\n    - llvmdev =11\n    - libzlib\n  run:\n    - python\n    - filelock\n    - pytorch =*=cuda*\n\ntest:\n  imports:\n    - triton\n    - triton._C.libtriton\n  requires:\n    - pip\n    - pytest\n    - scipy\n  source_files:\n    - python/test\n  commands:\n    - pip check\n    # test suite essentially depends on availability of a physical GPU,\n    # see https://github.com/openai/triton/issues/466;\n    # - pytest -v python/test\n\nabout:\n  home: https://github.com/openai/triton\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Development repository for the Triton language and compiler'\n  description: |\n    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\n    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n  doc_url: https://triton-lang.org/\n  dev_url: https://github.com/openai/triton\n\nextra:\n  recipe-maintainers:\n    - erip\n    - h-vetinari\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/openai/triton/archive/refs/tags/v1.1.2.tar.gz",
 "version": "1.1.2"
}