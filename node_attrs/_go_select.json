{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/499062482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/887926475.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "_go_select",
 "name": "_go_select",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "_go_select"
  ]
 },
 "pinning_version": "2022.03.23.20.27.24",
 "raw_meta_yaml": "package:\n  name: _go_select\n  version: {{ go_variant_version }}\n\nbuild:\n  # The build number must always be set to 0.\n  # Use conda_build_config.yaml to make a new release.\n  number: 0\n  string: {{ go_variant_str }}\n\ntest:\n  commands:\n    - test ${GOROOT} = ${CONDA_PREFIX}/go  # [unix]\n    - cmd /c if x%GOROOT% NEQ x%CONDA_PREFIX%\\go exit 1  # [win]\n\nabout:\n  home: https://github.com/conda-forge/_go_select-feedstock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: \"The golang select package.\"\n  description: |\n    We support three different variants of the golang compiler, \n    `precompiled`, which is a repackage of the builds available from golang.org;\n    `cgo`, which is compiled from source by conda-forge with CGO_ENABLED=1;\n    `nocgo`, which is compiled from source by conda-forge with CGO_ENABLED=0.\n    In version 1 `conda` will prefer the `go-nocgo` version by default, followed \n    by `go-cgo` and then `go-precompiled`.\nextra:\n  recipe-maintainers:\n    - conda-forge/go\n",
 "smithy_version": "3.18.0",
 "strong_exports": false,
 "version": "2.2.0"
}