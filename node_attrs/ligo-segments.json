{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199687469.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219925262.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/223511920.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248854593.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335816265.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/387576213.json"
   },
   "data": {
    "bot_rerun": 1599193061.896552,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/479272206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500793660.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/561960429.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/565011185.json"
   },
   "data": {
    "bot_rerun": 1634588970.691625,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571134576.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677530355.json"
   },
   "data": {
    "bot_rerun": 1634588970.6918714,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/760873629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "ligo-segments",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py"
   ],
   "requires": [
    "pip",
    "python-lal",
    "pip",
    "python-lal",
    "pip",
    "python-lal"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python-lal"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\""
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\""
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": [
    "m2w64-gcc-libs",
    "m2w64-gcc-libs",
    "m2w64-gcc-libs"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "libpython",
    "pip",
    "python",
    "setuptools",
    "libpython",
    "pip",
    "python",
    "setuptools",
    "libpython",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": [
    "no-lal.patch",
    "no-lal.patch",
    "no-lal.patch"
   ],
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\""
   ],
   "requires": [
    "pip",
    "python-lal",
    "pip",
    "python-lal",
    "pip",
    "python-lal",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "python-lal",
    "pip",
    "python-lal",
    "pip",
    "python-lal",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "name": "ligo-segments",
 "new_version": "1.4.0",
 "new_version_attempts": {
  "1.3.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python test/segments_verify.py"
   ],
   "requires": [
    "pip",
    "python-lal",
    "pip",
    "python-lal",
    "pip",
    "python-lal"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python-lal"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": null,
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\""
   ],
   "requires": [
    "pip",
    "pip"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ligo-segments"
  ]
 },
 "pinning_version": "2021.10.18.15.47.12",
 "pre_pr_migrator_status": {
  "pypy37": "not solvable: master: ['linux_64_python3.7.____73_pypy: Encountered problems while solving.\\nProblem: package python-lal-6.22.0-fftw_py36hf47ffbb_100 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n', 'osx_64_python3.7.____73_pypy: Encountered problems while solving.\\nProblem: package python-lal-6.22.0-fftw_py36h7d7348f_100 requires python_abi 3.6.* *_cp36m, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"ligo-segments\" %}\n{% set version = \"1.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc\n  patches:\n    # avoid any imports of LAL on Windows\n    - no-lal.patch  # [win]\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n  ignore_run_exports:\n    - m2w64-gcc-libs  # [win]\n\nrequirements:\n  build:\n    - python                              # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n  host:\n    - libpython  # [win]\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n    - six\n\ntest:\n  source_files:\n    - test/*.py\n  requires:\n    - pip\n    # most of the tests require python-lal, but python-lal\n    # has a runtime requirement on this package, so to avoid\n    # a circular dependency we only install LAL where we\n    # know it has been built already.\n    # DMM: this isn't great, but it's the best I can do to\n    #      allow running proper tests on at least some platforms\n    - python-lal  # [x86_64 and not win and py<=39]\n  commands:\n    # check requirements\n    - python -m pip check\n    # run basic sanity test everywhere\n    - python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"\n    # run tests (only where we can install LAL)\n    - python test/segments_verify.py  # [x86_64 and not win and py<=39]\n\nabout:\n  home: https://git.ligo.org/lscsoft/ligo-segments/\n  dev_url: https://git.ligo.org/lscsoft/ligo-segments.git\n  doc_url: https://lscsoft.docs.ligo.org/ligo-segments/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Representations of semi-open intervals\n  description: |\n    This module defines the segment and segmentlist objects, as well as the\n    infinity object used to define semi-infinite and infinite segments.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "libpython",
   "m2w64_c_compiler_stub",
   "pip",
   "python",
   "setuptools",
   "six"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "m2w64_c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "libpython",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python-lal"
   ]
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "m2w64_c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libpython",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python-lal"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz",
 "version": "1.4.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "This module defines the segment and segmentlist objects, as well as the\ninfinity object used to define semi-infinite and infinite segments.\n",
   "dev_url": "https://git.ligo.org/lscsoft/ligo-segments.git",
   "doc_url": "https://lscsoft.docs.ligo.org/ligo-segments/",
   "home": "https://git.ligo.org/lscsoft/ligo-segments/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Representations of semi-open intervals"
  },
  "build": {
   "ignore_run_exports": [
    "m2w64-gcc-libs",
    "m2w64-gcc-libs",
    "m2w64-gcc-libs"
   ],
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "ligo-segments",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_c_compiler_stub"
   ],
   "host": [
    "libpython",
    "pip",
    "python",
    "setuptools",
    "libpython",
    "pip",
    "python",
    "setuptools",
    "libpython",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python",
    "six",
    "python",
    "six",
    "python",
    "six"
   ]
  },
  "source": {
   "patches": [
    "no-lal.patch",
    "no-lal.patch",
    "no-lal.patch"
   ],
   "sha256": "e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc",
   "url": "https://pypi.io/packages/source/l/ligo-segments/ligo-segments-1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\"",
    "python -m pip check",
    "python -c \"from ligo.segments import segment; assert segment(1, 2) + segment(2, 3) == segment(1, 3)\""
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ],
   "source_files": [
    "test/*.py",
    "test/*.py",
    "test/*.py"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "m2w64_c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libpython",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}