{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pywin32-on-windows",
 "name": "pywin32-on-windows",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pywin32-on-windows"
  ]
 },
 "raw_meta_yaml": "{% set version = \"0.1.0\" %}\n{% set build_number = 1 %}\n\npackage:\n  name: pywin32-on-windows\n  version: {{ version }}\n\nbuild:\n  noarch: python\n  {% if pkg_type == 'pywin32' %}\n  number: {{ build_number | int * 2 }}\n  {% else %}\n  number: {{ build_number | int * 2 + 1 }}\n  {% endif %}\n\nrequirements:\n  host:\n    - python >=2.7\n  run:\n    - python >=2.7\n    {% if pkg_type == 'pywin32' %}\n    - pywin32\n    {% else %}\n    - __unix\n    {% endif %}\n\ntest:\n  {% if pkg_type == 'pywin32' %}\n  imports:\n    - win32api\n  {% endif %}\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/conda-forge/pywin32-on-windows-feedstock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'A virtual package for pywin32... but only on windows'\n  description: |-\n    This package exists so other packages can depend on `pywin32`, often the only\n    platform specific dependency, while remaining `noarch: python`. On non-Windows\n    platforms, installing it is a no-op.\n\n    A specific version constraint for `pywin32` itself can be specified at build\n    time with `run_constrained`.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n",
 "strong_exports": false,
 "version": "0.1.0"
}