{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/239961896.json"
   },
   "data": {
    "bot_rerun": 1597087679.9094548,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335645711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/12047e01-05cd-4ee2-9701-ac86f66ed3ff.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501008816.json"
   },
   "data": {
    "bot_rerun": 1647273957.453811,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551879747.json"
   },
   "data": {
    "bot_rerun": 1647273957.4539971,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774788162.json"
   },
   "data": {
    "bot_rerun": 1647273957.4541,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/879299264.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/907499518.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "whitebox_tools",
 "hash_type": "sha256",
 "name": "whitebox_tools",
 "new_version": "2.0.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "whitebox_tools"
  ]
 },
 "pinning_version": "2022.04.11.13.50.18",
 "raw_meta_yaml": "{% set name = \"whitebox_tools\" %}\n{% set version = \"2.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/jblindsay/whitebox-tools/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 18705fc948bdb2f96cd816e5a72d36b9cc460aa8c910383d23fdbd61641aab60\n\nbuild:\n  number: 2\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('rust') }}\n    - cargo-bundle-licenses\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  requires:\n    - python\n  imports:\n    - whitebox_tools\n  commands:\n    - whitebox_tools --help  # [not win]\n    - whitebox_tools.exe --help  # [win]\n    - python -c \"import whitebox_tools\"\n\nabout:\n  home: https://github.com/jblindsay/whitebox-tools\n  license: MIT\n  license_family: MIT\n  license_file:\n    - LICENSE.txt\n    - THIRDPARTY.yml\n\n  summary: 'Whitebox Tools is a collection of advanced geospatial data analysis tools.'\n  description: |\n    WhiteboxTools is an advanced geospatial data analysis platform developed by Prof. John Lindsay at\n    the University of Guelph's Geomorphometry and Hydrogeomatics Research Group. WhiteboxTools can be\n    used to perform common geographical information systems (GIS) analysis operations, such as\n    cost-distance analysis, distance buffering, and raster reclassification. Remote sensing and image\n    processing tasks include image enhancement (e.g. panchromatic sharpening, contrast adjustments),\n    image mosaicing, numerous filtering operations, simple classification (k-means), and common image\n    transformations. WhiteboxTools also contains advanced tooling for spatial hydrological analysis\n    (e.g. flow-accumulation, watershed delineation, stream network analysis, sink removal), terrain\n    analysis (e.g. common terrain indices such as slope, curvatures, wetness index, hillshading;\n    hypsometric analysis; multi-scale topographic position analysis), and LiDAR data processing. LiDAR\n    point clouds can be interrogated (LidarInfo, LidarHistogram), segmented, tiled and joined,\n    analyized for outliers, interpolated to rasters (DEMs, intensity images), and ground-points can be\n    classified or filtered. WhiteboxTools is not a cartographic or spatial data visualization package;\n    instead it is meant to serve as an analytical backend for other data visualization software,\n    mainly GIS.\n\nextra:\n  recipe-maintainers:\n    - dharhas\n    - sdc50\n    - hobu\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "time": 1568135286.8407137,
 "url": "https://github.com/jblindsay/whitebox-tools/archive/refs/tags/v2.0.0.tar.gz",
 "version": "2.0.0"
}