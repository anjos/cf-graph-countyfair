{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/455636951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/462981978.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/769919883.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/840504966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/879601887.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/901360628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/902559446.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/934264989.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/941990799.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "It was not possible to recover package metadata for quetz.\nError code: 404",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run",
   "    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations",
   "    mini_migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/dep_updates.py\", line 34, in migrate",
   "    dep_comparison, _ = get_dep_updates_and_hints(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 62, in get_dep_updates_and_hints",
   "    dep_comparison, gs_recipe = get_grayskull_comparison(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 201, in get_grayskull_comparison",
   "    gs_recipe = make_grayskull_recipe(attrs, version_key=version_key)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 161, in make_grayskull_recipe",
   "    recipe, _ = create_python_recipe(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/__main__.py\", line 249, in create_python_recipe",
   "    GrayskullFactory.create_recipe(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/base/factory.py\", line 31, in create_recipe",
   "    GrayskullFactory.REGISTERED_STRATEGY[repo_type.lower()].fetch_data(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 60, in fetch_data",
   "    update_recipe(recipe, config, sections or ALL_SECTIONS)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 481, in update_recipe",
   "    metadata = get_metadata(recipe, config)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 343, in get_metadata",
   "    sdist_metadata, pypi_metadata = get_origin_wise_metadata(config)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 227, in get_origin_wise_metadata",
   "    pypi_metadata = get_pypi_metadata(config)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 251, in get_pypi_metadata",
   "    raise requests.HTTPError(",
   "requests.exceptions.HTTPError: It was not possible to recover package metadata for quetz.",
   "Error code: 404",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true,
   "inspection": "update-grayskull"
  }
 },
 "feedstock_name": "quetz",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/mamba-org/quetz",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "The Mamba package server"
  },
  "build": {
   "entry_points": [
    "quetz = quetz.cli:app"
   ],
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mariobuikhuizen",
    "wolfv",
    "janjagusch"
   ]
  },
  "package": {
   "name": "quetz",
   "version": "0.4.4"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.7",
    "alembic",
    "aiofiles",
    "appdirs",
    "authlib <1.0.0",
    "fastapi",
    "fsspec",
    "h2",
    "httpx ~=0.20.0",
    "importlib-metadata",
    "itsdangerous",
    "jinja2",
    "pluggy",
    "prometheus_client",
    "python-multipart",
    "pyyaml",
    "requests",
    "sqlalchemy",
    "sqlalchemy-utils",
    "tenacity",
    "toml",
    "typer",
    "typing_extensions",
    "ujson",
    "uvicorn",
    "xattr",
    "zstandard"
   ],
   "run_constrained": [
    "s3fs >=2021.10.1",
    "adlfs >=2021.10.0",
    "gcsfs >=2022.3.0"
   ]
  },
  "source": {
   "sha256": "50292c6998cddb89b4820f341c01370899f562e60d1563084a579b2091871821",
   "url": "https://pypi.io/packages/source/q/quetz-server/quetz-server-0.4.4.tar.gz"
  },
  "test": {
   "commands": [
    "quetz --help"
   ],
   "imports": [
    "quetz"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "alembic",
    "appdirs",
    "authlib",
    "fastapi",
    "fsspec",
    "h2",
    "httpx",
    "importlib-metadata",
    "itsdangerous",
    "jinja2",
    "pluggy",
    "prometheus_client",
    "python",
    "python-multipart",
    "pyyaml",
    "requests",
    "sqlalchemy",
    "sqlalchemy-utils",
    "tenacity",
    "toml",
    "typer",
    "typing_extensions",
    "ujson",
    "uvicorn",
    "xattr",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/mamba-org/quetz",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "The Mamba package server"
  },
  "build": {
   "entry_points": [
    "quetz = quetz.cli:app"
   ],
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mariobuikhuizen",
    "wolfv",
    "janjagusch"
   ]
  },
  "package": {
   "name": "quetz",
   "version": "0.4.4"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.7",
    "alembic",
    "aiofiles",
    "appdirs",
    "authlib <1.0.0",
    "fastapi",
    "fsspec",
    "h2",
    "httpx ~=0.20.0",
    "importlib-metadata",
    "itsdangerous",
    "jinja2",
    "pluggy",
    "prometheus_client",
    "python-multipart",
    "pyyaml",
    "requests",
    "sqlalchemy",
    "sqlalchemy-utils",
    "tenacity",
    "toml",
    "typer",
    "typing_extensions",
    "ujson",
    "uvicorn",
    "xattr",
    "zstandard"
   ],
   "run_constrained": [
    "s3fs >=2021.10.1",
    "adlfs >=2021.10.0",
    "gcsfs >=2022.3.0"
   ]
  },
  "source": {
   "sha256": "50292c6998cddb89b4820f341c01370899f562e60d1563084a579b2091871821",
   "url": "https://pypi.io/packages/source/q/quetz-server/quetz-server-0.4.4.tar.gz"
  },
  "test": {
   "commands": [
    "quetz --help"
   ],
   "imports": [
    "quetz"
   ]
  }
 },
 "name": "quetz",
 "new_version": "0.5.0",
 "new_version_attempts": {
  "0.0.4": 1,
  "0.1.1": 111,
  "0.1.2": 248,
  "0.2.0": 1,
  "0.3.0": 1,
  "0.4.0": 1,
  "0.4.1": 1,
  "0.4.2": 1,
  "0.4.3": 1,
  "0.4.4": 1,
  "0.5.0": 5
 },
 "new_version_errors": {
  "0.1.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.1.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/TheSnakePit/quetz/archive/v{{ version }}.tar.gz'\n",
  "0.1.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.1.2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/TheSnakePit/quetz/archive/v{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "quetz"
  ]
 },
 "pinning_version": "2022.05.19.14.17.20",
 "pre_pr_migrator_attempts": {
  "version": 5
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3774916645\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/dep_updates.py\", line 34, in migrate\n    dep_comparison, _ = get_dep_updates_and_hints(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 62, in get_dep_updates_and_hints\n    dep_comparison, gs_recipe = get_grayskull_comparison(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 201, in get_grayskull_comparison\n    gs_recipe = make_grayskull_recipe(attrs, version_key=version_key)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 161, in make_grayskull_recipe\n    recipe, _ = create_python_recipe(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/__main__.py\", line 249, in create_python_recipe\n    GrayskullFactory.create_recipe(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/base/factory.py\", line 31, in create_recipe\n    GrayskullFactory.REGISTERED_STRATEGY[repo_type.lower()].fetch_data(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 60, in fetch_data\n    update_recipe(recipe, config, sections or ALL_SECTIONS)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 481, in update_recipe\n    metadata = get_metadata(recipe, config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 343, in get_metadata\n    sdist_metadata, pypi_metadata = get_origin_wise_metadata(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 227, in get_origin_wise_metadata\n    pypi_metadata = get_pypi_metadata(config)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/grayskull/strategy/pypi.py\", line 251, in get_pypi_metadata\n    raise requests.HTTPError(\nrequests.exceptions.HTTPError: It was not possible to recover package metadata for quetz.\nError code: 404\n"
 },
 "raw_meta_yaml": "{% set name = \"quetz\" %}\n{% set version = \"0.4.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}-server/{{ name }}-server-{{ version }}.tar.gz\n  sha256: 50292c6998cddb89b4820f341c01370899f562e60d1563084a579b2091871821\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - quetz = quetz.cli:app\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - setuptools\n  run:\n    - python >=3.7\n    - alembic\n    - aiofiles\n    - appdirs\n    - authlib <1.0.0\n    - fastapi\n    - fsspec\n    - h2\n    - httpx ~=0.20.0\n    - importlib-metadata\n    - itsdangerous\n    - jinja2\n    - pluggy\n    - prometheus_client\n    - python-multipart\n    - pyyaml\n    - requests\n    - sqlalchemy\n    - sqlalchemy-utils\n    - tenacity\n    - toml\n    - typer\n    - typing_extensions\n    - ujson\n    - uvicorn\n    - xattr\n    - zstandard\n  run_constrained:\n    - s3fs >=2021.10.1\n    - adlfs >=2021.10.0\n    - gcsfs >=2022.3.0\n\ntest:\n  imports:\n    - quetz\n  commands:\n    - quetz --help\n\nabout:\n  home: https://github.com/mamba-org/quetz\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: The Mamba package server\n\nextra:\n  recipe-maintainers:\n    - mariobuikhuizen\n    - wolfv\n    - janjagusch\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiofiles",
   "alembic",
   "appdirs",
   "authlib",
   "fastapi",
   "fsspec",
   "h2",
   "httpx",
   "importlib-metadata",
   "itsdangerous",
   "jinja2",
   "pip",
   "pluggy",
   "prometheus_client",
   "python",
   "python-multipart",
   "pyyaml",
   "requests",
   "setuptools",
   "sqlalchemy",
   "sqlalchemy-utils",
   "tenacity",
   "toml",
   "typer",
   "typing_extensions",
   "ujson",
   "uvicorn",
   "xattr",
   "zstandard"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "alembic",
    "appdirs",
    "authlib",
    "fastapi",
    "fsspec",
    "h2",
    "httpx",
    "importlib-metadata",
    "itsdangerous",
    "jinja2",
    "pluggy",
    "prometheus_client",
    "python",
    "python-multipart",
    "pyyaml",
    "requests",
    "sqlalchemy",
    "sqlalchemy-utils",
    "tenacity",
    "toml",
    "typer",
    "typing_extensions",
    "ujson",
    "uvicorn",
    "xattr",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "alembic",
    "appdirs",
    "authlib <1.0.0",
    "fastapi",
    "fsspec",
    "h2",
    "httpx ~=0.20.0",
    "importlib-metadata",
    "itsdangerous",
    "jinja2",
    "pluggy",
    "prometheus_client",
    "python >=3.7",
    "python-multipart",
    "pyyaml",
    "requests",
    "sqlalchemy",
    "sqlalchemy-utils",
    "tenacity",
    "toml",
    "typer",
    "typing_extensions",
    "ujson",
    "uvicorn",
    "xattr",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/q/quetz-server/quetz-server-0.4.4.tar.gz",
 "version": "0.4.4"
}