{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/204331315.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/241340430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255266755.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256035257.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/274909226.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/289075832.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547594073.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "x264-161"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547745097.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/700899808.json"
   },
   "data": {
    "bot_rerun": 1634131426.6354673,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/868293489.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "x26535"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/899554939.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905580301.json"
   },
   "data": {
    "bot_rerun": 1653057336.1425629,
    "branch": "v4.4.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906025143.json"
   },
   "data": {
    "bot_rerun": 1653057336.1427429,
    "branch": "v4.4.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/942259603.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "svt_av111"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/942259914.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v4.4.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "svt_av111"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943275513.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v4.4.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943279094.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v4.4.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/952130508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gnutls37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/952131119.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "v4.4.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gnutls37"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "v4.4.x"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "ffmpeg",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": [
    "COPYING.GPLv2",
    "COPYING.GPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "6",
   "run_exports": [
    "ffmpeg",
    "ffmpeg"
   ],
   "string": "lgpl_h1234567_6"
  },
  "extra": {
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "5.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clangxx",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clangxx",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make"
   ],
   "host": [
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "libva",
    "aom",
    "svt-av1",
    "ffnvcodec-headers",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "libva",
    "aom",
    "svt-av1",
    "ffnvcodec-headers"
   ]
  },
  "source": [
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"vaapi\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg -hide_banner -codecs | grep \" h264_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" hevc_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" mjpeg_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg2_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg4_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vc1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp8_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp9_cuvid \"",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"vaapi\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg -hide_banner -codecs | grep \" h264_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" hevc_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" mjpeg_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg2_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg4_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vc1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp8_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp9_cuvid \""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clangxx",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "nasm",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "ffnvcodec-headers",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libva",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "106",
   "run_exports": [
    "ffmpeg",
    "ffmpeg"
   ],
   "string": "gpl_h1234567_106"
  },
  "extra": {
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "5.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make"
   ],
   "host": [
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1"
   ]
  },
  "source": [
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "nasm",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "106",
   "run_exports": [
    "ffmpeg",
    "ffmpeg"
   ],
   "string": "gpl_h1234567_106"
  },
  "extra": {
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "5.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make"
   ],
   "host": [
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1"
   ]
  },
  "source": [
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "nasm",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "COPYING.GPLv2",
    "COPYING.GPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "106",
   "run_exports": [
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg",
    "ffmpeg"
   ],
   "string": "gpl_h1234567_106"
  },
  "extra": {
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "5.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clangxx",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clangxx",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "yasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "yasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make"
   ],
   "host": [
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "libva",
    "aom",
    "svt-av1",
    "ffnvcodec-headers",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "libva",
    "aom",
    "svt-av1",
    "ffnvcodec-headers",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1"
   ]
  },
  "source": [
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"vaapi\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg -hide_banner -codecs | grep \" h264_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" hevc_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" mjpeg_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg2_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg4_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vc1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp8_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp9_cuvid \"",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"vaapi\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg -hide_banner -codecs | grep \" h264_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" hevc_nvenc \"",
    "ffmpeg -hide_banner -codecs | grep \" mjpeg_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg2_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" mpeg4_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vc1_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp8_cuvid \"",
    "ffmpeg -hide_banner -codecs | grep \" vp9_cuvid \"",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
   ]
  }
 },
 "name": "ffmpeg",
 "new_version": "5.0.1",
 "new_version_attempts": {
  "4.2.3": 4,
  "4.3.2": 82,
  "4.4": 1,
  "4.4.0": 140,
  "4.4.1": 4,
  "5.0.0": 192,
  "5.0.1": 1
 },
 "new_version_errors": {
  "4.2.3": "We found a problem parsing the recipe: \n\nwhile parsing a block collection\n  in \"<unicode string>\", line 53, column 5:\n        - ffmpeg --help\n        ^ (line: 53)\nexpected <block end>, but found '<scalar>'\n  in \"<unicode string>\", line 62, column 9:\n            \"avcodec\",\n            ^ (line: 62)",
  "4.3.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '4.3.2' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://ffmpeg.zeranoe.com/builds/win64/dev/ffmpeg-{{ version_ffmpeg_style }}-win64-dev.zip'\n - could not hash URL template 'https://ffmpeg.zeranoe.com/builds/win64/shared/ffmpeg-{{ version_ffmpeg_style }}-win64-shared.zip'\n",
  "4.4.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '4.4.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://ffmpeg.zeranoe.com/builds/win64/shared/ffmpeg-{{ version_ffmpeg_style }}-win64-shared.zip'\n - could not hash URL template 'https://ffmpeg.zeranoe.com/builds/win64/dev/ffmpeg-{{ version_ffmpeg_style }}-win64-dev.zip'\n",
  "4.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '4.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - no URLs in the source section\n",
  "5.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '5.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - no URLs in the source section\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": [
    "COPYING.GPLv2",
    "COPYING.GPLv3",
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "6",
   "run_exports": [
    "ffmpeg",
    "ffmpeg"
   ],
   "string": "lgpl_h1234567_6"
  },
  "extra": {
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "5.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "yasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "yasm",
    "lame",
    "make"
   ],
   "host": [
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1"
   ]
  },
  "source": [
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "pkg-config",
    "yasm"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libiconv",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "https://www.ffmpeg.org/",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3",
    "COPYING.GPLv2",
    "COPYING.GPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "106",
   "run_exports": [
    "ffmpeg",
    "ffmpeg"
   ],
   "string": "gpl_h1234567_106"
  },
  "extra": {
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari",
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "5.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "libtool",
    "nasm",
    "lame",
    "make"
   ],
   "host": [
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1",
    "bzip2",
    "freetype",
    "fontconfig",
    "gnutls",
    "libiconv",
    "libxml2",
    "x264",
    "x265",
    "libvpx",
    "zlib",
    "openh264",
    "lame",
    "gmp",
    "aom",
    "svt-av1"
   ]
  },
  "source": [
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   },
   {
    "sha256": "840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059",
    "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"",
    "ffmpeg -hide_banner -codecs | grep \"libx264\"",
    "ffmpeg -hide_banner -codecs | grep \"libx265\"",
    "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "nasm",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libiconv",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ffmpeg"
  ]
 },
 "pinning_version": "2022.05.31.13.38.22",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"5.0.1\" %} # semver: (x.y.z)\n{% set x,y,z = version.split('.') %}\n{% set version_ffmpeg_style = x ~ '.' ~ y if z == \"0\" else version %}\n\npackage:\n  name: ffmpeg\n  version: {{ version }}\n\nsource:\n  - url: https://ffmpeg.org/releases/ffmpeg-{{ version_ffmpeg_style }}.tar.gz\n    sha256: 840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059\n\n{%- set number = 6 %}\n{%- if license_family == 'gpl' %}\n{%- set number = number + 100 %}\n{%- endif %}\n\nbuild:\n  number: {{ number }}\n  string: {{ license_family }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  run_exports:\n  # seems to be major version compatibility\n  # https://abi-laboratory.pro/tracker/timeline/ffmpeg/\n    - {{ pin_subpackage('ffmpeg', max_pin='x') }}\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    # clangxx is required for support of the nvidia encoders and decoders\n    - clangxx  # [linux64]\n    - pkg-config  # [not win]\n    - libtool  # [not win]\n    - nasm  # [not (win or (osx and x86_64))]\n    # osx_64 needs yasm due to https://stackoverflow.com/questions/58796267/building-for-macos-but-linking-in-object-file-built-for-free-standing\n    - yasm  # [osx and x86_64]\n    - lame  # [not win]\n    - make  # [not win]\n  host:\n    - bzip2  # [not win]\n    - freetype  # [not win]\n    - fontconfig\n    - gnutls  # [not win]\n    - libiconv  # [osx]\n    - libxml2  # [not win]\n    {% if license_family == 'gpl' %}\n    - x264  # [not win]\n    - x265  # [not win]\n    {% endif %}\n    - libvpx  # [not win]\n    - zlib  # [not win]\n    - openh264  # [not win]\n    - lame  # [not win]\n    - gmp  # [unix]\n    - libva  # [linux and not (ppc64le or aarch64)]\n    - aom  # [unix]\n    - svt-av1  # [unix]\n    - ffnvcodec-headers  # [linux64]\n\ntest:\n  commands:\n    - ffmpeg --help\n    - ffmpeg -hide_banner -codecs\n    - ffmpeg -hide_banner -protocols | grep \"https\"  # [not win]\n    - ffmpeg -hide_banner -codecs | grep \"libmp3lame\"  # [not win]\n    - ffmpeg -hide_banner -codecs | grep \"DEVI.S zlib\"  # [unix]\n    - ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"  # [unix]\n    - ffmpeg -hide_banner -codecs | grep \"libopenh264\"  # [unix]\n    - ffmpeg -hide_banner -codecs | grep \"vaapi\"  # [linux and not (ppc64le or aarch64)]\n    - ffmpeg -hide_banner -codecs | grep \"libaom\"  # [unix]\n    - ffmpeg -hide_banner -codecs | grep \"libsvtav1\"  # [unix]\n    # Verify dynamic libraries on all systems\n    {% set ffmpeg_libs = [\n        \"avdevice\",\n        \"swresample\",\n        \"avfilter\",\n        \"avcodec\",\n        \"avformat\",\n        \"swscale\",\n        \"avutil\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - test -f $PREFIX/lib/lib{{ each_ffmpeg_lib }}${SHLIB_EXT}  # [unix]\n    {% endfor %}\n    {%- if license_family == 'gpl' %}\n    - ffmpeg -hide_banner -buildconf | grep \"enable-gpl\"  # [unix]\n    - ffmpeg -hide_banner -codecs | grep \"libx264\"     # [unix]\n    - ffmpeg -hide_banner -codecs | grep \"libx265\"     # [unix]\n    - test -f $PREFIX/lib/libpostproc${SHLIB_EXT}         # [unix]\n    {%- endif %}\n    {%- if license_family == 'lgpl' %}\n    - ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"        # [unix]\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")  # [unix]\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")  # [unix]\n    - test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}              # [unix]\n    {%- endif %}\n    # Verify nvidia codecs on linux\n    {% set nvcodecs = [\n        \"h264_nvenc\",\n        \"hevc_nvenc\",\n        \"mjpeg_cuvid\",\n        \"mpeg1_cuvid\",\n        \"mpeg2_cuvid\",\n        \"mpeg4_cuvid\",\n        \"vc1_cuvid\",\n        \"vp8_cuvid\",\n        \"vp9_cuvid\"\n    ] %}\n    {% for nvcodec in nvcodecs %}\n    # Make sure to include a space in there to ensure we get an exact match\n    - ffmpeg -hide_banner -codecs | grep \" {{ nvcodec }} \"  # [linux64]\n    {% endfor %}\n\nabout:\n  home: https://www.ffmpeg.org/\n  license: GPL-2.0-or-later     # [license_family=='gpl']\n  license: LGPL-2.1-or-later    # [license_family=='lgpl']\n  license_file:\n    - COPYING.GPLv2            # [license_family=='gpl']\n    - COPYING.GPLv3            # [license_family=='gpl']\n    - COPYING.LGPLv2.1         # [license_family=='lgpl']\n    - COPYING.LGPLv3           # [license_family=='lgpl']\n  license_family: GPL          # [license_family=='gpl']\n  license_family: LGPL         # [license_family=='lgpl']\n  summary: Cross-platform solution to record, convert and stream audio and video.\n  dev_url: https://git.ffmpeg.org/ffmpeg.git\n  doc_url: https://ffmpeg.org/documentation.html\n\nextra:\n  recipe-maintainers:\n    - danielballan\n    - jakirkham\n    - 183amir\n    - patricksnape\n    - ocefpaf\n    - sdvillal\n    - carlodri\n    - benjaminrwilson\n    - matthiasdiener\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "aom",
   "bzip2",
   "c_compiler_stub",
   "clangxx",
   "cxx_compiler_stub",
   "ffnvcodec-headers",
   "fontconfig",
   "freetype",
   "gmp",
   "gnutls",
   "lame",
   "libiconv",
   "libtool",
   "libva",
   "libvpx",
   "libxml2",
   "make",
   "nasm",
   "openh264",
   "pkg-config",
   "svt-av1",
   "x264",
   "x265",
   "yasm",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clangxx",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "nasm",
    "pkg-config",
    "yasm"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ffnvcodec-headers",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libiconv",
    "libva",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clangxx",
    "cxx_compiler_stub",
    "lame",
    "libtool",
    "make",
    "nasm",
    "pkg-config",
    "yasm"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aom",
    "bzip2",
    "ffnvcodec-headers",
    "fontconfig",
    "freetype",
    "gmp",
    "gnutls",
    "lame",
    "libiconv",
    "libva",
    "libvpx",
    "libxml2",
    "openh264",
    "svt-av1",
    "x264",
    "x265",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://ffmpeg.org/releases/ffmpeg-5.0.1.tar.gz",
 "version": "5.0.1"
}