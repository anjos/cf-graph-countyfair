{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/273635257.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.0.22"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyworkout-toolkit",
 "hash_type": "sha256",
 "name": "pyworkout-toolkit",
 "new_version": "0.0.22",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyworkout-toolkit"
  ]
 },
 "pinning_version": "2019.04.24",
 "raw_meta_yaml": "{% set name = \"pyworkout-toolkit\" %}\n{% set version = \"0.0.22\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/triskadecaepyon/pyworkout-toolkit/archive/v{{ version }}.tar.gz\n  sha256: 07ec2a6e1454d97e5434cfb5ed5d9d76499543607d87455c49fef19c753cd305\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - pip\n    - python >=3\n  run:\n    - python >=3\n    - numpy >=1.11\n    - pandas >=0.19.0\n    - lxml >=3.7.0\n\ntest:\n  imports:\n    - pyworkout\n\nabout:\n  home: https://github.com/triskadecaepyon/pyworkout-toolkit/\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: 'LICENSE'\n  summary: 'Python tools to process workout data and telemetry for metrics and machine learning'\n  description: |\n    The pyworkout-toolkit is a Python package that provides tools for\n    post-workout analysis of data or telemetry.  The toolkit provides parsing of\n    the popular .TCX and .GPX formats, along with some general purpose functions\n    that help preprocess the data for metrics, visualization,\n    and machine learning.\n  doc_url: https://github.com/triskadecaepyon/pyworkout-toolkit/\n  dev_url: https://github.com/triskadecaepyon/pyworkout-toolkit/\n\nextra:\n  recipe-maintainers:\n    - triskadecaepyon\n",
 "smithy_version": "3.3.3",
 "strong_exports": false,
 "url": "https://github.com/triskadecaepyon/pyworkout-toolkit/archive/v0.0.22.tar.gz",
 "version": "0.0.22"
}