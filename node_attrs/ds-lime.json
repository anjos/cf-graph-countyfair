{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199702696.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ds-lime",
 "hash_type": "sha256",
 "name": "ds-lime",
 "new_version": "0.1.1.27",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ds-lime"
  ]
 },
 "pinning_version": "2018.07.01",
 "raw_meta_yaml": "{% set name = \"ds-lime\" %}\n{% set version = \"0.1.1.27\" %}\n{% set sha256 = \"ee5a0002737e4d95800b1904f509c6e55498c97546c5ab449f9cded381f8b3bd\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 1\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n    - numpy\n    - scipy\n    - scikit-learn >=0.18\n\ntest:\n  imports:\n    - lime\n    - lime.lime_text\n    - lime.lime_tabular\n\nabout:\n  home: https://github.com/datascienceinc/lime\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Local Interpretable Model-Agnostic Explanations (DataScience.com fork)'\n\n  description: |\n    This project is about explaining what machine learning classifiers\n    (or models) are doing. At the moment, we support explaining individual\n    predictions for text classifiers or classifiers that act on tables (numpy\n    arrays of numerical or categorical data), with a package called lime\n    (short for local interpretable model-agnostic explanations). This is the\n    DataScience.com fork used in the Skater\n    <https://github.com/datascienceinc/Skater> package.\n  doc_url: https://marcotcr.github.io/lime/\n  dev_url: https://github.com/datascienceinc/lime\n\nextra:\n  recipe-maintainers:\n    - benvandyke\n    - aikramer2\n",
 "smithy_version": "3.1.6",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/d/ds-lime/ds-lime-0.1.1.27.tar.gz",
 "version": "0.1.1.27"
}