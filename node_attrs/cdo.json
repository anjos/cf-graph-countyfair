{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/234520639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269281385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "proj4-6.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/280864157.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "proj4-6.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/307026766.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "proj4-6.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/309745374.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/328789567.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf-4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/354102833.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf473"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/359755090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj63"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/379302526.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj631"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395971083.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf474"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400521702.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj700"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/424036331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/457400177.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj-7.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482259476.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj711"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505510953.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513712798.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj720"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/582477963.json"
   },
   "data": {
    "bot_rerun": 1619033541.724339,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj800"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/618889482.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf480"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/620490299.json"
   },
   "data": {
    "bot_rerun": 1622137172.7936018,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj800"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/655258467.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj800"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/655540690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj801"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/709574971.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "proj810"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1371, in getresponse",
   "    response.begin()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 319, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 280, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into",
   "    return self.read(nbytes, buffer)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read",
   "    return self._sslobj.read(len, buffer)",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send",
   "    resp = conn.urlopen(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen",
   "    retries = retries.increment(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise",
   "    raise value",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1144, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 168, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 305, in get_repo",
   "    _sync_default_branches(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 328, in _sync_default_branches",
   "    forked_default_branch = gh.get_repo(f\"{forked_user}/{reponame}\").default_branch",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo",
   "    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck",
   "    *self.requestJson(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson",
   "    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode",
   "    status, responseHeaders, output = self.__requestRaw(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw",
   "    response = cnx.getresponse()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse",
   "    r = verb(",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cdo",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://code.zmaw.de/projects/cdo",
   "license": "GPL-2.0",
   "license_file": "COPYING",
   "summary": "CLI tools to manipulate and analyse Climate and NWP model Data"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "Try2Code",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "cdo",
   "version": "1.9.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid"
   ],
   "run": [
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid"
   ]
  },
  "source": {
   "sha256": "cc39c89bbb481d7b3945a06c56a8492047235f46ac363c4f0d980fccdde6677e",
   "url": "https://code.mpimet.mpg.de/attachments/download/24638/cdo-1.9.10.tar.gz"
  },
  "test": {
   "commands": [
    "cdo -h",
    "cdo sinfo dummy.nc"
   ],
   "files": [
    "dummy.nc"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eccodes",
    "fftw",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "eccodes",
    "fftw",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://code.zmaw.de/projects/cdo",
   "license": "GPL-2.0",
   "license_file": "COPYING",
   "summary": "CLI tools to manipulate and analyse Climate and NWP model Data"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "Try2Code",
    "ocefpaf",
    "Try2Code",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "cdo",
   "version": "1.9.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid",
    "llvm-openmp",
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid"
   ],
   "run": [
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid",
    "llvm-openmp",
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid"
   ]
  },
  "source": {
   "sha256": "cc39c89bbb481d7b3945a06c56a8492047235f46ac363c4f0d980fccdde6677e",
   "url": "https://code.mpimet.mpg.de/attachments/download/24638/cdo-1.9.10.tar.gz"
  },
  "test": {
   "commands": [
    "cdo -h",
    "cdo sinfo dummy.nc",
    "cdo -h",
    "cdo sinfo dummy.nc"
   ],
   "files": [
    "dummy.nc",
    "dummy.nc"
   ]
  }
 },
 "name": "cdo",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://code.zmaw.de/projects/cdo",
   "license": "GPL-2.0",
   "license_file": "COPYING",
   "summary": "CLI tools to manipulate and analyse Climate and NWP model Data"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "Try2Code",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "cdo",
   "version": "1.9.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "llvm-openmp",
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid"
   ],
   "run": [
    "llvm-openmp",
    "jasper",
    "libnetcdf",
    "hdf5",
    "proj",
    "eccodes",
    "udunits2",
    "libxml2",
    "fftw",
    "ossuuid"
   ]
  },
  "source": {
   "sha256": "cc39c89bbb481d7b3945a06c56a8492047235f46ac363c4f0d980fccdde6677e",
   "url": "https://code.mpimet.mpg.de/attachments/download/24638/cdo-1.9.10.tar.gz"
  },
  "test": {
   "commands": [
    "cdo -h",
    "cdo sinfo dummy.nc"
   ],
   "files": [
    "dummy.nc"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eccodes",
    "fftw",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "llvm-openmp",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "eccodes",
    "fftw",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "llvm-openmp",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cdo"
  ]
 },
 "pinning_version": "2021.08.11.16.56.58",
 "pre_pr_migrator_status": {
  "hdf51121": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1209227681\">bot CI job</a>): master: ['linux_64_: Encountered problems while solving:\\n  - package eccodes-2.18.0-hf05d9b7_1 requires libgfortran4 >=7.5.0, but none of the providers can be installed\\n', 'osx_64_: Encountered problems while solving:\\n  - package eccodes-2.11.0-h83a7206_1000 requires libgfortran >=3.0.1,<4.0.0.a0, but none of the providers can be installed\\n']",
  "libnetcdf481": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1237119766\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 445, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 440, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 1371, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 319, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/http/client.py\", line 280, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/socket.py\", line 704, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 755, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 532, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 770, in reraise\n    raise value\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 699, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 447, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1144, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 168, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 305, in get_repo\n    _sync_default_branches(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 328, in _sync_default_branches\n    forked_default_branch = gh.get_repo(f\"{forked_user}/{reponame}\").default_branch\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo\n    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck\n    *self.requestJson(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson\n    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode\n    status, responseHeaders, output = self.__requestRaw(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw\n    response = cnx.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse\n    r = verb(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 529, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=15)\n"
 },
 "raw_meta_yaml": "{% set version = \"1.9.10\" %}\n\npackage:\n  name: cdo\n  version: {{ version }}\n\nsource:\n  url: https://code.mpimet.mpg.de/attachments/download/24638/cdo-{{ version }}.tar.gz\n  sha256: cc39c89bbb481d7b3945a06c56a8492047235f46ac363c4f0d980fccdde6677e\n\nbuild:\n  number: 2\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - llvm-openmp  # [osx]\n  host:\n    - llvm-openmp  # [osx]\n    - jasper\n    - libnetcdf\n    - hdf5\n    - proj\n    - eccodes\n    - udunits2\n    - libxml2\n    - fftw\n    - ossuuid\n  run:\n    - llvm-openmp  # [osx]\n    - jasper\n    - libnetcdf\n    - hdf5\n    - proj\n    - eccodes\n    - udunits2\n    - libxml2\n    - fftw\n    - ossuuid\n\ntest:\n  files:\n    - dummy.nc\n  commands:\n    - cdo -h\n    - cdo sinfo dummy.nc\n\nabout:\n  home: https://code.zmaw.de/projects/cdo\n  license: GPL-2.0\n  license_file: COPYING\n  summary: 'CLI tools to manipulate and analyse Climate and NWP model Data'\n\nextra:\n  recipe-maintainers:\n    - Try2Code\n    - ocefpaf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "eccodes",
   "fftw",
   "fortran_compiler_stub",
   "hdf5",
   "jasper",
   "libnetcdf",
   "libxml2",
   "llvm-openmp",
   "ossuuid",
   "proj",
   "udunits2"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "eccodes",
    "fftw",
    "fortran_compiler_stub",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "llvm-openmp",
    "openmp",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "eccodes",
    "fftw",
    "fortran_compiler_stub",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "llvm-openmp",
    "openmp",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eccodes",
    "fftw",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "llvm-openmp",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "eccodes",
    "fftw",
    "hdf5",
    "jasper",
    "libnetcdf",
    "libxml2",
    "llvm-openmp",
    "ossuuid",
    "proj",
    "udunits2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://code.mpimet.mpg.de/attachments/download/24638/cdo-1.9.10.tar.gz",
 "version": "1.9.10"
}