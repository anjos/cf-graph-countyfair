{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/989559285.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/994407379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1007980556.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008711767.json"
   },
   "data": {
    "bot_rerun": 1661556685.9092019,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038449282.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "mmcv-recipe",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MMCV is a foundational library for computer vision research and supports many research projects.\n",
   "dev_url": "https://github.com/open-mmlab/mmcv",
   "home": "https://github.com/open-mmlab/mmcv",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Foundational library for computer vision research"
  },
  "build": {
   "number": "201"
  },
  "extra": {
   "recipe-maintainers": [
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py310h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py38h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py39h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py37h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   }
  ],
  "package": {
   "name": "mmcv-recipe",
   "version": "1.6.0"
  },
  "source": {
   "sha256": "623029d6a4e0a2426e04bd7a2d5ba434848ca63522d7e6b939acd62f1edf6e77",
   "url": "https://github.com/open-mmlab/mmcv/archive/refs/tags/v1.6.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "numpy",
    "pip",
    "pkg-config",
    "py-opencv",
    "python",
    "pytorch",
    "requests",
    "setuptools",
    "six",
    "torchvision",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "addict",
    "numpy",
    "packaging",
    "pillow",
    "pyyaml",
    "typing_extensions",
    "yapf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "libiconv",
    "libopencv",
    "opencv",
    "py-opencv",
    "pytest",
    "python-dateutil",
    "python-lmdb",
    "requests",
    "scipy",
    "tifffile",
    "torchvision"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MMCV is a foundational library for computer vision research and supports many research projects.\n",
   "dev_url": "https://github.com/open-mmlab/mmcv",
   "home": "https://github.com/open-mmlab/mmcv",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Foundational library for computer vision research"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py310h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py38h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py39h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda102py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda111py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py310h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py37h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py38h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py39h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda110py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cuda112py37h1234567_201"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cuda*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions",
      "__cuda"
     ],
     "run_constrained": [
      "pytorch =*=cuda*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py39h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py37h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py310h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py38h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py310h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py38h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py39h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   }
  ],
  "package": {
   "name": "mmcv-recipe",
   "version": "1.6.0"
  },
  "source": {
   "sha256": "623029d6a4e0a2426e04bd7a2d5ba434848ca63522d7e6b939acd62f1edf6e77",
   "url": "https://github.com/open-mmlab/mmcv/archive/refs/tags/v1.6.0.tar.gz"
  }
 },
 "name": "mmcv-recipe",
 "new_version": "1.6.1",
 "new_version_attempts": {
  "1.6.0": 1,
  "1.6.1": 2
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "MMCV is a foundational library for computer vision research and supports many research projects.\n",
   "dev_url": "https://github.com/open-mmlab/mmcv",
   "home": "https://github.com/open-mmlab/mmcv",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Foundational library for computer vision research"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apatsekin",
    "apatsekin",
    "apatsekin",
    "apatsekin"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py39h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py37h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py310h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py38h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   }
  ],
  "package": {
   "name": "mmcv-recipe",
   "version": "1.6.0"
  },
  "source": {
   "sha256": "623029d6a4e0a2426e04bd7a2d5ba434848ca63522d7e6b939acd62f1edf6e77",
   "url": "https://github.com/open-mmlab/mmcv/archive/refs/tags/v1.6.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "numpy",
    "pip",
    "pkg-config",
    "py-opencv",
    "python",
    "pytorch",
    "requests",
    "setuptools",
    "six",
    "torchvision",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "addict",
    "numpy",
    "packaging",
    "pillow",
    "pyyaml",
    "typing_extensions",
    "yapf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "libiconv",
    "libopencv",
    "opencv",
    "py-opencv",
    "pytest",
    "python-dateutil",
    "python-lmdb",
    "requests",
    "scipy",
    "tifffile",
    "torchvision"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "MMCV is a foundational library for computer vision research and supports many research projects.\n",
   "dev_url": "https://github.com/open-mmlab/mmcv",
   "home": "https://github.com/open-mmlab/mmcv",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Foundational library for computer vision research"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apatsekin",
    "apatsekin",
    "apatsekin"
   ]
  },
  "outputs": [
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py310h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py38h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "missing_dso_whitelist": [
      "$RPATH/libc10_cuda.so",
      "$RPATH/libtorch_python.so",
      "$RPATH/libtorch_cpu.so",
      "$RPATH/libc10.so",
      "$RPATH/libc10_cuda.dylib",
      "$RPATH/libtorch_python.dylib",
      "$RPATH/libtorch_cpu.dylib",
      "$RPATH/libc10.dylib"
     ],
     "run_exports": [
      "mmcv-full"
     ],
     "string": "cpu_py39h1234567_1"
    },
    "name": "mmcv-full",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "requests",
      "future",
      "six",
      "typing",
      "pkg-config",
      "typing_extensions",
      "pytorch =1.11=cpu*",
      "torchvision",
      "setuptools",
      "numpy",
      "py-opencv"
     ],
     "run": [
      "addict",
      "packaging",
      "Pillow",
      "pyyaml",
      "yapf",
      "numpy",
      "typing_extensions"
     ],
     "run_constrained": [
      "pytorch =*=cpu*"
     ]
    },
    "script": "build_mmcv.sh",
    "test": {
     "commands": [
      "python3 -m pytest ./tests/ -k \"not (test_imcrop or test_tensor2imgs or test_imwrite or test_imfrombytes or test_imread or test_eval_hook or test_start_param or test_flat_cosine_runner_hook or test_momentum_runner_hook or test_step_runner_hook or test_adjust_sharpness or test_adjust_contrast or test_adjust_brightness or test_gradient_cumulative_optimizer_hook or test_auto_contrast)\" --ignore=./tests/test_ops/test_onnx.py --ignore=./tests/test_ops/test_tensorrt.py --ignore=./tests/test_ops/test_tensorrt_preprocess.py --ignore=./tests/test_utils/test_timer.py --ignore=./tests/test_utils/test_progressbar.py",
      "python3 -c \"import mmcv; print(mmcv.__version__)\""
     ],
     "imports": [
      "mmcv"
     ],
     "requires": [
      "pytest",
      "requests",
      "scipy",
      "libopencv",
      "py-opencv",
      "opencv",
      "python-lmdb",
      "libiconv",
      "tifffile",
      "python-dateutil",
      "torchvision"
     ],
     "source_files": [
      "tests"
     ]
    }
   }
  ],
  "package": {
   "name": "mmcv-recipe",
   "version": "1.6.0"
  },
  "source": {
   "sha256": "623029d6a4e0a2426e04bd7a2d5ba434848ca63522d7e6b939acd62f1edf6e77",
   "url": "https://github.com/open-mmlab/mmcv/archive/refs/tags/v1.6.0.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "numpy",
    "pip",
    "pkg-config",
    "py-opencv",
    "python",
    "pytorch",
    "requests",
    "setuptools",
    "six",
    "torchvision",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "addict",
    "numpy",
    "packaging",
    "pillow",
    "pyyaml",
    "typing_extensions",
    "yapf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "libiconv",
    "libopencv",
    "opencv",
    "py-opencv",
    "pytest",
    "python-dateutil",
    "python-lmdb",
    "requests",
    "scipy",
    "tifffile",
    "torchvision"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mmcv-full"
  ]
 },
 "pinning_version": "2022.08.26.18.27.48",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set version = \"1.6.0\" %}\n{% set number = 1 %}\n{% set proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n{% if cuda_compiler_version != \"None\" %}\n{% set number = number + 200 %}\n{% endif %}\n\npackage:\n  name: mmcv-recipe\n  version: {{ version }}\n\nsource:\n  url: https://github.com/open-mmlab/mmcv/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 623029d6a4e0a2426e04bd7a2d5ba434848ca63522d7e6b939acd62f1edf6e77\nbuild:\n  number: {{ number }}\n  skip: true  # [win]\n\noutputs:\n  - name: mmcv-full\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: false\n      run_exports:\n        - {{ pin_subpackage('mmcv-full', max_pin='x.x') }}\n      missing_dso_whitelist:\n        # conda-forge::pytorch provides these libs\n        - $RPATH/libc10_cuda.so\n        - $RPATH/libtorch_python.so\n        - $RPATH/libtorch_cpu.so\n        - $RPATH/libc10.so\n        - $RPATH/libc10_cuda.dylib\n        - $RPATH/libtorch_python.dylib\n        - $RPATH/libtorch_cpu.dylib\n        - $RPATH/libc10.dylib\n    script: build_mmcv.sh  # [not win]\n    requirements:\n      build:\n        - python                                   # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}       # [build_platform != target_platform]\n        - pytorch ={{ pytorch }}={{ proc_type }}*  # [build_platform != target_platform]\n        - numpy                                    # [build_platform != target_platform]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # this adds matching cuda requirement to run deps using __cuda package\n        - {{ compiler('cuda') }}    # [cuda_compiler_version != \"None\"]\n        - ninja\n      host:\n        - python\n        - pip\n        - requests\n        - future\n        - six\n        - typing\n        - pkg-config  # [unix]\n        - typing_extensions\n        - pytorch ={{ pytorch }}={{ proc_type }}*\n        - torchvision\n        - setuptools\n        - numpy\n        - py-opencv\n      run:\n        # intentionally skipping opencv and pytorch (following upstream vendor)\n        - addict\n        - packaging\n        - Pillow\n        - pyyaml\n        - yapf\n        - {{ pin_compatible('numpy') }}\n        - typing_extensions\n        - __cuda  # [cuda_compiler_version != \"None\"]\n\n      run_constrained:\n        - pytorch =*={{ proc_type }}*\n    test:\n      requires:\n        - pytest\n        - requests\n        - scipy\n        - libopencv\n        - py-opencv\n        - opencv\n        - python-lmdb\n        - libiconv\n        - tifffile\n        - python-dateutil\n        - torchvision\n      imports:\n        - mmcv\n      source_files:\n        - tests\n      commands:\n        {% set failing_tests = [\"test_imcrop\",\n                                \"test_tensor2imgs\",\n                                \"test_imwrite\",\n                                \"test_imfrombytes\",\n                                \"test_imread\"] %}\n        {% set slow_tests = [\"test_eval_hook\",\n                             \"test_start_param\",\n                             \"test_flat_cosine_runner_hook\",\n                             \"test_momentum_runner_hook\",\n                             \"test_step_runner_hook\",\n                             \"test_adjust_sharpness\",\n                             \"test_adjust_contrast\",\n                             \"test_adjust_brightness\",\n                             \"test_gradient_cumulative_optimizer_hook\",\n                             \"test_auto_contrast\"] %}\n        {% set ignored_files = [\"./tests/test_ops/test_onnx.py\",\n                                \"./tests/test_ops/test_tensorrt.py\",\n                                \"./tests/test_ops/test_tensorrt_preprocess.py\",\n                                \"./tests/test_utils/test_timer.py\",\n                                \"./tests/test_utils/test_progressbar.py\"] %}\n        # ignored tests:\n        # test_onnx.py,test_tensorrt.py,test_tensorrt_preprocess.py - mccv currently compiled without onnx runtime\n        # test_geometric.py:test_imcrop - depending on what backend opencv uses it produces diff results (lipjpeg vs libturbojpeg)\n        # test_io.py - tries to import libturbojpeg that we don't install (conflicts with opencv that uses libjpeg)\n        # test_progressbar.py, test_timer.py - on OSX sleep(1) takes 1.1sec, so all related tests fail\n        # test_image_misc.py::test_tensor2imgs - need to investigate 2/75 mismatch\n        - python3 -m pytest ./tests/ -k \"not ({{ (failing_tests + slow_tests)|join(' or ') }})\" --ignore={{ ignored_files|join(' --ignore=') }}\n        - python3 -c \"import mmcv; print(mmcv.__version__)\"\n\n\nabout:\n  home: https://github.com/open-mmlab/mmcv\n  summary: Foundational library for computer vision research\n  description: |\n    MMCV is a foundational library for computer vision research and supports many research projects.\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  dev_url: https://github.com/open-mmlab/mmcv\n\nextra:\n  recipe-maintainers:\n    - apatsekin\n",
 "req": {
  "__set__": true,
  "elements": [
   "__cuda",
   "addict",
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "future",
   "ninja",
   "numpy",
   "packaging",
   "pillow",
   "pip",
   "pkg-config",
   "py-opencv",
   "python",
   "pytorch",
   "pyyaml",
   "requests",
   "setuptools",
   "six",
   "torchvision",
   "typing",
   "typing_extensions",
   "yapf"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "future",
    "numpy",
    "pip",
    "pkg-config",
    "py-opencv",
    "python",
    "pytorch",
    "requests",
    "setuptools",
    "six",
    "torchvision",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "addict",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "packaging",
    "pillow",
    "pyyaml",
    "typing_extensions",
    "yapf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "libiconv",
    "libopencv",
    "opencv",
    "py-opencv",
    "pytest",
    "python-dateutil",
    "python-lmdb",
    "requests",
    "scipy",
    "tifffile",
    "torchvision"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "numpy",
    "pip",
    "pkg-config",
    "py-opencv",
    "python",
    "pytorch =1.11=cpu*",
    "pytorch =1.11=cuda*",
    "requests",
    "setuptools",
    "six",
    "torchvision",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "Pillow",
    "__cuda",
    "addict",
    "numpy",
    "packaging",
    "pyyaml",
    "typing_extensions",
    "yapf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "libiconv",
    "libopencv",
    "opencv",
    "py-opencv",
    "pytest",
    "python-dateutil",
    "python-lmdb",
    "requests",
    "scipy",
    "tifffile",
    "torchvision"
   ]
  }
 },
 "url": "https://github.com/open-mmlab/mmcv/archive/refs/tags/v1.6.0.tar.gz",
 "version": "1.6.0"
}