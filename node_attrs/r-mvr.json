{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/413978282.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650764688.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "r-mvr",
 "hash_type": "sha256",
 "name": "r-mvr",
 "new_version": "1.33.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-mvr"
  ]
 },
 "pinning_version": "2021.05.23.06.20.32",
 "raw_meta_yaml": "{% set version = '1.33.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-mvr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/MVR_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/MVR/MVR_{{ version }}.tar.gz\n  sha256: e8ada15c6e98e55fdd0785df6a7ef798dd22acde5dff42715725972bd421fff9\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-statmod\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-statmod\n\ntest:\n  commands:\n    - $R -e \"library('MVR')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('MVR')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/jedazard/MVR\n  license: GPL-3.0-or-later\n  summary: 'This is a non-parametric method for joint adaptive mean-variance regularization and\n    variance stabilization of high-dimensional data. It is suited for handling difficult\n    problems posed by high-dimensional multivariate datasets (p >> n paradigm). Among\n    those are that the variance is often a function of the mean, variable-specific estimators\n    of variances are not reliable, and tests statistics have low powers due to a lack\n    of degrees of freedom. Key features include: (i) Normalization and/or variance stabilization\n    of the data, (ii) Computation of mean-variance-regularized t-statistics (F-statistics\n    to follow), (iii) Generation of diverse diagnostic plots, (iv) Computationally efficient\n    implementation using C/C++ interfacing and an option for parallel computing to enjoy\n    a faster and easier experience in the R environment.'\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - jenzopr\n\n# Package: MVR\n# Type: Package\n# Title: Mean-Variance Regularization\n# Version: 1.33.0\n# Date: 2018-09-10\n# Authors@R: c(person(\"Jean-Eudes\", \"Dazard\", role = c(\"aut\", \"cre\"), email = \"jean-eudes.dazard@case.edu\"), person(\"Hua\", \"Xu\", role = \"ctb\", email = \"huaxu77@gmail.com\"), person(\"Alberto\", \"Santana\", role = \"ctb\", email = \"ahs4@case.edu\"))\n# Author: Jean-Eudes Dazard [aut, cre], Hua Xu [ctb], Alberto Santana [ctb]\n# Maintainer: Jean-Eudes Dazard <jean-eudes.dazard@case.edu>\n# Description: This is a non-parametric method for joint adaptive mean-variance regularization and variance stabilization of high-dimensional data. It is suited for handling difficult problems posed by high-dimensional multivariate datasets (p >> n paradigm). Among those are that the variance is often a function of the mean, variable-specific estimators of variances are not reliable, and tests statistics have low powers due to a lack of degrees of freedom. Key features include: (i) Normalization and/or variance stabilization of the data, (ii) Computation of mean-variance-regularized t-statistics (F-statistics to follow), (iii) Generation of diverse diagnostic plots, (iv) Computationally efficient implementation using C/C++ interfacing and an option for parallel computing to enjoy a faster and easier experience in the R environment.\n# Depends: R (>= 3.0.2), statmod\n# Imports: parallel, methods\n# NeedsCompilation: yes\n# URL: https://github.com/jedazard/MVR\n# Repository: CRAN\n# License: GPL (>= 3) | file LICENSE\n# LazyLoad: yes\n# LazyData: yes\n# Archs: i386, x64\n# Packaged: 2018-09-10 16:45:39 UTC; Admin\n# Date/Publication: 2018-09-10 18:20:03 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MVR/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MVR/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MVR/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MVR/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MVR/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MVR_1.33.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MVR/MVR_1.33.0.tar.gz"
 ],
 "version": "1.33.0"
}