{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203952203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219903637.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/237185727.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260975004.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335815211.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/346042404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/388775778.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501051924.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/af3372ea-1b32-42d0-a135-5154a92bf9f9.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/623985008.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/624596441.json"
   },
   "data": {
    "bot_rerun": 1619646180.3192832,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/625621127.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646214525.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/647134943.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/667389795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677545760.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679755841.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/725181985.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/768677908.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/771051739.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/781175376.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831908353.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/831981176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/839729740.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/870174814.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/871310902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pywinpty",
 "hash_type": "sha256",
 "meta_yaml": {
  "about": {
   "description": "PyWinpty allows creating and communicating with Windows processes that\nreceive input and print outputs via console input and output pipes.\nPyWinpty supports both the native ConPTY interface and the previous,\nfallback winpty library.\n",
   "dev_url": "https://github.com/spyder-ide/pywinpty",
   "doc_url": "https://github.com/spyder-ide/pywinpty",
   "home": "https://github.com/spyder-ide/pywinpty",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Pseudoterminals for Windows in Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "pywinpty",
   "version": "2.0.4"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty"
   ],
   "host": [
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty"
   ],
   "run": [
    "python",
    "winpty",
    "python",
    "winpty",
    "python",
    "winpty",
    "python",
    "winpty",
    "python",
    "winpty"
   ]
  },
  "source": {
   "sha256": "a5002c74afc1ddcc85fca25de58ce9cef1a22957582981418c81aaee218675ad",
   "url": "https://pypi.io/packages/source/p/pywinpty/pywinpty-2.0.4.tar.gz"
  },
  "test": {
   "imports": [
    "winpty",
    "winpty",
    "winpty",
    "winpty",
    "winpty"
   ]
  }
 },
 "name": "pywinpty",
 "new_version": "2.0.4",
 "new_version_attempts": {
  "1.0.0": 1,
  "1.0.1": 2,
  "1.1.0": 1,
  "1.1.1": 1,
  "1.1.2": 1,
  "1.1.3": 1,
  "1.1.4": 1,
  "1.1.5": 1,
  "1.1.6": 1,
  "2.0.0": 1,
  "2.0.1": 1,
  "2.0.2": 1,
  "2.0.3": 1,
  "2.0.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pywinpty"
  ]
 },
 "pinning_version": "2022.03.04.01.20.32",
 "raw_meta_yaml": "{% set version = \"2.0.4\" %}\n\npackage:\n  name: pywinpty\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pywinpty/pywinpty-{{ version }}.tar.gz\n  sha256: a5002c74afc1ddcc85fca25de58ce9cef1a22957582981418c81aaee218675ad\n\nbuild:\n  number: 0\n  skip: true  # [not win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - clang\n    - llvm\n    - rust\n    - llvmdev\n    - llvm-tools\n    - libclang\n    - maturin <=0.12.0\n    - toml\n    - pip\n    - winpty\n  host:\n    - python\n    - pip\n    - winpty\n  run:\n    - python\n    - winpty\n\ntest:\n  imports:\n    - winpty\n\nabout:\n  home: https://github.com/spyder-ide/pywinpty\n  license: MIT\n  license_file: LICENSE.txt\n  summary: Pseudoterminals for Windows in Python\n  description: |\n    PyWinpty allows creating and communicating with Windows processes that\n    receive input and print outputs via console input and output pipes.\n    PyWinpty supports both the native ConPTY interface and the previous,\n    fallback winpty library.\n  doc_url: https://github.com/spyder-ide/pywinpty\n  dev_url: https://github.com/spyder-ide/pywinpty\n\nextra:\n  recipe-maintainers:\n    - blink1073\n    - ccordoba12\n    - andfoy\n    - ocefpaf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "clang",
   "cxx_compiler_stub",
   "libclang",
   "llvm",
   "llvm-tools",
   "llvmdev",
   "maturin",
   "pip",
   "python",
   "rust",
   "toml",
   "winpty"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "rust",
    "toml",
    "winpty"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python",
    "winpty"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "winpty"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.17.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin <=0.12.0",
    "pip",
    "rust",
    "toml",
    "winpty"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "winpty"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "winpty"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/pywinpty/pywinpty-2.0.4.tar.gz",
 "version": "2.0.4",
 "win_64_meta_yaml": {
  "about": {
   "description": "PyWinpty allows creating and communicating with Windows processes that\nreceive input and print outputs via console input and output pipes.\nPyWinpty supports both the native ConPTY interface and the previous,\nfallback winpty library.\n",
   "dev_url": "https://github.com/spyder-ide/pywinpty",
   "doc_url": "https://github.com/spyder-ide/pywinpty",
   "home": "https://github.com/spyder-ide/pywinpty",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Pseudoterminals for Windows in Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf",
    "blink1073",
    "ccordoba12",
    "andfoy",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "pywinpty",
   "version": "2.0.4"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "llvm",
    "rust",
    "llvmdev",
    "llvm-tools",
    "libclang",
    "maturin <=0.12.0",
    "toml",
    "pip",
    "winpty"
   ],
   "host": [
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty",
    "python",
    "pip",
    "winpty"
   ],
   "run": [
    "python",
    "winpty",
    "python",
    "winpty",
    "python",
    "winpty",
    "python",
    "winpty",
    "python",
    "winpty"
   ]
  },
  "source": {
   "sha256": "a5002c74afc1ddcc85fca25de58ce9cef1a22957582981418c81aaee218675ad",
   "url": "https://pypi.io/packages/source/p/pywinpty/pywinpty-2.0.4.tar.gz"
  },
  "test": {
   "imports": [
    "winpty",
    "winpty",
    "winpty",
    "winpty",
    "winpty"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cxx_compiler_stub",
    "libclang",
    "llvm",
    "llvm-tools",
    "llvmdev",
    "maturin",
    "pip",
    "rust",
    "toml",
    "winpty"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "winpty"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "winpty"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}