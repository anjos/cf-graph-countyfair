{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/800523589.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1113030385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1173748325.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "eodie",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The goal of EODIE is to ease the extraction of time series information at object level. Today, vast amounts of Earth Observation data are available to the users via for example earth explorer or scihub. Often, not the whole images are needed for exploitation, but only the timeseries of a certain feature on object level. Objects may be polygons depicting agricultural field parcels, forest plots, or areas of a certain land cover type.",
   "dev_url": "https://gitlab.com/fgi_nls/public/EODIE",
   "doc_url": "https://eodie.readthedocs.io/en/latest/",
   "home": "https://gitlab.com/fgi_nls/public/EODIE",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "The Earth Observation Data Information Extractor is a toolkit to extract object based timeseries information from Earth Observation data."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha"
   ]
  },
  "package": {
   "name": "eodie",
   "version": "1.0.2"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "403f1cf65002c67f35948adef32940437215547de5f60bd6d4efd6d58bc4c41d",
   "url": "https://gitlab.com/fgi_nls/public/EODIE/-/archive/v1.0.2/EODIE-v1.0.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help"
   ],
   "imports": [
    "eodie",
    "eodie",
    "eodie",
    "eodie"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fiona",
    "gdal",
    "matplotlib-base",
    "numpy",
    "python",
    "pyyaml",
    "rasterio",
    "rasterstats",
    "shapely"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The goal of EODIE is to ease the extraction of time series information at object level. Today, vast amounts of Earth Observation data are available to the users via for example earth explorer or scihub. Often, not the whole images are needed for exploitation, but only the timeseries of a certain feature on object level. Objects may be polygons depicting agricultural field parcels, forest plots, or areas of a certain land cover type.",
   "dev_url": "https://gitlab.com/fgi_nls/public/EODIE",
   "doc_url": "https://eodie.readthedocs.io/en/latest/",
   "home": "https://gitlab.com/fgi_nls/public/EODIE",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "The Earth Observation Data Information Extractor is a toolkit to extract object based timeseries information from Earth Observation data."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha"
   ]
  },
  "package": {
   "name": "eodie",
   "version": "1.0.2"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "403f1cf65002c67f35948adef32940437215547de5f60bd6d4efd6d58bc4c41d",
   "url": "https://gitlab.com/fgi_nls/public/EODIE/-/archive/v1.0.2/EODIE-v1.0.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help"
   ],
   "imports": [
    "eodie",
    "eodie",
    "eodie",
    "eodie",
    "eodie",
    "eodie",
    "eodie",
    "eodie"
   ]
  }
 },
 "name": "eodie",
 "new_version": "2.0.0",
 "new_version_attempts": {
  "1.1.0": 21,
  "2.0.0": 1
 },
 "new_version_errors": {
  "1.1.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.1.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://gitlab.com/fgi_nls/public/EODIE/-/archive/v{{ version }}/EODIE-v{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "The goal of EODIE is to ease the extraction of time series information at object level. Today, vast amounts of Earth Observation data are available to the users via for example earth explorer or scihub. Often, not the whole images are needed for exploitation, but only the timeseries of a certain feature on object level. Objects may be polygons depicting agricultural field parcels, forest plots, or areas of a certain land cover type.",
   "dev_url": "https://gitlab.com/fgi_nls/public/EODIE",
   "doc_url": "https://eodie.readthedocs.io/en/latest/",
   "home": "https://gitlab.com/fgi_nls/public/EODIE",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "The Earth Observation Data Information Extractor is a toolkit to extract object based timeseries information from Earth Observation data."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "samumantha",
    "samumantha",
    "samumantha",
    "samumantha"
   ]
  },
  "package": {
   "name": "eodie",
   "version": "1.0.2"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base",
    "python",
    "shapely",
    "rasterio",
    "rasterstats",
    "fiona",
    "numpy",
    "gdal",
    "pyyaml",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "403f1cf65002c67f35948adef32940437215547de5f60bd6d4efd6d58bc4c41d",
   "url": "https://gitlab.com/fgi_nls/public/EODIE/-/archive/v1.0.2/EODIE-v1.0.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help",
    "python -c 'from osgeo import gdal'",
    "eodie_process.py --help"
   ],
   "imports": [
    "eodie",
    "eodie",
    "eodie",
    "eodie"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fiona",
    "gdal",
    "matplotlib-base",
    "numpy",
    "python",
    "pyyaml",
    "rasterio",
    "rasterstats",
    "shapely"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "eodie"
  ]
 },
 "pinning_version": "2022.12.21.11.24.57",
 "pre_pr_migrator_attempts": {
  "pypy38": 4
 },
 "pre_pr_migrator_status": {
  "pypy38": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3952015330\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 279, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 340, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"EODIE\" %}\n{% set version = \"1.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url : https://gitlab.com/fgi_nls/public/EODIE/-/archive/v{{ version }}/EODIE-v{{ version }}.tar.gz \n  sha256: 403f1cf65002c67f35948adef32940437215547de5f60bd6d4efd6d58bc4c41d\n\nbuild:\n  skip: true  # [win]\n  number: 3\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - shapely\n    - rasterio\n    - rasterstats\n    - fiona\n    - numpy\n    - gdal\n    - pyyaml\n    - matplotlib-base\n\ntest:\n  imports: \n    - eodie   \n  commands:\n    - python -c 'from osgeo import gdal'\n    - eodie_process.py --help\n\nabout:\n  home: https://gitlab.com/fgi_nls/public/EODIE\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: The Earth Observation Data Information Extractor is a toolkit to extract object based timeseries information from Earth Observation data.\n  description: The goal of EODIE is to ease the extraction of time series information at object level. Today, vast amounts of Earth Observation data are available to the users via for example earth explorer or scihub. Often, not the whole images are needed for exploitation, but only the timeseries of a certain feature on object level. Objects may be polygons depicting agricultural field parcels, forest plots, or areas of a certain land cover type.\n  doc_url: https://eodie.readthedocs.io/en/latest/\n  dev_url: https://gitlab.com/fgi_nls/public/EODIE\n\nextra:\n  recipe-maintainers:\n    - samumantha\n",
 "req": {
  "__set__": true,
  "elements": [
   "fiona",
   "gdal",
   "matplotlib-base",
   "numpy",
   "pip",
   "python",
   "pyyaml",
   "rasterio",
   "rasterstats",
   "shapely"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fiona",
    "gdal",
    "matplotlib-base",
    "numpy",
    "python",
    "pyyaml",
    "rasterio",
    "rasterstats",
    "shapely"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fiona",
    "gdal",
    "matplotlib-base",
    "numpy",
    "python",
    "pyyaml",
    "rasterio",
    "rasterstats",
    "shapely"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.com/fgi_nls/public/EODIE/-/archive/v1.0.2/EODIE-v1.0.2.tar.gz",
 "version": "1.0.2"
}