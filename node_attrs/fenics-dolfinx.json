{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/956442885.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "petsc317"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/956459654.json"
   },
   "data": {
    "bot_rerun": 1654255074.1547952,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/956698533.json"
   },
   "data": {
    "bot_rerun": 1654255074.1549852,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957403515.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957407848.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1016504271.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1024082917.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "fenics-dolfinx",
 "hash_type": "sha256",
 "name": "fenics-dolfinx-split",
 "new_version": "0.5.0",
 "new_version_attempts": {
  "0.5.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fenics-dolfinx",
   "fenics-libdolfinx"
  ]
 },
 "pinning_version": "2022.08.11.15.16.27",
 "raw_meta_yaml": "{% set name = \"fenics-dolfinx\" %}\n{% set version = \"0.4.1\" %}\n{% set extra = \"\" %}\n\n{% set build = 10 %}\n{% if scalar == \"real\" %}\n{%   set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/fenics/dolfinx/archive/refs/tags/v{{ version }}{{ extra }}.tar.gz\n  sha256: 68dcf29a26c750fcea5e02d8d58411e3b054313c3bf6fcbc1d0f08dd2851117f\n  patches:\n    - \"0001-cpp-test-remove-extra-semicolon.patch\"\n    - \"no-parallel-python-cmake.patch\"  # [ target_platform == \"linux-aarch64\" or target_platform == \"linux-ppc64le\" ]\n    - \"cmake-args-python.patch\"  # [ target_platform != build_platform ]\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n  script_env:\n    - OMPI_ALLOW_RUN_AS_ROOT=1\n    - OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1\n    - OMPI_MCA_rmaps_base_oversubscribe=1\n    - OMPI_MCA_plm=isolated\n    - OMPI_MCA_btl_vader_single_copy_mechanism=none\n\nrequirements:\n  build:\n    - python  # not used, just for build matrix\n\noutputs:\n  - name: fenics-libdolfinx\n    script: build-libdolfinx.sh\n    build:\n      skip_compile_pyc:\n        - \"*\"  # [build_platform != target_platform]\n      run_exports:\n        - {{ pin_subpackage(\"fenics-libdolfinx\", max_pin=\"x.x.x\") }}\n        - petsc * {{ scalar }}_*\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - cmake\n        - make\n        - pkg-config\n        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - {{ mpi }}\n        - libadios2\n        - libadios2 * mpi_{{ mpi }}_*\n        - boost-cpp\n        - hdf5 {{ hdf5 }} mpi_{{ mpi }}_*\n        - parmetis\n        - ptscotch\n        - petsc\n        - petsc * {{ scalar }}_*\n        - slepc\n        - xtensor\n        - fenics-libbasix 0.4.*\n        - fenics-ufcx 0.4.*\n      run:\n        # host dependencies with run_exports\n        - {{ mpi }}\n        - hdf5\n        - ptscotch\n        - petsc * {{ scalar }}_*\n        - slepc\n        - fenics-libbasix\n        # these don't have run_exports\n        # but are needed at runtime for code generation\n        - fenics-ufcx\n        - boost-cpp\n        - parmetis\n        - xtensor\n    test:\n      script: test-libdolfinx.sh\n      source_files:\n        - cpp/test\n      requires:\n        - {{ compiler(\"cxx\") }}\n        - pkg-config\n        - cmake\n        - catch2 2.*\n        - make\n        - fenics-ffcx ==0.4.*,>=0.4.2\n  - name: fenics-dolfinx\n    script: build-dolfinx.sh\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - cmake\n        - make\n        - pkg-config\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - pybind11                               # [build_platform != target_platform]\n        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - {{ mpi }}\n        - boost-cpp\n        # hdf5 shouldn't be needed here, but solver fails without it\n        - hdf5 {{ hdf5 }} mpi_{{ mpi }}_*\n        - {{ pin_subpackage(\"fenics-libdolfinx\", exact=True) }}\n        - python\n        - pip\n        - setuptools >=58\n        - wheel\n        - pybind11\n        - xtensor\n        - mpi4py\n        - petsc * {{ scalar }}_*\n        - petsc4py\n        - slepc\n        - slepc4py\n      run:\n        - {{ compiler(\"cxx\") }}  # [linux]\n        - python\n        - {{ pin_subpackage(\"fenics-libdolfinx\", exact=True) }}\n        - cffi\n        - mpi4py\n        - numpy\n        - petsc4py\n        - slepc4py\n        - fenics-basix ==0.4.*,>=0.4.1\n        - fenics-ffcx ==0.4.*,>=0.4.2\n        - fenics-ufl ==2022.1.*\n    test:\n      script: test-dolfinx.sh\n      files:\n        - test_dolfinx.py\n      source_files:\n        - python/demo\n      requires:\n        - pip\n        - pytest >=6\n\nabout:\n  home: https://fenicsproject.org\n  summary: The computational environment of FEniCSx\n  description: |\n    DOLFINx is the computational environment of FEniCSx\n    and implements the FEniCS Problem Solving Environment in Python and C++.\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  doc_url: https://docs.fenicsproject.org/dolfinx/v{{ version }}/\n  dev_url: https://github.com/fenics/dolfinx\n\nextra:\n  feedstock-name: fenics-dolfinx\n  recipe-maintainers:\n    - minrk\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/fenics/dolfinx/archive/refs/tags/v0.4.1.tar.gz",
 "version": "0.4.1"
}