{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/850146885.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/850154559.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "airspy",
 "hash_type": "sha256",
 "name": "airspy-split",
 "new_version": "1.0.10",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "airspy",
   "libairspy"
  ]
 },
 "pinning_version": "2022.02.13.01.05.12",
 "raw_meta_yaml": "{% set name = \"airspy\" %}\n{% set version = \"1.0.10\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/airspy/airspyone_host/archive/v{{ version }}.tar.gz\n  sha256: fcca23911c9a9da71cebeffeba708c59d1d6401eec6eb2dd73cae35b8ea3c613\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    # libudev is on its own in CentOS 6, packaged with systemd in CentOS 7\n    - {{ cdt('libudev-devel') }}  # [linux and cdt_name=='cos6']\n    - {{ cdt('systemd-devel') }}  # [linux and cdt_name=='cos7']\n    - ninja\n    - pkg-config\n  host:\n    - libusb\n    - pthreads-win32  # [win]\n\noutputs:\n  - name: libairspy\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libairspy', max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - cmake\n        - ninja\n      host:\n        - libusb\n        - pthreads-win32  # [win]\n      run:\n        - pthreads-win32  # [win]\n    test:\n      commands:\n        # verify that headers get installed\n        - test -f $PREFIX/include/libairspy/airspy.h  # [not win]\n        - test -f $PREFIX/include/libairspy/airspy_commands.h  # [not win]\n        - test -f $PREFIX/include/libairspy/iqconverter_float.h  # [not win]\n        - test -f $PREFIX/include/libairspy/iqconverter_int16.h  # [not win]\n        - test -f $PREFIX/include/libairspy/filters.h  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\libairspy\\\\airspy.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\libairspy\\\\airspy_commands.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\libairspy\\\\iqconverter_float.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\libairspy\\\\iqconverter_int16.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\libairspy\\\\filters.h exit 1  # [win]\n\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/libairspy${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\airspy.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\airspy.lib exit 1  # [win]\n  - name: airspy\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage('libairspy', exact=True) }}\n      run:\n        - {{ pin_subpackage('libairspy', exact=True) }}\n    test:\n      commands:\n        # verify that some executables run without error\n        - airspy_lib_version\n\n        # verify that the remaining executables can be run\n        {% set cmds = [\"airspy_gpio\", \"airspy_gpiodir\", \"airspy_info\"] %}\n        {% set cmds = cmds + [\"airspy_r820t\", \"airspy_rx\", \"airspy_si5351c\"] %}\n        {% set cmds = cmds + [\"airspy_spiflash\"] %}\n        {% for cmd in cmds %}\n        - {{ cmd }} || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n        - {{ cmd }} || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n        {% endfor %}\n\n        # verify that udev rule gets installed\n        - test -f $PREFIX/lib/udev/rules.d/52-airspy.rules  # [linux]\n\nabout:\n  home: https://github.com/airspy/airspyone_host\n  license: BSD-3-Clause AND MIT AND GPL-2.0-or-later AND LGPL-2.1-or-later\n  license_file:\n    - libairspy/LICENSE.md\n    - libairspy/vc/getopt/LICENSE.md\n    - airspy-tools/LICENSE.md\n    - airspy-tools/getopt/LICENSE.md\n  summary: Host software for AirSpy, a low cost, open source software radio platform\n  description: |\n    Airspy is a line of Popular Software-Defined Radio (SDR) receivers\n    developed to achieve High Performance and Affordable Price using innovative\n    combinations of DSP and RF techniques. The goal is to satisfy the most\n    demanding telecommunications professionals and radio enthusiasts while\n    being a serious alternative to both cost sensitive and higher end\n    receivers. Airspy Radios feature world class reception quality and ease of\n    use thanks to the tight integration with the de facto standard free SDR#\n    software for signal acquisition, analysis and demodulation.\n\n    The `libairspy` package contains the library for Airspy devices, and the\n    `airspy` package contains command line tools for using the devices.\n\n    For Linux users of `airspy`, you will likely want to link the provided\n    udev rule into your system installation in order for the hardware to have\n    the correct permissions:\n\n        sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/52-airspy.rules /etc/udev/rules.d/\n        sudo udevadm control --reload\n        sudo udevadm trigger\n\n    Then, make sure your user account belongs to the plugdev group in order to\n    be able to access your device:\n\n        sudo usermod -a -G plugdev <user>\n\n    You may have to restart for this change to take effect.\n  dev_url: https://github.com/airspy/airspyone_host\n\nextra:\n  feedstock-name: airspy\n  recipe-maintainers:\n    - ryanvolz\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://github.com/airspy/airspyone_host/archive/v1.0.10.tar.gz",
 "version": "1.0.10"
}