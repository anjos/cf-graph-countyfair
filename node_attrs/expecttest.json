{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "expecttest",
 "hash_type": "sha256",
 "name": "expecttest",
 "new_version": "0.1.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "expecttest"
  ]
 },
 "raw_meta_yaml": "{% set name = \"expecttest\" %}\n{% set version = \"0.1.3\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/expecttest-{{ version }}.tar.gz\n  sha256: 83057695811d94128aed13ed094a070db90e0a92ea40071f8ee073cbab57149a\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - poetry\n    - python >=3.6,<4.0\n  run:\n    - python >=3.6,<4.0\n\ntest:\n  imports:\n    - expecttest\n\nabout:\n  home: https://github.com/ezyang/expecttest\n  summary: Expect tests for unittest\n  description: |\n    This library implements expect tests (also known as \"golden\" tests). Expect tests\n    are a method of writing tests where instead of hard-coding the expected output of\n    a test, you run the test to get the output, and the test framework automatically\n    populates the expected output. If the output of the test changes, you can rerun the\n    test with the environment variable EXPECTTEST_ACCEPT=1 to automatically update the\n    expected output.\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - pmeier\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/e/expecttest/expecttest-0.1.3.tar.gz",
 "version": "0.1.3"
}