{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/352524959.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375251229.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/498709189.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/584991473.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.21"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/596450646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.22"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bayespy",
 "hash_type": "sha256",
 "name": "bayespy",
 "new_version": "0.5.22",
 "new_version_attempts": {
  "0.5.20": 2,
  "0.5.21": 1,
  "0.5.22": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bayespy"
  ]
 },
 "pinning_version": "2021.03.19.08.01.08",
 "raw_meta_yaml": "{% set name = \"bayespy\" %}\n{% set version = \"0.5.22\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: ed0057dc22bd392df4b3bba23536117e1b2866e3201b12c5a37428d23421a5ba\n\nbuild:\n  number: 0\n  noarch: python\n  script: '{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv '\n\nrequirements:\n  host:\n    - pip\n    - python >=3\n  run:\n    - h5py\n    - numpy >=1.10.0\n    - python >=3\n    - scipy >=0.13.0\n    - matplotlib-base\n\ntest:\n  imports:\n    - bayespy\n    - bayespy.demos\n    - bayespy.inference\n    - bayespy.inference.vmp\n    - bayespy.inference.vmp.nodes\n    - bayespy.inference.vmp.nodes.tests\n    - bayespy.inference.vmp.tests\n    - bayespy.nodes\n    - bayespy.tests\n    - bayespy.utils\n    - bayespy.utils.covfunc\n    - bayespy.utils.tests\n\nabout:\n  home: http://bayespy.org\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Variational Bayesian inference tools for Python\n  description: |\n    BayesPy provides tools for Bayesian inference with Python. The user constructs a model as a Bayesian network, \n    observes data and runs posterior inference. The goal is to provide a tool which is efficient, flexible and \n    extendable enough for expert use but also accessible for more casual users.\n\n    Currently, only variational Bayesian inference for conjugate-exponential family (variational message passing) \n    has been implemented. Future work includes variational approximations for other types of distributions and \n    possibly other approximate inference methods such as expectation propagation, Laplace approximations, \n    Markov chain Monte Carlo (MCMC) and other methods. Contributions are welcome.\n  doc_url: http://bayespy.org/\n  dev_url: https://github.com/bayespy/bayespy\n\nextra:\n  recipe-maintainers:\n    - volpatto\n",
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/b/bayespy/bayespy-0.5.22.tar.gz",
 "version": "0.5.22"
}