{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/795711793.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "multiset",
 "hash_type": "sha256",
 "name": "multiset",
 "new_version": "3.0.1",
 "new_version_attempts": {
  "3.0.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "multiset"
  ]
 },
 "pinning_version": "2021.12.05.20.40.01",
 "raw_meta_yaml": "{% set name = \"multiset\" %}\n{% set version = \"3.0.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/multiset-{{ version }}.tar.gz\n  sha256: e45671cae8385a8e6248a9b07a3a83280c2d0cc4312713058cfbacdc5ec9973e\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - setuptools >=46\n    - setuptools-scm\n  run:\n    - python >=3.7\n\ntest:\n  imports:\n    - multiset\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/wheerd/multiset\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A multiset implementation for python\n  description: |\n    A multiset is similar to the builtin set, but it allows an element to occur\n    multiple times. It is an unordered collection of element which have to be\n    hashable just like in a set. It supports the same methods and operations as\n    set does, e.g. membership test, union, intersection, and (symmetric)\n    difference.\n  doc_url: http://multiset.readthedocs.io\n  dev_url: https://github.com/wheerd/multiset\n\nextra:\n  recipe-maintainers:\n    - johanneskoester\n",
 "smithy_version": "3.15.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/multiset/multiset-3.0.1.tar.gz",
 "version": "3.0.1"
}