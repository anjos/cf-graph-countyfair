{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/838465508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904250980.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/907923924.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/939135185.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1025724743.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038447254.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1111433260.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "seqlike",
 "hash_type": "sha256",
 "name": "seqlike",
 "new_version": "1.3.3",
 "new_version_attempts": {
  "1.1.7": 1,
  "1.1.8": 1,
  "1.2.0": 1,
  "1.3.0": 1,
  "1.3.1": 5,
  "1.3.2": 1,
  "1.3.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "pinning_version": "2022.11.04.17.37.23",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"seqlike\" %}\n{% set version = \"1.3.3\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/seqlike-{{ version }}.tar.gz\n  sha256: f0000de7e28da9bdf64740a21ed54bb8c48bea2bc00beb4875eb7f78c7349703\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - requests\n    - lazy_loader\n  run:\n    - python >=3.6\n    - biopython\n    - multipledispatch\n    - numpy\n    - pandas\n    - pillow\n    - pytest\n    - pytest-regtest\n    - python-codon-tables\n    - scikit-learn\n    - weblogo\n    # See notes on lazy_loader\n    # - https://github.com/conda-forge/seqlike-feedstock/pull/7#issuecomment-1140347680\n    # - https://github.com/conda-forge/seqlike-feedstock/pull/7#issuecomment-1146537036\n    - lazy_loader\n    # suggested by auto-tick bot\n    - requests\n\ntest:\n  imports:\n    - seqlike\n    - seqlike.utils\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/modernatx/seqlike\n  summary: 'SeqLike: Flexible Biological Sequence Objects in Python'\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    SeqLike is a Python package that lets you conveniently manipulate \n    biological sequences.\n    It solves some of the following problems:\n\n    1. Sequence representation inter-conversion (AA vs. NT, and \n       str/Seq/SeqRecord/arrays) via a single object's API.\n    2. Processing a collection of sequences easily in Python without \n       needing to switch out to a shell.\n    3. Convenience APIs to visualize of a collection of sequences.\n\n    PyPI: [https://pypi.org/project/seqlike/](https://pypi.org/project/seqlike/)\n\n  doc_url: https://modernatx.github.io/seqlike/\n  dev_url: https://github.com/modernatx/seqlike\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n    - ericmjl\n    ## Maintainers from bioconda\n    - raivivek\n\n## NOTE: >> DO NOT REMOVE THIS NOTE TO AVOID PLAUSIBLE CONFUSION IN FUTURE\n#\n#  SUMMARY: The three recipes (seqlike, weblogo, python-codon-tables) \n#           were managed by bioconda channel. Since the creators of \n#           seqlike wanted it on conda-forge, we ported all three \n#           libraries from bioconda channel to conda-forge channel, \n#           with permission from bioconda-core-team. The other two \n#           libraries (weblogo, python-codon-tables) are dependencies \n#           of `seqlike`.\n#\n#  TODO: \n#         1. Remind bioconda team to remove \"seqlike\" from \n#            bioconda channel, to complete the transfer of \n#            \"seqlike\" from bioconda to conda-forge. [DONE]\n#\n#         2. Ask the maintainers of bioconda:seqlike whether \n#            to add them to the maintainers' list here. [DONE]\n#\n#  See: \n#    - Comment: \n#      https://github.com/conda-forge/staged-recipes/pull/17283#issuecomment-1001016875\n#      By: dpryan79 (from bioconda team)\n#    - For more information see this:\n#      https://github.com/conda-forge/staged-recipes/pull/17283#issuecomment-1000523651\n#      \n##-------------------------------------------------------------------------\n",
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/s/seqlike/seqlike-1.3.3.tar.gz",
 "version": "1.3.3"
}