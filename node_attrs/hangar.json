{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/315893944.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345580785.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/124039c9-3f22-4126-b5d1-6cfc674baaa6.json"
   },
   "data": {
    "bot_rerun": 1.0,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/398539745.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/399237238.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/399762269.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/415408521.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514616771.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/841226966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "hangar",
 "hash_type": "sha256",
 "name": "hangar",
 "new_version": "0.5.2",
 "new_version_attempts": {
  "0.5.1": 1,
  "0.5.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hangar"
  ]
 },
 "pinning_version": "2022.02.06.21.40.56",
 "raw_meta_yaml": "{% set name = \"hangar\" %}\n{% set version = \"0.5.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d452f37b9ba063bbb1b888b8d251d41dd36cd830b4e710ee7aecf0d527ed90f5\n\nbuild:\n  number: 1\n  skip: true  # [py<=35]\n  entry_points:\n    - hangar = hangar.cli:main\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n    - setuptools\n    - wheel\n    - cython >=0.27\n  run:\n    - click\n    - grpcio\n    - h5py >=2.9\n    - hdf5plugin >=2.0\n    - numpy\n    - protobuf\n    - python\n    - python-blosc\n    - python-lmdb >=0.92\n    - python-xxhash\n    - tqdm\n    - wrapt\n\ntest:\n  imports:\n    - hangar\n    - hangar.diagnostics\n    - hangar.records\n    - hangar.remote\n    - hangar.backends\n    - hangar.columns\n  commands:\n    - hangar --help\n    - hangar --version\n\nabout:\n  home: https://github.com/tensorwerk/hangar-py\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: Hangar is version control for tensor data. Commit, branch, merge, revert, and collaborate in the data-defined software era.\n  doc_url: https://hangar-py.readthedocs.io/\n  dev_url: https://github.com/tensorwerk/hangar-py\n  description: |\n    Hangar is based off the belief that too much time is spent collecting, managing,\n    and creating home-brewed version control systems for data. At it's core Hangar\n    is designed to solve many of the same problems faced by traditional code version\n    control system (ie. ``Git``), just adapted for numerical data.\n\nextra:\n  recipe-maintainers:\n    - rlizzo\n    - lantiga\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/h/hangar/hangar-0.5.2.tar.gz",
 "version": "0.5.2"
}