{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "bader",
 "hash_type": "sha256",
 "name": "bader",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bader"
  ]
 },
 "raw_meta_yaml": "{% set name = \"bader\" %}\n{% set version = \"1.0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz\n  sha256: f20a0a021157d911bea06666911763b737c4ff38b39e793b8560f940fe391b8e\n  patches:\n    - make.patch\n\nbuild:\n  number: 1\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}\n    - make\n  host:\n  run:\n\ntest:\n  commands: \n    - bader -h\n\nabout:\n  home: http://theory.cm.utexas.edu/henkelman/code/bader/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: 'Bader Charge Analysis'\n  description: |\n    We have developed a fast algorithm for doing Bader's analysis on a \n    charge density grid. The program (see below) can read in charge \n    densities in the VASP CHGCAR format, or the Gaussian CUBE format. The\n    program outputs the total charge associated with each atom, and the \n    zero flux surfaces defining the Bader volumes.\n  doc_url: http://theory.cm.utexas.edu/henkelman/code/bader/\n  dev_url: http://theory.cm.utexas.edu/henkelman/code/bader/\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "strong_exports": false,
 "url": "http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz",
 "version": "1.0.4"
}