{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/540801777.json"
   },
   "data": {
    "bot_rerun": 1608260879.9392452,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/540802503.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542193101.json"
   },
   "data": {
    "bot_rerun": 1608260879.9395237,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542239836.json"
   },
   "data": {
    "bot_rerun": 1608260879.9396489,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542260926.json"
   },
   "data": {
    "bot_rerun": 1609208968.7598915,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542261010.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542261178.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546302661.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "cudnn",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "cuDNN Software License Agreement",
   "license_file": "NVIDIA_SLA_cuDNN_Support.txt",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "number": "1",
   "run_exports": [
    "cudnn",
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcudnn*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "isuruf",
    "isuruf"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.0.5.39"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "host": [],
   "run": [
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4"
   ],
   "run_constrained": null
  },
  "source": {
   "sha256": "90908495298896b33aa95063a3471f93c36627d7ac01c17dc36d75c65eea4a00",
   "url": "https://developer.download.nvidia.com/compute/redist/cudnn/v8.0.5/cudnn-10.1-linux-x64-v8.0.5.39.tgz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgcc-ng",
    "libstdcxx-ng"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "cuDNN Software License Agreement",
   "license_file": "NVIDIA_SLA_cuDNN_Support.txt",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "ignore_run_exports_from": null,
   "number": "1",
   "run_exports": [
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcudnn*.so* $PREFIX/lib/",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "isuruf",
    "isuruf",
    "isuruf",
    "isuruf",
    "isuruf"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.0.5.39"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [],
   "run": [
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4"
   ],
   "run_constrained": null
  },
  "source": {
   "sha256": "3726c58065187f5fc196652481ed05f0b8291dc0ebb6cc274dd7205a11f83d11",
   "url": "https://developer.download.nvidia.com/compute/redist/cudnn/v8.0.5/cudnn-10.1-windows10-x64-v8.0.5.39.zip"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1"
   ]
  }
 },
 "name": "cudnn",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cudnn"
  ]
 },
 "pinning_version": "2020.12.28.19.16.11",
 "pre_pr_migrator_status": {
  "cuda111_112": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/584039300\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1082, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 225, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 224, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"8.0.5.39\" %}\n\npackage:\n  name: cudnn\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/cudnn-{{ cuda_compiler_version }}-linux-x64-v{{ version }}.tgz  # [linux64]\n  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/cudnn-{{ cuda_compiler_version }}-linux-ppc64le-v{{ version }}.tgz  # [ppc64le]\n  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/cudnn-{{ cuda_compiler_version }}-windows10-x64-v{{ version }}.zip  # [win and cuda_compiler_version in (\"10.1\", \"10.2\")]\n  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/cudnn-{{ cuda_compiler_version }}-windows-x64-v{{ version }}.zip  # [win and cuda_compiler_version not in (\"10.1\", \"10.2\")]\n  sha256: 3726c58065187f5fc196652481ed05f0b8291dc0ebb6cc274dd7205a11f83d11  # [win64 and cuda_compiler_version == \"10.1\"]\n  sha256: 6a79e51776eef2d0653c9b457d79c0c14b27b64f0e675db9617f03e08e184da4  # [win64 and cuda_compiler_version == \"10.2\"]\n  sha256: a982fbfdecb7a632190c5d2346c19a3cbff86fb2780663b57f3ce547fdd3ce75  # [win64 and cuda_compiler_version == \"11.0\"]\n  sha256: 90908495298896b33aa95063a3471f93c36627d7ac01c17dc36d75c65eea4a00  # [linux64 and cuda_compiler_version == \"10.1\"]\n  sha256: 21f84c05c67bf1ec859e77c38ccd5bf154964fa1c308f449959be4c356e382f3  # [linux64 and cuda_compiler_version == \"10.2\"]\n  sha256: 4e16ee7895deb4a8b1c194b812ba49586ef7d26902051401d3717511898a9b73  # [linux64 and cuda_compiler_version == \"11.0\"]\n\nbuild:\n  number: 1\n  skip: True   # [cuda_compiler_version in (\"None\", \"9.2\", \"10.0\")]\n  script:\n    - mkdir -p $PREFIX/include               # [unix]\n    - cp include/cudnn*.h $PREFIX/include/    # [unix]\n    - mkdir -p $PREFIX/lib                   # [unix]\n    - mv lib64/libcudnn*.so* $PREFIX/lib/     # [linux64]\n    - mv lib/libcudnn*.so* $PREFIX/lib/       # [ppc64le]\n    - mkdir %LIBRARY_INC%                    # [win]\n    - copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\     # [win]\n    - mkdir %LIBRARY_LIB%                    # [win]\n    - copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\  # [win]\n    - mkdir %LIBRARY_BIN%                    # [win]\n    - copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\     # [win]\n  ignore_run_exports_from:\n    - {{ compiler('c') }}    # [linux]\n  run_exports:\n    - {{ pin_subpackage('cudnn') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n  run:\n    # Only GCC_3.0 or older symbols present\n    - libgcc-ng >=3.0     # [linux]\n    # Only GLIBCXX_3.4 or older symbols present\n    - libstdcxx-ng >=3.4  # [linux]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [ppc64le]\n\ntest:\n  commands:\n    - if not exist %LIBRARY_INC%/cudnn.h exit 1        # [win]\n    - if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1  # [win]\n    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1      # [win]\n    - if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1      # [win]\n    - if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1  # [win]\n    - if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1  # [win]\n    - test -f $PREFIX/include/cudnn.h                  # [linux]\n    - test -f $PREFIX/include/cudnn_adv_train.h        # [linux]\n    - test -f $PREFIX/lib/libcudnn.so                  # [linux]\n    - test -f $PREFIX/lib/libcudnn_adv_train.so        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cudnn\n  license: cuDNN Software License Agreement\n  license_file: NVIDIA_SLA_cuDNN_Support.txt\n  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  summary: \"NVIDIA's cuDNN deep neural network acceleration library\"\n  description: |\n    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\n    primitives for deep neural networks. It provides highly tuned\n    implementations of routines arising frequently in DNN applications.\n\n    License Agreements:- The packages are governed by the NVIDIA cuDNN\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuDNN EULA -\n    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  doc_url: https://docs.nvidia.com/deeplearning/cudnn/\n  dev_url: https://developer.nvidia.com/rdp/cudnn-download\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "libgcc-ng",
   "libstdcxx-ng",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cuda_compiler_stub",
    "linux-sysroot"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cuda_compiler_stub",
    "libgcc-ng",
    "libstdcxx-ng",
    "linux-sysroot"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://developer.download.nvidia.com/compute/redist/cudnn/v8.0.5/cudnn-10.1-windows10-x64-v8.0.5.39.zip",
 "version": "8.0.5.39",
 "win_64_meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "cuDNN Software License Agreement",
   "license_file": "NVIDIA_SLA_cuDNN_Support.txt",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "ignore_run_exports_from": null,
   "number": "1",
   "run_exports": [
    "cudnn",
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*_8.dll %LIBRARY_BIN%\\\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "isuruf",
    "isuruf"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.0.5.39"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [],
   "run": [],
   "run_constrained": null
  },
  "source": {
   "sha256": "3726c58065187f5fc196652481ed05f0b8291dc0ebb6cc274dd7205a11f83d11",
   "url": "https://developer.download.nvidia.com/compute/redist/cudnn/v8.0.5/cudnn-10.1-windows10-x64-v8.0.5.39.zip"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}