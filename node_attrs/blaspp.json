{
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "blaspp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Basic Linear Algebra Subprograms (BLAS) have been around for many\ndecades and serve as the de facto standard for performance-portable and\nnumerically robust implementation of essential linear algebra\nfunctionality. Originally, they were written in Fortran, and later\nfurnished with a C API (CBLAS).\nThe objective of BLAS++ is to provide a convenient, performance oriented\nAPI for development in the C++ language, that, for the most part, preserves\nestablished conventions, while, at the same time, takes advantages of\nmodern C++ features, such as: namespaces, templates, exceptions, etc.\nBLAS++ is part of the SLATE project (Software for Linear Algebra Targeting\nExascale), which is funded by the Department of Energy as part of its\nExascale Computing Initiative (ECP). Closely related to BLAS++ is the\nLAPACK++ project, which provides a C++ API for LAPACK.\n",
   "dev_url": "https://bitbucket.org/icl/blaspp",
   "doc_url": "https://icl.bitbucket.io/blaspp/",
   "home": "https://icl.utk.edu/slate/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "C++ API for the Basic Linear Algebra Subroutines"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "blaspp 2020.10.02"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ax3l"
   ]
  },
  "package": {
   "name": "blaspp",
   "version": "2020.10.02"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake >=3.15.0",
    "libgomp"
   ],
   "host": [
    "libblas",
    "libcblas"
   ]
  },
  "source": {
   "fn": "2020.10.02.tar.gz",
   "patches": [
    "0001-GNU-extension-__attribute__-format.patch",
    "0002-Complex-Support-OpenBLAS-w-MSVC.patch",
    "0003-Missing-include-for-std-max.patch",
    "0004-Install-RUNTIME.patch",
    "0005-Install-CMake-Dir.patch"
   ],
   "sha256": "36e45bb5a8793ba5d7bc7c34fc263f91f92b0946634682937041221a6bf1a150",
   "url": "https://bitbucket.org/icl/blaspp/downloads/blaspp-2020.10.02.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libblaspp${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/blaspp/blasppConfig.cmake"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Basic Linear Algebra Subprograms (BLAS) have been around for many\ndecades and serve as the de facto standard for performance-portable and\nnumerically robust implementation of essential linear algebra\nfunctionality. Originally, they were written in Fortran, and later\nfurnished with a C API (CBLAS).\nThe objective of BLAS++ is to provide a convenient, performance oriented\nAPI for development in the C++ language, that, for the most part, preserves\nestablished conventions, while, at the same time, takes advantages of\nmodern C++ features, such as: namespaces, templates, exceptions, etc.\nBLAS++ is part of the SLATE project (Software for Linear Algebra Targeting\nExascale), which is funded by the Department of Energy as part of its\nExascale Computing Initiative (ECP). Closely related to BLAS++ is the\nLAPACK++ project, which provides a C++ API for LAPACK.\n",
   "dev_url": "https://bitbucket.org/icl/blaspp",
   "doc_url": "https://icl.bitbucket.io/blaspp/",
   "home": "https://icl.utk.edu/slate/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "C++ API for the Basic Linear Algebra Subroutines"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "blaspp 2020.10.02",
    "blaspp 2020.10.02",
    "blaspp 2020.10.02"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ax3l",
    "ax3l",
    "ax3l"
   ]
  },
  "package": {
   "name": "blaspp",
   "version": "2020.10.02"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake >=3.15.0",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake >=3.15.0",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake >=3.15.0"
   ],
   "host": [
    "libblas",
    "libcblas",
    "libblas",
    "libcblas",
    "libblas",
    "libcblas"
   ]
  },
  "source": {
   "fn": "2020.10.02.tar.gz",
   "patches": [
    "0001-GNU-extension-__attribute__-format.patch",
    "0002-Complex-Support-OpenBLAS-w-MSVC.patch",
    "0003-Missing-include-for-std-max.patch",
    "0004-Install-RUNTIME.patch",
    "0005-Install-CMake-Dir.patch",
    "0001-GNU-extension-__attribute__-format.patch",
    "0002-Complex-Support-OpenBLAS-w-MSVC.patch",
    "0003-Missing-include-for-std-max.patch",
    "0004-Install-RUNTIME.patch",
    "0005-Install-CMake-Dir.patch",
    "0001-GNU-extension-__attribute__-format.patch",
    "0002-Complex-Support-OpenBLAS-w-MSVC.patch",
    "0003-Missing-include-for-std-max.patch",
    "0004-Install-RUNTIME.patch",
    "0005-Install-CMake-Dir.patch"
   ],
   "sha256": "36e45bb5a8793ba5d7bc7c34fc263f91f92b0946634682937041221a6bf1a150",
   "url": "https://bitbucket.org/icl/blaspp/downloads/blaspp-2020.10.02.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libblaspp${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/blaspp/blasppConfig.cmake",
    "test -f ${PREFIX}/lib/libblaspp${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/blaspp/blasppConfig.cmake",
    "if exist %LIBRARY_PREFIX%\\bin\\blaspp.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\blaspp\\blasppConfig.cmake (exit 0) else (exit 1)"
   ]
  }
 },
 "name": "blaspp",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The Basic Linear Algebra Subprograms (BLAS) have been around for many\ndecades and serve as the de facto standard for performance-portable and\nnumerically robust implementation of essential linear algebra\nfunctionality. Originally, they were written in Fortran, and later\nfurnished with a C API (CBLAS).\nThe objective of BLAS++ is to provide a convenient, performance oriented\nAPI for development in the C++ language, that, for the most part, preserves\nestablished conventions, while, at the same time, takes advantages of\nmodern C++ features, such as: namespaces, templates, exceptions, etc.\nBLAS++ is part of the SLATE project (Software for Linear Algebra Targeting\nExascale), which is funded by the Department of Energy as part of its\nExascale Computing Initiative (ECP). Closely related to BLAS++ is the\nLAPACK++ project, which provides a C++ API for LAPACK.\n",
   "dev_url": "https://bitbucket.org/icl/blaspp",
   "doc_url": "https://icl.bitbucket.io/blaspp/",
   "home": "https://icl.utk.edu/slate/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "C++ API for the Basic Linear Algebra Subroutines"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "blaspp 2020.10.02"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ax3l"
   ]
  },
  "package": {
   "name": "blaspp",
   "version": "2020.10.02"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake >=3.15.0",
    "llvm-openmp"
   ],
   "host": [
    "libblas",
    "libcblas"
   ]
  },
  "source": {
   "fn": "2020.10.02.tar.gz",
   "patches": [
    "0001-GNU-extension-__attribute__-format.patch",
    "0002-Complex-Support-OpenBLAS-w-MSVC.patch",
    "0003-Missing-include-for-std-max.patch",
    "0004-Install-RUNTIME.patch",
    "0005-Install-CMake-Dir.patch"
   ],
   "sha256": "36e45bb5a8793ba5d7bc7c34fc263f91f92b0946634682937041221a6bf1a150",
   "url": "https://bitbucket.org/icl/blaspp/downloads/blaspp-2020.10.02.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libblaspp${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/blaspp/blasppConfig.cmake"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "blaspp"
  ]
 },
 "raw_meta_yaml": "{% set name = \"blaspp\" %}\n{% set version = \"2020.10.02\" %}\n{% set build = 1 %}\n{% set sha256 = \"36e45bb5a8793ba5d7bc7c34fc263f91f92b0946634682937041221a6bf1a150\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}.tar.gz\n  url: https://bitbucket.org/icl/blaspp/downloads/blaspp-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    # Fix MSVC builds\n    # https://bitbucket.org/icl/blaspp/pull-requests/31/wip-msvc-windows-builds\n    - 0001-GNU-extension-__attribute__-format.patch\n    - 0002-Complex-Support-OpenBLAS-w-MSVC.patch\n    - 0003-Missing-include-for-std-max.patch\n    - 0004-Install-RUNTIME.patch\n    - 0005-Install-CMake-Dir.patch\n\nbuild:\n  number: {{ build }}\n\n  run_exports:\n    # no ABI compatibility between releases\n    - blaspp {{ version }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make           # [unix]\n    - ninja          # [win]\n    - cmake >=3.15.0\n    - llvm-openmp    # [osx]\n    - libgomp        # [linux]\n  host:\n    - libblas\n    - libcblas\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libblaspp${SHLIB_EXT}                                 # [unix]\n    - if exist %LIBRARY_PREFIX%\\bin\\blaspp.dll (exit 0) else (exit 1)             # [win]\n\n    - test -f ${PREFIX}/lib/blaspp/blasppConfig.cmake                             # [unix]\n    - if exist %LIBRARY_PREFIX%\\lib\\blaspp\\blasppConfig.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://icl.utk.edu/slate/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: C++ API for the Basic Linear Algebra Subroutines\n\n  description: |\n    The Basic Linear Algebra Subprograms (BLAS) have been around for many\n    decades and serve as the de facto standard for performance-portable and\n    numerically robust implementation of essential linear algebra\n    functionality. Originally, they were written in Fortran, and later\n    furnished with a C API (CBLAS).\n    The objective of BLAS++ is to provide a convenient, performance oriented\n    API for development in the C++ language, that, for the most part, preserves\n    established conventions, while, at the same time, takes advantages of\n    modern C++ features, such as: namespaces, templates, exceptions, etc.\n    BLAS++ is part of the SLATE project (Software for Linear Algebra Targeting\n    Exascale), which is funded by the Department of Energy as part of its\n    Exascale Computing Initiative (ECP). Closely related to BLAS++ is the\n    LAPACK++ project, which provides a C++ API for LAPACK.\n  doc_url: https://icl.bitbucket.io/blaspp/\n  dev_url: https://bitbucket.org/icl/blaspp\n\nextra:\n  recipe-maintainers:\n    - ax3l\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "libblas",
   "libcblas",
   "libgomp",
   "llvm-openmp",
   "make",
   "ninja"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libblas",
    "libcblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.15.0",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://bitbucket.org/icl/blaspp/downloads/blaspp-2020.10.02.tar.gz",
 "version": "2020.10.02",
 "win_64_meta_yaml": {
  "about": {
   "description": "The Basic Linear Algebra Subprograms (BLAS) have been around for many\ndecades and serve as the de facto standard for performance-portable and\nnumerically robust implementation of essential linear algebra\nfunctionality. Originally, they were written in Fortran, and later\nfurnished with a C API (CBLAS).\nThe objective of BLAS++ is to provide a convenient, performance oriented\nAPI for development in the C++ language, that, for the most part, preserves\nestablished conventions, while, at the same time, takes advantages of\nmodern C++ features, such as: namespaces, templates, exceptions, etc.\nBLAS++ is part of the SLATE project (Software for Linear Algebra Targeting\nExascale), which is funded by the Department of Energy as part of its\nExascale Computing Initiative (ECP). Closely related to BLAS++ is the\nLAPACK++ project, which provides a C++ API for LAPACK.\n",
   "dev_url": "https://bitbucket.org/icl/blaspp",
   "doc_url": "https://icl.bitbucket.io/blaspp/",
   "home": "https://icl.utk.edu/slate/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "C++ API for the Basic Linear Algebra Subroutines"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "blaspp 2020.10.02"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ax3l"
   ]
  },
  "package": {
   "name": "blaspp",
   "version": "2020.10.02"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake >=3.15.0"
   ],
   "host": [
    "libblas",
    "libcblas"
   ]
  },
  "source": {
   "fn": "2020.10.02.tar.gz",
   "patches": [
    "0001-GNU-extension-__attribute__-format.patch",
    "0002-Complex-Support-OpenBLAS-w-MSVC.patch",
    "0003-Missing-include-for-std-max.patch",
    "0004-Install-RUNTIME.patch",
    "0005-Install-CMake-Dir.patch"
   ],
   "sha256": "36e45bb5a8793ba5d7bc7c34fc263f91f92b0946634682937041221a6bf1a150",
   "url": "https://bitbucket.org/icl/blaspp/downloads/blaspp-2020.10.02.tar.gz"
  },
  "test": {
   "commands": [
    "if exist %LIBRARY_PREFIX%\\bin\\blaspp.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\blaspp\\blasppConfig.cmake (exit 0) else (exit 1)"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}