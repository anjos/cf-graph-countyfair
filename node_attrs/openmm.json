{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/336095266.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/348480275.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393007333.json"
   },
   "data": {
    "bot_rerun": 1597087705.4183836,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/422875843.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465756378.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499531590.json"
   },
   "data": {
    "bot_rerun": 1603118413.773306,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502000610.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506046480.json"
   },
   "data": {
    "bot_rerun": 1603192689.2663634,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506713021.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/527680647.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547817051.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553902236.json"
   },
   "data": {
    "bot_rerun": 1611305817.4160998,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559831307.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574580159.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "openmm",
 "linux_64_meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*"
   ],
   "number": "0",
   "script": [
    "env with_test_suite=true bash /tmp/tmp60uvguw2/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp8ohi5nbj/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp23n0t6a4/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmphcl6wd6t/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpo0u_rxf_/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp7obwyapu/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpma1uaqhx/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp01vlq7fs/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp_vawrtzc/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpd7ks9_b3/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmptvzpb8u8/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp1ekx2zik/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpyrt7bk2_/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpnq2bxezh/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpf56cbccy/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp6suhcqjs/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmprjamynwt/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpwhq69ts7/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp32nuoll6/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpp0446r47/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpo1hr8r0n/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpvlj8nauh/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpvojinhsz/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmps0a70ccy/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpq_1mhide/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmplnmfr_dd/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpi9te41le/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp7ffny4la/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpyjmfn_eg/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpbpwkc8vt/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpw6xw5gc7/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmprt69j4kc/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpcj_8nxp3/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpqbw5keph/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp91sabefh/build_openmm.sh"
   ],
   "script_env": [
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG"
   ],
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system"
   ],
   "run_constrained": null
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh"
   ],
   "files": [
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "doxygen",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "lxml",
    "numpy",
    "ocl-icd",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*"
   ],
   "number": "0",
   "script": [
    "env with_test_suite=true bash /tmp/tmpqf3tm5pn/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpfu8cw65r/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmphkag8wqb/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpf0dljtpq/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp6n54z0ae/build_openmm.sh"
   ],
   "script_env": [
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG"
   ],
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system"
   ],
   "run_constrained": null
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh"
   ],
   "files": [
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "doxygen",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "lxml",
    "numpy",
    "ocl-icd",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*"
   ],
   "number": "0",
   "script": [
    "env with_test_suite=true bash /tmp/tmp292fpnmf/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpa3jkqsyz/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpsh5obmvb/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpg138xi4e/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpapm3dgt0/build_openmm.sh"
   ],
   "script_env": [
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME"
   ],
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system"
   ],
   "run_constrained": null
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh"
   ],
   "files": [
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "doxygen",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "lxml",
    "numpy",
    "ocl-icd",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libcuda.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll"
   ],
   "number": "0",
   "script": [
    "env with_test_suite=true bash /tmp/tmp60uvguw2/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp8ohi5nbj/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp23n0t6a4/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmphcl6wd6t/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpo0u_rxf_/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp7obwyapu/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpma1uaqhx/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp01vlq7fs/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp_vawrtzc/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpd7ks9_b3/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmptvzpb8u8/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp1ekx2zik/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpyrt7bk2_/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpnq2bxezh/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpf56cbccy/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp6suhcqjs/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmprjamynwt/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpwhq69ts7/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp32nuoll6/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpp0446r47/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpo1hr8r0n/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpvlj8nauh/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpvojinhsz/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmps0a70ccy/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpq_1mhide/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmplnmfr_dd/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpi9te41le/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp7ffny4la/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpyjmfn_eg/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpbpwkc8vt/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpw6xw5gc7/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmprt69j4kc/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpcj_8nxp3/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpqbw5keph/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp91sabefh/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpqf3tm5pn/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpfu8cw65r/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmphkag8wqb/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpf0dljtpq/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp6n54z0ae/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp292fpnmf/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpa3jkqsyz/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpsh5obmvb/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpg138xi4e/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpapm3dgt0/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp3b_re0om/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp92tcdtmx/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpk0wjoqab/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp53hxbges/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp3s6i9tzk/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpfzwgtguu/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpny5taiou/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpmw1qtce_/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpcfhpc_mq/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpwmgri_wl/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpxbzfg5oj/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp8zy8mu36/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpi38cyr6e/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpi082n2c6/build_openmm.sh",
    "set with_test_suite=true &&   /tmp/tmp31r634ff\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpb_bcdd0c\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp4rqakkoh\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp8nby9pu0\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpfefyahke\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpz1b5fm3g\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp89tq1b67\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpvf8ky6gp\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp3eb1gqs9\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqmuwc6iw\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpgl960id3\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmps6l_3ff0\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqlmqmf5a\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpalwp9opg\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpfuzsz7d3\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp8akk41kp\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpbk6v1751\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqg3l4gsp\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqy05yguh\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp7pdh56tm\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp0dn3qgwb\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpy_dz21v5\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp0bvl3sxc\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp2rsy4cb3\\build_openmm.bat"
   ],
   "script_env": [
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CUDA_HOME",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG"
   ],
   "string": "py38h1234567_0_apple",
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "doxygen",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "ocl-icd",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader"
   ],
   "run_constrained": null
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat"
   ],
   "files": [
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pocl",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "name": "openmm",
 "new_version": "7.4.2",
 "new_version_attempts": {
  "7.4.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*"
   ],
   "number": "0",
   "script": [
    "env with_test_suite=true bash /tmp/tmp3b_re0om/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp92tcdtmx/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpk0wjoqab/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp53hxbges/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp3s6i9tzk/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpfzwgtguu/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpny5taiou/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpmw1qtce_/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpcfhpc_mq/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpwmgri_wl/build_openmm.sh"
   ],
   "script_env": [
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG"
   ],
   "string": "py37h1234567_0_apple",
   "track_features": [
    "openmm_opencl_apple",
    "openmm_opencl_apple"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy"
   ],
   "run_constrained": [
    "khronos-opencl-icd-loader  ==9999999999",
    "ocl_icd_wrapper_apple      ==9999999999",
    "khronos-opencl-icd-loader  ==9999999999",
    "ocl_icd_wrapper_apple      ==9999999999"
   ]
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh"
   ],
   "files": [
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "conda-build",
    "cxx_compiler_stub",
    "doxygen",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "khronos-opencl-icd-loader",
    "lxml",
    "numpy",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "khronos-opencl-icd-loader",
    "numpy",
    "ocl_icd_wrapper_apple",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*",
    "*/libOpenCL.*"
   ],
   "number": "0",
   "script": [
    "env with_test_suite=true bash /tmp/tmpxbzfg5oj/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmp8zy8mu36/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpi38cyr6e/build_openmm.sh",
    "env with_test_suite=true bash /tmp/tmpi082n2c6/build_openmm.sh"
   ],
   "script_env": [
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG"
   ],
   "string": "py38h1234567_0_apple",
   "track_features": [
    "openmm_opencl_apple"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "doxygen",
    "conda-build"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "fftw",
    "numpy"
   ],
   "run_constrained": [
    "khronos-opencl-icd-loader  ==9999999999",
    "ocl_icd_wrapper_apple      ==9999999999"
   ]
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh",
    "env with_test_suite=true bash test_openmm.sh"
   ],
   "files": [
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh",
    "test_openmm.sh"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "conda-build",
    "cxx_compiler_stub",
    "doxygen",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "khronos-opencl-icd-loader",
    "lxml",
    "numpy",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "khronos-opencl-icd-loader",
    "numpy",
    "ocl_icd_wrapper_apple",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmm"
  ]
 },
 "pinning_version": "2021.02.16.22.51.53",
 "pre_pr_migrator_attempts": {
  "pypy37-windows": 1,
  "python310": 81
 },
 "pre_pr_migrator_status": {
  "pypy37-windows": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1419407741\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1128, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 244, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 271, in eval_cmd\n    c = subprocess.run(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 507, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1134, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1980, in _communicate\n    self._check_timeout(endtime, orig_timeout, stdout, stderr)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 1178, in _check_timeout\n    raise TimeoutExpired(\nsubprocess.TimeoutExpired: Command 'conda smithy rerender -c auto --no-check-uptodate' timed out after 300 seconds\n",
  "python310": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1543934882\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1133, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 269, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 280, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"openmm\" %}\n{% set version = \"7.6.0\" %}\n{% set build = 0 %}\n{% set with_test_suite = \"false\" %}\n{% set with_test_suite = \"true\" %}  # [(osx and arm64)]\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  git_url: https://github.com/openmm/{{ name }}.git\n  git_rev: \"7.6.0\"\n\nbuild:\n  number: {{ build }}\n  string: \"py{{ PY_VER.replace('.', '') }}h{{ PKG_HASH }}_{{ build }}_{{ opencl_impl }}\"  # [osx]\n  track_features:  # make Apple OpenCL low priority\n    - openmm_opencl_apple  # [osx and (opencl_impl == 'apple')]\n  skip: true  # [(cuda_compiler_version in (undefined, 'None') and (linux64 or win)) or ((cuda_compiler_version != '10.2') and (ppc64le))]\n  script_env:\n    - CONFIG\n    - CUDA_HOME  # [ppc64le]\n  missing_dso_whitelist:\n    - \"*/libcuda.*\"    # [linux64 or ppc64le]\n    - \"*/libOpenCL.*\"  # [unix]\n    - \"*/nvcuda.dll\"   # [win]\n  script:\n    - env with_test_suite={{ with_test_suite }} bash {{ RECIPE_DIR }}/build_openmm.sh   # [unix]\n    - set with_test_suite={{ with_test_suite }} &&   {{ RECIPE_DIR }}\\build_openmm.bat  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - swig                                   # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [linux64 or ppc64le or win]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - cmake\n    - make  # [unix]\n    - jom  # [win]\n    # needed for Python wrappers\n    - doxygen\n{% if with_test_suite == 'true' %}\n    - conda-build  # [osx]\n    - m2-findutils  # [win]\n    - m2-coreutils  # [win]\n{% endif %}\n\n  host:\n    - python\n    - fftw\n    - swig\n    - pthread-stubs\n    - lxml\n    - numpy\n    - cython\n    # OpenCL ICD\n    - ocl-icd  # [linux]\n    - khronos-opencl-icd-loader  # [win or (osx and opencl_impl == 'khronos')]\n\n  run:\n    - python\n    - fftw\n    - numpy\n    # OpenCL ICD\n    - ocl-icd  # [linux]\n    - ocl-icd-system  # [linux]\n    - khronos-opencl-icd-loader  # [win or (osx and opencl_impl == 'khronos')]\n    - ocl_icd_wrapper_apple      # [osx and opencl_impl == 'khronos']\n\n  run_constrained:\n    - khronos-opencl-icd-loader  ==9999999999  # [osx and opencl_impl == 'apple']\n    - ocl_icd_wrapper_apple      ==9999999999  # [osx and opencl_impl == 'apple']\n\ntest:\n  requires:\n    - git\n    - pocl      # [linux]\n{% if with_test_suite == 'true' %}\n    - pytest\n    - pytest-xdist\n{% endif %}\n  files:\n    - test_openmm.sh   # [unix]\n    - test_openmm.bat  # [win]\n  imports:\n    - openmm\n  commands:\n    - env with_test_suite={{ with_test_suite }} bash test_openmm.sh   # [unix]\n    - set with_test_suite={{ with_test_suite }} && .\\test_openmm.bat  # [win]\n\nabout:\n  home: http://openmm.org\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file:\n    - docs-source/licenses/Licenses.txt\n    - docs-source/licenses/LGPL.txt\n    - docs-source/licenses/GPL.txt\n  summary: A high performance toolkit for molecular simulation.\n\n  description: |\n    OpenMM is a toolkit for molecular simulation. It can be used either as a\n    stand-alone application for running simulations, or as a library you call\n    from your own code. It provides a combination of extreme flexibility\n    (through custom forces and integrators), openness, and high performance\n    (especially on recent GPUs) that make it truly unique among simulation\n    codes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\n    platforms).\n  doc_url: http://docs.openmm.org\n  dev_url: https://github.com/openmm/openmm\n\nextra:\n  recipe-maintainers:\n    - jchodera\n    - jaimergp\n    - peastman\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "conda-build",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "doxygen",
   "fftw",
   "jom",
   "khronos-opencl-icd-loader",
   "lxml",
   "m2-coreutils",
   "m2-findutils",
   "make",
   "numpy",
   "ocl-icd",
   "ocl-icd-system",
   "ocl_icd_wrapper_apple",
   "pthread-stubs",
   "python",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "conda-build",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "doxygen",
    "jom",
    "m2-coreutils",
    "m2-findutils",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "fftw",
    "khronos-opencl-icd-loader",
    "lxml",
    "numpy",
    "ocl-icd",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fftw",
    "khronos-opencl-icd-loader",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "ocl_icd_wrapper_apple",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "conda-build",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "doxygen",
    "jom",
    "m2-coreutils",
    "m2-findutils",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "khronos-opencl-icd-loader",
    "lxml",
    "numpy",
    "ocl-icd",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "khronos-opencl-icd-loader",
    "numpy",
    "ocl-icd",
    "ocl-icd-system",
    "ocl_icd_wrapper_apple",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pocl",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "url": null,
 "version": "7.6.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
   "dev_url": "https://github.com/openmm/openmm",
   "doc_url": "http://docs.openmm.org",
   "home": "http://openmm.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt",
    "docs-source/licenses/Licenses.txt",
    "docs-source/licenses/LGPL.txt",
    "docs-source/licenses/GPL.txt"
   ],
   "summary": "A high performance toolkit for molecular simulation."
  },
  "build": {
   "missing_dso_whitelist": [
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll",
    "*/nvcuda.dll"
   ],
   "number": "0",
   "script": [
    "set with_test_suite=true &&   /tmp/tmp31r634ff\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpb_bcdd0c\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp4rqakkoh\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp8nby9pu0\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpfefyahke\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpz1b5fm3g\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp89tq1b67\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpvf8ky6gp\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp3eb1gqs9\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqmuwc6iw\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpgl960id3\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmps6l_3ff0\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqlmqmf5a\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpalwp9opg\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpfuzsz7d3\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp8akk41kp\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpbk6v1751\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqg3l4gsp\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpqy05yguh\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp7pdh56tm\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp0dn3qgwb\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmpy_dz21v5\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp0bvl3sxc\\build_openmm.bat",
    "set with_test_suite=true &&   /tmp/tmp2rsy4cb3\\build_openmm.bat"
   ],
   "script_env": [
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG",
    "CONFIG"
   ],
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman",
    "jchodera",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm",
   "version": "7.6.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "jom",
    "doxygen",
    "m2-findutils",
    "m2-coreutils"
   ],
   "host": [
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "swig",
    "pthread-stubs",
    "lxml",
    "numpy",
    "cython",
    "khronos-opencl-icd-loader"
   ],
   "run": [
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "fftw",
    "numpy",
    "khronos-opencl-icd-loader"
   ],
   "run_constrained": null
  },
  "source": {
   "git_rev": "7.6.0",
   "git_url": "https://github.com/openmm/openmm.git"
  },
  "test": {
   "commands": [
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat",
    "set with_test_suite=true && .\\test_openmm.bat"
   ],
   "files": [
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat",
    "test_openmm.bat"
   ],
   "imports": [
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm",
    "openmm"
   ],
   "requires": [
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist",
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "doxygen",
    "jom",
    "m2-coreutils",
    "m2-findutils"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "fftw",
    "khronos-opencl-icd-loader",
    "lxml",
    "numpy",
    "pthread-stubs",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "khronos-opencl-icd-loader",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "git",
    "pytest",
    "pytest-xdist"
   ]
  }
 }
}