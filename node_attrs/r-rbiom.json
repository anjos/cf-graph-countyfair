{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/774674382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-rbiom",
 "hash_type": "sha256",
 "name": "r-rbiom",
 "new_version": "1.0.3",
 "new_version_attempts": {
  "1.0.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-rbiom"
  ]
 },
 "pinning_version": "2021.11.05.20.51.02",
 "raw_meta_yaml": "{% set version = \"1.0.3\" %}\n\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rbiom\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/rbiom_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/rbiom/rbiom_{{ version }}.tar.gz\n  sha256: 8f7d1c380148022ea677066fd57757a967eff1ac36cfb82b827f913b7450d58e\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n\n  host:\n    - r-base\n    - r-r.utils\n    - r-rcpp\n    - r-rcppparallel\n    - r-magrittr\n    - r-openxlsx\n    - r-plyr\n    - r-rjson\n    - r-slam\n\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-r.utils\n    - r-rcpp\n    - r-rcppparallel\n    - r-magrittr\n    - r-openxlsx\n    - r-plyr\n    - r-rjson\n    - r-slam\n\ntest:\n  commands:\n    - $R -e \"library('rbiom')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('rbiom')\\\"\"  # [win]\n\nabout:\n  home: https://cmmr.github.io/rbiom/index.html\n\n  license: AGPL-3.0-only\n  license_family: AGPL\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/AGPL-3\n\n  summary: A toolkit for working with Biological Observation Matrix ('BIOM') files. Features include reading/writing all 'BIOM' formats, rarefaction, alpha diversity, beta diversity (including 'UniFrac'), summarizing counts by taxonomic level, and sample subsetting. Standalone functions for reading, writing, and subsetting\n    phylogenetic trees are also provided. All CPU intensive operations are encoded in C with multi-thread support.\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - dansmith01\n",
 "smithy_version": "3.14.3",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rbiom/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rbiom/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rbiom/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rbiom/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rbiom/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/rbiom_1.0.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rbiom/rbiom_1.0.3.tar.gz"
 ],
 "version": "1.0.3"
}