{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/549388628.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.01.05"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/857662068.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2022.02.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "cwlformat",
 "hash_type": "sha256",
 "name": "cwlformat",
 "new_version": "2022.02.18",
 "new_version_attempts": {
  "2021.01.05": 1,
  "2022.02.18": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cwlformat"
  ]
 },
 "pinning_version": "2022.02.18.15.27.34",
 "raw_meta_yaml": "{% set name = \"cwlformat\" %}\n{% set version = \"2022.02.18\" %}\n{% set sha256 = \"05800a7766f8fceef55c513952ddc1516e4d378e752f487c50379c923b930539\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/rabix/cwl-format/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - cwl-format=cwlformat.formatter:main\n    - cwl-explode=cwlformat.explode:main\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - ruamel.yaml\n\ntest:\n  imports:\n    - cwlformat\n    - cwlformat.formatter\n    - cwlformat.explode\n  commands:\n    - cwl-format --help\n    - cwl-explode --help\n\nabout:\n  home: https://github.com/rabix/cwl-format\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: 'A very opinionated code formatter for CWL '\n  description: |\n    CWL Format is a specification and a reference implementation for a very \n    opinionated CWL code formatter.\n\n    It outputs CWL in a standardized YAML format. It has no settings or options \n    because you have better things to do with your time. And because CWL Format\n    is always correct.\n\nextra:\n  recipe-maintainers:\n    - pvanheus\n",
 "smithy_version": "3.17.0",
 "strong_exports": false,
 "url": "https://github.com/rabix/cwl-format/archive/2022.02.18.tar.gz",
 "version": "2022.02.18"
}