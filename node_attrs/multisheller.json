{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/648991539.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/769542537.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "multisheller",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/wolfv/multisheller",
   "home": "https://github.com/wolfv/multisheller",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "This project implements a simple DSL (in Python) to generate shell scripts for many different shells."
  },
  "build": {
   "entry_points": [
    "multisheller = multisheller.cli.main:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "traversaro"
   ]
  },
  "package": {
   "name": "multisheller",
   "version": "0.3.0"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7"
   ]
  },
  "source": {
   "sha256": "5ed9a971576e1ba37d6f360e94f1e5abdbebac9e42534af68e2be8b2e7fb3efb",
   "url": "https://github.com/wolfv/multisheller/archive/0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "multisheller -h",
    "pytest test/"
   ],
   "imports": [
    "multisheller"
   ],
   "requires": [
    "pytest",
    "zsh",
    "xonsh"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "xonsh",
    "zsh"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/wolfv/multisheller",
   "home": "https://github.com/wolfv/multisheller",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "This project implements a simple DSL (in Python) to generate shell scripts for many different shells."
  },
  "build": {
   "entry_points": [
    "multisheller = multisheller.cli.main:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "wolfv",
    "traversaro"
   ]
  },
  "package": {
   "name": "multisheller",
   "version": "0.3.0"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7"
   ]
  },
  "source": {
   "sha256": "5ed9a971576e1ba37d6f360e94f1e5abdbebac9e42534af68e2be8b2e7fb3efb",
   "url": "https://github.com/wolfv/multisheller/archive/0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "multisheller -h",
    "pytest test/"
   ],
   "imports": [
    "multisheller"
   ],
   "requires": [
    "pytest",
    "zsh",
    "xonsh"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "name": "multisheller",
 "new_version": "0.3.0",
 "new_version_attempts": {
  "0.2.0": 1,
  "0.3.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "multisheller"
  ]
 },
 "pinning_version": "2021.10.29.07.34.22",
 "raw_meta_yaml": "{% set name = \"multisheller\" %}\n{% set version = \"0.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/wolfv/multisheller/archive/{{ version }}.tar.gz\n  sha256: 5ed9a971576e1ba37d6f360e94f1e5abdbebac9e42534af68e2be8b2e7fb3efb\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - multisheller = multisheller.cli.main:main\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n\ntest:\n  imports:\n    - multisheller\n  source_files:\n    - test/*\n  requires:\n    - pytest\n    - zsh               # [unix]\n    - xonsh\n  commands:\n    - multisheller -h\n    - pytest test/\n\nabout:\n  home: https://github.com/wolfv/multisheller\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: This project implements a simple DSL (in Python) to generate shell scripts for many different shells.\n  dev_url: https://github.com/wolfv/multisheller\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - traversaro\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "xonsh",
    "zsh"
   ]
  }
 },
 "smithy_version": "3.14.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "xonsh",
    "zsh"
   ]
  }
 },
 "url": "https://github.com/wolfv/multisheller/archive/0.3.0.tar.gz",
 "version": "0.3.0"
}