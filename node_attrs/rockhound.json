{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/367584054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "rockhound",
 "hash_type": "sha256",
 "name": "rockhound",
 "new_version": "0.2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rockhound"
  ]
 },
 "pinning_version": "2020.01.27",
 "raw_meta_yaml": "{% set name = \"rockhound\" %}\n{% set version = \"0.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9ff20ff8a9815fb4160ba4d239ed8ecb203139ddc72aab87e9fb10ba6bcc7743\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - python >=3.5\n    - pip\n  run:\n    - python >=3.5\n    - pooch >=0.5\n    - xarray\n    - pandas\n    - rasterio\n    - netcdf4\n    - dask\n\ntest:\n  imports:\n    - rockhound\n\nabout:\n  home: http://github.com/fatiando/rockhound\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: \"Download geophysical models/datasets and load them in Python\"\n  description: |\n      RockHound is a Python library to download geophysical models and datasets (PREM,\n      CRUST1.0, ETOPO1) and load them into Python data structures (pandas, numpy,\n      xarray). Many of these models use non-conventional file formats or can be tricky\n      to find on the internet. RockHound knows how to download them if you don't\n      already have them locally, read the file format, and return a nicely formatted\n      data structure. Under the hood, it uses Pooch to manage the downloads.\n  doc_url: https://www.fatiando.org/rockhound\n  dev_url: https://github.com/fatiando/rockhound\n\nextra:\n  recipe-maintainers:\n    - leouieda\n    - santisoler\n",
 "smithy_version": "3.6.6",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/r/rockhound/rockhound-0.2.0.tar.gz",
 "version": "0.2.0"
}