{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/207799618.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217726264.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/227410613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229360591.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/233666815.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/239160124.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248540902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256034211.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/277418842.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308612038.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/315156616.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/320374316.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339392062.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339707588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340159258.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/367731244.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375581941.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427322163.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503179613.json"
   },
   "data": {
    "bot_rerun": 1603209963.19427,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/513593214.json"
   },
   "data": {
    "bot_rerun": 1604293316.5187266,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/189ee30b-fd92-4a55-a7a0-6a85a18b3910.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528985353.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555724871.json"
   },
   "data": {
    "bot_rerun": 1626202361.1447358,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/671555282.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/938521992.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/946116816.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1044416892.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1063386973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1111851020.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "nipype",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/nipy/nipype",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Nipype, an open-source, community-developed initiative under the umbrella of NiPy, is a Python project that provides a uniform interface to existing neuroimaging software and facilitates interaction between these packages within a single workflow. Nipype provides an environment that encourages interactive exploration of algorithms from different packages (e.g., SPM, FSL, FreeSurfer, AFNI, Slicer, ANTS), eases the design of workflows within and between packages, and reduces the learning curve necessary to use different packages. Nipype is creating a collaborative platform for neuroimaging software development in a high-level language and addressing limitations of existing pipeline systems."
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies"
   ]
  },
  "package": {
   "name": "nipype",
   "version": "1.8.5"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion"
   ]
  },
  "source": {
   "fn": "nipype-1.8.5.tar.gz",
   "sha256": "5b6ab317b391e2d8444242166214bf9ed08aab7d75d5831d833ebf685c65efd0",
   "url": "https://github.com/nipy/nipype/archive/1.8.5.tar.gz"
  },
  "test": {
   "imports": [
    "nipype",
    "nipype",
    "nipype",
    "nipype"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "etelemetry",
    "filelock",
    "looseversion",
    "matplotlib-base",
    "networkx",
    "nibabel",
    "numpy",
    "packaging",
    "prov",
    "psutil",
    "pydot",
    "python",
    "python-dateutil",
    "scipy",
    "simplejson",
    "traits",
    "xvfbwrapper"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/nipy/nipype",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Nipype, an open-source, community-developed initiative under the umbrella of NiPy, is a Python project that provides a uniform interface to existing neuroimaging software and facilitates interaction between these packages within a single workflow. Nipype provides an environment that encourages interactive exploration of algorithms from different packages (e.g., SPM, FSL, FreeSurfer, AFNI, Slicer, ANTS), eases the design of workflows within and between packages, and reduces the learning curve necessary to use different packages. Nipype is creating a collaborative platform for neuroimaging software development in a high-level language and addressing limitations of existing pipeline systems."
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies"
   ]
  },
  "package": {
   "name": "nipype",
   "version": "1.8.5"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "pywin32",
    "python",
    "pip",
    "setuptools",
    "pywin32",
    "python",
    "pip",
    "setuptools",
    "pywin32",
    "python",
    "pip",
    "setuptools",
    "pywin32"
   ],
   "run": [
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion"
   ]
  },
  "source": {
   "fn": "nipype-1.8.5.tar.gz",
   "sha256": "5b6ab317b391e2d8444242166214bf9ed08aab7d75d5831d833ebf685c65efd0",
   "url": "https://github.com/nipy/nipype/archive/1.8.5.tar.gz"
  },
  "test": {
   "imports": [
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype",
    "nipype"
   ]
  }
 },
 "name": "nipype",
 "new_version": "1.8.5",
 "new_version_attempts": {
  "1.5.0": 1,
  "1.6.0": 1,
  "1.6.1": 1,
  "1.8.1": 1,
  "1.8.4": 1,
  "1.8.5": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/nipy/nipype",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Nipype, an open-source, community-developed initiative under the umbrella of NiPy, is a Python project that provides a uniform interface to existing neuroimaging software and facilitates interaction between these packages within a single workflow. Nipype provides an environment that encourages interactive exploration of algorithms from different packages (e.g., SPM, FSL, FreeSurfer, AFNI, Slicer, ANTS), eases the design of workflows within and between packages, and reduces the learning curve necessary to use different packages. Nipype is creating a collaborative platform for neuroimaging software development in a high-level language and addressing limitations of existing pipeline systems."
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies"
   ]
  },
  "package": {
   "name": "nipype",
   "version": "1.8.5"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools"
   ],
   "run": [
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "xvfbwrapper",
    "psutil >=5.0",
    "matplotlib-base",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion"
   ]
  },
  "source": {
   "fn": "nipype-1.8.5.tar.gz",
   "sha256": "5b6ab317b391e2d8444242166214bf9ed08aab7d75d5831d833ebf685c65efd0",
   "url": "https://github.com/nipy/nipype/archive/1.8.5.tar.gz"
  },
  "test": {
   "imports": [
    "nipype",
    "nipype",
    "nipype",
    "nipype"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "etelemetry",
    "filelock",
    "looseversion",
    "matplotlib-base",
    "networkx",
    "nibabel",
    "numpy",
    "packaging",
    "prov",
    "psutil",
    "pydot",
    "python",
    "python-dateutil",
    "scipy",
    "simplejson",
    "traits",
    "xvfbwrapper"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nipype"
  ]
 },
 "pinning_version": "2022.11.05.21.08.08",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\nProblem: package pywin32-220-py27_0 requires python 2.7*, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.8.5\" %}\n{% set name = \"nipype\" %}\n{% set sha256 = \"5b6ab317b391e2d8444242166214bf9ed08aab7d75d5831d833ebf685c65efd0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/nipy/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed .\n  skip: true  # [py<36]\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools\n    - pywin32  # [win]\n\n  run:\n    - python\n    - nibabel >=2.1.0\n    - networkx >=2.0\n    - numpy >=1.17\n    - python-dateutil >=2.2\n    - scipy >=0.14\n    - traits >=4.6,!=5.0\n    - simplejson >=3.8.0\n    - prov >=1.5.2\n    - click >=6.6.0\n    - pydot >=1.2.3\n    - xvfbwrapper  # [not win]\n    - psutil >=5.0\n    - matplotlib-base\n    - pywin32  # [win]\n    - packaging\n    - filelock >=3.0.0\n    - etelemetry >=0.2.0\n    - looseversion\n\ntest:\n  # Python imports\n  imports:\n    - nipype\n\nabout:\n  home: https://github.com/nipy/nipype\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: Nipype, an open-source, community-developed initiative under the umbrella of NiPy, is a Python project that provides a uniform interface to existing neuroimaging software and facilitates interaction between these packages within a single workflow. Nipype provides an environment that encourages interactive exploration\n    of algorithms from different packages (e.g., SPM, FSL, FreeSurfer, AFNI, Slicer, ANTS), eases the design of workflows within and between packages, and reduces the learning curve necessary to use different packages. Nipype is creating a collaborative platform for neuroimaging software development in a high-level language\n    and addressing limitations of existing pipeline systems.\n\nextra:\n  recipe-maintainers:\n    - chrisgorgo\n    - satra\n    - mgxd\n    - effigies\n",
 "req": {
  "__set__": true,
  "elements": [
   "click",
   "etelemetry",
   "filelock",
   "looseversion",
   "matplotlib-base",
   "networkx",
   "nibabel",
   "numpy",
   "packaging",
   "pip",
   "prov",
   "psutil",
   "pydot",
   "python",
   "python-dateutil",
   "pywin32",
   "scipy",
   "setuptools",
   "simplejson",
   "traits",
   "xvfbwrapper"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pywin32",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "etelemetry",
    "filelock",
    "looseversion",
    "matplotlib-base",
    "networkx",
    "nibabel",
    "numpy",
    "packaging",
    "prov",
    "psutil",
    "pydot",
    "python",
    "python-dateutil",
    "pywin32",
    "scipy",
    "simplejson",
    "traits",
    "xvfbwrapper"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pywin32",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click >=6.6.0",
    "etelemetry >=0.2.0",
    "filelock >=3.0.0",
    "looseversion",
    "matplotlib-base",
    "networkx >=2.0",
    "nibabel >=2.1.0",
    "numpy >=1.17",
    "packaging",
    "prov >=1.5.2",
    "psutil >=5.0",
    "pydot >=1.2.3",
    "python",
    "python-dateutil >=2.2",
    "pywin32",
    "scipy >=0.14",
    "simplejson >=3.8.0",
    "traits >=4.6,!=5.0",
    "xvfbwrapper"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/nipy/nipype/archive/1.8.5.tar.gz",
 "version": "1.8.5",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/nipy/nipype",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Nipype, an open-source, community-developed initiative under the umbrella of NiPy, is a Python project that provides a uniform interface to existing neuroimaging software and facilitates interaction between these packages within a single workflow. Nipype provides an environment that encourages interactive exploration of algorithms from different packages (e.g., SPM, FSL, FreeSurfer, AFNI, Slicer, ANTS), eases the design of workflows within and between packages, and reduces the learning curve necessary to use different packages. Nipype is creating a collaborative platform for neuroimaging software development in a high-level language and addressing limitations of existing pipeline systems."
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies",
    "chrisgorgo",
    "satra",
    "mgxd",
    "effigies"
   ]
  },
  "package": {
   "name": "nipype",
   "version": "1.8.5"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "pywin32",
    "python",
    "pip",
    "setuptools",
    "pywin32",
    "python",
    "pip",
    "setuptools",
    "pywin32",
    "python",
    "pip",
    "setuptools",
    "pywin32"
   ],
   "run": [
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion",
    "python",
    "nibabel >=2.1.0",
    "networkx >=2.0",
    "numpy >=1.17",
    "python-dateutil >=2.2",
    "scipy >=0.14",
    "traits >=4.6,!=5.0",
    "simplejson >=3.8.0",
    "prov >=1.5.2",
    "click >=6.6.0",
    "pydot >=1.2.3",
    "psutil >=5.0",
    "matplotlib-base",
    "pywin32",
    "packaging",
    "filelock >=3.0.0",
    "etelemetry >=0.2.0",
    "looseversion"
   ]
  },
  "source": {
   "fn": "nipype-1.8.5.tar.gz",
   "sha256": "5b6ab317b391e2d8444242166214bf9ed08aab7d75d5831d833ebf685c65efd0",
   "url": "https://github.com/nipy/nipype/archive/1.8.5.tar.gz"
  },
  "test": {
   "imports": [
    "nipype",
    "nipype",
    "nipype",
    "nipype"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pywin32",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "click",
    "etelemetry",
    "filelock",
    "looseversion",
    "matplotlib-base",
    "networkx",
    "nibabel",
    "numpy",
    "packaging",
    "prov",
    "psutil",
    "pydot",
    "python",
    "python-dateutil",
    "pywin32",
    "scipy",
    "simplejson",
    "traits"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}