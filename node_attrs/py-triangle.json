{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1197803648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1197808815.json"
   },
   "data": {
    "bot_rerun": 1673865255.241503,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1198851639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "py-triangle",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Triangle generates exact Delaunay triangulations,\nconstrained Delaunay triangulations, conforming Delaunay triangulations,\nVoronoi diagrams, and high-quality triangular meshes.\nThe latter can be generated with no small or large angles,\nand are thus suitable for finite element analysis.\n",
   "home": "https://github.com/drufat/triangle",
   "license": "LGPL and Triangle",
   "license_file": [
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README"
   ],
   "summary": "Python bindings to the triangle library"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen"
   ]
  },
  "package": {
   "name": "py-triangle",
   "version": "20220202"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": [
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   }
  ],
  "test": {
   "commands": [
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py"
   ],
   "imports": [
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle"
   ],
   "requires": [
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy"
   ],
   "source_files": [
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Triangle generates exact Delaunay triangulations,\nconstrained Delaunay triangulations, conforming Delaunay triangulations,\nVoronoi diagrams, and high-quality triangular meshes.\nThe latter can be generated with no small or large angles,\nand are thus suitable for finite element analysis.\n",
   "home": "https://github.com/drufat/triangle",
   "license": "LGPL and Triangle",
   "license_file": [
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README"
   ],
   "summary": "Python bindings to the triangle library"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen"
   ]
  },
  "package": {
   "name": "py-triangle",
   "version": "20220202"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": [
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   }
  ],
  "test": {
   "commands": [
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py"
   ],
   "imports": [
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle"
   ],
   "requires": [
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy"
   ],
   "source_files": [
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py"
   ]
  }
 },
 "name": "py-triangle",
 "new_version": "20220202",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Triangle generates exact Delaunay triangulations,\nconstrained Delaunay triangulations, conforming Delaunay triangulations,\nVoronoi diagrams, and high-quality triangular meshes.\nThe latter can be generated with no small or large angles,\nand are thus suitable for finite element analysis.\n",
   "home": "https://github.com/drufat/triangle",
   "license": "LGPL and Triangle",
   "license_file": [
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README"
   ],
   "summary": "Python bindings to the triangle library"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen"
   ]
  },
  "package": {
   "name": "py-triangle",
   "version": "20220202"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": [
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   }
  ],
  "test": {
   "commands": [
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py"
   ],
   "imports": [
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle"
   ],
   "requires": [
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy"
   ],
   "source_files": [
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "py-triangle"
  ]
 },
 "pinning_version": "2023.01.16.09.03.45",
 "raw_meta_yaml": "# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe\n# If your package is python based, we recommend using Grayskull to generate it instead:\n# https://github.com/conda-incubator/grayskull\n\n# Jinja variables help maintain the recipe as you'll update the version only here.\n# Using the name variable with the URL in line 14 is convenient\n# when copying and pasting from another recipe, but not really needed.\n{% set name = \"py-triangle\" %}\n{% set version = \"20220202\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n   - url: https://github.com/drufat/triangle/archive/refs/tags/v{{ version }}.tar.gz\n     sha256: e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1\n   - git_url: https://github.com/drufat/triangle-c\n     git_rev: 8b9e1046e5cddab1298d3204f10c93665836cf99 # Keep that in sync with triangle python package \n     git_depth: 1\n     folder: c\n     \n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  source_files:\n    - tests/test_triangle.py\n  imports:\n    - triangle\n  requires:\n    - pip\n    - pytest\n    - numpy\n  commands:\n    - pip check\n    - pytest tests/test_triangle.py\n\nabout:\n  home: https://github.com/drufat/triangle\n  summary: 'Python bindings to the triangle library'\n  description: |\n    Triangle generates exact Delaunay triangulations,\n    constrained Delaunay triangulations, conforming Delaunay triangulations,\n    Voronoi diagrams, and high-quality triangular meshes.\n    The latter can be generated with no small or large angles, \n    and are thus suitable for finite element analysis.\n  license: \"LGPL and Triangle\"\n  license_file: \n    - LICENSE\n    - c/README\n\nextra:\n  recipe-maintainers:\n    - Hofer-Julian\n    - Huite\n    - JoerivanEngelen\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz",
 "version": "20220202",
 "win_64_meta_yaml": {
  "about": {
   "description": "Triangle generates exact Delaunay triangulations,\nconstrained Delaunay triangulations, conforming Delaunay triangulations,\nVoronoi diagrams, and high-quality triangular meshes.\nThe latter can be generated with no small or large angles,\nand are thus suitable for finite element analysis.\n",
   "home": "https://github.com/drufat/triangle",
   "license": "LGPL and Triangle",
   "license_file": [
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README",
    "LICENSE",
    "c/README"
   ],
   "summary": "Python bindings to the triangle library"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen",
    "Hofer-Julian",
    "Huite",
    "JoerivanEngelen"
   ]
  },
  "package": {
   "name": "py-triangle",
   "version": "20220202"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": [
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   },
   {
    "sha256": "e975631b82538a9c008a34e415e52f1a60969f98d819fd7ca6ad7906352e33d1",
    "url": "https://github.com/drufat/triangle/archive/refs/tags/v20220202.tar.gz"
   },
   {
    "folder": "c",
    "git_depth": "1",
    "git_rev": "8b9e1046e5cddab1298d3204f10c93665836cf99",
    "git_url": "https://github.com/drufat/triangle-c"
   }
  ],
  "test": {
   "commands": [
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py",
    "pip check",
    "pytest tests/test_triangle.py"
   ],
   "imports": [
    "triangle",
    "triangle",
    "triangle",
    "triangle",
    "triangle"
   ],
   "requires": [
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy",
    "pip",
    "pytest",
    "numpy"
   ],
   "source_files": [
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py",
    "tests/test_triangle.py"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pytest"
   ]
  }
 }
}