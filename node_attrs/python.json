{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198231537.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/215590052.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/224463655.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/240751594.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/248383454.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "OpenSSLRebuild",
    "migrator_version": 1,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255231225.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255260242.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256025025.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "OpenSSL"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/264310125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/293450398.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "readline-8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/295483916.json"
   },
   "data": {
    "bot_rerun": 1597087671.5338545,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.7.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/327917295.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356492749.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/426099929.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/455243463.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.8.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/467600653.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/470123755.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/470124869.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/527871816.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528221161.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.6",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528725280.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.7",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528725377.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.8",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528725506.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.6",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528725672.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.7",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528725852.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.8",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528728974.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.6",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528729073.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.7",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528729183.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.8",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/0ebc0841-1cb1-4fe7-aa63-bfe456c54f14.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": 3.6,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495f33ea-ccb2-471f-837e-2f9781e74477.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": 3.7,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1d8bac98-363a-4847-a623-986df02fcf1f.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": 3.8,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi33"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/673518208.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/679011550.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722907806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/728208804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi34"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/728208844.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.6",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libffi34"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/728402834.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.9",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/728576351.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "3.9",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Command 'git checkout -b 3.8 upstream/3.8 --quiet' returned non-zero exit status 1.",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 193, in fetch_repo",
   "    _run_git_cmd(f\"git checkout --track upstream/{base_branch} {quiet}\")",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 171, in _run_git_cmd",
   "    return subprocess.run(cmd, shell=True, check=True)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/subprocess.py\", line 528, in run",
   "    raise CalledProcessError(retcode, process.args,",
   "subprocess.CalledProcessError: Command 'git checkout --track upstream/3.8 --quiet' returned non-zero exit status 1.",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1134, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 168, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 276, in get_repo",
   "    if fetch_repo(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 195, in fetch_repo",
   "    _run_git_cmd(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 171, in _run_git_cmd",
   "    return subprocess.run(cmd, shell=True, check=True)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/subprocess.py\", line 528, in run",
   "    raise CalledProcessError(retcode, process.args,",
   "subprocess.CalledProcessError: Command 'git checkout -b 3.8 upstream/3.8 --quiet' returned non-zero exit status 1.",
   ""
  ]
 },
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    3.6,
    3.7,
    3.8,
    3.9
   ]
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "native",
   "linux_ppc64le": "native",
   "osx": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "python",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-64",
      "binutils_impl_linux-64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-64 >=2.36.1"
     ],
     "run": [
      "ld_impl_linux-64 >=2.36.1",
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "patch"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "libtool",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "ld_impl_linux-64",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-64",
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-aarch64",
      "binutils_impl_linux-aarch64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-aarch64 >=2.36.1"
     ],
     "run": [
      "ld_impl_linux-aarch64 >=2.36.1",
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "patch"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-aarch64",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-aarch64",
    "libtool",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "ld_impl_linux-aarch64",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-aarch64",
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-ppc64le",
      "binutils_impl_linux-ppc64le"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-ppc64le >=2.36.1"
     ],
     "run": [
      "ld_impl_linux-ppc64le >=2.36.1",
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "patch"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-ppc64le",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-ppc64le",
    "libtool",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "ld_impl_linux-ppc64le",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-ppc64le",
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-64",
      "binutils_impl_linux-64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-64 >=2.36.1"
     ],
     "run": [
      "ld_impl_linux-64 >=2.36.1",
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-aarch64",
      "binutils_impl_linux-aarch64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-aarch64 >=2.36.1"
     ],
     "run": [
      "ld_impl_linux-aarch64 >=2.36.1",
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-ppc64le",
      "binutils_impl_linux-ppc64le"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-ppc64le >=2.36.1"
     ],
     "run": [
      "ld_impl_linux-ppc64le >=2.36.1",
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi"
     ],
     "run": [
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd",
      "test ! -f default.profraw"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "test -f ${PREFIX}/lib/python${PKG_VERSION%.*}/config-${PKG_VERSION%.*}-darwin/libpython${PKG_VERSION%.*}.a"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": [
      "*.py"
     ],
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses"
     ],
     "run": [
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd",
      "test ! -f default.profraw"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "test -f ${PREFIX}/lib/python${PKG_VERSION%.*}/config-${PKG_VERSION%.*}-darwin/libpython${PKG_VERSION%.*}.a"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "missing_dso_whitelist": [
      "**/MSVCR71.dll",
      "**/MSVCR80.dll",
      "**/api-ms-win-core-path-l1-1-0.dll"
     ],
     "no_link": [
      "DLLs/_ctypes.pyd",
      "cxx_compiler_stub"
     ],
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "OPENSSL_DIR=%PREFIX%\\Library",
      "SQLITE3_DIR=%PREFIX%\\Library",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "sqlite",
      "openssl"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "echo on",
      "set",
      "python -V",
      "2to3 -h",
      "pydoc -h",
      "set \"PIP_NO_BUILD_ISOLATION=False\"",
      "set \"PIP_NO_DEPENDENCIES=True\"",
      "set \"PIP_IGNORE_INSTALLED=True\"",
      "set \"PIP_NO_INDEX=True\"",
      "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
      "set \"TEMP=%CONDA_PREFIX%/tmp\"",
      "mkdir \"%TEMP%\"",
      "python -Im ensurepip --upgrade --default-pip",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\2to3 exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.bat",
    "test": {
     "commands": null
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "m2-patch",
    "m2-gcc-libs"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "folder": "externals/xz-5.2.2",
    "sha256": "02b6d6f1e0369940e7e1f0d324992e069d09f5f3d32d86e2d22cd8b82ac3fb3f",
    "url": "https://github.com/python/cpython-source-deps/archive/xz-5.2.2.zip"
   },
   {
    "folder": "externals/tcl-core-8.6.9.0",
    "sha256": "ea9e724536ec13b476ebbd47948303b92fdd90a33aa94f30fcc2f5c3a899f69e",
    "url": "https://github.com/python/cpython-source-deps/archive/tcl-core-8.6.9.0.zip"
   },
   {
    "folder": "externals/tk-8.6.9.0",
    "sha256": "f3112b6bbc3bd163c877030187e73ce9a113ce03eff559ec5b9df697e3a08fad",
    "url": "https://github.com/python/cpython-source-deps/archive/tk-8.6.9.0.zip"
   },
   {
    "folder": "externals/tcltk-8.6.9.0",
    "sha256": "37cd629a75d2a34974a3d771ccab5c9e3caf3d138cea81040f9cdba1aded1cf2",
    "url": "https://github.com/python/cpython-bin-deps/archive/tcltk-8.6.9.0.zip"
   },
   {
    "folder": "externals/tix-8.4.3.6",
    "sha256": "e558e3dc5e67ac0942f8fceafce00ca46b177da9ebeaf38ec7fafd9b9913ac56",
    "url": "https://github.com/python/cpython-source-deps/archive/tix-8.4.3.6.zip"
   },
   {
    "folder": "externals/bzip2-1.0.6",
    "sha256": "c42fd1432a2667b964a74bc423bb7485059c4a6d5dc92946d59dbf9a6bdb988d",
    "url": "https://github.com/python/cpython-source-deps/archive/bzip2-1.0.6.zip"
   },
   {
    "folder": "externals/zlib-1.2.11",
    "sha256": "debb1952945fa6c25817a40abe90641b572c83171f244937b70b9fe156f5a63a",
    "url": "https://github.com/python/cpython-source-deps/archive/zlib-1.2.11.zip"
   },
   {
    "folder": "externals/nasm-2.11.06",
    "sha256": "de3c87b26a80e789986d8e6950c6304175d3829afe9c6c7211eb7257266ab0ac",
    "url": "https://github.com/python/cpython-bin-deps/archive/nasm-2.11.06.zip"
   },
   {
    "folder": "externals/libffi",
    "sha256": "4872e72e188a5aa1124db0c3b163a4163e84ead359a514d86dd7c6fa2d2ff02a",
    "url": "https://github.com/python/cpython-bin-deps/archive/libffi.zip"
   }
  ]
 },
 "name": "python-split",
 "new_version": "3.9.7",
 "new_version_attempts": {
  "3.8.3": 115,
  "3.8.5": 10,
  "3.8.6": 33,
  "3.9.0": 6,
  "3.9.2": 9,
  "3.9.3": 7,
  "3.9.4": 56,
  "3.9.5": 2,
  "3.9.6": 1,
  "3.9.7": 1
 },
 "new_version_errors": {
  "3.8.3": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.3' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.8.5": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.5' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.8.6": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.6' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.9.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.9.0' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "3.9.2": "We found a problem parsing the recipe for version '3.9.2': \n\nDuplicateKeyError('while constructing a mapping', <ruamel.yaml.error.StringMark object at 0x7ff72103e7b0>, 'found duplicate key \"string\" with value \"h<{ PKG_HASH }}_<{ PKG_BUILDNUM }}<{ linkage_nature }}<{ debug }}\" (original value: \"<{ dev_ }}h<{ PKG_HASH }}_<{ PKG_BUILDNUM }}<{ linkage_nature }}<{ debug }}_cpython\")', <ruamel.yaml.error.StringMark object at 0x7ff720e9aa50>, '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1555, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1317, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "3.9.3": "We found a problem parsing the recipe for version '3.9.3': \n\nDuplicateKeyError('while constructing a mapping', <ruamel.yaml.error.StringMark object at 0x7faceff36eb0>, 'found duplicate key \"string\" with value \"h<{ PKG_HASH }}_<{ PKG_BUILDNUM }}<{ linkage_nature }}<{ debug }}\" (original value: \"<{ dev_ }}h<{ PKG_HASH }}_<{ PKG_BUILDNUM }}<{ linkage_nature }}<{ debug }}_cpython\")', <ruamel.yaml.error.StringMark object at 0x7fac46f12190>, '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1555, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1317, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "3.9.4": "We found a problem parsing the recipe for version '3.9.4': \n\nDuplicateKeyError('while constructing a mapping', <ruamel.yaml.error.StringMark object at 0x7efc706f6120>, 'found duplicate key \"string\" with value \"h<{ PKG_HASH }}_<{ PKG_BUILDNUM }}<{ linkage_nature }}<{ debug }}\" (original value: \"<{ dev_ }}h<{ PKG_HASH }}_<{ PKG_BUILDNUM }}<{ linkage_nature }}<{ debug }}_cpython\")', <ruamel.yaml.error.StringMark object at 0x7efca5d293c0>, '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1555, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1317, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "3.9.5": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.9.5' to make sure they exist!\n\nWe also found the following errors:\n\n - migrations do not work on `git_url`s\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi"
     ],
     "run": [
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd",
      "test ! -f default.profraw"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "test -f ${PREFIX}/lib/python${PKG_VERSION%.*}/config-${PKG_VERSION%.*}-darwin/libpython${PKG_VERSION%.*}.a"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "patch"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libtool",
    "llvm-tools",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "bzip2",
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": [
      "*.py"
     ],
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses"
     ],
     "run": [
      "tzdata",
      "ncurses"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd",
      "test ! -f default.profraw"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "test -f ${PREFIX}/lib/python${PKG_VERSION%.*}/config-${PKG_VERSION%.*}-darwin/libpython${PKG_VERSION%.*}.a"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "patch"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libtool",
    "llvm-tools",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libpython-static",
   "python"
  ]
 },
 "pinning_version": "2021.09.06.19.10.42",
 "pre_pr_migrator_status": {
  "aarch64andppc64leaddition": "bot error: 3.7: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1035, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 221, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 183, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "libffi33": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1035, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 221, in run\n    eval_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 183, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 444, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n",
  "libffi34": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1215527650\">bot CI job</a>): 3.8: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 193, in fetch_repo\n    _run_git_cmd(f\"git checkout --track upstream/{base_branch} {quiet}\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 171, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/subprocess.py\", line 528, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git checkout --track upstream/3.8 --quiet' returned non-zero exit status 1.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1134, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 168, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 276, in get_repo\n    if fetch_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 195, in fetch_repo\n    _run_git_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 171, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/subprocess.py\", line 528, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git checkout -b 3.8 upstream/3.8 --quiet' returned non-zero exit status 1.\n",
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/949810529\">bot CI job</a>): master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1132, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 192, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 607, in migrate\n    with indir(recipe_dir):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/contextlib.py\", line 117, in __enter__\n    return next(self.gen)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/xonsh/lib/os.xsh\", line 10, in indir\n    ![pushd @(d)]\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/xonsh/__amalgam__.py\", line 23342, in subproc_captured_hiddenobject\n    return run_subproc(cmds, captured=\"hiddenobject\", envs=envs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/xonsh/__amalgam__.py\", line 23301, in run_subproc\n    command.end()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/xonsh/__amalgam__.py\", line 14772, in end\n    self._end(tee_output=tee_output)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/xonsh/__amalgam__.py\", line 14791, in _end\n    self._raise_subproc_error()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/xonsh/__amalgam__.py\", line 14917, in _raise_subproc_error\n    raise subprocess.CalledProcessError(rtn, spec.args, output=self.output)\nsubprocess.CalledProcessError: Command '['pushd', './feedstocks/python-feedstock/recipe']' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set version = \"3.9.6\" %}\n{% set dev = \"\" %}\n{% set dev_ = \"\" %}\n{% set ver2 = '.'.join(version.split('.')[0:2]) %}\n{% set ver2nd = ''.join(version.split('.')[0:2]) %}\n{% set ver3nd = ''.join(version.split('.')[0:3]) %}\n{% set build_number = 1 %}\n\n# this makes the linter happy\n{% set channel_targets = channel_targets or 'conda-forge main' %}\n\n# Sanitize build system env. var tweak parameters\n# (passed to the build scripts via script_env).\n{% set from_source_control = os.environ.get('CONDA_BUILD_FROM_SOURCE_CONTROL', '') %}\n{% if from_source_control == '' or from_source_control == 'no' %}\n  {% set from_source_control = 'no' %}\n{% else %}\n  {% set from_source_control = 'yes' %}\n{% endif %}\n{% set linkage_nature = os.environ.get('PY_INTERP_LINKAGE_NATURE', '') %}\n{% if linkage_nature != '' %}\n  {% set linkage_nature = \"_\" ~ linkage_nature %}\n{% endif %}\n{% if linkage_nature == 'shared' %}\n  {% set linkage_nature_env = 'shared' %}\n{% else %}\n  {% set linkage_nature_env = 'static' %}\n{% endif %}\n{% set dbg_abi = \"\" %}\n{% set debug = os.environ.get('PY_INTERP_DEBUG', '') %}\n{% if debug != '' and debug != 'no' %}\n  {% set py_interp_debug = \"yes\" %}\n  {% set debug = \"_dbg\" %}\n  {% set dbg_abi = \"d\" %}  # [win]\n{% else %}\n  {% set py_interp_debug = \"no\" %}\n{% endif %}\n\npackage:\n  name: python-split\n  version: {{ version }}{{ dev }}\n\nsource:\n{% if from_source_control == 'yes' %}\n  - git_url: https://github.com/python/CPython.git\n    git_tag: v{{ version }}{{ dev }}\n{% else %}\n  - url: https://www.python.org/ftp/python/{{ version }}/Python-{{ version }}{{ dev }}.tar.xz\n    # md5 from: https://www.python.org/downloads/release/python-{{ ver3nd }}/\n    md5: ecc29a7688f86e550d29dba2ee66cf80\n{% endif %}\n    patches:\n      - patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch\n      - patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch\n      - patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch\n      - patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch\n      - patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch\n      - patches/0005-Support-cross-compiling-byte-code.patch\n      - patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch\n      - patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch\n      - patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch\n      - patches/0009-Win32-Do-not-download-externals.patch\n      - patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch\n      - patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch\n      - patches/0012-Disable-new-dtags-in-unixccompiler.py.patch\n      - patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch\n      - patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch\n      - patches/0015-Unvendor-openssl.patch\n      - patches/0016-Unvendor-sqlite3.patch\n      - patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch\n      - patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch\n      - patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch\n      - patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch\n      - patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch\n      - patches/0022-Doing-d1trimfile.patch\n      - patches/0023-egg-debugging-with-Windows-debug-builds.patch\n      - patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch\n      - patches/0025-cross-compile-darwin.patch\n      - patches/0032-Fix-TZPATH-on-windows.patch\n      - patches/0033-gh24324.patch\n      - patches/0034-distutils-fix-ldshared.patch\n\n  # TODO :: Depend on our own packages for these:\n  - url: https://github.com/python/cpython-source-deps/archive/xz-5.2.2.zip  # [win]\n    folder: externals/xz-5.2.2  # [win]\n    sha256: 02b6d6f1e0369940e7e1f0d324992e069d09f5f3d32d86e2d22cd8b82ac3fb3f  # [win]\n  # Not used as of 3.7b3 (tcltk from cpython-bin- is), but kept for archival and license reasons.\n  - url: https://github.com/python/cpython-source-deps/archive/tcl-core-8.6.9.0.zip  # [win]\n    folder: externals/tcl-core-8.6.9.0  # [win]\n    sha256: ea9e724536ec13b476ebbd47948303b92fdd90a33aa94f30fcc2f5c3a899f69e  # [win]\n  # Not used as of 3.7b3 (tcltk from cpython-bin- is), but kept for archival and license reasons.\n  - url: https://github.com/python/cpython-source-deps/archive/tk-8.6.9.0.zip  # [win]\n    folder: externals/tk-8.6.9.0  # [win]\n    sha256: f3112b6bbc3bd163c877030187e73ce9a113ce03eff559ec5b9df697e3a08fad  # [win]\n  - url: https://github.com/python/cpython-bin-deps/archive/tcltk-8.6.9.0.zip  # [win]\n    folder: externals/tcltk-8.6.9.0  # [win]\n    sha256: 37cd629a75d2a34974a3d771ccab5c9e3caf3d138cea81040f9cdba1aded1cf2  # [win]\n  - url: https://github.com/python/cpython-source-deps/archive/tix-8.4.3.6.zip  # [win]\n    folder: externals/tix-8.4.3.6  # [win]\n    sha256: e558e3dc5e67ac0942f8fceafce00ca46b177da9ebeaf38ec7fafd9b9913ac56  # [win]\n  - url: https://github.com/python/cpython-source-deps/archive/bzip2-1.0.6.zip  # [win]\n    folder: externals/bzip2-1.0.6  # [win]\n    sha256: c42fd1432a2667b964a74bc423bb7485059c4a6d5dc92946d59dbf9a6bdb988d  # [win]\n  - url: https://github.com/python/cpython-source-deps/archive/zlib-1.2.11.zip  # [win]\n    folder: externals/zlib-1.2.11  # [win]\n    sha256: debb1952945fa6c25817a40abe90641b572c83171f244937b70b9fe156f5a63a  # [win]\n  - url: https://github.com/python/cpython-bin-deps/archive/nasm-2.11.06.zip  # [win]\n    folder: externals/nasm-2.11.06  # [win]\n    sha256: de3c87b26a80e789986d8e6950c6304175d3829afe9c6c7211eb7257266ab0ac  # [win]\n  - url: https://github.com/python/cpython-bin-deps/archive/libffi.zip  # [win]\n    folder: externals/libffi  # [win]\n    sha256: 4872e72e188a5aa1124db0c3b163a4163e84ead359a514d86dd7c6fa2d2ff02a  # [win]\n\nbuild:\n  number: {{ build_number }}\n\nrequirements:\n  build:\n{% if from_source_control == 'yes' %}\n    - git\n{% else %}\n    - patch  # [not win]\n    - m2-patch  # [win]\n    - m2-gcc-libs  # [win]\n{% endif %}\n\noutputs:\n  - name: python\n    script: build_base.sh  # [unix]\n    script: build_base.bat  # [win]\n    build:\n      number: {{ build_number }}\n      activate_in_script: true\n      # Windows has issues updating python if conda is using files itself.\n      # Copy rather than link.\n      no_link:\n        - DLLs/_ctypes.pyd  # [win]\n      ignore_run_exports_from:   # [unix]\n        # We delete the shared bzip2 library\n        - bzip2             # [unix]\n        # C++ only installed so CXX is defined for distutils/sysconfig.\n        - {{ compiler('cxx') }}\n      # Disabled until verified to work correctly\n      detect_binary_files_with_prefix: true\n      # detect_binary_files_with_prefix: False\n      # binary_has_prefix_files:\n      #   - lib/libpython{{ ver2 }}.*.1.0\n      #   - bin/python{{ ver2 }}  # [linux]\n      #   - lib/libpython{{ ver2 }}.a  # [linux]\n      #   - lib/libpython{{ ver2 }}.nolto.a  # [linux]\n      #   - lib/libpython3.so  # [linux]\n      #   - lib/python{{ ver2 }}/lib-dynload/_hashlib.cpython-{{ ver2nd }}-x86_64-linux-gnu.so  # [linux]\n      #   - lib/libpython3.dylib  # [osx]\n      # match python.org compiler standard\n      skip: true  # [win and int(float(vc)) < 14]\n      skip_compile_pyc:\n        - '*.py'            # [osx and arm64]\n      string: {{ dev_ }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}_cpython  # [\"conda-forge\" in (channel_targets or \"\")]\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}  # [\"conda-forge\" not in (channel_targets or \"\")]\n{% if 'conda-forge' in channel_targets %}\n      run_exports:\n        noarch:\n          - python\n        weak:\n          - python_abi {{ ver2 }}.* *_cp{{ ver2nd }}\n{% endif %}\n      script_env:\n        - PY_INTERP_LINKAGE_NATURE={{ linkage_nature_env }}\n        - PY_INTERP_DEBUG={{ py_interp_debug }}\n        # Putting these here means they get emitted to build_env_setup.{sh,bat} meaning we can launch IDEs\n        # after sourcing or calling that script without examine the contents of conda_build.{sh,bat} for\n        # important env. vars.\n        - OPENSSL_DIR=%PREFIX%\\Library    # [win]\n        - SQLITE3_DIR=%PREFIX%\\Library    # [win]\n{% if 'conda-forge' in channel_targets %}\n        - CONDA_FORGE=yes\n{% else %}\n        - CONDA_FORGE=no\n{% endif %}\n      missing_dso_whitelist:   # [win]\n        - '**/MSVCR71.dll'  # [win]\n        - '**/MSVCR80.dll'  # [win]\n        # I have no idea why this is not in C:\\Windows\\System32\\downlevel\n        - '**/api-ms-win-core-path-l1-1-0.dll'  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n        - {{ cdt('libx11-devel') }}  # [linux]\n        - {{ cdt('libuuid-devel') }}  # [linux and not (ppc64le or aarch64)]\n        - make  # [not win]\n        - libtool  # [unix]\n        - pkg-config  # [not win]\n        # configure script looks for llvm-ar for lto\n        - llvm-tools  # [osx]\n        - ld_impl_{{ target_platform }}  # [linux]\n{% if 'conda-forge' in channel_targets %}\n        - binutils_impl_{{ target_platform }}  # [linux]\n{% endif %}\n      host:\n        - bzip2  # [not win]\n        - sqlite\n        - xz  # [not win]\n        - zlib  # [not win]\n        - openssl\n        - readline  # [not win]\n        - tk  # [not win]\n        - ncurses  # [unix]\n        - libffi   # [not (win or (osx and arm64))]\n        - ld_impl_{{ target_platform }} >=2.36.1  # [linux]\n      run:\n        - ld_impl_{{ target_platform }} >=2.36.1  # [linux]\n        - tzdata\n{% if 'conda-forge' in channel_targets %}\n        - ncurses  # [unix]\n      run_constrained:\n        - python_abi {{ ver2 }}.* *_cp{{ ver2nd }}\n{% endif %}\n    test:\n      downstreams:\n        - cython\n        - setuptools\n      requires:\n        - ripgrep\n        - cmake\n        - ninja\n        - {{ compiler('c') }}\n        # Tried to use enable_language(C) to avoid needing this. It does not work.\n        - {{ compiler('cxx') }}\n      files:\n        - tests/distutils/*\n        - tests/cmake/*\n        - tests/cython/*\n        - tests/prefix-replacement/*\n      commands:\n        - echo on  # [win]\n        - set  # [win]\n        - python -V\n        - python3 -V            # [not win]\n        - 2to3 -h\n        - pydoc -h\n        - python3-config --help  # [not win]\n        - set \"PIP_NO_BUILD_ISOLATION=False\"  # [win]\n        - set \"PIP_NO_DEPENDENCIES=True\"  # [win]\n        - set \"PIP_IGNORE_INSTALLED=True\"  # [win]\n        - set \"PIP_NO_INDEX=True\"  # [win]\n        - set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"  # [win]\n        - set \"TEMP=%CONDA_PREFIX%/tmp\"  # [win]\n        - mkdir \"%TEMP%\"  # [win]\n        - python -Im ensurepip --upgrade --default-pip  # [win]\n        # tzdata/zoneinfo test that will need the tzdata package to pass\n        - python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"\n        - python -m venv test-venv\n        - python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"  # [not win]\n        - _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"   # [linux64]\n        # check for unreplaced @ symbols in sysconfig files\n        - for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done  # [linux64 or osx]\n        - test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a  # [unix]\n        - test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a  # [unix]\n        # https://github.com/conda-forge/python-feedstock/issues/384\n        - if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1  # [win]\n        - if exist %PREFIX%\\\\Scripts\\\\idle exit 1  # [win]\n        - if exist %PREFIX%\\\\Scripts\\\\2to3 exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\2to3-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\2to3.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1  # [win]\n        - pushd tests\n        - pushd distutils\n        - python setup.py install -v -v\n        - python -c \"import foobar\"\n        - popd\n        - pushd prefix-replacement    # [unix]\n        - bash build-and-test.sh      # [unix]\n        - popd    # [unix]\n        - pushd cmake\n        - cmake -GNinja -DPY_VER={{ version }}\n              # --trace --debug-output --debug-trycompile .\n        - popd\n        - popd\n        - test ! -f default.profraw   # [osx]\n\n  - name: libpython-static\n    script: build_static.sh  # [unix]\n    script: build_static.bat  # [win]\n    build:\n      number: {{ build_number }}\n      activate_in_script: true\n      ignore_run_exports:\n        - python_abi\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}_cpython  # [\"conda-forge\" in (channel_targets or \"\")]\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}  # [\"conda-forge\" not in (channel_targets or \"\")]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n{% if from_source_control == 'yes' %}\n        - git\n{% endif %}\n      host:\n        - {{ pin_subpackage('python', exact=True) }}\n      run:\n        - {{ pin_subpackage('python', exact=True) }}\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a  # [unix]\n        - test -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a  # [unix]\n        - test -f ${PREFIX}/lib/python${PKG_VERSION%.*}/config-${PKG_VERSION%.*}-darwin/libpython${PKG_VERSION%.*}.a  # [osx]\n\nabout:\n  home: https://www.python.org/\n  license: Python-2.0\n  license_file: LICENSE\n  summary: General purpose programming language\n  description: |\n    Python is a widely used high-level, general-purpose, interpreted, dynamic\n    programming language. Its design philosophy emphasizes code\n    readability, and its syntax allows programmers to express concepts in\n    fewer lines of code than would be possible in languages such as C++ or\n    Java. The language provides constructs intended to enable clear programs\n    on both a small and large scale.\n  doc_url: https://www.python.org/doc/versions/\n  doc_source_url: https://github.com/python/pythondotorg/blob/master/docs/source/index.rst\n  dev_url: https://docs.python.org/devguide/\n\nextra:\n  feedstock-name: python\n  recipe-maintainers:\n    - isuruf\n    - jakirkham\n    - mbargull\n    - mingwandroid\n    - msarahan\n    - pelson\n    - ocefpaf\n    - scopatz\n",
 "req": {
  "__set__": true,
  "elements": [
   "binutils_impl_linux-64",
   "binutils_impl_linux-aarch64",
   "binutils_impl_linux-ppc64le",
   "bzip2",
   "c_compiler_stub",
   "cdt_stub",
   "cxx_compiler_stub",
   "ld_impl_linux-64",
   "ld_impl_linux-aarch64",
   "ld_impl_linux-ppc64le",
   "libffi",
   "libtool",
   "llvm-tools",
   "m2-gcc-libs",
   "m2-patch",
   "make",
   "ncurses",
   "openssl",
   "patch",
   "pkg-config",
   "python",
   "readline",
   "sqlite",
   "tk",
   "tzdata",
   "xz",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "binutils_impl_linux-aarch64",
    "binutils_impl_linux-ppc64le",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "libtool",
    "llvm-tools",
    "m2-gcc-libs",
    "m2-patch",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "binutils_impl_linux-aarch64",
    "binutils_impl_linux-ppc64le",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "libtool",
    "llvm-tools",
    "m2-gcc-libs",
    "m2-patch",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "ld_impl_linux-64 >=2.36.1",
    "ld_impl_linux-aarch64 >=2.36.1",
    "ld_impl_linux-ppc64le >=2.36.1",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-64 >=2.36.1",
    "ld_impl_linux-aarch64 >=2.36.1",
    "ld_impl_linux-ppc64le >=2.36.1",
    "ncurses",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz",
 "version": "3.9.6",
 "win_64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "missing_dso_whitelist": [
      "**/MSVCR71.dll",
      "**/MSVCR80.dll",
      "**/api-ms-win-core-path-l1-1-0.dll"
     ],
     "no_link": [
      "DLLs/_ctypes.pyd",
      "cxx_compiler_stub"
     ],
     "number": "1",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.9.* *_cp39"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "OPENSSL_DIR=%PREFIX%\\Library",
      "SQLITE3_DIR=%PREFIX%\\Library",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_1_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "sqlite",
      "openssl"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.9.* *_cp39"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "echo on",
      "set",
      "python -V",
      "2to3 -h",
      "pydoc -h",
      "set \"PIP_NO_BUILD_ISOLATION=False\"",
      "set \"PIP_NO_DEPENDENCIES=True\"",
      "set \"PIP_IGNORE_INSTALLED=True\"",
      "set \"PIP_NO_INDEX=True\"",
      "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
      "set \"TEMP=%CONDA_PREFIX%/tmp\"",
      "mkdir \"%TEMP%\"",
      "python -Im ensurepip --upgrade --default-pip",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\2to3 exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
      "pushd tests",
      "pushd distutils",
      "python setup.py install -v -v",
      "python -c \"import foobar\"",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.9.6",
      "popd",
      "popd"
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/distutils/*",
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "1",
     "string": "h1234567_1_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.bat",
    "test": {
     "commands": null
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.9.6"
  },
  "requirements": {
   "build": [
    "m2-patch",
    "m2-gcc-libs"
   ]
  },
  "source": [
   {
    "md5": "ecc29a7688f86e550d29dba2ee66cf80",
    "patches": [
     "patches/0000-Fix-off-by-one-error-in-_winapi_WaitForMultipleObjec.patch",
     "patches/0001-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0002-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0003-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0004-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0005-Support-cross-compiling-byte-code.patch",
     "patches/0006-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0007-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0008-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0009-Win32-Do-not-download-externals.patch",
     "patches/0010-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0011-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0012-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0013-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0014-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0015-Unvendor-openssl.patch",
     "patches/0016-Unvendor-sqlite3.patch",
     "patches/0017-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0018-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0019-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0020-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0021-Add-d1trimfile-SRC_DIR-to-make-pdbs-more-relocatable.patch",
     "patches/0022-Doing-d1trimfile.patch",
     "patches/0023-egg-debugging-with-Windows-debug-builds.patch",
     "patches/0024-Add-CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL-to-aid-de.patch",
     "patches/0025-cross-compile-darwin.patch",
     "patches/0032-Fix-TZPATH-on-windows.patch",
     "patches/0033-gh24324.patch",
     "patches/0034-distutils-fix-ldshared.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"
   },
   {
    "folder": "externals/xz-5.2.2",
    "sha256": "02b6d6f1e0369940e7e1f0d324992e069d09f5f3d32d86e2d22cd8b82ac3fb3f",
    "url": "https://github.com/python/cpython-source-deps/archive/xz-5.2.2.zip"
   },
   {
    "folder": "externals/tcl-core-8.6.9.0",
    "sha256": "ea9e724536ec13b476ebbd47948303b92fdd90a33aa94f30fcc2f5c3a899f69e",
    "url": "https://github.com/python/cpython-source-deps/archive/tcl-core-8.6.9.0.zip"
   },
   {
    "folder": "externals/tk-8.6.9.0",
    "sha256": "f3112b6bbc3bd163c877030187e73ce9a113ce03eff559ec5b9df697e3a08fad",
    "url": "https://github.com/python/cpython-source-deps/archive/tk-8.6.9.0.zip"
   },
   {
    "folder": "externals/tcltk-8.6.9.0",
    "sha256": "37cd629a75d2a34974a3d771ccab5c9e3caf3d138cea81040f9cdba1aded1cf2",
    "url": "https://github.com/python/cpython-bin-deps/archive/tcltk-8.6.9.0.zip"
   },
   {
    "folder": "externals/tix-8.4.3.6",
    "sha256": "e558e3dc5e67ac0942f8fceafce00ca46b177da9ebeaf38ec7fafd9b9913ac56",
    "url": "https://github.com/python/cpython-source-deps/archive/tix-8.4.3.6.zip"
   },
   {
    "folder": "externals/bzip2-1.0.6",
    "sha256": "c42fd1432a2667b964a74bc423bb7485059c4a6d5dc92946d59dbf9a6bdb988d",
    "url": "https://github.com/python/cpython-source-deps/archive/bzip2-1.0.6.zip"
   },
   {
    "folder": "externals/zlib-1.2.11",
    "sha256": "debb1952945fa6c25817a40abe90641b572c83171f244937b70b9fe156f5a63a",
    "url": "https://github.com/python/cpython-source-deps/archive/zlib-1.2.11.zip"
   },
   {
    "folder": "externals/nasm-2.11.06",
    "sha256": "de3c87b26a80e789986d8e6950c6304175d3829afe9c6c7211eb7257266ab0ac",
    "url": "https://github.com/python/cpython-bin-deps/archive/nasm-2.11.06.zip"
   },
   {
    "folder": "externals/libffi",
    "sha256": "4872e72e188a5aa1124db0c3b163a4163e84ead359a514d86dd7c6fa2d2ff02a",
    "url": "https://github.com/python/cpython-bin-deps/archive/libffi.zip"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-gcc-libs",
    "m2-patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "openssl",
    "python",
    "sqlite"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 }
}