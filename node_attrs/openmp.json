{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/198232414.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198532033.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203952423.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Pinning",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216584150.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229922085.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/238893990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262806247.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/328996791.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375719239.json"
   },
   "data": {
    "bot_rerun": 1581811692.8201208,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11-init"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393948494.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454875902.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501474393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514304804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549905649.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574711181.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/616356101.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/686558394.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/747404468.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/838588563.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "13.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/886959168.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908751590.json"
   },
   "data": {
    "bot_rerun": 1651138462.6434786,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/920516530.json"
   },
   "data": {
    "bot_rerun": 1651138462.643716,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/923105474.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/923369572.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/946531798.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "14.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "openmp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp",
       "_openmp_mutex >=4.5",
       "_openmp_mutex * *_llvm"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*",
      "zlib"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.so",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp",
       "_openmp_mutex >=4.5",
       "_openmp_mutex * *_llvm"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*",
      "zlib"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.so",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp",
       "_openmp_mutex >=4.5",
       "_openmp_mutex * *_llvm"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*",
      "zlib"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.so",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp",
       "_openmp_mutex >=4.5",
       "_openmp_mutex * *_llvm"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*",
      "zlib"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.so",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp",
       "_openmp_mutex >=4.5",
       "_openmp_mutex * *_llvm"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*",
      "zlib"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.so",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp",
       "_openmp_mutex >=4.5",
       "_openmp_mutex * *_llvm"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*",
      "zlib"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.so",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.dylib",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.dylib",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "clang",
      "cmake",
      "perl",
      "ninja"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "bld-llvm-openmp.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\libomp.dll exit 1",
      "if not exist %LIBRARY_LIB%\\\\libomp.lib exit 1",
      "if not exist %LIBRARY_INC%\\\\omp.h exit 1",
      "%LIBRARY_BIN%\\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe",
      "%cd%\\omp_hello.exe"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "name": "openmp",
 "new_version": "14.0.4",
 "new_version_attempts": {
  "10.0.1": 1,
  "11.0.0": 1,
  "11.0.1": 1,
  "11.1.0": 1,
  "12.0.0": 4,
  "12.0.1": 1,
  "13.0.0": 1,
  "13.0.1": 1,
  "14.0.0": 1,
  "14.0.1": 1,
  "14.0.2": 2,
  "14.0.3": 1,
  "14.0.4": 1
 },
 "new_version_errors": {
  "12.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '12.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/openmp-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.dylib",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "perl"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "build-llvm-openmp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libomp.dylib",
      "test -f $PREFIX/include/omp.h",
      "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
      "./omp_hello"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "llvm-openmp"
  ]
 },
 "pinning_version": "2022.05.24.15.15.50",
 "raw_meta_yaml": "{% set version = \"14.0.3\" %}\n# check https://clang.llvm.org/docs/OpenMPSupport.html\n# occasionally to see last fully supported openmp ver.\n{% set openmp_ver = \"4.5\" %}\n\npackage:\n  name: openmp\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n  sha256: 44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c\n  # name folder for easier deletion; we do the equivalent of downloading\n  # the subproject sources, so the work folder then has openmp in it;\n  # for details see build scripts\n  folder: llvm-project\n\nbuild:\n  number: 0\n\noutputs:\n  - name: llvm-openmp\n    script: build-llvm-openmp.sh  # [not win]\n    script: bld-llvm-openmp.bat  # [win]\n    build:\n      ignore_run_exports:\n        - libgcc-ng\n        - libstdcxx-ng\n        - _openmp_mutex\n      run_exports:\n        strong:\n          - {{ pin_subpackage(\"llvm-openmp\", max_pin=None) }}\n          - _openmp_mutex >={{ openmp_ver }}  # [linux]\n          - _openmp_mutex * *_llvm            # [linux]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - clang  # [win]\n        - cmake\n        - make   # [unix]\n        - perl\n        - ninja  # [win]\n      host:\n        - llvmdev {{ version }}|{{ version }}.*\n        - zlib   # [linux]\n      run_constrained:\n        - openmp {{ version }}|{{ version }}.*\n    test:\n      requires:\n        - clangxx\n        - {{ compiler('cxx') }}\n      commands:\n        - if not exist %LIBRARY_BIN%\\\\libomp.dll exit 1   # [win]\n        - test -f $PREFIX/lib/libomp.so                   # [linux]\n        - test -f $PREFIX/lib/libomp.dylib                # [osx]\n        - if not exist %LIBRARY_LIB%\\\\libomp.lib exit 1   # [win]\n        - if not exist %LIBRARY_INC%\\\\omp.h exit 1        # [win]\n        - test -f $PREFIX/include/omp.h                   # [unix]\n        - $PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello  # [not win]\n        - '%LIBRARY_BIN%\\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe'   # [win]\n        - ./omp_hello            # [unix]\n        - '%cd%\\omp_hello.exe'   # [win]\n      files:\n        - omp_hello.c\n\nabout:\n  home: http://openmp.llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: openmp/LICENSE.TXT\n  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.\n  dev_url: https://github.com/llvm/llvm-project/\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - jakirkham\n    - yesimon\n    - isuruf\n    - beckermr\n    - katietz\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "clang",
   "cmake",
   "cxx_compiler_stub",
   "llvmdev",
   "make",
   "ninja",
   "perl",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": true,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev 14.0.3|14.0.3.*",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz",
 "version": "14.0.3",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project/",
   "home": "http://openmp.llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_file": "openmp/LICENSE.TXT",
   "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "beckermr",
    "katietz",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "libgcc-ng",
      "libstdcxx-ng",
      "_openmp_mutex"
     ],
     "run_exports": {
      "strong": [
       "llvm-openmp"
      ]
     }
    },
    "name": "llvm-openmp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "clang",
      "cmake",
      "perl",
      "ninja"
     ],
     "host": [
      "llvmdev 14.0.3|14.0.3.*"
     ],
     "run_constrained": [
      "openmp 14.0.3|14.0.3.*"
     ]
    },
    "script": "bld-llvm-openmp.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\libomp.dll exit 1",
      "if not exist %LIBRARY_LIB%\\\\libomp.lib exit 1",
      "if not exist %LIBRARY_INC%\\\\omp.h exit 1",
      "%LIBRARY_BIN%\\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe",
      "%cd%\\omp_hello.exe"
     ],
     "files": [
      "omp_hello.c"
     ],
     "requires": [
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "openmp",
   "version": "14.0.3"
  },
  "source": {
   "folder": "llvm-project",
   "sha256": "44d3e7a784d5cf805e72853bb03f218bd1058d448c03ca883dabbebc99204e0c",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.3/llvm-project-14.0.3.src.tar.xz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "perl"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmdev"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 }
}