{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/358324829.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/384800826.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "github-webhook",
 "hash_type": "sha256",
 "name": "github-webhook",
 "new_version": "1.0.4",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "github-webhook"
  ]
 },
 "pinning_version": "2020.03.06",
 "raw_meta_yaml": "{% set name = \"github-webhook\" %}\n{% set version = \"1.0.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: 3529bc9c5e29d2b068c2a044d3db7ef5253a9069317bf2a67b460370b4285341\n  - url: https://raw.githubusercontent.com/bloomberg/python-github-webhook/master/LICENSE\n    sha256: c7da80d92a14d353b0f4ebbe917e155b4051f280ae665035ab5d4a4b9613a506\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - flask\n    - six\n\ntest:\n  imports:\n    - github_webhook\n\nabout:\n  home: https://bloomberg.github.io/python-github-webhook/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'Very simple, but powerful, microframework for writing Github webhooks in Python.'\n\n  description: |\n    python-github-webhook is a very simple, but powerful, \n    microframework for writing GitHub webhooks in Python. It can be used\n    to write webhooks for individual repositories or whole organisations,\n    and can be used for GitHub.com or GitHub Enterprise installations.\n  doc_url: https://bloomberg.github.io/python-github-webhook\n  dev_url: https://github.com/bloomberg/python-github-webhook\n\nextra:\n  recipe-maintainers:\n    - sodre\n",
 "smithy_version": "3.6.9",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/github-webhook/github-webhook-1.0.3.tar.gz",
 "version": "1.0.3"
}