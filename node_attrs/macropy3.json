{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "macropy3",
 "hash_type": "sha256",
 "name": "macropy3",
 "new_version": "1.1.0b2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "macropy3"
  ]
 },
 "raw_meta_yaml": "{% set name = \"macropy3\" %}\n{% set version = \"1.1.0b2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7a8eae9886ea4a5df4fcf4f71f53165b82becfc7fc87d9c1c8cd2196f22d9408\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n  run:\n    - python >=3\n\ntest:\n  imports:\n    - macropy\n    - macropy.activate\n\nabout:\n  home: https://github.com/lihaoyi/macropy\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Macros in Python: quasiquotes, case classes, LINQ and more'\n  description: |\n    MacroPy is an implementation of Syntactic Macros in the Python Programming\n    Language. MacroPy provides a mechanism for user-defined functions (macros)\n    to perform transformations on the abstract syntax tree (AST) of a Python\n    program at import time. This is an easy way to enhance the semantics of a\n    Python program in ways which are otherwise impossible, for example providing\n    an extremely concise way of declaring classes.\n  doc_url: https://macropy3.readthedocs.io/\n  dev_url: https://github.com/simplejson/simplejson\n\nextra:\n  recipe-maintainers:\n    - hoechenberger\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/macropy3/macropy3-1.1.0b2.tar.gz",
 "version": "1.1.0b2"
}