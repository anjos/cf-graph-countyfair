{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199877452.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/219155704.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35"
 },
 "feedstock_name": "xorg-libxp",
 "hash_type": "sha256",
 "name": "xorg-libxp",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "xorg-libxp"
  ]
 },
 "pinning_version": "2018.09.27",
 "raw_meta_yaml": "{% set xorg_name = \"libXp\" %}\n{% set xorg_category = \"lib\" %}\n{% set name = \"xorg-\" ~ xorg_name %}\n{% set version = \"1.0.3\" %}\n{% set sha256 = \"7f360c9905849c3587d48efc0f0ecbc852c19f61a52b18530d6b005cb9148c57\" %}\n{% set am_version = \"1.15\" %} # keep synchronized with build.sh\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.bz2\n  url: https://www.x.org/releases/individual/{{ xorg_category }}/{{ xorg_name }}-{{ version }}.tar.bz2\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1002\n  detect_binary_files_with_prefix: true\n\n  # Windows build failing. See https://ci.appveyor.com/project/epruesse/staged-recipes/build/1.0.64/job/p3bt0xipb8cms0hm#L1194\n  # Error:\n  # In file included from XpJob.c:44:0:\n  # $PREFIX/include/X11/extensions/Printstr.h:116:18: error: conflicting types for 'CARD32'\n  # #define PCONTEXT CARD32\n  #                ^\n  # In file included from $PREFIX/include/X11/Xproto.h:72:0,\n  #               from $PREFIX/include/X11/extensions/Printstr.h:64,\n  #               from XpJob.c:44:\n  # $PREFIX/include/X11/Xmd.h:111:23: note: previous declaration of 'CARD32' was here\n  # typedef unsigned long CARD32;\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - m2-autoconf  # [win]\n    - m2-automake{{ am_version }}  # [win]\n    - m2-libtool  # [win]\n    - m2w64-pkg-config  # [win]\n    - pkg-config  # [not win]\n    - posix  # [win]\n    - {{ compiler('c') }}        # [unix]\n    - {{ compiler('m2w64_c') }}  # [win]\n  host:\n    - pthread-stubs\n    - xorg-xextproto\n    - xorg-printproto\n    - xorg-util-macros  # [win]\n    - xorg-libx11 1.6.*\n    - xorg-libxau\n    - xorg-libxext\n  run:\n    - xorg-libx11 1.6.*\n    - xorg-libxau\n    - xorg-libxext\n\ntest:\n  commands:\n    {% set lib_idents = [ \"Xp\" ] %}\n    {% for lib_ident in lib_idents %}\n    - test -f $PREFIX/lib/lib{{ lib_ident }}.dylib  # [osx]\n    - test -f $PREFIX/lib/lib{{ lib_ident }}.so  # [linux]\n    - if not exist %PREFIX%/Library/lib/lib{{ lib_ident }}.dll.a exit /b 1  # [win]\n    - if not exist %PREFIX%/Library/bin/msys-{{ lib_ident }}-*.dll exit /b 1  # [win]\n    {% endfor %}\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n\nabout:\n  home: https://www.x.org/\n  license: MIT\n  license_family: MIT\n  license_file: COPYING\n  summary: 'The X.org print library.'\n\nextra:\n  recipe-maintainers:\n    - pkgw\n    - epruesse\n",
 "smithy_version": "3.1.12",
 "strong_exports": false,
 "url": "https://www.x.org/releases/individual/lib/libXp-1.0.3.tar.bz2",
 "version": "1.0.3"
}