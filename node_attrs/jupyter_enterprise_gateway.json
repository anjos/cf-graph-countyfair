{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198231042.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/203612016.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/210015466.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/214459021.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222677207.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/235072615.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263083351.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/314256425.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375154125.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/409800776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/481669639.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495945648.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/529774951.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574576247.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/715263257.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799471714.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/834011630.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1102402734.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Command 'git diff --name-only 2a05051e67d5993307ce3582a08d605ffc12a750...HEAD' returned non-zero exit status 128.",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 310, in run",
   "    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd",
   "    c.check_returncode()",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode",
   "    raise CalledProcessError(self.returncode, self.args, self.stdout,",
   "subprocess.CalledProcessError: Command 'git diff --name-only 2a05051e67d5993307ce3582a08d605ffc12a750...HEAD' returned non-zero exit status 128.",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "jupyter_enterprise_gateway",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Jupyter Enterprise Gateway A lightweight, multi-tenant, scalable and secure gateway\nthat enables Jupyter Notebooks to share resources across distributed clusters such\nas Apache Spark, Kubernetes and others.\n",
   "dev_url": "https://github.com/jupyter/enterprise_gateway",
   "doc_url": "http://jupyter-enterprise-gateway.readthedocs.io/en/latest/",
   "home": "https://github.com/jupyter/enterprise_gateway",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "A web server for spawning and communicating with remote Jupyter kernels"
  },
  "build": {
   "entry_points": [
    "jupyter-enterprisegateway = enterprise_gateway:launch_instance"
   ],
   "noarch": "python",
   "number": "0",
   "script": [
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "lresende",
    "kevin-bates"
   ]
  },
  "package": {
   "name": "jupyter_enterprise_gateway",
   "version": "3.0.0"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip",
    "hatchling >=1.5"
   ],
   "run": [
    "python >=3.7",
    "docker-py >=3.5.0",
    "jinja2 >=3.1",
    "jupyter_client >=6.1.5,<7.0",
    "jupyter_core >=4.7.0",
    "jupyter_server >=1.3",
    "paramiko >=2.11",
    "pexpect >=4.8.0",
    "pycryptodomex >=3.9.7",
    "python-kubernetes >=18.20.0",
    "pyzmq >=17.0.0",
    "requests >=2.14.2",
    "tornado >=6.1",
    "traitlets >=5.3.0",
    "watchdog >=2.1.3",
    "yarn-api-client >=1.0"
   ]
  },
  "source": {
   "fn": "jupyter_enterprise_gateway-3.0.0.tar.gz",
   "sha256": "53b73de87b1a91139d1e9cfd062f7eadf0aa3a2ccb9afd052699d7a537933d1c",
   "url": "https://pypi.io/packages/source/j/jupyter_enterprise_gateway/jupyter_enterprise_gateway-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "jupyter-enterprisegateway --help",
    "jupyter enterprisegateway --help"
   ],
   "imports": [
    "enterprise_gateway",
    "enterprise_gateway.services",
    "enterprise_gateway.services.kernels",
    "enterprise_gateway.services.processproxies",
    "enterprise_gateway.services.sessions"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docker-py",
    "jinja2",
    "jupyter_client",
    "jupyter_core",
    "jupyter_server",
    "paramiko",
    "pexpect",
    "pycryptodomex",
    "python",
    "python-kubernetes",
    "pyzmq",
    "requests",
    "tornado",
    "traitlets",
    "watchdog",
    "yarn-api-client"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Jupyter Enterprise Gateway A lightweight, multi-tenant, scalable and secure gateway\nthat enables Jupyter Notebooks to share resources across distributed clusters such\nas Apache Spark, Kubernetes and others.\n",
   "dev_url": "https://github.com/jupyter/enterprise_gateway",
   "doc_url": "http://jupyter-enterprise-gateway.readthedocs.io/en/latest/",
   "home": "https://github.com/jupyter/enterprise_gateway",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "A web server for spawning and communicating with remote Jupyter kernels"
  },
  "build": {
   "entry_points": [
    "jupyter-enterprisegateway = enterprise_gateway:launch_instance"
   ],
   "noarch": "python",
   "number": "0",
   "script": [
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "lresende",
    "kevin-bates"
   ]
  },
  "package": {
   "name": "jupyter_enterprise_gateway",
   "version": "3.0.0"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip",
    "hatchling >=1.5"
   ],
   "run": [
    "python >=3.7",
    "docker-py >=3.5.0",
    "jinja2 >=3.1",
    "jupyter_client >=6.1.5,<7.0",
    "jupyter_core >=4.7.0",
    "jupyter_server >=1.3",
    "paramiko >=2.11",
    "pexpect >=4.8.0",
    "pycryptodomex >=3.9.7",
    "python-kubernetes >=18.20.0",
    "pyzmq >=17.0.0",
    "requests >=2.14.2",
    "tornado >=6.1",
    "traitlets >=5.3.0",
    "watchdog >=2.1.3",
    "yarn-api-client >=1.0"
   ]
  },
  "source": {
   "fn": "jupyter_enterprise_gateway-3.0.0.tar.gz",
   "sha256": "53b73de87b1a91139d1e9cfd062f7eadf0aa3a2ccb9afd052699d7a537933d1c",
   "url": "https://pypi.io/packages/source/j/jupyter_enterprise_gateway/jupyter_enterprise_gateway-3.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "jupyter-enterprisegateway --help",
    "jupyter enterprisegateway --help"
   ],
   "imports": [
    "enterprise_gateway",
    "enterprise_gateway.services",
    "enterprise_gateway.services.kernels",
    "enterprise_gateway.services.processproxies",
    "enterprise_gateway.services.sessions"
   ]
  }
 },
 "name": "jupyter_enterprise_gateway",
 "new_version": "3.1.0",
 "new_version_attempts": {
  "2.1.1": 1,
  "2.2.0": 1,
  "2.3.0": 1,
  "2.4.0": 1,
  "2.5.0": 1,
  "2.5.1": 1,
  "2.5.2": 1,
  "2.6.0": 1,
  "3.0.0": 1,
  "3.1.0": 2
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "jupyter_enterprise_gateway"
  ]
 },
 "pinning_version": "2022.10.27.19.11.26",
 "pre_pr_migrator_attempts": {
  "version": 2
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3602215141\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 310, in run\n    gdiff = eval_cmd(f\"git diff --name-only {head_ref.strip()}...HEAD\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 296, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/subprocess.py\", line 460, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'git diff --name-only 2a05051e67d5993307ce3582a08d605ffc12a750...HEAD' returned non-zero exit status 128.\n"
 },
 "raw_meta_yaml": "{% set name = \"jupyter_enterprise_gateway\" %}\n{% set version = \"3.0.0\" %}\n{% set sha256 = \"53b73de87b1a91139d1e9cfd062f7eadf0aa3a2ccb9afd052699d7a537933d1c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script:\n    - python -m pip install --no-deps --ignore-installed .\n  entry_points:\n    - jupyter-enterprisegateway = enterprise_gateway:launch_instance\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - hatchling >=1.5\n\n  run:\n    - python >=3.7\n    - docker-py >=3.5.0\n    - jinja2 >=3.1\n    - jupyter_client >=6.1.5,<7.0\n    - jupyter_core >=4.7.0\n    - jupyter_server >=1.3\n    - paramiko >=2.11\n    - pexpect >=4.8.0\n    - pycryptodomex >=3.9.7\n    - python-kubernetes >=18.20.0\n    - pyzmq >=17.0.0\n    - requests >=2.14.2\n    - tornado >=6.1\n    - traitlets >=5.3.0\n    - watchdog >=2.1.3\n    - yarn-api-client >=1.0\n\ntest:\n  imports:\n    - enterprise_gateway\n    - enterprise_gateway.services\n    - enterprise_gateway.services.kernels\n    - enterprise_gateway.services.processproxies\n    - enterprise_gateway.services.sessions\n  commands:\n    - jupyter-enterprisegateway --help\n    - jupyter enterprisegateway --help\n\nabout:\n  home: https://github.com/jupyter/enterprise_gateway\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: A web server for spawning and communicating with remote Jupyter kernels\n\n  description: |\n    Jupyter Enterprise Gateway A lightweight, multi-tenant, scalable and secure gateway\n    that enables Jupyter Notebooks to share resources across distributed clusters such\n    as Apache Spark, Kubernetes and others.\n  doc_url: http://jupyter-enterprise-gateway.readthedocs.io/en/latest/\n  dev_url: https://github.com/jupyter/enterprise_gateway\n\nextra:\n  recipe-maintainers:\n    - lresende\n    - kevin-bates\n",
 "req": {
  "__set__": true,
  "elements": [
   "docker-py",
   "hatchling",
   "jinja2",
   "jupyter_client",
   "jupyter_core",
   "jupyter_server",
   "paramiko",
   "pexpect",
   "pip",
   "pycryptodomex",
   "python",
   "python-kubernetes",
   "pyzmq",
   "requests",
   "tornado",
   "traitlets",
   "watchdog",
   "yarn-api-client"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docker-py",
    "jinja2",
    "jupyter_client",
    "jupyter_core",
    "jupyter_server",
    "paramiko",
    "pexpect",
    "pycryptodomex",
    "python",
    "python-kubernetes",
    "pyzmq",
    "requests",
    "tornado",
    "traitlets",
    "watchdog",
    "yarn-api-client"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatchling >=1.5",
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "docker-py >=3.5.0",
    "jinja2 >=3.1",
    "jupyter_client >=6.1.5,<7.0",
    "jupyter_core >=4.7.0",
    "jupyter_server >=1.3",
    "paramiko >=2.11",
    "pexpect >=4.8.0",
    "pycryptodomex >=3.9.7",
    "python >=3.7",
    "python-kubernetes >=18.20.0",
    "pyzmq >=17.0.0",
    "requests >=2.14.2",
    "tornado >=6.1",
    "traitlets >=5.3.0",
    "watchdog >=2.1.3",
    "yarn-api-client >=1.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/j/jupyter_enterprise_gateway/jupyter_enterprise_gateway-3.0.0.tar.gz",
 "version": "3.0.0"
}