{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/262579426.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263632784.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266758776.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/278873767.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/279156247.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/298576750.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/314220777.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/319331278.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/367315461.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/372115438.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/396515273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/642576973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646374404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750744233.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/842333795.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/892304912.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/897712141.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/922368800.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1006439870.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1010213772.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1020987841.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "werkzeug",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "**_werkzeug_** German noun: \"tool\". Etymology: *werk* (\"work\"), *zeug* (\"stuff\")\n\nWerkzeug is a comprehensive [WSGI](https://wsgi.readthedocs.io/en/latest/) web application library. It began as\na simple collection of various utilities for WSGI applications and has\nbecome one of the most advanced WSGI utility libraries.\n\nIt includes:\n\n  -   An interactive debugger that allows inspecting stack traces and\n      source code in the browser with an interactive interpreter for any\n      frame in the stack.\n  -   A full-featured request object with objects to interact with\n      headers, query args, form data, files, and cookies.\n  -   A response object that can wrap other WSGI applications and handle\n      streaming data.\n  -   A routing system for matching URLs to endpoints and generating URLs\n      for endpoints, with an extensible system for capturing variables\n      from URLs.\n  -   HTTP utilities to handle entity tags, cache control, dates, user\n      agents, cookies, files, and more.\n  -   A threaded WSGI server for use while developing applications\n      locally.\n  -   A test client for simulating HTTP requests during testing without\n      requiring running a server.\n\nWerkzeug doesn't enforce any dependencies. It is up to the developer to\nchoose a template engine, database adapter, and even how to handle\nrequests. It can be used to build all sorts of end user applications\nsuch as blogs, wikis, or bulletin boards.\n\n[Flask](https://www.palletsprojects.com/p/flask/) wraps Werkzeug, using it to handle the details of WSGI while\nproviding more structure and patterns for defining powerful\napplications.\n",
   "dev_url": "https://github.com/pallets/werkzeug",
   "doc_url": "https://werkzeug.palletsprojects.com/",
   "home": "https://palletsprojects.com/p/werkzeug/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.rst",
   "summary": "The comprehensive WSGI web application library."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "goanpeca",
    "mcs07",
    "bollwyvl"
   ]
  },
  "package": {
   "name": "werkzeug",
   "version": "2.2.2"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "markupsafe >=2.1.1"
   ]
  },
  "source": {
   "sha256": "7ea2d48322cc7c0f8b3a215ed73eabd7b5d75d0b50e31ab006286ccff9e00b8f",
   "url": "https://pypi.io/packages/source/W/Werkzeug/Werkzeug-2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest tests -vv --cov=werkzeug --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=84 \"-k not exclude_patterns\""
   ],
   "imports": [
    "werkzeug"
   ],
   "requires": [
    "cryptography",
    "ephemeral-port-reserve",
    "greenlet",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-xprocess",
    "watchdog"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markupsafe",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography",
    "ephemeral-port-reserve",
    "greenlet",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-xprocess",
    "watchdog"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "**_werkzeug_** German noun: \"tool\". Etymology: *werk* (\"work\"), *zeug* (\"stuff\")\n\nWerkzeug is a comprehensive [WSGI](https://wsgi.readthedocs.io/en/latest/) web application library. It began as\na simple collection of various utilities for WSGI applications and has\nbecome one of the most advanced WSGI utility libraries.\n\nIt includes:\n\n  -   An interactive debugger that allows inspecting stack traces and\n      source code in the browser with an interactive interpreter for any\n      frame in the stack.\n  -   A full-featured request object with objects to interact with\n      headers, query args, form data, files, and cookies.\n  -   A response object that can wrap other WSGI applications and handle\n      streaming data.\n  -   A routing system for matching URLs to endpoints and generating URLs\n      for endpoints, with an extensible system for capturing variables\n      from URLs.\n  -   HTTP utilities to handle entity tags, cache control, dates, user\n      agents, cookies, files, and more.\n  -   A threaded WSGI server for use while developing applications\n      locally.\n  -   A test client for simulating HTTP requests during testing without\n      requiring running a server.\n\nWerkzeug doesn't enforce any dependencies. It is up to the developer to\nchoose a template engine, database adapter, and even how to handle\nrequests. It can be used to build all sorts of end user applications\nsuch as blogs, wikis, or bulletin boards.\n\n[Flask](https://www.palletsprojects.com/p/flask/) wraps Werkzeug, using it to handle the details of WSGI while\nproviding more structure and patterns for defining powerful\napplications.\n",
   "dev_url": "https://github.com/pallets/werkzeug",
   "doc_url": "https://werkzeug.palletsprojects.com/",
   "home": "https://palletsprojects.com/p/werkzeug/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.rst",
   "summary": "The comprehensive WSGI web application library."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "goanpeca",
    "mcs07",
    "bollwyvl"
   ]
  },
  "package": {
   "name": "werkzeug",
   "version": "2.2.2"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "markupsafe >=2.1.1"
   ]
  },
  "source": {
   "sha256": "7ea2d48322cc7c0f8b3a215ed73eabd7b5d75d0b50e31ab006286ccff9e00b8f",
   "url": "https://pypi.io/packages/source/W/Werkzeug/Werkzeug-2.2.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest tests -vv --cov=werkzeug --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=84 \"-k not exclude_patterns\""
   ],
   "imports": [
    "werkzeug"
   ],
   "requires": [
    "cryptography",
    "ephemeral-port-reserve",
    "greenlet",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-xprocess",
    "watchdog"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "name": "werkzeug",
 "new_version": "2.2.2",
 "new_version_attempts": {
  "2.0.0": 1,
  "2.0.1": 1,
  "2.0.2": 1,
  "2.0.3": 1,
  "2.1.0": 1,
  "2.1.1": 1,
  "2.1.2": 1,
  "2.2.0": 1,
  "2.2.1": 1,
  "2.2.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "werkzeug"
  ]
 },
 "pinning_version": "2022.08.08.19.07.35",
 "raw_meta_yaml": "{% set version = \"2.2.2\" %}\n{% set cov_fail_under = 84 %}\n{% set test_skip = \"\\\"-k not exclude_patterns\\\"\" %}\n\npackage:\n  name: werkzeug\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/W/Werkzeug/Werkzeug-{{ version }}.tar.gz\n  sha256: 7ea2d48322cc7c0f8b3a215ed73eabd7b5d75d0b50e31ab006286ccff9e00b8f\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - markupsafe >=2.1.1\n\ntest:\n  source_files:\n    - tests\n  requires:\n    - cryptography\n    - ephemeral-port-reserve\n    - greenlet\n    - pip\n    - pytest\n    - pytest-cov\n    - pytest-timeout\n    - pytest-xprocess\n    - watchdog\n  imports:\n    - werkzeug\n  commands:\n    - pip check\n    - pytest tests -vv --cov=werkzeug --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under={{ cov_fail_under }} {{ test_skip }}\n\nabout:\n  home: https://palletsprojects.com/p/werkzeug/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.rst\n  summary: The comprehensive WSGI web application library.\n  description: |\n    **_werkzeug_** German noun: \"tool\". Etymology: *werk* (\"work\"), *zeug* (\"stuff\")\n\n    Werkzeug is a comprehensive [WSGI](https://wsgi.readthedocs.io/en/latest/) web application library. It began as\n    a simple collection of various utilities for WSGI applications and has\n    become one of the most advanced WSGI utility libraries.\n\n    It includes:\n\n      -   An interactive debugger that allows inspecting stack traces and\n          source code in the browser with an interactive interpreter for any\n          frame in the stack.\n      -   A full-featured request object with objects to interact with\n          headers, query args, form data, files, and cookies.\n      -   A response object that can wrap other WSGI applications and handle\n          streaming data.\n      -   A routing system for matching URLs to endpoints and generating URLs\n          for endpoints, with an extensible system for capturing variables\n          from URLs.\n      -   HTTP utilities to handle entity tags, cache control, dates, user\n          agents, cookies, files, and more.\n      -   A threaded WSGI server for use while developing applications\n          locally.\n      -   A test client for simulating HTTP requests during testing without\n          requiring running a server.\n\n    Werkzeug doesn't enforce any dependencies. It is up to the developer to\n    choose a template engine, database adapter, and even how to handle\n    requests. It can be used to build all sorts of end user applications\n    such as blogs, wikis, or bulletin boards.\n\n    [Flask](https://www.palletsprojects.com/p/flask/) wraps Werkzeug, using it to handle the details of WSGI while\n    providing more structure and patterns for defining powerful\n    applications.\n  doc_url: https://werkzeug.palletsprojects.com/\n  dev_url: https://github.com/pallets/werkzeug\n\nextra:\n  recipe-maintainers:\n    - goanpeca\n    - mcs07\n    - bollwyvl\n",
 "req": {
  "__set__": true,
  "elements": [
   "markupsafe",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markupsafe",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography",
    "ephemeral-port-reserve",
    "greenlet",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-xprocess",
    "watchdog"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "markupsafe >=2.1.1",
    "python >=3.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cryptography",
    "ephemeral-port-reserve",
    "greenlet",
    "pip",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-xprocess",
    "watchdog"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/W/Werkzeug/Werkzeug-2.2.2.tar.gz",
 "version": "2.2.2"
}