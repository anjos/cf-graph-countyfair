{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/553358676.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "libcrc32c",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/google/crc32c",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "CRC32C implementation with support for CPU-specific acceleration instructions"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libcrc32c"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "tswast"
   ]
  },
  "package": {
   "name": "libcrc32c",
   "version": "1.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "sha256": "a6533f45b1670b5d59b38a514d82b09c6fb70cc1050467220216335e873074e8",
   "url": "https://github.com/google/crc32c/archive/1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcrc32c${SHLIB_EXT}",
    "test -f $PREFIX/include/crc32c/crc32c.h",
    "test -f $PREFIX/lib/cmake/Crc32c/Crc32cTargets.cmake"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/google/crc32c",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "CRC32C implementation with support for CPU-specific acceleration instructions"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libcrc32c",
    "libcrc32c",
    "libcrc32c"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "tswast",
    "xhochy",
    "tswast",
    "xhochy",
    "tswast"
   ]
  },
  "package": {
   "name": "libcrc32c",
   "version": "1.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "sha256": "a6533f45b1670b5d59b38a514d82b09c6fb70cc1050467220216335e873074e8",
   "url": "https://github.com/google/crc32c/archive/1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcrc32c${SHLIB_EXT}",
    "test -f $PREFIX/include/crc32c/crc32c.h",
    "test -f $PREFIX/lib/cmake/Crc32c/Crc32cTargets.cmake",
    "test -f $PREFIX/lib/libcrc32c${SHLIB_EXT}",
    "test -f $PREFIX/include/crc32c/crc32c.h",
    "test -f $PREFIX/lib/cmake/Crc32c/Crc32cTargets.cmake",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\crc32c.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\crc32c.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\crc32c\\\\crc32c.h exit 1"
   ]
  }
 },
 "name": "libcrc32c",
 "new_version": "1.1.1",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/google/crc32c",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "CRC32C implementation with support for CPU-specific acceleration instructions"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libcrc32c"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "tswast"
   ]
  },
  "package": {
   "name": "libcrc32c",
   "version": "1.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "sha256": "a6533f45b1670b5d59b38a514d82b09c6fb70cc1050467220216335e873074e8",
   "url": "https://github.com/google/crc32c/archive/1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libcrc32c${SHLIB_EXT}",
    "test -f $PREFIX/include/crc32c/crc32c.h",
    "test -f $PREFIX/lib/cmake/Crc32c/Crc32cTargets.cmake"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libcrc32c"
  ]
 },
 "pinning_version": "2021.01.11.19.34.08",
 "raw_meta_yaml": "{% set name = \"crc32c\" %}\n{% set version = \"1.1.1\" %}\n\npackage:\n  name: lib{{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/google/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: a6533f45b1670b5d59b38a514d82b09c6fb70cc1050467220216335e873074e8\n\nbuild:\n  number: 2\n  run_exports:\n    - {{ pin_subpackage(\"libcrc32c\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n  run:\n\ntest:\n commands:\n   - test -f $PREFIX/lib/libcrc32c${SHLIB_EXT}  # [unix]\n   - test -f $PREFIX/include/crc32c/crc32c.h  # [unix]\n   - test -f $PREFIX/lib/cmake/Crc32c/Crc32cTargets.cmake  # [unix]\n   - if not exist %PREFIX%\\\\Library\\\\bin\\\\crc32c.dll exit 1  # [win]\n   - if not exist %PREFIX%\\\\Library\\\\lib\\\\crc32c.lib exit 1  # [win]\n   - if not exist %PREFIX%\\\\Library\\\\include\\\\crc32c\\\\crc32c.h exit 1  # [win]\n\nabout:\n  home: https://github.com/google/crc32c\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'CRC32C implementation with support for CPU-specific acceleration instructions'\n\nextra:\n  recipe-maintainers:\n    - xhochy\n    - tswast\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "ninja"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/google/crc32c/archive/1.1.1.tar.gz",
 "version": "1.1.1",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/google/crc32c",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "CRC32C implementation with support for CPU-specific acceleration instructions"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "libcrc32c"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xhochy",
    "tswast"
   ]
  },
  "package": {
   "name": "libcrc32c",
   "version": "1.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "sha256": "a6533f45b1670b5d59b38a514d82b09c6fb70cc1050467220216335e873074e8",
   "url": "https://github.com/google/crc32c/archive/1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\crc32c.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\crc32c.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\crc32c\\\\crc32c.h exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}