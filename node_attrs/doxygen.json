{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/204010917.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "id": "197995f2-90bf-4a81-808c-666d3fb8a732",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/357307393.json"
   },
   "data": {
    "bot_rerun": 1585415527.169565,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/369913642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395158379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402603746.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465053549.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472652043.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521666329.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545849693.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "doxygen",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "bison",
    "cmake",
    "make",
    "flex",
    "m4",
    "python",
    "texlive-core"
   ],
   "host": [
    "libiconv"
   ],
   "run": [
    "libiconv"
   ]
  },
  "source": {
   "fn": "doxygen-1.8.20.src.tar.gz",
   "patches": [
    "find_iconv.patch"
   ],
   "sha256": "5a018e57d26d7eeac415e676fe7817ae8be9828ed338d9701a2b26c7630389ce",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.src.tar.gz"
  },
  "test": {
   "commands": [
    "doxygen --help"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "bison",
    "cmake",
    "make",
    "flex",
    "m4",
    "python",
    "texlive-core"
   ],
   "host": [
    "libiconv"
   ],
   "run": [
    "libiconv"
   ]
  },
  "source": {
   "fn": "doxygen-1.8.20.src.tar.gz",
   "patches": [
    "find_iconv.patch"
   ],
   "sha256": "5a018e57d26d7eeac415e676fe7817ae8be9828ed338d9701a2b26c7630389ce",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.src.tar.gz"
  },
  "test": {
   "commands": [
    "doxygen --help"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "bison",
    "cmake",
    "make",
    "flex",
    "m4",
    "python",
    "texlive-core"
   ],
   "host": [
    "libiconv"
   ],
   "run": [
    "libiconv"
   ]
  },
  "source": {
   "fn": "doxygen-1.8.20.src.tar.gz",
   "patches": [
    "find_iconv.patch"
   ],
   "sha256": "5a018e57d26d7eeac415e676fe7817ae8be9828ed338d9701a2b26c7630389ce",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.src.tar.gz"
  },
  "test": {
   "commands": [
    "doxygen --help"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0",
   "script": [
    "mkdir %SCRIPTS%",
    "copy doxygen.exe %SCRIPTS%\\ || goto :eof",
    "copy doxyindexer.exe %SCRIPTS%\\ || goto :eof",
    "copy doxysearch.cgi.exe %SCRIPTS%\\ || goto :eof",
    "copy libclang.dll %LIBRARY_BIN%\\ || goto :eof",
    "copy libclang.dll %LIBRARY_BIN%\\ || goto :eof",
    "copy %RECIPE_DIR%\\LICENSE %SRC_DIR%\\ || goto :eof"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu",
    "bluescarni",
    "isuruf",
    "tadeu",
    "bluescarni",
    "isuruf",
    "tadeu",
    "bluescarni",
    "isuruf",
    "tadeu",
    "bluescarni",
    "isuruf",
    "tadeu",
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "bison",
    "cmake",
    "make",
    "flex",
    "m4",
    "python",
    "texlive-core"
   ],
   "host": [
    "libiconv"
   ],
   "run": [
    "libiconv"
   ]
  },
  "source": {
   "fn": "doxygen-1.8.20.windows.x64.bin.zip",
   "patches": [
    "find_iconv.patch"
   ],
   "sha256": "4b6000bc611caa26140194295dd671e05c66069aceb2e9261793f7fb87a3a11a",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.windows.x64.bin.zip"
  },
  "test": {
   "commands": [
    "doxygen --help",
    "doxygen --help",
    "doxygen --help",
    "doxygen --help",
    "doxygen --help",
    "doxygen --help"
   ]
  }
 },
 "name": "doxygen",
 "new_version": "1.9.0",
 "new_version_attempts": {
  "1.8.18": 1,
  "1.8.19": 1,
  "1.8.20": 1,
  "1.9.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "bison",
    "cmake",
    "make",
    "flex",
    "m4",
    "python",
    "texlive-core"
   ],
   "host": [
    "libiconv"
   ],
   "run": [
    "libiconv"
   ]
  },
  "source": {
   "fn": "doxygen-1.8.20.src.tar.gz",
   "patches": [
    "find_iconv.patch"
   ],
   "sha256": "5a018e57d26d7eeac415e676fe7817ae8be9828ed338d9701a2b26c7630389ce",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.src.tar.gz"
  },
  "test": {
   "commands": [
    "doxygen --help"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "bison",
    "cmake",
    "make",
    "flex",
    "m4",
    "python",
    "texlive-core"
   ],
   "host": [
    "libiconv"
   ],
   "run": [
    "libiconv"
   ]
  },
  "source": {
   "fn": "doxygen-1.8.20.src.tar.gz",
   "patches": [
    "find_iconv.patch"
   ],
   "sha256": "5a018e57d26d7eeac415e676fe7817ae8be9828ed338d9701a2b26c7630389ce",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.src.tar.gz"
  },
  "test": {
   "commands": [
    "doxygen --help"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "doxygen"
  ]
 },
 "pinning_version": "2020.12.26.13.11.41",
 "raw_meta_yaml": "{% set name = \"doxygen\" %}\n{% set version = \"1.8.20\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.src.tar.gz  # [not win]\n  url: http://doxygen.nl/files/{{ name }}-{{ version }}.src.tar.gz  # [not win]\n  sha256: 5a018e57d26d7eeac415e676fe7817ae8be9828ed338d9701a2b26c7630389ce  # [not win]\n\n  fn: {{ name }}-{{ version }}.windows.x64.bin.zip  # [win]\n  url: http://doxygen.nl/files/{{ name }}-{{ version }}.windows.x64.bin.zip  # [win]\n  sha256: 4b6000bc611caa26140194295dd671e05c66069aceb2e9261793f7fb87a3a11a  # [win]\n\n  patches:   # [not win]\n    # CMake finds iconv_open in glibc, but finds iconv.h from libiconv.\n    # Make sure both are found from one place.\n    - find_iconv.patch                                                           # [not win]\n\nbuild:\n  number: 0\n  script:   # [win]\n    - mkdir %SCRIPTS%                                      # [win]\n    - copy doxygen.exe %SCRIPTS%\\ || goto :eof             # [win]\n    - copy doxyindexer.exe %SCRIPTS%\\ || goto :eof         # [win]\n    - copy doxysearch.cgi.exe %SCRIPTS%\\ || goto :eof      # [win]\n    - copy libclang.dll %LIBRARY_BIN%\\ || goto :eof        # [win]\n    - copy libclang.dll %LIBRARY_BIN%\\ || goto :eof        # [win]\n    - copy %RECIPE_DIR%\\LICENSE %SRC_DIR%\\ || goto :eof    # [win]\n\nrequirements:   # [not win]\n  build:   # [not win]\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('cxx') }}  # [not win]\n    - bison         # [not win]\n    - cmake         # [not win]\n    - make          # [not win]\n    - flex          # [not win]\n    - m4            # [not win]\n    - python        # [not win]\n    - texlive-core  # [not win]\n  host:   # [not win]\n    - libiconv      # [not win]\n  run:   # [not win]\n    - libiconv      # [not win]\n\ntest:\n  commands:\n    - doxygen --help\n\nabout:\n  home: http://www.stack.nl/~dimitri/doxygen/index.html\n  license: GPL2\n  license_file: LICENSE\n  summary: Generate documentation from source code\n\n  description: |\n    Doxygen is the de facto standard tool for\n    generating documentation from annotated C++ sources,\n    but it also supports other popular programming\n    languages such as C, Objective-C, C#, PHP, Java,\n    Python, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\n    Fortran, VHDL, Tcl, and to some extent D.\n  doc_url: http://www.stack.nl/~dimitri/doxygen/manual/index.html\n  dev_url: https://github.com/doxygen/doxygen\n\nextra:\n  recipe-maintainers:\n    - bluescarni\n    - isuruf\n    - tadeu\n",
 "req": {
  "__set__": true,
  "elements": [
   "bison",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "flex",
   "libiconv",
   "m4",
   "make",
   "python",
   "texlive-core"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bison",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flex",
    "m4",
    "make",
    "python",
    "texlive-core"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libiconv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "http://doxygen.nl/files/doxygen-1.8.20.windows.x64.bin.zip",
 "version": "1.8.20",
 "win_64_meta_yaml": {
  "about": {
   "description": "Doxygen is the de facto standard tool for\ngenerating documentation from annotated C++ sources,\nbut it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java,\nPython, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\nFortran, VHDL, Tcl, and to some extent D.\n",
   "dev_url": "https://github.com/doxygen/doxygen",
   "doc_url": "http://www.stack.nl/~dimitri/doxygen/manual/index.html",
   "home": "http://www.stack.nl/~dimitri/doxygen/index.html",
   "license": "GPL2",
   "license_file": "LICENSE",
   "summary": "Generate documentation from source code"
  },
  "build": {
   "number": "0",
   "script": [
    "mkdir %SCRIPTS%",
    "copy doxygen.exe %SCRIPTS%\\ || goto :eof",
    "copy doxyindexer.exe %SCRIPTS%\\ || goto :eof",
    "copy doxysearch.cgi.exe %SCRIPTS%\\ || goto :eof",
    "copy libclang.dll %LIBRARY_BIN%\\ || goto :eof",
    "copy libclang.dll %LIBRARY_BIN%\\ || goto :eof",
    "copy %RECIPE_DIR%\\LICENSE %SRC_DIR%\\ || goto :eof"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "bluescarni",
    "isuruf",
    "tadeu"
   ]
  },
  "package": {
   "name": "doxygen",
   "version": "1.8.20"
  },
  "source": {
   "fn": "doxygen-1.8.20.windows.x64.bin.zip",
   "sha256": "4b6000bc611caa26140194295dd671e05c66069aceb2e9261793f7fb87a3a11a",
   "url": "http://doxygen.nl/files/doxygen-1.8.20.windows.x64.bin.zip"
  },
  "test": {
   "commands": [
    "doxygen --help"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}