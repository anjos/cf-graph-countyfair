{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/204010917.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "id": "197995f2-90bf-4a81-808c-666d3fb8a732",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/357307393.json"
   },
   "data": {
    "bot_rerun": 1585415527.169565,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/369913642.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395158379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402603746.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.18"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/465053549.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472652043.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.8.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521666329.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545849693.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551758896.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/715408993.json"
   },
   "data": {
    "bot_rerun": 1637839415.4932444,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/788870995.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/812357375.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/929139645.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "doxygen",
 "hash_type": "sha256",
 "name": "doxygen",
 "new_version": "1.9.4",
 "new_version_attempts": {
  "1.8.18": 1,
  "1.8.19": 1,
  "1.8.20": 1,
  "1.9.0": 1,
  "1.9.1": 1,
  "1.9.2": 2,
  "1.9.3": 1,
  "1.9.4": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "doxygen"
  ]
 },
 "pinning_version": "2022.05.05.18.43.04",
 "raw_meta_yaml": "{% set name = \"doxygen\" %}\n{% set version = \"1.9.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.src.tar.gz\n  url: https://www.doxygen.nl/files/{{ name }}-{{ version }}.src.tar.gz\n  sha256: f352dbc3221af7012b7b00935f2dfdc9fb67a97d43287d2f6c81c50449d254e0\n\n  patches:\n    # CMake finds iconv_open in glibc, but finds iconv.h from libiconv.\n    # Make sure both are found from one place.\n    - find_iconv.patch\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - bison  # [not win]\n    - cmake\n    - flex  # [not win]\n    - libxml2  # [win]  # xmllint.exe used for testing inside building step\n    - m4  # [not win]\n    - make  # [not win]\n    - miktex  # [win]  # used for testing inside building step\n    - ninja  # [win]\n    - python\n    - texlive-core  # [not win]\n    - winflexbison  # [win]\n    - m2-diffutils  # [win]  # diff.exe used for testing inside building step\n    - m2-libiconv  # [win]  # undeclared dependency of m2-diffutils\n    - m2-libintl  # [win]  # undeclared dependency of m2-diffutils\n    - perl  # [win]  # perl.exe is used for testing inside building step\n  host:\n    - libiconv\n  run:\n    - libiconv\n\ntest:\n  commands:\n    - doxygen --help\n\nabout:\n  home: https://www.doxygen.nl/index.html\n  license: GPL-2.0-only\n  license_file: LICENSE\n  summary: Generate documentation from source code\n\n  description: |\n    Doxygen is the de facto standard tool for\n    generating documentation from annotated C++ sources,\n    but it also supports other popular programming\n    languages such as C, Objective-C, C#, PHP, Java,\n    Python, IDL (Corba, Microsoft, and UNO/OpenOffice flavors),\n    Fortran, VHDL, Tcl, and to some extent D.\n  doc_url: https://www.doxygen.nl/manual/index.html\n  dev_url: https://github.com/doxygen/doxygen\n\nextra:\n  recipe-maintainers:\n    - bluescarni\n    - isuruf\n    - tadeu\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://www.doxygen.nl/files/doxygen-1.9.3.src.tar.gz",
 "version": "1.9.3"
}