{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/375750096.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "igor",
 "hash_type": "sha256",
 "name": "igor",
 "new_version": "0.3",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "igor"
  ]
 },
 "pinning_version": "2020.02.12",
 "raw_meta_yaml": "{% set name = \"igor\" %}\n{% set version = \"0.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: b04ac38c68fb81cf3167a9981dc5a20379112d40268bb72c5a8514dc8051abba\n  patches:\n    - git_patch.patch\n\nbuild:\n  noarch: python\n  number: 3\n  script:\n    - \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - igorbinarywave = bin.igorbinarywave:main\n    - igorpackedexperiment = bin.igorpackedexperiment:main\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - numpy\n    - matplotlib-base\n\ntest:\n  imports:\n    - igor.binarywave\n    - igor.packed\n    - igor.igorpy\n  commands:\n    - igorbinarywave --help\n    - igorpackedexperiment --help\n\nabout:\n  home: http://blog.tremily.us/posts/igor/\n  license: LGPL-3.0\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  summary: 'Python parsers for WaveMetrics Igor Binary Waves and Packed Experiment files'\n  description: |\n    Python parsers for Igor Binary Waves (.ibw) and Packed Experiment\n    (.pxp) files written by WaveMetrics' IGOR Pro software.\n  doc_url: http://git.tremily.us/?p=igor.git;a=blob_plain;f=README;hb=HEAD\n  dev_url: http://blog.tremily.us/posts/igor/\n\nextra:\n  recipe-maintainers:\n    - carlodri\n",
 "smithy_version": "3.6.8",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/i/igor/igor-0.3.tar.gz",
 "version": "0.3"
}