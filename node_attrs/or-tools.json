{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/765724938.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/17a9b13c-8f0c-4e8a-a52a-186436fc5790.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/d6e407d8-ba47-4bc2-9b62-7dee23ea7c2d.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/5e680877-b90a-4a73-be58-ef266f07fb03.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/799564919.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf319"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/804373462.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/853416799.json"
   },
   "data": {
    "bot_rerun": 1647539815.1963983,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "abseil_cpp20211102"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/882060652.json"
   },
   "data": {
    "bot_rerun": 1649692516.27572,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/882737071.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "abseil_cpp20211102"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905811976.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf320"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/906204247.json"
   },
   "data": {
    "bot_rerun": 1649871408.5590909,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/908391513.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909538932.json"
   },
   "data": {
    "bot_rerun": 1652289611.2252805,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/930162782.json"
   },
   "data": {
    "bot_rerun": 1652289611.225478,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/933716323.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "abseil_cpp20210324_20211102"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/934207796.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/935788199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "abseil_cpp20210324_20211102"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943950685.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1008270037.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "abseil_cpp202206230"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1024416690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1052294995.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "abseil_cpp202206230"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "or-tools",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
   "dev_url": "https://github.com/google/or-tools",
   "home": "https://developers.google.com/optimization",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE-2.0.txt",
   "summary": "Google Operations Research Tools (or-tools) python package"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "feedstock-name": "or-tools",
   "recipe-maintainers": [
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   }
  ],
  "package": {
   "name": "or-tools-package",
   "version": "9.2"
  },
  "source": {
   "sha256": "5337935ea1fa010bb62cf0fc8bedd6de07dda77bff3db7a0f6a36c84c7bd58db",
   "url": "https://github.com/google/or-tools/archive/v9.2.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "mypy-protobuf",
    "pkg-config",
    "setuptools",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "abseil-cpp",
    "absl-py",
    "coin-or-cbc",
    "coin-or-cgl",
    "coin-or-clp",
    "coin-or-osi",
    "coin-or-utils",
    "libprotobuf",
    "mypy-protobuf",
    "numpy",
    "pip",
    "python",
    "virtualenv",
    "wheel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "absl-py",
    "mypy-protobuf",
    "numpy",
    "protobuf",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
   "dev_url": "https://github.com/google/or-tools",
   "home": "https://developers.google.com/optimization",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE-2.0.txt",
   "summary": "Google Operations Research Tools (or-tools) python package"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "feedstock-name": "or-tools",
   "recipe-maintainers": [
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim",
    "wolfv",
    "BastianZim"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools)"
    },
    "name": "ortools-cpp",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "pkg-config"
     ],
     "host": [
      "abseil-cpp",
      "libprotobuf",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc",
      "python"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-cpp.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libortools${SHLIB_EXT}",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake",
      "test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake",
      "test -f $PREFIX/include/ortools_export.h",
      "test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h"
     ]
    }
   },
   {
    "about": {
     "description": "OR-Tools is an open source software suite for optimization, tuned for tackling\nthe world's toughest problems in vehicle routing, flows, integer and linear\nprogramming, and constraint programming.\n\nAfter modeling your problem in the programming language of your choice, you\ncan use any of a half dozen solvers to solve it: commercial solvers such as\nGurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\nand award-winning CP-SAT.\n",
     "dev_url": "https://github.com/google/or-tools",
     "home": "https://developers.google.com/optimization",
     "license": "Apache-2.0",
     "license_family": "Apache",
     "license_file": "LICENSE-2.0.txt",
     "summary": "Google Operations Research Tools (or-tools) python package"
    },
    "name": "ortools-python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.18",
      "git",
      "make",
      "mypy-protobuf",
      "pkg-config",
      "setuptools",
      "swig >=4.0"
     ],
     "host": [
      "abseil-cpp",
      "absl-py >=0.13",
      "libprotobuf",
      "numpy",
      "mypy-protobuf",
      "pip >=9.0.1",
      "python >=3.6",
      "virtualenv",
      "wheel",
      "zlib 1.2.11",
      "coin-or-utils",
      "coin-or-osi",
      "coin-or-clp =1.17.4",
      "coin-or-cgl",
      "coin-or-cbc"
     ],
     "run": [
      "absl-py >=0.13",
      "mypy-protobuf",
      "numpy",
      "protobuf",
      "python >=3.6"
     ],
     "run_constrained": [
      "scip =7.0.1"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "${PYTHON} cmake/samples/python/sample.py",
      "${PYTHON} ortools/sat/samples/assignment_sat.py"
     ],
     "imports": [
      "ortools",
      "ortools.linear_solver.pywraplp"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "cmake/samples/python/sample.py",
      "ortools/sat/samples/assignment_sat.py"
     ]
    }
   }
  ],
  "package": {
   "name": "or-tools-package",
   "version": "9.2"
  },
  "source": {
   "sha256": "5337935ea1fa010bb62cf0fc8bedd6de07dda77bff3db7a0f6a36c84c7bd58db",
   "url": "https://github.com/google/or-tools/archive/v9.2.tar.gz"
  }
 },
 "name": "or-tools-package",
 "new_version": "9.4",
 "new_version_attempts": {
  "9.2": 1,
  "9.3": 4,
  "9.4": 0
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ortools-cpp",
   "ortools-python"
  ]
 },
 "pinning_version": "2022.09.10.16.12.32",
 "pre_pr_migrator_attempts": {
  "libprotobuf321": 197
 },
 "pre_pr_migrator_status": {
  "libprotobuf321": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3172239695\">bot CI job</a>): main: ['linux_64_python3.10.____cpython: Encountered problems while solving:\\n  - package libprotobuf-3.21.2-h6239696_0 requires libzlib >=1.2.12,<1.3.0a0, but none of the providers can be installed\\n', 'linux_64_python3.7.____cpython: Encountered problems while solving:\\n  - package libprotobuf-3.21.2-h6239696_0 requires libzlib >=1.2.12,<1.3.0a0, but none of the providers can be installed\\n', 'linux_64_python3.8.____73_pypy: Encountered problems while solving:\\n  - package libprotobuf-3.21.2-h6239696_0 requires libzlib >=1.2.12,<1.3.0a0, but none of the providers can be installed\\n', 'linux_64_python3.8.____cpython: Encountered problems while solving:\\n  - package libprotobuf-3.21.2-h6239696_0 requires libzlib >=1.2.12,<1.3.0a0, but none of the providers can be installed\\n', 'linux_64_python3.9.____73_pypy: Encountered problems while solving:\\n  - package libprotobuf-3.21.2-h6239696_0 requires libzlib >=1.2.12,<1.3.0a0, but none of the providers can be installed\\n', 'linux_64_python3.9.____cpython: Encountered problems while solving:\\n  - package libprotobuf-3.21.2-h6239696_0 requires libzlib >=1.2.12,<1.3.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"or-tools\" %}\n{% set package_name = \"ortools\" %}\n{% set version = \"9.2\" %}\n{% set home = \"https://developers.google.com/optimization\" %}\n{% set license = \"Apache-2.0\" %}\n{% set license_family = \"Apache\" %}\n{% set license_file = \"LICENSE-2.0.txt\" %}\n{% set dev_url = \"https://github.com/google/or-tools\" %}\n\n\npackage:\n  name: {{ name|lower }}-package\n  version: {{ version }}\n\nsource:\n  url: https://github.com/google/or-tools/archive/v{{ version }}.tar.gz\n  sha256: 5337935ea1fa010bb62cf0fc8bedd6de07dda77bff3db7a0f6a36c84c7bd58db\n\n# The meta package\n\nbuild:\n  number: 5\n  skip: true  # [not linux]\n\noutputs:\n  # The core package\n  - name: {{ package_name }}-cpp\n    script: build-cpp.sh\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake >=3.18\n        # Source: https://github.com/google/or-tools/blob/stable/cmake/python.cmake#L6\n        - git\n        - make\n        - pkg-config\n      host:\n        - abseil-cpp\n        - libprotobuf\n        - zlib 1.2.11\n        # coin or deps\n        - coin-or-utils\n        - coin-or-osi\n        - coin-or-clp =1.17.4\n        - coin-or-cgl\n        - coin-or-cbc\n        # Source: https://github.com/google/or-tools/blob/stable/cmake/dependencies/CMakeLists.txt\n        - python\n      run_constrained:\n        - scip =7.0.1\n\n    test:\n      commands:\n        - test -f $PREFIX/lib/libortools${SHLIB_EXT}\n        - test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake\n        - test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake\n        - test -f $PREFIX/include/ortools_export.h\n        - test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h\n\n    about:\n      home: {{ home }}\n      license: {{ license }}\n      license_family: {{ license_family }}\n      license_file: {{ license_file }}\n      summary: Google Operations Research Tools (or-tools)\n      description: |\n        OR-Tools is an open source software suite for optimization, tuned for tackling\n        the world's toughest problems in vehicle routing, flows, integer and linear\n        programming, and constraint programming.\n\n        After modeling your problem in the programming language of your choice, you\n        can use any of a half dozen solvers to solve it: commercial solvers such as\n        Gurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\n        and award-winning CP-SAT.\n      dev_url: {{ dev_url }}\n\n      # The python package.\n  - name: {{ package_name }}-python\n    script: build-python.sh\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake >=3.18\n        - git\n        - make\n        - mypy-protobuf\n        - pkg-config\n        - setuptools\n        - swig >=4.0\n      host:\n        - abseil-cpp\n        - absl-py >=0.13\n        - libprotobuf\n        - numpy\n        - mypy-protobuf\n        - pip >=9.0.1\n        - python >=3.6\n        - virtualenv\n        - wheel\n        - zlib 1.2.11\n        # coin or deps\n        - coin-or-utils\n        - coin-or-osi\n        - coin-or-clp =1.17.4\n        - coin-or-cgl\n        - coin-or-cbc\n      run:\n        - absl-py >=0.13\n        - mypy-protobuf\n        - {{ pin_compatible('numpy') }}\n        - protobuf\n        - python >=3.6\n        # Source: https://github.com/google/or-tools/blob/stable/ortools/python/setup.py.in#L44\n      run_constrained:\n        - scip =7.0.1\n\n    test:\n      imports:\n        - ortools\n        - ortools.linear_solver.pywraplp\n      commands:\n        - pip check\n        - ${PYTHON} cmake/samples/python/sample.py\n        - ${PYTHON} ortools/sat/samples/assignment_sat.py\n      requires:\n        - pip\n      source_files:\n        - cmake/samples/python/sample.py\n        - ortools/sat/samples/assignment_sat.py\n\n    about:\n      home: {{ home }}\n      license: {{ license }}\n      license_family: {{ license_family }}\n      license_file: {{ license_file }}\n      summary: Google Operations Research Tools (or-tools) python package\n      description: |\n        OR-Tools is an open source software suite for optimization, tuned for tackling\n        the world's toughest problems in vehicle routing, flows, integer and linear\n        programming, and constraint programming.\n\n        After modeling your problem in the programming language of your choice, you\n        can use any of a half dozen solvers to solve it: commercial solvers such as\n        Gurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\n        and award-winning CP-SAT.\n      dev_url: {{ dev_url }}\n\nabout:\n  home: {{ home }}\n  license: {{ license }}\n  license_family: {{ license_family }}\n  license_file: {{ license_file }}\n  summary: Google Operations Research Tools (or-tools) python package\n  description: |\n    OR-Tools is an open source software suite for optimization, tuned for tackling\n    the world's toughest problems in vehicle routing, flows, integer and linear\n    programming, and constraint programming.\n\n    After modeling your problem in the programming language of your choice, you\n    can use any of a half dozen solvers to solve it: commercial solvers such as\n    Gurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP\n    and award-winning CP-SAT.\n  dev_url: {{ dev_url }}\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - BastianZim\n  feedstock-name: or-tools\n",
 "req": {
  "__set__": true,
  "elements": [
   "abseil-cpp",
   "absl-py",
   "c_compiler_stub",
   "cmake",
   "coin-or-cbc",
   "coin-or-cgl",
   "coin-or-clp",
   "coin-or-osi",
   "coin-or-utils",
   "cxx_compiler_stub",
   "git",
   "libprotobuf",
   "make",
   "mypy-protobuf",
   "numpy",
   "pip",
   "pkg-config",
   "protobuf",
   "python",
   "setuptools",
   "swig",
   "virtualenv",
   "wheel",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "mypy-protobuf",
    "pkg-config",
    "setuptools",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "abseil-cpp",
    "absl-py",
    "c_compiler_stub",
    "coin-or-cbc",
    "coin-or-cgl",
    "coin-or-clp",
    "coin-or-osi",
    "coin-or-utils",
    "cxx_compiler_stub",
    "libprotobuf",
    "mypy-protobuf",
    "numpy",
    "pip",
    "python",
    "virtualenv",
    "wheel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "absl-py",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "mypy-protobuf",
    "numpy",
    "protobuf",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.18",
    "cxx_compiler_stub",
    "git",
    "make",
    "mypy-protobuf",
    "pkg-config",
    "setuptools",
    "swig >=4.0"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "abseil-cpp",
    "absl-py >=0.13",
    "coin-or-cbc",
    "coin-or-cgl",
    "coin-or-clp =1.17.4",
    "coin-or-osi",
    "coin-or-utils",
    "libprotobuf",
    "mypy-protobuf",
    "numpy",
    "pip >=9.0.1",
    "python",
    "python >=3.6",
    "virtualenv",
    "wheel",
    "zlib 1.2.11"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "absl-py >=0.13",
    "mypy-protobuf",
    "numpy",
    "protobuf",
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/google/or-tools/archive/v9.2.tar.gz",
 "version": "9.2"
}