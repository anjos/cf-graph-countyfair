{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/369196595.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374255899.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/384162197.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/486807613.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/487138139.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500534176.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503437994.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/526493175.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/528751700.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/536062365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/536155619.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/540163235.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544037636.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/613561724.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661893473.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/661990096.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/662031486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "gmatelastoplasticqpot",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library).",
   "dev_url": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "doc_url": "https://tdegeus.github.io/GMatElastoPlasticQPot",
   "home": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library)."
  },
  "build": {
   "number": "0",
   "script_env": "SETUPTOOLS_SCM_PRETEND_VERSION=0.15.1"
  },
  "extra": {
   "recipe-maintainers": [
    "tdegeus"
   ]
  },
  "outputs": [
   {
    "name": "gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "setuptools_scm",
      "xtensor",
      "qpot",
      "gmattensor"
     ],
     "run": [
      "xtensor",
      "qpot",
      "gmattensor"
     ]
    },
    "script": "install.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/GMatElastoPlasticQPot",
      "test -f ${PREFIX}/include/GMatElastoPlasticQPot/Cartesian2d.h",
      "test -f ${PREFIX}/lib/cmake/GMatElastoPlasticQPot/GMatElastoPlasticQPotConfig.cmake"
     ]
    }
   },
   {
    "name": "python-gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "setuptools_scm",
      "numpy",
      "xtensor",
      "qpot",
      "gmattensor",
      "xtensor-python"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "install_python.sh",
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "GMatElastoPlasticQPot"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "gmatelastoplasticqpot-split",
   "version": "0.15.1"
  },
  "source": {
   "sha256": "8b3d354096b20b0080288de2685b2a2c330235bc268a9e054363bf31c4a92db6",
   "url": "https://github.com/tdegeus/GMatElastoPlasticQPot/archive/v0.15.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "pip",
    "python",
    "qpot",
    "setuptools_scm",
    "xtensor",
    "xtensor-python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "python",
    "qpot",
    "xtensor"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library).",
   "dev_url": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "doc_url": "https://tdegeus.github.io/GMatElastoPlasticQPot",
   "home": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library)."
  },
  "build": {
   "number": "0",
   "script_env": "SETUPTOOLS_SCM_PRETEND_VERSION=0.15.1"
  },
  "extra": {
   "recipe-maintainers": [
    "tdegeus",
    "tdegeus",
    "tdegeus"
   ]
  },
  "outputs": [
   {
    "name": "gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "setuptools_scm",
      "xtensor",
      "qpot",
      "gmattensor"
     ],
     "run": [
      "xtensor",
      "qpot",
      "gmattensor"
     ]
    },
    "script": "install.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/GMatElastoPlasticQPot",
      "test -f ${PREFIX}/include/GMatElastoPlasticQPot/Cartesian2d.h",
      "test -f ${PREFIX}/lib/cmake/GMatElastoPlasticQPot/GMatElastoPlasticQPotConfig.cmake"
     ]
    }
   },
   {
    "name": "python-gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "setuptools_scm",
      "numpy",
      "xtensor",
      "qpot",
      "gmattensor",
      "xtensor-python"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "install_python.sh",
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "GMatElastoPlasticQPot"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "name": "gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "setuptools_scm",
      "xtensor",
      "qpot",
      "gmattensor"
     ],
     "run": [
      "xtensor",
      "qpot",
      "gmattensor"
     ]
    },
    "script": "install.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/GMatElastoPlasticQPot",
      "test -f ${PREFIX}/include/GMatElastoPlasticQPot/Cartesian2d.h",
      "test -f ${PREFIX}/lib/cmake/GMatElastoPlasticQPot/GMatElastoPlasticQPotConfig.cmake"
     ]
    }
   },
   {
    "name": "python-gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "setuptools_scm",
      "numpy",
      "xtensor",
      "qpot",
      "gmattensor",
      "xtensor-python"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "install_python.sh",
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "GMatElastoPlasticQPot"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "name": "gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [
      "setuptools_scm",
      "xtensor",
      "qpot",
      "gmattensor"
     ],
     "run": [
      "xtensor",
      "qpot",
      "gmattensor"
     ]
    },
    "script": "install.bat",
    "test": {
     "commands": [
      "if exist %LIBRARY_PREFIX%\\include\\GMatElastoPlasticQPot\\Cartesian2d.h (exit 0) else (exit 1)",
      "if exist %LIBRARY_PREFIX%\\lib\\cmake\\GMatElastoPlasticQPotConfig.cmake (exit 0) else (exit 1)"
     ]
    }
   },
   {
    "name": "python-gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "setuptools_scm",
      "numpy",
      "xtensor",
      "qpot",
      "gmattensor",
      "xtensor-python",
      "pyxtensor"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "install_python.bat",
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "GMatElastoPlasticQPot"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "gmatelastoplasticqpot-split",
   "version": "0.15.1"
  },
  "source": {
   "sha256": "8b3d354096b20b0080288de2685b2a2c330235bc268a9e054363bf31c4a92db6",
   "url": "https://github.com/tdegeus/GMatElastoPlasticQPot/archive/v0.15.1.tar.gz"
  }
 },
 "name": "gmatelastoplasticqpot-split",
 "new_version": "0.15.1",
 "new_version_attempts": {
  "0.10.0": 1,
  "0.11.0": 1,
  "0.12.0": 1,
  "0.13.0": 1,
  "0.15.0": 1,
  "0.15.1": 1,
  "0.6.0": 1,
  "0.6.1": 1,
  "0.6.4": 1,
  "0.7.0": 1,
  "0.8.0": 1,
  "0.9.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library).",
   "dev_url": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "doc_url": "https://tdegeus.github.io/GMatElastoPlasticQPot",
   "home": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library)."
  },
  "build": {
   "number": "0",
   "script_env": "SETUPTOOLS_SCM_PRETEND_VERSION=0.15.1"
  },
  "extra": {
   "recipe-maintainers": [
    "tdegeus"
   ]
  },
  "outputs": [
   {
    "name": "gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "setuptools_scm",
      "xtensor",
      "qpot",
      "gmattensor"
     ],
     "run": [
      "xtensor",
      "qpot",
      "gmattensor"
     ]
    },
    "script": "install.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/GMatElastoPlasticQPot",
      "test -f ${PREFIX}/include/GMatElastoPlasticQPot/Cartesian2d.h",
      "test -f ${PREFIX}/lib/cmake/GMatElastoPlasticQPot/GMatElastoPlasticQPotConfig.cmake"
     ]
    }
   },
   {
    "name": "python-gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "setuptools_scm",
      "numpy",
      "xtensor",
      "qpot",
      "gmattensor",
      "xtensor-python"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "install_python.sh",
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "GMatElastoPlasticQPot"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "gmatelastoplasticqpot-split",
   "version": "0.15.1"
  },
  "source": {
   "sha256": "8b3d354096b20b0080288de2685b2a2c330235bc268a9e054363bf31c4a92db6",
   "url": "https://github.com/tdegeus/GMatElastoPlasticQPot/archive/v0.15.1.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "pip",
    "python",
    "qpot",
    "setuptools_scm",
    "xtensor",
    "xtensor-python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "python",
    "qpot",
    "xtensor"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gmatelastoplasticqpot",
   "python-gmatelastoplasticqpot"
  ]
 },
 "pinning_version": "2021.06.03.19.30.35",
 "raw_meta_yaml": "{% set org = \"tdegeus\" %}\n{% set name = \"GMatElastoPlasticQPot\" %}\n{% set version = \"0.15.1\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ org }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 8b3d354096b20b0080288de2685b2a2c330235bc268a9e054363bf31c4a92db6\n\nbuild:\n  number: 0\n  script_env: SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n\noutputs:\n\n  - name: {{ name|lower }}\n\n    script: install.sh  # [unix]\n    script: install.bat  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - make  # [unix]\n      host:\n        - setuptools_scm\n        - xtensor\n        - qpot\n        - gmattensor\n      run:\n        - xtensor\n        - qpot\n        - gmattensor\n\n    test:\n      commands:\n        - test -d ${PREFIX}/include/{{ name }}  # [unix]\n        - test -f ${PREFIX}/include/{{ name }}/Cartesian2d.h  # [unix]\n        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}Config.cmake  # [unix]\n        - if exist %LIBRARY_PREFIX%\\include\\{{ name }}\\Cartesian2d.h (exit 0) else (exit 1)  # [win]\n        - if exist %LIBRARY_PREFIX%\\lib\\cmake\\{{ name }}Config.cmake (exit 0) else (exit 1)  # [win]\n\n  - name: python-{{ name|lower }}\n\n    script: install_python.sh  # [unix]\n    script: install_python.bat  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      host:\n        - python\n        - pip\n        - setuptools_scm\n        - numpy\n        - xtensor\n        - qpot\n        - gmattensor\n        - xtensor-python\n        - pyxtensor  # [win]\n      run:\n        - python\n        - numpy\n\n    test:\n      imports:\n        - {{ name }}\n      commands:\n        - pip check\n      requires:\n        - pip\n\nabout:\n  home: https://github.com/{{ org }}/{{ name }}\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library).\n  description: Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library).\n  doc_url: https://{{ org }}.github.io/{{ name }}\n  dev_url: https://github.com/{{ org }}/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - tdegeus\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "gmattensor",
   "make",
   "ninja",
   "numpy",
   "pip",
   "python",
   "pyxtensor",
   "qpot",
   "setuptools_scm",
   "xtensor",
   "xtensor-python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "gmattensor",
    "numpy",
    "pip",
    "python",
    "pyxtensor",
    "qpot",
    "setuptools_scm",
    "xtensor",
    "xtensor-python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "gmattensor",
    "numpy",
    "python",
    "qpot",
    "xtensor"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "pip",
    "python",
    "pyxtensor",
    "qpot",
    "setuptools_scm",
    "xtensor",
    "xtensor-python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "python",
    "qpot",
    "xtensor"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/tdegeus/GMatElastoPlasticQPot/archive/v0.15.1.tar.gz",
 "version": "0.15.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library).",
   "dev_url": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "doc_url": "https://tdegeus.github.io/GMatElastoPlasticQPot",
   "home": "https://github.com/tdegeus/GMatElastoPlasticQPot",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Elasto-plastic model based on a manifold of quadratic potentials (C++ header-only library)."
  },
  "build": {
   "number": "0",
   "script_env": "SETUPTOOLS_SCM_PRETEND_VERSION=0.15.1"
  },
  "extra": {
   "recipe-maintainers": [
    "tdegeus"
   ]
  },
  "outputs": [
   {
    "name": "gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [
      "setuptools_scm",
      "xtensor",
      "qpot",
      "gmattensor"
     ],
     "run": [
      "xtensor",
      "qpot",
      "gmattensor"
     ]
    },
    "script": "install.bat",
    "test": {
     "commands": [
      "if exist %LIBRARY_PREFIX%\\include\\GMatElastoPlasticQPot\\Cartesian2d.h (exit 0) else (exit 1)",
      "if exist %LIBRARY_PREFIX%\\lib\\cmake\\GMatElastoPlasticQPotConfig.cmake (exit 0) else (exit 1)"
     ]
    }
   },
   {
    "name": "python-gmatelastoplasticqpot",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "pip",
      "setuptools_scm",
      "numpy",
      "xtensor",
      "qpot",
      "gmattensor",
      "xtensor-python",
      "pyxtensor"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "install_python.bat",
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "GMatElastoPlasticQPot"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "gmatelastoplasticqpot-split",
   "version": "0.15.1"
  },
  "source": {
   "sha256": "8b3d354096b20b0080288de2685b2a2c330235bc268a9e054363bf31c4a92db6",
   "url": "https://github.com/tdegeus/GMatElastoPlasticQPot/archive/v0.15.1.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "pip",
    "python",
    "pyxtensor",
    "qpot",
    "setuptools_scm",
    "xtensor",
    "xtensor-python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gmattensor",
    "numpy",
    "python",
    "qpot",
    "xtensor"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}