{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199916537.json"
   },
   "data": {
    "bot_rerun": 1597087670.0370047,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/220519903.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326339990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335809573.json"
   },
   "data": {
    "bot_rerun": 1599676940.1769843,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/344831233.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/18d3fed5-4694-431e-91e5-4e1bc4ab707c.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/399299520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444336964.json"
   },
   "data": {
    "bot_rerun": 1599676940.1789355,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/483051969.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/483059297.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/500990768.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/508247785.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/541112050.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553081582.json"
   },
   "data": {
    "bot_rerun": 1614843366.7816808,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/584589424.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/637437210.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/680555095.json"
   },
   "data": {
    "bot_rerun": 1636131840.2280033,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/709624266.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/744545045.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774255598.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774467361.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/795203387.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/904282646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pulp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/coin-or/pulp",
   "doc_url": "https://pythonhosted.org/PuLP/",
   "home": "https://github.com/coin-or/pulp",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "PuLP is an LP modeler written in python. PuLP can generate MPS or LP files\nand call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.\n"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum"
   ]
  },
  "package": {
   "name": "pulp",
   "version": "2.6.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python"
   ]
  },
  "source": {
   "sha256": "4b4f7e1e954453e1b233720be23aea2f10ff068a835ac10c090a93d8e2eb2e8d",
   "url": "https://pypi.io/packages/source/P/PuLP/PuLP-2.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\""
   ],
   "imports": [
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amply",
    "coincbc",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/coin-or/pulp",
   "doc_url": "https://pythonhosted.org/PuLP/",
   "home": "https://github.com/coin-or/pulp",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "PuLP is an LP modeler written in python. PuLP can generate MPS or LP files\nand call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.\n"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum"
   ]
  },
  "package": {
   "name": "pulp",
   "version": "2.6.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python"
   ]
  },
  "source": {
   "sha256": "4b4f7e1e954453e1b233720be23aea2f10ff068a835ac10c090a93d8e2eb2e8d",
   "url": "https://pypi.io/packages/source/P/PuLP/PuLP-2.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\""
   ],
   "imports": [
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "pulp",
 "new_version": "2.6.0",
 "new_version_attempts": {
  "2.1": 1,
  "2.2": 1,
  "2.3": 1,
  "2.3.1": 1,
  "2.4": 1,
  "2.5.0": 1,
  "2.5.1": 1,
  "2.6.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/coin-or/pulp",
   "doc_url": "https://pythonhosted.org/PuLP/",
   "home": "https://github.com/coin-or/pulp",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "PuLP is an LP modeler written in python. PuLP can generate MPS or LP files\nand call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.\n"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum"
   ]
  },
  "package": {
   "name": "pulp",
   "version": "2.6.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python"
   ]
  },
  "source": {
   "sha256": "4b4f7e1e954453e1b233720be23aea2f10ff068a835ac10c090a93d8e2eb2e8d",
   "url": "https://pypi.io/packages/source/P/PuLP/PuLP-2.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\""
   ],
   "imports": [
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amply",
    "coincbc",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/coin-or/pulp",
   "doc_url": "https://pythonhosted.org/PuLP/",
   "home": "https://github.com/coin-or/pulp",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "PuLP is an LP modeler written in python. PuLP can generate MPS or LP files\nand call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.\n"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv",
    "rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum"
   ]
  },
  "package": {
   "name": "pulp",
   "version": "2.6.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python",
    "amply >=0.1.2",
    "coincbc",
    "python"
   ]
  },
  "source": {
   "sha256": "4b4f7e1e954453e1b233720be23aea2f10ff068a835ac10c090a93d8e2eb2e8d",
   "url": "https://pypi.io/packages/source/P/PuLP/PuLP-2.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\""
   ],
   "imports": [
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amply",
    "coincbc",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pulp"
  ]
 },
 "pinning_version": "2022.04.08.18.53.04",
 "raw_meta_yaml": "{% set version = \"2.6.0\" %}\n\npackage:\n  name: pulp\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/P/PuLP/PuLP-{{ version }}.tar.gz\n  sha256: 4b4f7e1e954453e1b233720be23aea2f10ff068a835ac10c090a93d8e2eb2e8d\n\nbuild:\n  number: 0\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n    - rm \"${SP_DIR}/pulp/solverdir/CoinMP.dll\"  # [not win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - pip\n    - python\n  run:\n    - amply >=0.1.2\n    # We use glpk on Windows because coincbc is only packaged on Unix, currently.\n    - coincbc  # [not win]\n    - glpk  # [win]\n    - python\n\ntest:\n  imports:\n    - pulp\n    - pulp.solverdir\n  commands:\n    - pip check\n    - python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"\n  requires:\n    - pip\n\nabout:\n  summary: |\n    PuLP is an LP modeler written in python. PuLP can generate MPS or LP files\n    and call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.\n  home: https://github.com/coin-or/pulp\n  license: MIT\n  license_file: LICENSE\n  doc_url: https://pythonhosted.org/PuLP/\n  dev_url: https://github.com/coin-or/pulp\n  license_family: MIT\n\nextra:\n  recipe-maintainers:\n    - johanneskoester\n    - christopher-schroeder\n    - venaturum\n",
 "req": {
  "__set__": true,
  "elements": [
   "amply",
   "coincbc",
   "glpk",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amply",
    "coincbc",
    "glpk",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "time": 1568135287.9697814,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amply >=0.1.2",
    "coincbc",
    "glpk",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/P/PuLP/PuLP-2.6.0.tar.gz",
 "version": "2.6.0",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/coin-or/pulp",
   "doc_url": "https://pythonhosted.org/PuLP/",
   "home": "https://github.com/coin-or/pulp",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "PuLP is an LP modeler written in python. PuLP can generate MPS or LP files\nand call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear problems.\n"
  },
  "build": {
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum",
    "johanneskoester",
    "christopher-schroeder",
    "venaturum"
   ]
  },
  "package": {
   "name": "pulp",
   "version": "2.6.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python",
    "amply >=0.1.2",
    "glpk",
    "python"
   ]
  },
  "source": {
   "sha256": "4b4f7e1e954453e1b233720be23aea2f10ff068a835ac10c090a93d8e2eb2e8d",
   "url": "https://pypi.io/packages/source/P/PuLP/PuLP-2.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\"",
    "pip check",
    "python -c \"import pulp; assert pulp.LpSolverDefault, 'default solver not available'\""
   ],
   "imports": [
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir",
    "pulp",
    "pulp.solverdir"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amply",
    "glpk",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}