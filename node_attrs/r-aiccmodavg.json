{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/417585214.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444150804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3_0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/474931636.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3_1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/652608319.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-aiccmodavg",
 "hash_type": "sha256",
 "name": "r-aiccmodavg",
 "new_version": "2.3_1",
 "new_version_attempts": {
  "2.3_0": 1,
  "2.3_1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-aiccmodavg"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = \"2.3-1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-aiccmodavg\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/AICcmodavg_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/AICcmodavg/AICcmodavg_{{ version }}.tar.gz\n  sha256: d0517da15a38e9b1df20fa73f5342b586624e65792d266e7dff278ad7fc458b0\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - liblapack\n    - r-base\n    - r-mass\n    - r-matrix\n    - r-vgam\n    - r-lattice\n    - r-nlme\n    - r-survival\n    - r-unmarked\n    - r-xtable\n  run:\n    - r-base\n    - r-mass\n    - r-matrix\n    - r-vgam\n    - r-lattice\n    - r-nlme\n    - r-survival\n    - r-unmarked\n    - r-xtable\n\ntest:\n  commands:\n    - $R -e \"library('AICcmodavg')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('AICcmodavg')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=AICcmodavg\n  license: GPL-2.0-only\n  summary: Functions to implement model selection and multimodel inference based on Akaike's information criterion (AIC) and the second-order AIC (AICc), as well as their quasi-likelihood counterparts (QAIC, QAICc) from various model object classes.  The package implements classic model averaging for a given parameter of\n    interest or predicted values, as well as a shrinkage version of model averaging parameter estimates or effect sizes.  The package includes diagnostics and goodness-of-fit statistics for certain model types including those of 'unmarkedFit' classes estimating demographic parameters after accounting for imperfect detection\n    probabilities.  Some functions also allow the creation of model selection tables for Bayesian models of the 'bugs', 'rjags', and 'jagsUI' classes.  Functions also implement model selection using BIC.  Objects following model selection and multimodel inference can be formatted to LaTeX using 'xtable' methods included\n    in the package.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: AICcmodavg\n# Type: Package\n# Title: Model Selection and Multimodel Inference Based on (Q)AIC(c)\n# Version: 2.2-2\n# Date: 2019-05-29\n# Author: Marc J. Mazerolle <marc.mazerolle@sbf.ulaval.ca> and portions of code contributed by Dan Linden.\n# Maintainer: Marc J. Mazerolle <marc.mazerolle@sbf.ulaval.ca>\n# Depends: R (>= 3.2.0)\n# Imports: methods, stats, graphics, lattice, MASS, Matrix, nlme, stats4, survival, unmarked, VGAM, xtable\n# Suggests: betareg, coxme, fitdistrplus, glmmTMB, lavaan, lme4, maxlike, nnet, ordinal, pscl, R2jags, R2OpenBUGS, R2WinBUGS, jagsUI, lmerTest\n# Description: Functions to implement model selection and multimodel inference based on Akaike's information criterion (AIC) and the second-order AIC (AICc), as well as their quasi-likelihood counterparts (QAIC, QAICc) from various model object classes.  The package implements classic model averaging for a given parameter of interest or predicted values, as well as a shrinkage version of model averaging parameter estimates or effect sizes.  The package includes diagnostics and goodness-of-fit statistics for certain model types including those of 'unmarkedFit' classes estimating demographic parameters after accounting for imperfect detection probabilities.  Some functions also allow the creation of model selection tables for Bayesian models of the 'bugs', 'rjags', and 'jagsUI' classes.  Functions also implement model selection using BIC.  Objects following model selection and multimodel inference can be formatted to LaTeX using 'xtable' methods included in the package.\n# License: GPL (>= 2)\n# LazyLoad: yes\n# Repository: CRAN\n# NeedsCompilation: no\n# Packaged: 2019-05-29 19:23:10 UTC; mazerolm\n# Date/Publication: 2019-05-29 21:20:03 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/AICcmodavg_2.3-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/AICcmodavg/AICcmodavg_2.3-1.tar.gz",
  "https://cran.r-project.org/src/contrib/AICcmodavg_2.3-1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/AICcmodavg/AICcmodavg_2.3-1.tar.gz"
 ],
 "version": "2.3_1"
}