{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/440886899.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/440888250.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442292201.json"
   },
   "data": {
    "bot_rerun": 1593603077.20115,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/442858806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444769654.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503096946.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554193568.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/573496273.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/589497544.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/726067930.json"
   },
   "data": {
    "bot_rerun": 1630623938.718296,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/726539114.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/731482184.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/733970533.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/735461687.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "stitchm",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "StitchM stitches together mosaic images taken in Cockpit (Micron)\ninto a universally readable format, currently .ome.tiff.\nThe current output is an 16bit greyscale image when stitching the mosaic.\nMarkers exported from Cockpit can be added as rectangular ROIs within the OME\nmetadata stored in the image header. ROIs can be imported and displayed using\nbioformats in FIJI/ImageJ.\nMainly for command-line use.\n",
   "dev_url": "https://github.com/DiamondLightSource/StitchM",
   "doc_url": "https://github.com/DiamondLightSource/StitchM/blob/master/README.md",
   "home": "https://github.com/DiamondLightSource/StitchM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Stitches mosaic images from Cockpit (Micron)"
  },
  "build": {
   "entry_points": [
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish"
   ]
  },
  "package": {
   "name": "stitchm",
   "version": "1.3.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0"
   ]
  },
  "source": {
   "sha256": "bf9d07253123e4563ab6e087695f8f8411efba9ec902132dc57fce4bfcce8b37",
   "url": "https://github.com/DiamondLightSource/StitchM/archive/v1.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv"
   ],
   "imports": [
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m"
   ],
   "source_files": [
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mrcfile",
    "numpy",
    "omexml-dls",
    "python",
    "tifffile"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "StitchM stitches together mosaic images taken in Cockpit (Micron)\ninto a universally readable format, currently .ome.tiff.\nThe current output is an 16bit greyscale image when stitching the mosaic.\nMarkers exported from Cockpit can be added as rectangular ROIs within the OME\nmetadata stored in the image header. ROIs can be imported and displayed using\nbioformats in FIJI/ImageJ.\nMainly for command-line use.\n",
   "dev_url": "https://github.com/DiamondLightSource/StitchM",
   "doc_url": "https://github.com/DiamondLightSource/StitchM/blob/master/README.md",
   "home": "https://github.com/DiamondLightSource/StitchM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Stitches mosaic images from Cockpit (Micron)"
  },
  "build": {
   "entry_points": [
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish"
   ]
  },
  "package": {
   "name": "stitchm",
   "version": "1.3.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "pywin32",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "pywin32",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "pywin32"
   ]
  },
  "source": {
   "sha256": "bf9d07253123e4563ab6e087695f8f8411efba9ec902132dc57fce4bfcce8b37",
   "url": "https://github.com/DiamondLightSource/StitchM/archive/v1.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv"
   ],
   "imports": [
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "win32com.client",
    "stitch_m",
    "win32com.client",
    "stitch_m",
    "win32com.client"
   ],
   "source_files": [
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests"
   ]
  }
 },
 "name": "stitchm",
 "new_version": "1.4.0",
 "new_version_attempts": {
  "1.0.2": 2,
  "1.0.3": 1,
  "1.1.0": 1,
  "1.2.0": 1,
  "1.2.1": 2,
  "1.2.2": 1,
  "1.2.3": 1,
  "1.3.0": 1,
  "1.4.0": 2
 },
 "new_version_errors": {
  "1.4.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.4.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/DiamondLightSource/{{ name }}/archive/v{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "StitchM stitches together mosaic images taken in Cockpit (Micron)\ninto a universally readable format, currently .ome.tiff.\nThe current output is an 16bit greyscale image when stitching the mosaic.\nMarkers exported from Cockpit can be added as rectangular ROIs within the OME\nmetadata stored in the image header. ROIs can be imported and displayed using\nbioformats in FIJI/ImageJ.\nMainly for command-line use.\n",
   "dev_url": "https://github.com/DiamondLightSource/StitchM",
   "doc_url": "https://github.com/DiamondLightSource/StitchM/blob/master/README.md",
   "home": "https://github.com/DiamondLightSource/StitchM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Stitches mosaic images from Cockpit (Micron)"
  },
  "build": {
   "entry_points": [
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thomasmfish",
    "thomasmfish",
    "thomasmfish",
    "thomasmfish"
   ]
  },
  "package": {
   "name": "stitchm",
   "version": "1.3.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0"
   ]
  },
  "source": {
   "sha256": "bf9d07253123e4563ab6e087695f8f8411efba9ec902132dc57fce4bfcce8b37",
   "url": "https://github.com/DiamondLightSource/StitchM/archive/v1.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv"
   ],
   "imports": [
    "stitch_m",
    "stitch_m",
    "stitch_m",
    "stitch_m"
   ],
   "source_files": [
    "src/tests",
    "src/tests",
    "src/tests",
    "src/tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mrcfile",
    "numpy",
    "omexml-dls",
    "python",
    "tifffile"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "pinning_version": "2021.09.15.18.54.07",
 "raw_meta_yaml": "{% set name = \"StitchM\" %}\n{% set version = \"1.3.1\" %}\n{% set import_name = \"stitch_m\" %}\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/DiamondLightSource/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: bf9d07253123e4563ab6e087695f8f8411efba9ec902132dc57fce4bfcce8b37\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - {{ name }} = {{ import_name }}.scripts.commandline:main\n    - {{ name | lower }} = {{ import_name }}.scripts.commandline:main\n  skip: true  # [py<37]\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - numpy >=1.21.1\n    - tifffile >=2020.9.30\n    - mrcfile >=1.1.2\n    - omexml-dls >=1.1.0\n    - pywin32  # [win]\n\ntest:\n  imports:\n    - {{ import_name }}\n    - win32com.client  # [win]\n  source_files:\n    - src/tests\n  commands:\n    - python -m unittest discover -s src -p \"test_*.py\" -vv\n\nabout:\n  home: https://github.com/DiamondLightSource/{{ name }}\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Stitches mosaic images from Cockpit (Micron)\n\n  description: |\n    StitchM stitches together mosaic images taken in Cockpit (Micron)\n    into a universally readable format, currently .ome.tiff.\n    The current output is an 16bit greyscale image when stitching the mosaic.\n    Markers exported from Cockpit can be added as rectangular ROIs within the OME\n    metadata stored in the image header. ROIs can be imported and displayed using\n    bioformats in FIJI/ImageJ.\n    Mainly for command-line use.\n  doc_url: https://github.com/DiamondLightSource/{{ name }}/blob/master/README.md\n  dev_url: https://github.com/DiamondLightSource/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - thomasmfish\n",
 "req": {
  "__set__": true,
  "elements": [
   "mrcfile",
   "numpy",
   "omexml-dls",
   "pip",
   "python",
   "pywin32",
   "tifffile"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mrcfile",
    "numpy",
    "omexml-dls",
    "python",
    "pywin32",
    "tifffile"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.12",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mrcfile >=1.1.2",
    "numpy >=1.21.1",
    "omexml-dls >=1.1.0",
    "python",
    "pywin32",
    "tifffile >=2020.9.30"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/DiamondLightSource/StitchM/archive/v1.3.1.tar.gz",
 "version": "1.3.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "StitchM stitches together mosaic images taken in Cockpit (Micron)\ninto a universally readable format, currently .ome.tiff.\nThe current output is an 16bit greyscale image when stitching the mosaic.\nMarkers exported from Cockpit can be added as rectangular ROIs within the OME\nmetadata stored in the image header. ROIs can be imported and displayed using\nbioformats in FIJI/ImageJ.\nMainly for command-line use.\n",
   "dev_url": "https://github.com/DiamondLightSource/StitchM",
   "doc_url": "https://github.com/DiamondLightSource/StitchM/blob/master/README.md",
   "home": "https://github.com/DiamondLightSource/StitchM",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Stitches mosaic images from Cockpit (Micron)"
  },
  "build": {
   "entry_points": [
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main",
    "StitchM = stitch_m.scripts.commandline:main",
    "stitchm = stitch_m.scripts.commandline:main"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thomasmfish",
    "thomasmfish",
    "thomasmfish"
   ]
  },
  "package": {
   "name": "stitchm",
   "version": "1.3.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "pywin32",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "pywin32",
    "python",
    "numpy >=1.21.1",
    "tifffile >=2020.9.30",
    "mrcfile >=1.1.2",
    "omexml-dls >=1.1.0",
    "pywin32"
   ]
  },
  "source": {
   "sha256": "bf9d07253123e4563ab6e087695f8f8411efba9ec902132dc57fce4bfcce8b37",
   "url": "https://github.com/DiamondLightSource/StitchM/archive/v1.3.1.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv",
    "python -m unittest discover -s src -p \"test_*.py\" -vv"
   ],
   "imports": [
    "stitch_m",
    "win32com.client",
    "stitch_m",
    "win32com.client",
    "stitch_m",
    "win32com.client"
   ],
   "source_files": [
    "src/tests",
    "src/tests",
    "src/tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "mrcfile",
    "numpy",
    "omexml-dls",
    "python",
    "pywin32",
    "tifffile"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}