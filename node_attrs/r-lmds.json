{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/413005980.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/654018652.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-lmds",
 "hash_type": "sha256",
 "name": "r-lmds",
 "new_version": "0.1.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-lmds"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = '0.1.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-lmds\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/lmds_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/lmds/lmds_{{ version }}.tar.gz\n  sha256: c5c480f8e20aadb32f19c6f22f12a3e90ad032d165a388c1ee9c0b66c1fa0a8c\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-matrix\n    - r-assertthat\n    - r-dynutils >=1.0.3\n    - r-irlba\n  run:\n    - r-base\n    - r-matrix\n    - r-assertthat\n    - r-dynutils >=1.0.3\n    - r-irlba\n\ntest:\n  commands:\n    - $R -e \"library('lmds')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('lmds')\\\"\"  # [win]\n\nabout:\n  home: http://github.com/dynverse/lmds\n  license: GPL-3.0-only\n  summary: A fast dimensionality reduction method scaleable to large numbers of samples. Landmark\n    Multi-Dimensional Scaling (LMDS) is an extension of classical Torgerson MDS, but\n    rather than calculating a complete distance matrix between all pairs of samples,\n    only the distances between a set of landmarks and the samples are calculated.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: lmds\n# Type: Package\n# Title: Landmark Multi-Dimensional Scaling\n# Version: 0.1.0\n# Authors@R: c( person( \"Robrecht\", \"Cannoodt\", email = \"rcannood@gmail.com\", role = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0003-3641-729X\", github = \"rcannood\") ), person( \"Wouter\", \"Saelens\", email = \"wouter.saelens@gmail.com\", role = c(\"aut\"), comment = c(ORCID = \"0000-0002-7114-6248\", github = \"zouter\") ) )\n# Description: A fast dimensionality reduction method scaleable to large numbers of samples. Landmark Multi-Dimensional Scaling (LMDS) is an extension of classical Torgerson MDS, but rather than calculating a complete distance matrix between all pairs of samples, only the distances between a set of landmarks and the samples are calculated.\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# Imports: assertthat, dynutils (>= 1.0.3), irlba, Matrix\n# Suggests: testthat\n# RoxygenNote: 6.1.1\n# URL: http://github.com/dynverse/lmds\n# BugReports: https://github.com/dynverse/lmds/issues\n# Collate: 'cmdscale_landmarks.R' 'select_landmarks.R' 'lmds.R' 'package.R'\n# NeedsCompilation: no\n# Packaged: 2019-09-19 12:12:04 UTC; rcannood\n# Author: Robrecht Cannoodt [aut, cre] (<https://orcid.org/0000-0003-3641-729X>, rcannood), Wouter Saelens [aut] (<https://orcid.org/0000-0002-7114-6248>, zouter)\n# Maintainer: Robrecht Cannoodt <rcannood@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2019-09-27 09:10:02 UTC\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/lmds_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lmds/lmds_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/lmds_0.1.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/lmds/lmds_0.1.0.tar.gz"
 ],
 "version": "0.1.0"
}