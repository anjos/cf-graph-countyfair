{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/619277489.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/846239876.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "soci",
 "hash_type": "sha256",
 "name": "soci",
 "new_version": "4.0.3",
 "new_version_attempts": {
  "4.0.2": 1,
  "4.0.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "soci-core",
   "soci-mysql",
   "soci-postgresql",
   "soci-sqlite"
  ]
 },
 "pinning_version": "2022.02.10.16.19.14",
 "raw_meta_yaml": "{% set name = \"soci\" %}\n{% set version = \"4.0.3\" %}\n{% set version_major = version.split(\".\")[0] %}\n{% set version_minor = version.split(\".\")[1] %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/SOCI/soci/archive/v{{ version }}.tar.gz\n  sha256: 4b1ff9c8545c5d802fbe06ee6cd2886630e5c03bf740e269bb625b45cf934928\n\nbuild:\n  number: 1\n\noutputs:\n  - name: soci-core\n    script: build_soci.sh  # [unix]\n    script: bld_soci.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - make  # [unix]\n        - ninja  # [win]\n    run_exports:\n      - {{ pin_subpackage('soci-core', max_pin='x.x') }}\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libsoci_core.so  # [linux]\n        - test -f ${PREFIX}/lib/libsoci_core.dylib  # [osx]\n        - if exist %LIBRARY_PREFIX%\\bin\\soci_core_{{ version_major }}_{{ version_minor }}.dll (exit 0) else (exit 1)  # [win]\n\n    about:\n      summary: SOCI is a general purpose database written in C++.\n      doc_source_url: http://soci.sourceforge.net/doc/release/4.0/\n\n  - name: soci-sqlite\n    script: build_soci.sh  # [unix]\n    script: bld_soci.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - make  # [unix]\n        - ninja  # [win]\n      host:\n        - soci-core\n        - sqlite\n      run:\n        # even though soci-core has a_run exports section\n        # it seems that it is not taken into account when rendering\n        # the recipe.\n        - {{ pin_compatible('soci-core', max_pin='x.x') }}\n\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libsoci_sqlite3.so  # [linux]\n        - test -f ${PREFIX}/lib/libsoci_sqlite3.dylib  # [osx]\n        - if exist %LIBRARY_PREFIX%\\bin\\soci_sqlite3_{{ version_major }}_{{ version_minor }}.dll (exit 0) else (exit 1)  # [win]\n\n    about:\n      summary: soci-sqlite3 contains SOCI core and the implementation of SQLite3 backend.\n      doc_source_url: http://soci.sourceforge.net/doc/release/4.0/\n\n  - name: soci-mysql\n    script: build_soci.sh  # [unix]\n    script: bld_soci.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - make  # [unix]\n        - ninja  # [win]\n      host:\n        - soci-core\n        - mysql-devel\n      run:\n        # even though soci-core has a_run exports section\n        # it seems that it is not taken into account when rendering\n        # the recipe.\n        - {{ pin_compatible('soci-core', max_pin='x.x') }}\n\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libsoci_mysql.so  # [linux]\n        - test -f ${PREFIX}/lib/libsoci_mysql.dylib  # [osx]\n        - if exist %LIBRARY_PREFIX%\\bin\\soci_mysql_{{ version_major }}_{{ version_minor }}.dll (exit 0) else (exit 1)  # [win]\n\n    about:\n      summary: soci-mysql contains SOCI core and the implementation of MySQL backend.\n      doc_source_url: http://soci.sourceforge.net/doc/release/4.0/\n\n  - name: soci-postgresql\n    script: build_soci.sh  # [unix]\n    build:\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - make  # [unix]\n        - ninja  # [win]\n      host:\n        - soci-core\n        - libpq\n      run:\n        - libpq\n        # even though soci-core has a_run exports section\n        # it seems that it is not taken into account when rendering\n        # the recipe.\n        - {{ pin_compatible('soci-core', max_pin='x.x') }}\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libsoci_postgresql.so  # [linux]\n        - test -f ${PREFIX}/lib/libsoci_postgresql.dylib  # [osx]\n        - if exist %LIBRARY_PREFIX%\\bin\\soci_postgresql_{{ version_major }}_{{ version_minor }}.dll (exit 0) else (exit 1)  # [win]\n\n    about:\n      summary: soci-postgresql contains SOCI core and the implementation of PostgreSQL backend.\n      doc_source_url: http://soci.sourceforge.net/doc/release/4.0/\n\nabout:\n  home: http://soci.sourceforge.net/\n  license: BSL-1.0\n  license_file: LICENSE\n  summary: SOCI is a general purpose database access library written in C++.\n  doc_url: http://soci.sourceforge.net/doc/release/4.0/\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - marimeireles\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://github.com/SOCI/soci/archive/v4.0.3.tar.gz",
 "version": "4.0.3"
}