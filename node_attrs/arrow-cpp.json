{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/225191238.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/228756253.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/246062566.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255935695.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/261247502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "libprotobuf-3.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266046528.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.13.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/271109022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "lz4-c-1.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/277984927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "glog-0.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/284052721.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "boost-cpp-1.70.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/284098354.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "zstd-1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/292554866.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "libprotobuf-3.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/294435692.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/296773060.json"
   },
   "data": {
    "bot_rerun": 1579272527.735542,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299965485.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.14.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "id": "d1ef11ee-6bf5-4f70-93f6-0019c6977223",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "grpc-cpp-1.23"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "c7cd8051-6c0a-440b-ae18-86b16c15d783",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc-cpp-1.23"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/317030308.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "grpc-cpp-1.23"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/321000692.json"
   },
   "data": {
    "bot_rerun": 1579272527.7359424,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/324927149.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/327994400.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "zstd-1.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/331571773.json"
   },
   "data": {
    "bot_rerun": 1568333399.7401664,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/331658958.json"
   },
   "data": {
    "bot_rerun": 1585822501.0319557,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335474918.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336076708.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/340827041.json"
   },
   "data": {
    "bot_rerun": 1579272527.7461028,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "protobuf310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "id": "24755bc2-857a-48d5-a5b4-180a0d4a8378",
    "merged_at": "never issued",
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpccpp125"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341568295.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "grpccpp125"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341645285.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "zstd-1.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/342899187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "protobuf310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/345875809.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "protobuf311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/372287453.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.16.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/377619510.json"
   },
   "data": {
    "bot_rerun": 1583367193.2302742,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc127"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/377675684.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/34541a7e-d405-4afa-bd25-ee09a5e7c0ef.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392237662.json"
   },
   "data": {
    "bot_rerun": 1585865653.7767265,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/397498048.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/397756486.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp1280"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/397845607.json"
   },
   "data": {
    "bot_rerun": 1590980062.670332,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402155487.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4_c192"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/405211758.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gflags22"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/406894789.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.17.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/419340382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re2202005"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/419702400.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp129"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/b709f256-f636-4d0a-9717-a47c8afb9fc4.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp0171"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/425728717.json"
   },
   "data": {
    "bot_rerun": 1592798435.5198913,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/427778927.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re220200601"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/435112995.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf312"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/437670316.json"
   },
   "data": {
    "bot_rerun": 1599657207.0583339,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/438371624.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp130"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/443675963.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re220200701"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444603512.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re220200706"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/f62c6cd4-4d74-4318-a07f-0a747b672fac.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp100"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/461165062.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re220200801"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356cd84c-6e84-44f2-b3b5-5fba313e2b7e.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp101"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/482842577.json"
   },
   "data": {
    "bot_rerun": 1604727192.6247091,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/483953090.json"
   },
   "data": {
    "bot_rerun": 1601142258.2312937,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp132"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485551341.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492075747.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1852"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492240889.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1854"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/493483973.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf313"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/494070003.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1856"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496234043.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re220201001"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496258177.json"
   },
   "data": {
    "bot_rerun": 1601578789.3081117,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1859"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496485984.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1859"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496932230.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc165"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503488930.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1863"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/c82d97ec-a626-4bc1-8abc-2e156225917c.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505536305.json"
   },
   "data": {
    "bot_rerun": 1603216832.71196,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506778718.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp133"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506999462.json"
   },
   "data": {
    "bot_rerun": 1603327945.043003,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507046752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "aws_sdk_cpp1870"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/866bd239-defd-4245-af5c-d12b3aa752a3.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp200"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507946900.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514091961.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "re220201101"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/517095891.json"
   },
   "data": {
    "bot_rerun": 1605892623.086233,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521908928.json"
   },
   "data": {
    "bot_rerun": 1605898406.7910562,
    "branch": "0.17.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521910660.json"
   },
   "data": {
    "bot_rerun": 1608663374.5803452,
    "branch": "1.0.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521911453.json"
   },
   "data": {
    "bot_rerun": 1605816796.5707848,
    "branch": "0.17.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521950523.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521951721.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521952315.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521952683.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521953317.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521955386.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp200"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521955934.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "arrow_cpp200"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521956273.json"
   },
   "data": {
    "bot_rerun": 1605651237.0201962,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf313"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521956899.json"
   },
   "data": {
    "bot_rerun": 1605651237.0207815,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf313"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521958449.json"
   },
   "data": {
    "bot_rerun": 1605895459.1190505,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/521959007.json"
   },
   "data": {
    "bot_rerun": 1608567133.1112206,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/5fa736e1-fe9b-4a8a-a990-45ab215d6abd.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf313"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/79c73273-62e2-4d05-91a6-9bab655f5927.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf313"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/524217801.json"
   },
   "data": {
    "bot_rerun": 1610147044.6200788,
    "branch": "0.17.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/524899908.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/536824536.json"
   },
   "data": {
    "bot_rerun": 1608627940.9494672,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc166"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/536825136.json"
   },
   "data": {
    "bot_rerun": 1608627940.9496748,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc166"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/537690292.json"
   },
   "data": {
    "bot_rerun": 1608585527.5336432,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc166"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542574438.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf314"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542575749.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf314"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/542601022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf314"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543097124.json"
   },
   "data": {
    "bot_rerun": 1610119441.2475848,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543097352.json"
   },
   "data": {
    "bot_rerun": 1608663374.5814826,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543466272.json"
   },
   "data": {
    "bot_rerun": 1608630468.1087058,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543743505.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc166"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543987532.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc166"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543988280.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "orc166"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544018155.json"
   },
   "data": {
    "bot_rerun": 1609794459.4259772,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544163116.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544163477.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544163981.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544165203.json"
   },
   "data": {
    "bot_rerun": 1609706167.272575,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544165530.json"
   },
   "data": {
    "bot_rerun": 1610117241.2110336,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544166097.json"
   },
   "data": {
    "bot_rerun": 1608663374.5820267,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544316840.json"
   },
   "data": {
    "bot_rerun": 1610121918.117534,
    "branch": "1.0.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544317248.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544318353.json"
   },
   "data": {
    "bot_rerun": 1609496277.3278618,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547528942.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4-c193"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547529049.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4-c193"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547529176.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "lz4-c193"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547608685.json"
   },
   "data": {
    "bot_rerun": 1610121918.1181417,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547934384.json"
   },
   "data": {
    "bot_rerun": 1610036365.7678137,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/548475861.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551175043.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551783977.json"
   },
   "data": {
    "bot_rerun": 1610147044.6215463,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551800426.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "grpc_cpp134"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551826127.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551831987.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "1.0.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552008099.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552008675.json"
   },
   "data": {
    "bot_rerun": false,
    "branch": "0.17.x",
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "windows_cuda"
   },
   "keys": [
    "bot_rerun",
    "branch",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "0.17.x",
    "1.0.x"
   ]
  }
 },
 "feedstock_name": "arrow-cpp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "13",
   "run_exports": [
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   }
  ],
  "package": {
   "name": "arrow-cpp-ext",
   "version": "2.0.0"
  },
  "source": {
   "patches": [
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch"
   ],
   "sha256": "be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe",
   "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "grpc-cpp",
    "libprotobuf",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp",
    "brotli",
    "bzip2",
    "c-ares",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "llvmdev",
    "lz4-c",
    "numpy",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "numpy",
    "parquet-cpp",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "13",
   "run_exports": [
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   }
  ],
  "package": {
   "name": "arrow-cpp-ext",
   "version": "2.0.0"
  },
  "source": {
   "patches": [
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch"
   ],
   "sha256": "be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe",
   "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "grpc-cpp",
    "libprotobuf",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp",
    "brotli",
    "bzip2",
    "c-ares",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "llvmdev",
    "lz4-c",
    "numpy",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "numpy",
    "parquet-cpp",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "13",
   "run_exports": [
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test  -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cuda",
     "track_features": [
      "arrow-cuda"
     ]
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cuda",
      "cudatoolkit >=9.2"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test -f $PREFIX/lib/libarrow_python.so",
      "test -f $PREFIX/lib/libparquet.so",
      "test -f $PREFIX/lib/libgandiva.so",
      "test -f $PREFIX/lib/libplasma.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "gnuconfig",
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "gnuconfig",
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   }
  ],
  "package": {
   "name": "arrow-cpp-ext",
   "version": "2.0.0"
  },
  "source": {
   "patches": [
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch"
   ],
   "sha256": "be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe",
   "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz"
  }
 },
 "name": "arrow-cpp-ext",
 "new_version": "2.0.0",
 "new_version_attempts": {
  "0.17.0": 1,
  "0.17.1": 3,
  "1.0.0": 3,
  "1.0.1": 59,
  "2.0.0": 3
 },
 "new_version_errors": {
  "0.17.1": "We found a problem parsing the recipe: \n\nwhile scanning a simple key\n  in \"<unicode string>\", line 120, column 9:\n            <{ \"- test %s -f $PREFIX/lib/lib ... \n            ^ (line: 120)\ncould not find expected ':'\n  in \"<unicode string>\", line 121, column 1:\n            <{ \"- test %s -f $PREFIX ... \n    ^ (line: 121)",
  "1.0.0": "We found a problem parsing the recipe: \n\nwhile scanning a simple key\n  in \"<unicode string>\", line 130, column 9:\n            <{ \"- test %s -f $PREFIX/lib/lib ... \n            ^ (line: 130)\ncould not find expected ':'\n  in \"<unicode string>\", line 131, column 1:\n            <{ \"- test %s -f $PREFIX ... \n    ^ (line: 131)",
  "1.0.1": "We found a problem parsing the recipe: \n\nwhile scanning a simple key\n  in \"<unicode string>\", line 132, column 9:\n            <{ \"- test %s -f $PREFIX/lib/lib ... \n            ^ (line: 132)\ncould not find expected ':'\n  in \"<unicode string>\", line 133, column 1:\n            <{ \"- test %s -f $PREFIX ... \n    ^ (line: 133)",
  "2.0.0": "We found a problem parsing the recipe: \n\nwhile scanning a simple key\n  in \"<unicode string>\", line 132, column 9:\n            <{ \"- test %s -f $PREFIX/lib/lib ... \n            ^ (line: 132)\ncould not find expected ':'\n  in \"<unicode string>\", line 133, column 1:\n            <{ \"- test %s -f $PREFIX ... \n    ^ (line: 133)"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "13",
   "run_exports": [
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   }
  ],
  "package": {
   "name": "arrow-cpp-ext",
   "version": "2.0.0"
  },
  "source": {
   "patches": [
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch"
   ],
   "sha256": "be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe",
   "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "grpc-cpp",
    "libprotobuf",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp",
    "brotli",
    "bzip2",
    "c-ares",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "llvmdev",
    "lz4-c",
    "numpy",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "numpy",
    "parquet-cpp",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "13",
   "run_exports": [
    "arrow-cpp",
    "arrow-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "gnuconfig",
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "gnuconfig",
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "autoconf",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "orc",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-arrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/include/plasma/client.h",
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test ! -f $PREFIX/lib/libarrow_cuda.dylib",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test -f $PREFIX/lib/libarrow_python.dylib",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test -f $PREFIX/lib/libplasma.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_dataset.a",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test ! -f $PREFIX/lib/libarrow_python.a",
      "test ! -f $PREFIX/lib/libplasma.a",
      "test ! -f $PREFIX/lib/libparquet.a",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.plasma",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "make",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/tests/test_array.py"
     ]
    },
    "version": "2.0.0"
   }
  ],
  "package": {
   "name": "arrow-cpp-ext",
   "version": "2.0.0"
  },
  "source": {
   "patches": [
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch"
   ],
   "sha256": "be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe",
   "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gnuconfig",
    "grpc-cpp",
    "libprotobuf",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp",
    "brotli",
    "bzip2",
    "c-ares",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "lz4-c",
    "numpy",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "numpy",
    "parquet-cpp",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "arrow-cpp",
   "arrow-cpp-proc",
   "pyarrow",
   "pyarrow-tests"
  ]
 },
 "pinning_version": "2021.01.08.18.10.03",
 "pre_pr_migrator_status": {
  "aarch64andppc64leaddition": "bot error: 0.17.x: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 137, in fetch_repo\n    _run_git_cmd(f\"git checkout {base_branch} --quiet\")\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 121, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 512, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git checkout 0.17.x --quiet' returned non-zero exit status 1.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1018, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 163, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 222, in get_repo\n    if fetch_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 139, in fetch_repo\n    _run_git_cmd(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 121, in _run_git_cmd\n    return subprocess.run(cmd, shell=True, check=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/subprocess.py\", line 512, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'git checkout -b 0.17.x upstream/0.17.x --quiet' returned non-zero exit status 128.\n",
  "armosxaddition": "bot error: 1.0.x: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1018, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 201, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 274, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/cross_compile.py\", line 41, in migrate\n    cb_work_dir = _get_source_code(recipe_dir)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 920, in _get_source_code\n    md = render(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/conda_build/api.py\", line 49, in render\n    for od, om in meta.get_output_metadata_set(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/conda_build/metadata.py\", line 2031, in get_output_metadata_set\n    for k in out_metadata.get_used_vars()}))] = out, out_metadata\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/conda_build/metadata.py\", line 2164, in get_used_vars\n    meta_yaml_reqs = self._get_used_vars_meta_yaml(force_top_level=force_top_level,\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/conda_build/metadata.py\", line 2215, in _get_used_vars_meta_yaml\n    reqs_text, recipe_text = self._get_used_vars_meta_yaml_helper(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/conda_build/metadata.py\", line 2195, in _get_used_vars_meta_yaml_helper\n    recipe_text = self.extract_single_output_text(self.name(), getattr(self, 'type', None),\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/conda_build/metadata.py\", line 1725, in extract_single_output_text\n    output = output_matches[output_index] if output_matches else ''\nIndexError: list index out of range\n",
  "grpc_cpp134": "not solvable: master: ['linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hf41bbd9_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-he39198a_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_arm64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_arm64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-h1671c54_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.34.0-hd7e1925_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n']",
  "libprotobuf314": "not solvable: master: ['linux_aarch64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h158cedb_1 requires libprotobuf >=3.13.0.1,<3.14.0a0, but none of the providers can be installed\\n']",
  "orc166": "not solvable: master: ['linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h2157cd5_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package orc-1.6.6-h5fa8895_0 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_arm64_python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n', 'osx_arm64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.2-h97de6d8_4 requires libprotobuf >=3.14.0,<3.15.0a0, but none of the providers can be installed\\n']",
  "python39": "not solvable: ['linux_64_boost_cpp1.72.0cuda_compiler_version9.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.0-py27h7e9f1db_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.72.0cuda_compiler_versionNonenumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.0-py27h7e9f1db_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_version9.2numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.0-py27h7e9f1db_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'linux_64_boost_cpp1.74.0cuda_compiler_versionNonenumpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.0-py27h7e9f1db_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides openssl >=1.0.2p,<1.0.3a needed by python-2.7.15-h938d71a_1006\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides openssl >=1.0.2p,<1.0.3a needed by python-2.7.15-h938d71a_1006\\n', 'osx_64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.0-py27h926163e_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'osx_64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package numpy-1.16.0-py27h926163e_0 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'win_64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n', 'win_64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides vc 10.* needed by python-3.4.5-0\\n']",
  "re220201101": "not solvable: master: ['linux_aarch64_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_aarch64_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h275476f_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.72.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.72.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.72.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.72.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.74.0numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.74.0numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.74.0numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n', 'linux_ppc64le_boost_cpp1.74.0numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package grpc-cpp-1.33.0-h3e440a1_0 requires re2 >=2020.10.1,<2020.10.2.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"2.0.0\" %}\n{% set cuda_enabled = cuda_compiler_version is not undefined and cuda_compiler_version == '9.2' %}\n{% set build_ext_version = \"2.0.0\" %}\n{% set build_ext = \"cuda\" if cuda_enabled else \"cpu\" %}\n{% set proc_build_number = \"0\" %}\n\npackage:\n  name: arrow-cpp-ext\n  version: {{ version }}\n\nsource:\n  url: https://dist.apache.org/repos/dist/release/arrow/arrow-{{ version }}/apache-arrow-{{ version }}.tar.gz\n  sha256: be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe\n  patches:\n    - 8458.patch\n    - 7df87aca022ab6a309a6ee515370686aa3bcc013.patch\n    - support-grpc-1.34.patch\n\nbuild:\n  number: 13\n  skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"9.2\")]\n  run_exports:\n    - {{ pin_subpackage(\"arrow-cpp\", max_pin=\"x.x.x\") }}\n\noutputs:\n  - name: arrow-cpp-proc\n    version: {{ build_ext_version }}\n    build:\n      number: {{ proc_build_number }}\n      string: \"{{ build_ext }}\"\n    test:\n      commands:\n        - exit 0\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: 'A meta-package to select Arrow build variant'\n\n  - name: arrow-cpp\n    script: build-arrow.sh  # [not win]\n    script: bld-arrow.bat   # [win]\n    version: {{ version }}\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"9.2\")]\n      run_exports:\n        - {{ pin_subpackage(\"arrow-cpp\", max_pin=\"x.x.x\") }}\n      ignore_run_exports:\n        - cudatoolkit\n      track_features:\n        {{ \"- arrow-cuda\" if cuda_enabled else \"\" }}\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - gnuconfig                              # [osx and arm64]\n        - libprotobuf\n        - grpc-cpp\n        - cmake\n        - autoconf  # [unix]\n        - ninja\n        - make  # [unix]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler(\"cuda\") }}  # [cuda_compiler_version not in (undefined, \"None\")]\n      host:\n        - aws-sdk-cpp\n        - boost-cpp >=1.70\n        - brotli\n        - bzip2\n        - c-ares\n        - gflags\n        - glog\n        - grpc-cpp\n        - libprotobuf\n        - clangdev 10  # [not (osx and arm64)]\n        - llvmdev 10   # [not (osx and arm64)]\n        - libutf8proc\n        - lz4-c\n        - numpy\n        - orc  # [unix]\n        - python\n        - rapidjson\n        - re2\n        - snappy\n        - thrift-cpp >=0.11\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible('numpy', lower_bound='1.16') }}\n        - python\n      run_constrained:\n        - arrow-cpp-proc * {{ build_ext }}\n        - cudatoolkit >=9.2  # [cuda_compiler_version not in (undefined, \"None\")]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/api.h              # [unix]\n        - test -f $PREFIX/include/arrow/flight/types.h     # [unix]\n        - test -f $PREFIX/include/plasma/client.h          # [unix]\n        - test -f $PREFIX/include/gandiva/engine.h         # [unix and not (osx and arm64)]\n        - test -f $PREFIX/include/parquet/api/reader.h     # [unix]\n        - if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1            # [win]\n        - if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1       # [win]\n        - if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1  # [win]\n\n        # shared\n        - test -f $PREFIX/lib/libarrow.so            # [linux]\n        - test -f $PREFIX/lib/libarrow_dataset.so    # [linux]\n        - test -f $PREFIX/lib/libarrow_flight.so     # [linux]\n        - test -f $PREFIX/lib/libarrow_python.so     # [linux]\n        - test -f $PREFIX/lib/libparquet.so          # [linux]\n        - test -f $PREFIX/lib/libgandiva.so          # [linux]\n        - test -f $PREFIX/lib/libplasma.so           # [linux]\n        {{ \"- test %s -f $PREFIX/lib/libarrow_cuda.so\" % (['!', ''][cuda_enabled]) }}                         # [linux]\n        {{ \"- test %s -f $PREFIX/lib/libarrow_cuda.dylib\" % (['!', ''][cuda_enabled]) }}                      # [osx]\n        {{ \"- if %s exist %%PREFIX%%\\\\Library\\\\bin\\\\arrow_cuda.dll exit 1\" % (['', 'not'][cuda_enabled]) }}   # [win]\n        - test -f $PREFIX/lib/libarrow.dylib          # [osx]\n        - test -f $PREFIX/lib/libarrow_dataset.dylib  # [osx]\n        - test -f $PREFIX/lib/libarrow_python.dylib   # [osx]\n        - test -f $PREFIX/lib/libgandiva.dylib        # [osx and not arm64]\n        - test -f $PREFIX/lib/libparquet.dylib        # [osx]\n        - test -f $PREFIX/lib/libplasma.dylib         # [osx]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1          # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1   # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1   # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1        # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1        # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libarrow.a          # [unix]\n        - test ! -f $PREFIX/lib/libarrow_dataset.a  # [unix]\n        - test ! -f $PREFIX/lib/libarrow_flight.a   # [unix]\n        - test ! -f $PREFIX/lib/libarrow_python.a   # [unix]\n        - test ! -f $PREFIX/lib/libplasma.a         # [unix]\n        - test ! -f $PREFIX/lib/libparquet.a        # [unix]\n        - test ! -f $PREFIX/lib/libgandiva.a        # [unix]\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1          # [win]\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1  # [win]\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1   # [win]\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1   # [win]\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1        # [win]\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1        # [win]\n\n  - name: pyarrow\n    script: build-pyarrow.sh  # [not win]\n    script: bld-pyarrow.bat   # [win]\n    version: {{ version }}\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"9.2\")]\n      ignore_run_exports:\n        - cudatoolkit\n      track_features:\n        {{ \"- arrow-cuda\" if cuda_enabled else \"\" }}\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - cmake\n        - ninja\n        - make  # [unix]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # pyarrow does not require nvcc but it needs to link against libraries in arrow-cpp=*=*cuda\n        - {{ compiler(\"cuda\") }}  # [cuda_compiler_version not in (undefined, \"None\")]\n      host:\n        - {{ pin_subpackage('arrow-cpp', exact=True) }}\n        - cython\n        - numpy\n        - python\n        - setuptools\n        - setuptools_scm\n        - six\n      run:\n        - {{ pin_subpackage('arrow-cpp', exact=True) }}\n        - {{ pin_compatible('numpy', lower_bound='1.16') }}\n        # empty parquet-cpp metapackage, force old versions to be uninstalled\n        - parquet-cpp 1.5.1.*\n        - python\n      run_constrained:\n        - arrow-cpp-proc * {{ build_ext }}\n        - cudatoolkit >=9.2  # [cuda_compiler_version not in (undefined, \"None\")]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: Python libraries for Apache Arrow\n\n    test:\n      imports:\n        - pyarrow\n        - pyarrow.dataset\n        - pyarrow.flight\n        - pyarrow.gandiva  # [not (osx and arm64)]\n        - pyarrow.orc      # [unix]\n        - pyarrow.parquet\n        - pyarrow.plasma   # [unix]\n        - pyarrow.fs\n        - pyarrow._s3fs\n        - pyarrow._hdfs\n        # We can only test importing cuda package but cannot run when a\n        # CUDA device is not available, for instance, when building from CI.\n        - pyarrow.cuda     # [cuda_compiler_version not in (undefined, \"None\")]\n      commands:\n        - test ! -f ${SP_DIR}/pyarrow/tests/test_array.py       # [unix]\n        - if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1  # [win]\n  - name: pyarrow-tests\n    script: build-pyarrow.sh  # [not win]\n    script: bld-pyarrow.bat   # [win]\n    version: {{ version }}\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"9.2\")]\n      ignore_run_exports:\n        - cudatoolkit\n      track_features:\n        {{ \"- arrow-cuda\" if cuda_enabled else \"\" }}\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - cmake\n        - ninja\n        - make  # [unix]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        # pyarrow does not require nvcc but it needs to link against libraries in arrow-cpp=*=*cuda\n        - {{ compiler(\"cuda\") }}  # [cuda_compiler_version not in (undefined, \"None\")]\n      host:\n        - {{ pin_subpackage('arrow-cpp', exact=True) }}\n        - {{ pin_subpackage('pyarrow', exact=True) }}\n        - cython\n        - numpy\n        - python\n        - setuptools\n        - setuptools_scm\n        - six\n      run:\n        - {{ pin_subpackage('pyarrow', exact=True) }}\n        - python\n      run_constrained:\n        - arrow-cpp-proc * {{ build_ext }}\n        - cudatoolkit >=9.2  # [cuda_compiler_version not in (undefined, \"None\")]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: Python test files for Apache Arrow\n\n    test:\n      commands:\n        - test -f ${SP_DIR}/pyarrow/tests/test_array.py             # [unix]\n        - if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1  # [win]\n\nabout:\n  home: http://github.com/apache/arrow\n  license: Apache-2.0\n  license_file:\n    - LICENSE.txt\n  summary: C++ and Python libraries for Apache Arrow\n\nextra:\n  recipe-maintainers:\n    - wesm\n    - xhochy\n    - leifwalsh\n    - jreback\n    - cpcloud\n    - pcmoritz\n    - robertnishihara\n    - siddharthteotia\n    - kou\n    - kszucs\n    - pitrou\n    - pearu\n    - nealrichardson\n    - jakirkham\n",
 "req": {
  "__set__": true,
  "elements": [
   "arrow-cpp",
   "autoconf",
   "aws-sdk-cpp",
   "boost-cpp",
   "brotli",
   "bzip2",
   "c-ares",
   "c_compiler_stub",
   "clangdev",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "gflags",
   "glog",
   "gnuconfig",
   "grpc-cpp",
   "libprotobuf",
   "libutf8proc",
   "llvmdev",
   "lz4-c",
   "make",
   "ninja",
   "numpy",
   "orc",
   "parquet-cpp",
   "pyarrow",
   "python",
   "rapidjson",
   "re2",
   "setuptools",
   "setuptools_scm",
   "six",
   "snappy",
   "thrift-cpp",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "gnuconfig",
    "grpc-cpp",
    "libprotobuf",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp",
    "brotli",
    "bzip2",
    "c-ares",
    "c_compiler_stub",
    "clangdev",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "llvmdev",
    "lz4-c",
    "numpy",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "parquet-cpp",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "gnuconfig",
    "grpc-cpp",
    "libprotobuf",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp >=1.70",
    "brotli",
    "bzip2",
    "c-ares",
    "clangdev 10",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "llvmdev 10",
    "lz4-c",
    "numpy",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp >=0.11",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "numpy",
    "parquet-cpp 1.5.1.*",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz",
 "version": "2.0.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "13",
   "run_exports": [
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp",
    "arrow-cpp"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py37h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py38h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py39h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "arrow-cpp-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "arrow-cpp"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "arrow-cpp",
    "requirements": {
     "build": [
      "libprotobuf",
      "grpc-cpp",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-sdk-cpp",
      "boost-cpp >=1.70",
      "brotli",
      "bzip2",
      "c-ares",
      "gflags",
      "glog",
      "grpc-cpp",
      "libprotobuf",
      "clangdev 10",
      "llvmdev 10",
      "libutf8proc",
      "lz4-c",
      "numpy",
      "python",
      "rapidjson",
      "re2",
      "snappy",
      "thrift-cpp >=0.11",
      "zlib",
      "zstd"
     ],
     "run": [
      "numpy",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-arrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\arrow\\\\api.h exit 1",
      "if not exist %LIBRARY_INC%\\\\gandiva\\\\engine.h exit 1",
      "if not exist %LIBRARY_INC%\\\\parquet\\\\api\\\\reader.h exit 1",
      "if  exist %PREFIX%\\Library\\bin\\arrow_cuda.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_dataset.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_flight.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\arrow_python.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\parquet.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\gandiva.dll exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_dataset_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_flight_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\arrow_python_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\parquet_static.lib exit 1",
      "if exist %PREFIX%\\\\Library\\\\lib\\\\gandiva_static.lib exit 1"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "arrow-cpp",
      "numpy",
      "parquet-cpp 1.5.1.*",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "2.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "string": "py36h1234567_13_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "arrow-cpp",
      "pyarrow",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools_scm",
      "six"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "arrow-cpp-proc * cpu"
     ]
    },
    "script": "bld-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%/pyarrow/tests/test_array.py exit 1"
     ]
    },
    "version": "2.0.0"
   }
  ],
  "package": {
   "name": "arrow-cpp-ext",
   "version": "2.0.0"
  },
  "source": {
   "patches": [
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch",
    "8458.patch",
    "7df87aca022ab6a309a6ee515370686aa3bcc013.patch",
    "support-grpc-1.34.patch"
   ],
   "sha256": "be0342cc847bb340d86aeaef43596a0b6c1dbf1ede9c789a503d939e01c71fbe",
   "url": "https://dist.apache.org/repos/dist/release/arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "grpc-cpp",
    "libprotobuf",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "aws-sdk-cpp",
    "boost-cpp",
    "brotli",
    "bzip2",
    "c-ares",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "grpc-cpp",
    "libprotobuf",
    "libutf8proc",
    "llvmdev",
    "lz4-c",
    "numpy",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools_scm",
    "six",
    "snappy",
    "thrift-cpp",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "arrow-cpp",
    "numpy",
    "parquet-cpp",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}