{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/544292285.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/618984717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf480"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650530959.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/723850318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libnetcdf481"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/833052818.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "tempest-extremes",
 "hash_type": "sha256",
 "name": "tempest-extremes",
 "new_version": "2.2.1",
 "new_version_attempts": {
  "2.1": 1,
  "2.2": 1,
  "2.2.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tempest-extremes"
  ]
 },
 "pinning_version": "2022.01.26.20.27.23",
 "raw_meta_yaml": "{% set name = \"tempest-extremes\" %}\n{% set version = \"2.2.1\" %}\n{% set build = 0 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ClimateGlobalChange/tempestextremes/archive/v{{ version }}.tar.gz\n  sha256: bd3feeb187587d95a6fb94314eecd9c72c9349c6e1afac347edafe7b4d450a93\n  patches:\n    - 0001-Update-default.make-for-conda-forge.patch\n    - 0002-Update-macosx.make-for-conda-forge.patch\n    - 0003-Disable-MPI-build.patch  # [mpi == 'nompi']\n    - 0004-Remove-VERSION-causing-trouble-in-OSX-build.patch\n\nbuild:\n  skip: true  # [win]\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `tempest-extremes * mpi_mpich_*` for mpich\n  # `tempest-extremes * mpi_*` for any mpi\n  # `tempest-extremes * nompi_*` for no mpi\n\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  {% if mpi != 'nompi' %}\n  run_exports:\n    - {{ name }} * {{ mpi_prefix }}_*\n  {% endif %}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    # need to list libnetcdf twice to get version\n    # pinning from conda_build_config and build pinning from {{ mpi_prefix }}\n    - libnetcdf\n    - libnetcdf * {{ mpi_prefix }}_*\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - libnetcdf * {{ mpi_prefix }}_*\n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/BlobStats\n    - test -f ${PREFIX}/bin/Climatology\n    - test -f ${PREFIX}/bin/DetectBlobs\n    - test -f ${PREFIX}/bin/DetectNodes\n    - test -f ${PREFIX}/bin/FourierFilter\n    - test -f ${PREFIX}/bin/GenerateConnectivityFile\n    - test -f ${PREFIX}/bin/HistogramNodes\n    - test -f ${PREFIX}/bin/NodeFileCompose\n    - test -f ${PREFIX}/bin/NodeFileEditor\n    - test -f ${PREFIX}/bin/NodeFileFilter\n    - test -f ${PREFIX}/bin/SpineARs\n    - test -f ${PREFIX}/bin/StitchBlobs\n    - test -f ${PREFIX}/bin/StitchNodes\n    - test -f ${PREFIX}/bin/VariableProcessor\n\nabout:\n  home: https://github.com/ClimateGlobalChange/tempestextremes\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: README.md\n  summary: a collection of detection and characterization algorithms for large climate datasets\n  description: |\n    TempestExtremes is a growing collection of detection and characterization\n    algorithms for large climate datasets, leveraging C++ for rapid throughput\n    and a command line interface that maximizes flexibility of each kernel. The\n    tracking kernels in this package have been already used for tracking and\n    characterizing tropical cyclones (TCs), extratropical cyclones (ETCs),\n    monsoonal depressions, atmospheric blocks, atmospheric rivers, and mesoscale\n    convective systems (MCSs). By considering multiple extremes within the same\n    framework, we can study the joint characteristics of extremes while\n    minimizing the total data burden.\n  doc_url: https://climate.ucdavis.edu/tempestextremes.php\n  dev_url: https://github.com/ClimateGlobalChange/tempestextremes\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - chengzhuzhang\n    - forsyth2\n",
 "smithy_version": "3.16.2",
 "strong_exports": false,
 "url": "https://github.com/ClimateGlobalChange/tempestextremes/archive/v2.2.1.tar.gz",
 "version": "2.2.1"
}