{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/680270577.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6240"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/712088884.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/723620752.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6244"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/727444339.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6246"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/846396285.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.19.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/872317054.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6260"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910254823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6262"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/964047387.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6264"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1019354479.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "root_base6266"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gds-gui",
 "hash_type": "sha256",
 "name": "gds-gui",
 "new_version": "2.19.7",
 "new_version_attempts": {
  "2.19.6": 1,
  "2.19.7": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gds-gui-crtools"
  ]
 },
 "pinning_version": "2022.08.06.11.18.30",
 "pre_pr_migrator_attempts": {
  "root_base6244": 1,
  "root_base6246": 1
 },
 "pre_pr_migrator_status": {
  "root_base6244": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1185294857\">bot CI job</a>): master: ['linux_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 2\\n', 'osx_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 3\\n']",
  "root_base6246": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1200695784\">bot CI job</a>): master: ['linux_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 2\\n', 'osx_64_: Encountered problems while solving:\\n  - nothing provides requested libllvm9 9.0.1.* 3\\n']"
 },
 "raw_meta_yaml": "{% set name = \"gds-gui\" %}\n{% set version = \"2.19.7\" %}\n\n# dependencies\n{% set gds_base_version = \"2.19.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://software.igwn.org/sources/source/{{ name }}-{{ version }}.tar.gz\n  sha256: 779b5e7ad20595b50cd07aa908722d68ed388434b6cb64a71787cce98688f83b\n\nbuild:\n  number: 4\n  skip: true  # [win]\n\noutputs:\n  - name: gds-gui-crtools\n    script: build-crtools.sh\n    build:\n      ignore_run_exports:\n        # header needed only\n        - gds-base-gdstrig\n      run_exports:\n        - {{ pin_subpackage(\"gds-gui-crtools\", max_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - make\n        - pkg-config\n        - sysroot_linux-64 2.17  # [linux64]\n      host:\n        - gds-base >={{ gds_base_version }}\n        - gds-base-crtools >={{ gds_base_version }}\n        - root_base\n      run:\n        - gds-base >={{ gds_base_version }}\n        - gds-base-crtools >={{ gds_base_version }}\n        - root_base\n    test:\n      requires:\n        - pkg-config\n      commands:\n        # basic file existence\n        - test -f ${PREFIX}/include/gds/dttview/TLGMath.hh  # [unix]\n        - test -f ${PREFIX}/lib/libRdttview${SHLIB_EXT}  # [unix]\n        # check root extensions\n        - root -b -l -x -q -e \"gInterpreter->AddIncludePath(\\\"${PREFIX}/include/gds\\\"); gSystem->Load(\\\"libRdttview\\\");\"  # [linux]\n        - root -b -l -x -q -e \"gInterpreter->AddIncludePath(\\\"${PREFIX}/include/gds\\\"); gSystem->Load(\\\"libRgdsplot\\\");\"  # [linux]\n        - root -b -l -x -q -e \"gInterpreter->AddIncludePath(\\\"${PREFIX}/include/gds\\\"); gSystem->Load(\\\"libRligogui\\\");\"  # [linux]\n        # check pkg-config files\n        - pkg-config --print-errors --exact-version {{ version }} gdsdttview  # [unix]\n        - pkg-config --print-errors --exact-version {{ version }} gdsligogui  # [unix]\n    about:\n      home: https://wiki.ligo.org/Computing/DASWG/DMT\n      dev_url: https://git.ligo.org/gds/gds.git\n      license: GPL-2.0-only\n      license_family: GPL\n      license_file: COPYING\n      summary: GDS control room tools\n      description: |\n        GDS control room tools and GUI libraries\n\nabout:\n  home: https://wiki.ligo.org/Computing/DASWG/DMT\n  dev_url: https://git.ligo.org/gds/gds.git\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: GDS GUI libraries\n  description: |\n    GDS control room tools and GUI libraries\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - emaros\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://software.igwn.org/sources/source/gds-gui-2.19.7.tar.gz",
 "version": "2.19.7"
}