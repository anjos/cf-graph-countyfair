{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/223435336.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/230594416.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/230658344.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/398898806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "magic-wormhole",
 "hash_type": "sha256",
 "name": "magic-wormhole",
 "new_version": "0.12.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "magic-wormhole"
  ]
 },
 "pinning_version": "2020.04.03",
 "raw_meta_yaml": "{% set name = \"magic-wormhole\" %}\n{% set version = \"0.12.0\" %}\n{% set sha256 = \"353d889c667d468fd519bf43d1b2f241211711a1ca0c103bf204d3012767142f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/warner/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - wormhole = wormhole.cli.cli:wormhole\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - spake2 ==0.8\n    - pynacl\n    - six\n    - attrs >=16.3.0\n    - twisted >=17.5.0\n    - autobahn >=0.14.1\n    - automat\n    - hkdf\n    - tqdm >=4.13.0\n    - click\n    - humanize\n    - service_identity\n\ntest:\n  commands:\n    - wormhole --version\n    - wormhole --help\n  imports:\n    - wormhole\n\nabout:\n  home: http://github.com/warner/magic-wormhole\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Get things from one computer to another, safely.\n\n  description: |\n    This package provides a library and a command-line tool named wormhole, \n    which makes it possible to get arbitrary-sized files and directories (or \n    short pieces of text) from one computer to another. The two endpoints are \n    identified by using identical \"wormhole codes\": in general, the sending \n    machine generates and displays the code, which must then be typed into \n    the receiving machine.\n\n  doc_url: https://magic-wormhole.readthedocs.io/en/latest/\n  dev_url: http://github.com/warner/magic-wormhole\n\nextra:\n  recipe-maintainers:\n    - CJ-Wright\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports": false,
 "url": "https://github.com/warner/magic-wormhole/archive/0.12.0.tar.gz",
 "version": "0.12.0"
}