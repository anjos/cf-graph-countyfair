{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199888418.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222688728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262353882.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/308276738.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "GFortranOSXRebuild",
    "migrator_version": 0,
    "name": "fortran_compiler_stub-7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339417668.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/374650540.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/401855520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.3.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/402679414.json"
   },
   "data": {
    "bot_rerun": 1603223663.6963594,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501944265.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505023526.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "gcc930"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507106787.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559847144.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pymc",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyMC is a python module that implements Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo. Its flexibility and extensibility make it applicable to a large suite of problems. Along with core sampling functionality, PyMC includes methods for summarizing output, plotting, goodness-of-fit and convergence diagnostics.\n",
   "dev_url": "https://github.com/pymc-devs/pymc",
   "doc_url": "http://pymc-devs.github.io/pymc/",
   "home": "http://github.com/pymc-devs/pymc",
   "license": "AFL-3.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "PyMC: Bayesian Stochastic Modelling in Python"
  },
  "build": {
   "number": "2",
   "script": [
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "pymc",
   "version": "2.3.8"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "200a28469d574a370fa9b55cd92f112f8ad09f71674bdae514437039e953689b",
   "url": "https://github.com/pymc-devs/pymc/archive/v2.3.8.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyMC is a python module that implements Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo. Its flexibility and extensibility make it applicable to a large suite of problems. Along with core sampling functionality, PyMC includes methods for summarizing output, plotting, goodness-of-fit and convergence diagnostics.\n",
   "dev_url": "https://github.com/pymc-devs/pymc",
   "doc_url": "http://pymc-devs.github.io/pymc/",
   "home": "http://github.com/pymc-devs/pymc",
   "license": "AFL-3.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "PyMC: Bayesian Stochastic Modelling in Python"
  },
  "build": {
   "number": "2",
   "script": [
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "pymc",
   "version": "2.3.8"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "200a28469d574a370fa9b55cd92f112f8ad09f71674bdae514437039e953689b",
   "url": "https://github.com/pymc-devs/pymc/archive/v2.3.8.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "pymc",
 "new_version": "2.3.8",
 "new_version_attempts": {
  "2.3.8": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "PyMC is a python module that implements Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo. Its flexibility and extensibility make it applicable to a large suite of problems. Along with core sampling functionality, PyMC includes methods for summarizing output, plotting, goodness-of-fit and convergence diagnostics.\n",
   "dev_url": "https://github.com/pymc-devs/pymc",
   "doc_url": "http://pymc-devs.github.io/pymc/",
   "home": "http://github.com/pymc-devs/pymc",
   "license": "AFL-3.0",
   "license_family": "OTHER",
   "license_file": "LICENSE",
   "summary": "PyMC: Bayesian Stochastic Modelling in Python"
  },
  "build": {
   "number": "2",
   "script": [
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv",
    "export LDFLAGS=\"-undefined dynamic_lookup -bundle\"",
    "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf",
    "fonnesbeck",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "pymc",
   "version": "2.3.8"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip",
    "libblas",
    "libcblas",
    "python",
    "numpy",
    "pip"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "200a28469d574a370fa9b55cd92f112f8ad09f71674bdae514437039e953689b",
   "url": "https://github.com/pymc-devs/pymc/archive/v2.3.8.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils",
    "pymc",
    "pymc.database",
    "pymc.examples",
    "pymc.gp",
    "pymc.gp.cov_funs",
    "pymc.Container_values",
    "pymc.LazyFunction",
    "pymc.flib",
    "pymc.gp.cov_funs.distances",
    "pymc.gp.cov_funs.isotropic_cov_funs",
    "pymc.gp.incomplete_chol",
    "pymc.gp.linalg_utils"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pymc"
  ]
 },
 "pinning_version": "2021.01.22.02.33.32",
 "raw_meta_yaml": "{% set version = \"2.3.8\" %}\n\npackage:\n  name: pymc\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pymc-devs/pymc/archive/v{{ version }}.tar.gz\n  sha256: 200a28469d574a370fa9b55cd92f112f8ad09f71674bdae514437039e953689b\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  script:\n    - export LDFLAGS=\"-undefined dynamic_lookup -bundle\"  # [osx]\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}\n  host:\n    - libblas\n    - libcblas\n    - python\n    - numpy\n    - pip\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  imports:\n    - pymc\n    - pymc.database\n    - pymc.examples\n    - pymc.gp\n    - pymc.gp.cov_funs\n    - pymc.Container_values\n    - pymc.LazyFunction\n    - pymc.flib\n    - pymc.gp.cov_funs.distances\n    - pymc.gp.cov_funs.isotropic_cov_funs\n    - pymc.gp.incomplete_chol\n    - pymc.gp.linalg_utils\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: http://github.com/pymc-devs/pymc\n  license: AFL-3.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: 'PyMC: Bayesian Stochastic Modelling in Python'\n\n  description: |\n    PyMC is a python module that implements Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo. Its flexibility and extensibility make it applicable to a large suite of problems. Along with core sampling functionality, PyMC includes methods for summarizing output, plotting, goodness-of-fit and convergence diagnostics.\n  doc_url: http://pymc-devs.github.io/pymc/\n  dev_url: https://github.com/pymc-devs/pymc\n\nextra:\n  recipe-maintainers:\n    - fonnesbeck\n    - ocefpaf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fortran_compiler_stub",
   "libblas",
   "libcblas",
   "numpy",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libblas",
    "libcblas",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/pymc-devs/pymc/archive/v2.3.8.tar.gz",
 "version": "2.3.8"
}