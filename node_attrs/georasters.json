{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/207746769.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216525265.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242126822.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.15"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/306552917.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "gdal-3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/376198840.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/424868503.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.17"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/425470488.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.19"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488887802.json"
   },
   "data": {
    "bot_rerun": 1605892629.4276023,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/522059808.json"
   },
   "data": {
    "bot_rerun": 1610579602.2885835,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.5.21"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "georasters",
 "hash_type": "sha256",
 "name": "georasters",
 "new_version": "0.5.23",
 "new_version_attempts": {
  "0.5.17": 1,
  "0.5.19": 1,
  "0.5.20": 1,
  "0.5.21": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "georasters"
  ]
 },
 "pinning_version": "2020.11.16.18.10.02",
 "raw_meta_yaml": "{% set name = \"georasters\" %}\n{% set version = \"0.5.23\" %}\n{% set sha256 = \"a8e23569ce2d8b21c69b0bbcfb01a30d2dad7d6e32455c669d4c322b0084ac22\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - pip\n    - python\n  run:\n    - python\n    - numpy\n    - pandas\n    - docopt\n    - gdal\n    - pyproj\n    - scikit-image\n    - matplotlib-base\n    - coverage\n    - fiona\n    - geopandas\n    - pysal\n    - affine\n    - rasterstats >=0.12\n\ntest:\n  imports:\n    - georasters\n  requires:\n    - coverage\n    - pyshp >=1.1.4\n    - pytest\n    - pytest-cov >=2.2.0\n\nabout:\n  home: http://github.com/ozak/georasters\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: Tools for working with Geographical Information System Rasters\n\n  description: |\n    The GeoRasters package is a python module that provides\n    a fast and flexible tool to work with GIS raster files.\n    It provides the GeoRaster class, which makes working with\n    rasters quite transparent and easy. In a way it tries to do\n    for rasters what GeoPandas does for geometries.\n\n    It includes tools to\n\n    * Merge rasters\n    * Plot rasters\n    * Extract information from rasters\n    * Given a point (lat,lon) find its location in a raster\n    * Aggregate rasters to lower resolutions\n    * Align two rasters of different sizes to common area and size\n    * Get all the geographical information of raster\n    * Create GeoTiff files easily\n    * Load GeoTiff files as masked numpy rasters\n    * Clip raster using geometries\n    * Get zonal statistics using geometries\n    * Spatial analysis tools\n\n  doc_url: http://georasters.readthedocs.io/\n  dev_url: https://github.com/ozak/georasters\n\nextra:\n  recipe-maintainers:\n    - ozak\n",
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/g/georasters/georasters-0.5.23.tar.gz",
 "version": "0.5.23"
}