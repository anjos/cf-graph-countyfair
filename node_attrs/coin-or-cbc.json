{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/486895590.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/626591962.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/820321940.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/832128799.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/929217563.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.10.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/929219105.json"
   },
   "data": {
    "bot_rerun": 1651811982.2354498,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/929331911.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "coin-or-cbc",
 "hash_type": "sha256",
 "name": "coin-or-cbc-meta",
 "new_version": "2.10.8",
 "new_version_attempts": {
  "2.10.5": 1,
  "2.10.6": 1,
  "2.10.7": 1,
  "2.10.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "coin-or-cbc",
   "coincbc"
  ]
 },
 "pinning_version": "2022.05.05.18.43.04",
 "raw_meta_yaml": "{% set version = \"2.10.8\" %}\n\npackage:\n  name: coin-or-cbc-meta\n  version: {{ version }}\n\nsource:\n  url: https://github.com/coin-or/Cbc/archive/releases/{{ version }}.tar.gz\n  sha256: 8525abb541ee1b8e6ff03b00411b66e98bbc58f95be1aefd49d2bca571be2eaf\n  patches:\n    - patches/0001-Patch-for-downstream.patch\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\noutputs:\n  - name: coin-or-cbc\n    script: build_package.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"coin-or-cbc\", min_pin='x.x', max_pin='x.x') }}\n\n    requirements:\n      build:\n        - gnuconfig  # [unix]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - pkg-config\n        - make  # [unix]\n      host:\n        - coin-or-cgl\n        - coin-or-clp\n        - coin-or-osi\n        - coin-or-utils\n      run_constrained:\n        - coincbc * *_metapackage\n\n    test:\n      files:\n        - test.lp\n      commands:\n        - test -f $PREFIX/lib/libCbc${SHLIB_EXT}\n        - test -f $PREFIX/include/coin/CbcConfig.h\n        - test -f $PREFIX/lib/libCbcSolver${SHLIB_EXT}\n        - test -f $PREFIX/lib/libOsiCbc${SHLIB_EXT}\n        - cbc -import test.lp -solve -solution '$' | tr -s ' ' | grep '1 y 1 0'\n        - cbc test.lp solve solution '$' | tr -s ' ' | grep '1 y 1 0'\n\n    about:\n      home: https://projects.coin-or.org/Cbc\n      dev_url: https://github.com/coin-or/Cbc\n      license: EPL-2.0\n      license_family: OTHER\n      license_file: LICENSE\n      summary: COIN-OR branch and cut (Cbc)\n      description: |\n        Cbc (Coin-or branch and cut) is an open-source mixed integer linear\n        programming solver written in C++. It can be used as a callable library or\n        using a stand-alone executable. It can be called through AIMMS (through the\n        AIMMSlinks project), AMPL (natively), CMPL, GAMS (through the GAMSlinks\n        project), JuMP, Mathematica, MiniZinc, MPL (through the CoinMP project), PuLP,\n        Python (e.g., cbcpy), and OpenSolver for Excel, among others.\n\n  - name: coincbc\n    build:\n      noarch: generic\n      string: {{ PKG_BUILDNUM }}_metapackage\n    requirements:\n      run:\n        - coin-or-cbc {{ version }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libCbc${SHLIB_EXT}\n\n\nabout:\n  home: https://projects.coin-or.org/Cbc\n  dev_url: https://github.com/coin-or/Cbc\n  license: EPL-2.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: COIN-OR branch and cut (Cbc)\n  description: |\n    Cbc (Coin-or branch and cut) is an open-source mixed integer linear\n    programming solver written in C++. It can be used as a callable library or\n    using a stand-alone executable. It can be called through AIMMS (through the\n    AIMMSlinks project), AMPL (natively), CMPL, GAMS (through the GAMSlinks\n    project), JuMP, Mathematica, MiniZinc, MPL (through the CoinMP project), PuLP,\n    Python (e.g., cbcpy), and OpenSolver for Excel, among others.\n\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - tkralphs\n    - h-vetinari\n  feedstock-name: coin-or-cbc\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://github.com/coin-or/Cbc/archive/releases/2.10.8.tar.gz",
 "version": "2.10.8"
}