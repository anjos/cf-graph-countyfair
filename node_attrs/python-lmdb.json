{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.94"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199997440.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217652404.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/286370641.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.95"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/297457848.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.96"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/306340718.json"
   },
   "data": {
    "bot_rerun": 1597087672.349013,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.97"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335809340.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/337504887.json"
   },
   "data": {
    "bot_rerun": 1603223664.1005301,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.98"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/390196427.json"
   },
   "data": {
    "bot_rerun": 1600812310.022498,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/467384646.json"
   },
   "data": {
    "bot_rerun": 1603216837.9143252,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.99"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/491994731.json"
   },
   "data": {
    "bot_rerun": 1603216837.9147322,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501143944.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507045156.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/508248874.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.99"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552350582.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "python-lmdb",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "LMDB is a fast, memory-efficient, embedded key-value store (it does\nnot require running an external daemon).\nWith memory-mapped files, it has the read performance of a pure\nin-memory database while retaining the persistence of standard\ndisk-based databases.\npython-lmdb is a Python binding for LMDB including a bundled\nversion of LMDB.\n",
   "dev_url": "https://github.com/dw/py-lmdb/",
   "doc_url": "https://lmdb.readthedocs.io/",
   "home": "https://lmdb.readthedocs.io/",
   "license": "OpenLDAP",
   "license_file": "LICENSE",
   "summary": "Universal Python binding for the LMDB 'Lightning' Database"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou"
   ]
  },
  "package": {
   "name": "python-lmdb",
   "version": "0.96"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "py-lmdb_0.96.zip",
   "patches": [
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch"
   ],
   "sha256": "b21e2babc3fb024a0d8e5a8e515f18e280e6ab9d6e00c54b991508a0dd34db28",
   "url": "https://github.com/dw/py-lmdb/archive/py-lmdb_0.96.zip"
  },
  "test": {
   "commands": [
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests"
   ],
   "imports": [
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "LMDB is a fast, memory-efficient, embedded key-value store (it does\nnot require running an external daemon).\nWith memory-mapped files, it has the read performance of a pure\nin-memory database while retaining the persistence of standard\ndisk-based databases.\npython-lmdb is a Python binding for LMDB including a bundled\nversion of LMDB.\n",
   "dev_url": "https://github.com/dw/py-lmdb/",
   "doc_url": "https://lmdb.readthedocs.io/",
   "home": "https://lmdb.readthedocs.io/",
   "license": "OpenLDAP",
   "license_file": "LICENSE",
   "summary": "Universal Python binding for the LMDB 'Lightning' Database"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou"
   ]
  },
  "package": {
   "name": "python-lmdb",
   "version": "0.96"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "py-lmdb_0.96.zip",
   "patches": [
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch"
   ],
   "sha256": "b21e2babc3fb024a0d8e5a8e515f18e280e6ab9d6e00c54b991508a0dd34db28",
   "url": "https://github.com/dw/py-lmdb/archive/py-lmdb_0.96.zip"
  },
  "test": {
   "commands": [
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests"
   ],
   "imports": [
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name": "python-lmdb",
 "new_version": "0.99",
 "new_version_attempts": {
  "0.99": 2
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "LMDB is a fast, memory-efficient, embedded key-value store (it does\nnot require running an external daemon).\nWith memory-mapped files, it has the read performance of a pure\nin-memory database while retaining the persistence of standard\ndisk-based databases.\npython-lmdb is a Python binding for LMDB including a bundled\nversion of LMDB.\n",
   "dev_url": "https://github.com/dw/py-lmdb/",
   "doc_url": "https://lmdb.readthedocs.io/",
   "home": "https://lmdb.readthedocs.io/",
   "license": "OpenLDAP",
   "license_file": "LICENSE",
   "summary": "Universal Python binding for the LMDB 'Lightning' Database"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou"
   ]
  },
  "package": {
   "name": "python-lmdb",
   "version": "0.96"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "py-lmdb_0.96.zip",
   "patches": [
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch"
   ],
   "sha256": "b21e2babc3fb024a0d8e5a8e515f18e280e6ab9d6e00c54b991508a0dd34db28",
   "url": "https://github.com/dw/py-lmdb/archive/py-lmdb_0.96.zip"
  },
  "test": {
   "commands": [
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests"
   ],
   "imports": [
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "python-lmdb"
  ]
 },
 "pinning_version": "2021.01.10.01.07.36",
 "raw_meta_yaml": "{% set name = \"python-lmdb\" %}\n{% set pypi_name = \"lmdb\" %}\n{% set github_name = \"py-lmdb\" %}\n{% set version = \"0.96\" %}\n{% set sha256 = \"b21e2babc3fb024a0d8e5a8e515f18e280e6ab9d6e00c54b991508a0dd34db28\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ github_name }}_{{ version }}.zip\n  url: https://github.com/dw/{{ github_name }}/archive/{{ github_name }}_{{ version }}.zip\n  sha256: {{ sha256 }}\n  patches:\n    - windows-skip-tests.patch\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  source_files:\n    - tests\n  requires:\n    - pytest\n  imports:\n    - lmdb\n  commands:\n    - py.test tests\n\nabout:\n  home: https://lmdb.readthedocs.io/\n  license: OpenLDAP\n  license_file: LICENSE\n  summary: \"Universal Python binding for the LMDB 'Lightning' Database\"\n\n  description: |\n    LMDB is a fast, memory-efficient, embedded key-value store (it does\n    not require running an external daemon).\n    With memory-mapped files, it has the read performance of a pure\n    in-memory database while retaining the persistence of standard\n    disk-based databases.\n    python-lmdb is a Python binding for LMDB including a bundled\n    version of LMDB.\n  doc_url: https://lmdb.readthedocs.io/\n  dev_url: https://github.com/dw/py-lmdb/\n\nextra:\n  recipe-maintainers:\n    - pitrou\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.8.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://github.com/dw/py-lmdb/archive/py-lmdb_0.96.zip",
 "version": "0.96",
 "win_64_meta_yaml": {
  "about": {
   "description": "LMDB is a fast, memory-efficient, embedded key-value store (it does\nnot require running an external daemon).\nWith memory-mapped files, it has the read performance of a pure\nin-memory database while retaining the persistence of standard\ndisk-based databases.\npython-lmdb is a Python binding for LMDB including a bundled\nversion of LMDB.\n",
   "dev_url": "https://github.com/dw/py-lmdb/",
   "doc_url": "https://lmdb.readthedocs.io/",
   "home": "https://lmdb.readthedocs.io/",
   "license": "OpenLDAP",
   "license_file": "LICENSE",
   "summary": "Universal Python binding for the LMDB 'Lightning' Database"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "pitrou",
    "pitrou",
    "pitrou",
    "pitrou"
   ]
  },
  "package": {
   "name": "python-lmdb",
   "version": "0.96"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "py-lmdb_0.96.zip",
   "patches": [
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch",
    "windows-skip-tests.patch"
   ],
   "sha256": "b21e2babc3fb024a0d8e5a8e515f18e280e6ab9d6e00c54b991508a0dd34db28",
   "url": "https://github.com/dw/py-lmdb/archive/py-lmdb_0.96.zip"
  },
  "test": {
   "commands": [
    "py.test tests",
    "py.test tests",
    "py.test tests",
    "py.test tests"
   ],
   "imports": [
    "lmdb",
    "lmdb",
    "lmdb",
    "lmdb"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}