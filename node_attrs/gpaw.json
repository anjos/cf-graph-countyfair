{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/276885095.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/303296823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/305465912.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "19.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339386374.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/369041751.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395418500.json"
   },
   "data": {
    "bot_rerun": 1590680963.3165653,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/424586680.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502883588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505944990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "20.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/556810900.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/560303379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677018672.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "21.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/722874365.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/779986420.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/819663186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1031161142.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "22.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038274811.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1115288654.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "gpaw",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation environment\n(ASE). It uses plane-waves, atom-centered basis-functions or real-space\nuniform grids combined with multigrid methods.\n",
   "dev_url": "https://gitlab.com/gpaw/gpaw",
   "doc_url": "https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html",
   "home": "https://wiki.fysik.dtu.dk/gpaw",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "GPAW: DFT and beyond within the projector-augmented wave method"
  },
  "build": {
   "number": "2",
   "string": "py_mpi_openmpi_omp_2",
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval"
   ]
  },
  "package": {
   "name": "gpaw",
   "version": "22.8.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "311eae8cb046f720e77e2e955042758c6e66d37c1fcbaf5d35e2834294a4ed6c",
   "url": "https://pypi.io/packages/source/g/gpaw/gpaw-22.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test"
   ],
   "imports": null,
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ase",
    "elpa",
    "fftw",
    "libblas",
    "libvdwxc",
    "libxc",
    "mpich",
    "numpy",
    "openmpi",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ase",
    "gpaw-data",
    "numpy",
    "python",
    "pyyaml",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation environment\n(ASE). It uses plane-waves, atom-centered basis-functions or real-space\nuniform grids combined with multigrid methods.\n",
   "dev_url": "https://gitlab.com/gpaw/gpaw",
   "doc_url": "https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html",
   "home": "https://wiki.fysik.dtu.dk/gpaw",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "GPAW: DFT and beyond within the projector-augmented wave method"
  },
  "build": {
   "number": "2",
   "string": "py_mpi_mpich_omp_2",
   "track_features": [
    "gpaw-has_lower_priority"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval"
   ]
  },
  "package": {
   "name": "gpaw",
   "version": "22.8.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "311eae8cb046f720e77e2e955042758c6e66d37c1fcbaf5d35e2834294a4ed6c",
   "url": "https://pypi.io/packages/source/g/gpaw/gpaw-22.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test"
   ],
   "imports": null,
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ase",
    "elpa",
    "fftw",
    "libblas",
    "libvdwxc",
    "libxc",
    "mpich",
    "numpy",
    "openmpi",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ase",
    "gpaw-data",
    "numpy",
    "python",
    "pyyaml",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation environment\n(ASE). It uses plane-waves, atom-centered basis-functions or real-space\nuniform grids combined with multigrid methods.\n",
   "dev_url": "https://gitlab.com/gpaw/gpaw",
   "doc_url": "https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html",
   "home": "https://wiki.fysik.dtu.dk/gpaw",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "GPAW: DFT and beyond within the projector-augmented wave method"
  },
  "build": {
   "number": "2",
   "string": "py_mpi_openmpi_omp_2",
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval"
   ]
  },
  "package": {
   "name": "gpaw",
   "version": "22.8.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "311eae8cb046f720e77e2e955042758c6e66d37c1fcbaf5d35e2834294a4ed6c",
   "url": "https://pypi.io/packages/source/g/gpaw/gpaw-22.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test"
   ],
   "imports": null,
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ase",
    "elpa",
    "fftw",
    "libblas",
    "libvdwxc",
    "libxc",
    "mpich",
    "numpy",
    "openmpi",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ase",
    "gpaw-data",
    "numpy",
    "python",
    "pyyaml",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation environment\n(ASE). It uses plane-waves, atom-centered basis-functions or real-space\nuniform grids combined with multigrid methods.\n",
   "dev_url": "https://gitlab.com/gpaw/gpaw",
   "doc_url": "https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html",
   "home": "https://wiki.fysik.dtu.dk/gpaw",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "GPAW: DFT and beyond within the projector-augmented wave method"
  },
  "build": {
   "number": "2",
   "string": "py_mpi_openmpi_omp_2",
   "track_features": null
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval",
    "jan-janssen",
    "gdonval"
   ]
  },
  "package": {
   "name": "gpaw",
   "version": "22.8.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "python",
    "elpa * nompi_*",
    "libxc >=5.2",
    "libblas",
    "fftw * nompi_*",
    "numpy",
    "pip",
    "ase",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "mpich",
    "python",
    "elpa * mpi_mpich_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_mpich_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_mpich_*",
    "openmpi",
    "python",
    "elpa * mpi_openmpi_*",
    "libxc >=5.2",
    "libblas",
    "scalapack",
    "fftw * mpi_openmpi_*",
    "numpy",
    "pip",
    "ase",
    "libvdwxc * mpi_openmpi_*"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml",
    "python",
    "numpy",
    "scipy",
    "ase",
    "gpaw-data",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "311eae8cb046f720e77e2e955042758c6e66d37c1fcbaf5d35e2834294a4ed6c",
   "url": "https://pypi.io/packages/source/g/gpaw/gpaw-22.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "gpaw test",
    "python -m pip check",
    "export OMPI_MCA_plm=isolated",
    "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
    "export OMPI_MCA_rmaps_base_oversubscribe=yes",
    "python -c \"import gpaw\"",
    "gpaw test"
   ],
   "imports": null,
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "gpaw",
 "new_version": "22.8.0",
 "new_version_attempts": {
  "20.10.0": 1,
  "21.1.0": 1,
  "21.6.0": 1,
  "22.1.0": 1,
  "22.8.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gpaw"
  ]
 },
 "pinning_version": "2022.11.08.22.20.06",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set build = 2 %}\n{% set name = \"gpaw\" %}\n{% set version = \"22.8.0\" %}\n\n{% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n  {% set mpi_prefix = \"nompi\" %}\n{% endif %}\n{% set build_string = \"py{}_{}_omp_{}\".format(environ.get('CONDA_PY', ''), mpi_prefix, build) %}\n\n\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 311eae8cb046f720e77e2e955042758c6e66d37c1fcbaf5d35e2834294a4ed6c\n\nbuild:\n  number: {{ build }}\n  string: {{ build_string }}\n  skip: true  # [not linux]\n  track_features:\n    - gpaw-has_lower_priority  # [mpi != \"openmpi\"]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - python\n    - elpa * {{ mpi_prefix }}_*\n    - libxc >=5.2\n    - libblas\n    - scalapack  # [mpi != 'nompi']\n    - fftw * {{ mpi_prefix }}_*\n    - numpy\n    - pip\n    - ase\n    - libvdwxc * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - ase\n    - gpaw-data\n    - pyyaml\n\ntest:\n  requires:\n    - pip\n  imports:\n    - gpaw  # [mpi == 'nompi']\n  commands:\n    - python -m pip check\n    - export OMPI_MCA_plm=isolated                          # [mpi == 'openmpi']\n    - export OMPI_MCA_btl_vader_single_copy_mechanism=none  # [mpi == 'openmpi']\n    - export OMPI_MCA_rmaps_base_oversubscribe=yes          # [mpi == 'openmpi']\n    - python -c \"import gpaw\"                               # [mpi == 'openmpi']\n    - gpaw test\n\nabout:\n  home: https://wiki.fysik.dtu.dk/gpaw\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'GPAW: DFT and beyond within the projector-augmented wave method'\n  description: |\n    GPAW is a density-functional theory (DFT) Python code based on the\n    projector-augmented wave (PAW) method and the atomic simulation environment\n    (ASE). It uses plane-waves, atom-centered basis-functions or real-space\n    uniform grids combined with multigrid methods.\n  doc_url: https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html\n  dev_url: https://gitlab.com/gpaw/gpaw\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - gdonval\n",
 "req": {
  "__set__": true,
  "elements": [
   "ase",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "elpa",
   "fftw",
   "gpaw-data",
   "libblas",
   "libvdwxc",
   "libxc",
   "mpich",
   "numpy",
   "openmpi",
   "pip",
   "python",
   "pyyaml",
   "scalapack",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ase",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "elpa",
    "fftw",
    "libblas",
    "libvdwxc",
    "libxc",
    "mpich",
    "numpy",
    "openmpi",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ase",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "gpaw-data",
    "numpy",
    "python",
    "pyyaml",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ase",
    "elpa * mpi_mpich_*",
    "elpa * mpi_openmpi_*",
    "elpa * nompi_*",
    "fftw * mpi_mpich_*",
    "fftw * mpi_openmpi_*",
    "fftw * nompi_*",
    "libblas",
    "libvdwxc * mpi_mpich_*",
    "libvdwxc * mpi_openmpi_*",
    "libxc >=5.2",
    "mpich",
    "numpy",
    "openmpi",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ase",
    "gpaw-data",
    "numpy",
    "python",
    "pyyaml",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/g/gpaw/gpaw-22.8.0.tar.gz",
 "version": "22.8.0"
}