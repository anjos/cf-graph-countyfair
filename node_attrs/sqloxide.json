{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/926439907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926784650.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "sqloxide",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The original goal of this project was to have a very fast, efficient, and accurate\nSQL parser I could use for building data lineage graphs across large code bases\n(think hundreds of auto-generated .sql files). Most existing sql parsing approaches\nfor python are either very slow or not accurate (especially in regards to deeply\nnested queries, sub-selects and/or table aliases). Looking to the rust community\nfor support, I found the excellent sqlparser-rs crate which is quite easy to wrap\nin python code.\n",
   "home": "https://github.com/wseaton/sqloxide",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for sqlparser-rs"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "sqloxide",
   "version": "0.1.15"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "5e46a472305d5a5ad1645ff930dc7d8da92563ea5804622c16d11db85f54d4f9",
   "url": "https://github.com/wseaton/sqloxide/archive/refs/tags/v0.1.15.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python",
    "setuptools",
    "setuptools-rust",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The original goal of this project was to have a very fast, efficient, and accurate\nSQL parser I could use for building data lineage graphs across large code bases\n(think hundreds of auto-generated .sql files). Most existing sql parsing approaches\nfor python are either very slow or not accurate (especially in regards to deeply\nnested queries, sub-selects and/or table aliases). Looking to the rust community\nfor support, I found the excellent sqlparser-rs crate which is quite easy to wrap\nin python code.\n",
   "home": "https://github.com/wseaton/sqloxide",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for sqlparser-rs"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "sqloxide",
   "version": "0.1.15"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "5e46a472305d5a5ad1645ff930dc7d8da92563ea5804622c16d11db85f54d4f9",
   "url": "https://github.com/wseaton/sqloxide/archive/refs/tags/v0.1.15.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "sqloxide",
 "new_version": "0.1.15",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The original goal of this project was to have a very fast, efficient, and accurate\nSQL parser I could use for building data lineage graphs across large code bases\n(think hundreds of auto-generated .sql files). Most existing sql parsing approaches\nfor python are either very slow or not accurate (especially in regards to deeply\nnested queries, sub-selects and/or table aliases). Looking to the rust community\nfor support, I found the excellent sqlparser-rs crate which is quite easy to wrap\nin python code.\n",
   "home": "https://github.com/wseaton/sqloxide",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for sqlparser-rs"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "sqloxide",
   "version": "0.1.15"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "5e46a472305d5a5ad1645ff930dc7d8da92563ea5804622c16d11db85f54d4f9",
   "url": "https://github.com/wseaton/sqloxide/archive/refs/tags/v0.1.15.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python",
    "setuptools",
    "setuptools-rust",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "sqloxide"
  ]
 },
 "pinning_version": "2022.05.03.11.39.11",
 "raw_meta_yaml": "{% set name = \"sqloxide\" %}\n{% set version = \"0.1.15\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/wseaton/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 5e46a472305d5a5ad1645ff930dc7d8da92563ea5804622c16d11db85f54d4f9\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('rust') }}\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - poetry-core >=1.0.0\n    - setuptools >=41.0.0\n    - wheel\n    - setuptools-rust >=0.10.2\n  run:\n    - python\n\ntest:\n  imports:\n    - sqloxide\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/wseaton/{{ name }}\n  summary: 'Python bindings for sqlparser-rs'\n  description: |\n    The original goal of this project was to have a very fast, efficient, and accurate \n    SQL parser I could use for building data lineage graphs across large code bases \n    (think hundreds of auto-generated .sql files). Most existing sql parsing approaches \n    for python are either very slow or not accurate (especially in regards to deeply \n    nested queries, sub-selects and/or table aliases). Looking to the rust community \n    for support, I found the excellent sqlparser-rs crate which is quite easy to wrap \n    in python code.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - xmnlab\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "pip",
   "poetry-core",
   "python",
   "rust_compiler_stub",
   "setuptools",
   "setuptools-rust",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "poetry-core",
    "python",
    "setuptools",
    "setuptools-rust",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core >=1.0.0",
    "python",
    "setuptools >=41.0.0",
    "setuptools-rust >=0.10.2",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/wseaton/sqloxide/archive/refs/tags/v0.1.15.tar.gz",
 "version": "0.1.15",
 "win_64_meta_yaml": {
  "about": {
   "description": "The original goal of this project was to have a very fast, efficient, and accurate\nSQL parser I could use for building data lineage graphs across large code bases\n(think hundreds of auto-generated .sql files). Most existing sql parsing approaches\nfor python are either very slow or not accurate (especially in regards to deeply\nnested queries, sub-selects and/or table aliases). Looking to the rust community\nfor support, I found the excellent sqlparser-rs crate which is quite easy to wrap\nin python code.\n",
   "home": "https://github.com/wseaton/sqloxide",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python bindings for sqlparser-rs"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "xmnlab",
    "xmnlab",
    "xmnlab",
    "xmnlab"
   ]
  },
  "package": {
   "name": "sqloxide",
   "version": "0.1.15"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2",
    "python",
    "pip",
    "poetry-core >=1.0.0",
    "setuptools >=41.0.0",
    "wheel",
    "setuptools-rust >=0.10.2"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "5e46a472305d5a5ad1645ff930dc7d8da92563ea5804622c16d11db85f54d4f9",
   "url": "https://github.com/wseaton/sqloxide/archive/refs/tags/v0.1.15.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "sqloxide",
    "sqloxide",
    "sqloxide",
    "sqloxide"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python",
    "setuptools",
    "setuptools-rust",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}