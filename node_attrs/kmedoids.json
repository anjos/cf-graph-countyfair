{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1131707617.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1131731325.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1132049780.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "kmedoids",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This python package implements k-medoids clustering with PAM and variants of clustering by direct optimization of the (Medoid) Silhouette. It can be used with arbitrary dissimilarites, as it only requires a dissimilarity matrix as input. A sklearn compatible API is included.",
   "dev_url": "https://github.com/kno10/python-kmedoids",
   "doc_url": "https://python-kmedoids.readthedocs.io/",
   "home": "https://github.com/kno10/python-kmedoids",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE"
   ],
   "summary": "k-Medoids Clustering in Python with FasterPAM"
  },
  "build": {
   "number": "0",
   "script": [
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009"
   ]
  },
  "package": {
   "name": "kmedoids",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d334848ecc0d4b17c0e041b975f29b1963cd64e7c3743d9b9ec157ae5780e2c2",
   "url": "https://github.com/kno10/python-kmedoids/archive/refs/tags/v0.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover"
   ],
   "imports": [
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This python package implements k-medoids clustering with PAM and variants of clustering by direct optimization of the (Medoid) Silhouette. It can be used with arbitrary dissimilarites, as it only requires a dissimilarity matrix as input. A sklearn compatible API is included.",
   "dev_url": "https://github.com/kno10/python-kmedoids",
   "doc_url": "https://python-kmedoids.readthedocs.io/",
   "home": "https://github.com/kno10/python-kmedoids",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE"
   ],
   "summary": "k-Medoids Clustering in Python with FasterPAM"
  },
  "build": {
   "number": "0",
   "script": [
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009"
   ]
  },
  "package": {
   "name": "kmedoids",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d334848ecc0d4b17c0e041b975f29b1963cd64e7c3743d9b9ec157ae5780e2c2",
   "url": "https://github.com/kno10/python-kmedoids/archive/refs/tags/v0.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover"
   ],
   "imports": [
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name": "kmedoids",
 "new_version": "1.0.6",
 "new_version_attempts": {
  "1.0.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "This python package implements k-medoids clustering with PAM and variants of clustering by direct optimization of the (Medoid) Silhouette. It can be used with arbitrary dissimilarites, as it only requires a dissimilarity matrix as input. A sklearn compatible API is included.",
   "dev_url": "https://github.com/kno10/python-kmedoids",
   "doc_url": "https://python-kmedoids.readthedocs.io/",
   "home": "https://github.com/kno10/python-kmedoids",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE"
   ],
   "summary": "k-Medoids Clustering in Python with FasterPAM"
  },
  "build": {
   "number": "0",
   "script": [
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps --ignore-installed -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009"
   ]
  },
  "package": {
   "name": "kmedoids",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d334848ecc0d4b17c0e041b975f29b1963cd64e7c3743d9b9ec157ae5780e2c2",
   "url": "https://github.com/kno10/python-kmedoids/archive/refs/tags/v0.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover"
   ],
   "imports": [
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "kmedoids"
  ]
 },
 "pinning_version": "2022.11.22.12.08.38",
 "raw_meta_yaml": "{% set version = \"0.4.1\" %}\n\npackage:\n  name: kmedoids\n  version: {{ version }}\n\nsource:\n  url: https://github.com/kno10/python-kmedoids/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: d334848ecc0d4b17c0e041b975f29b1963cd64e7c3743d9b9ec157ae5780e2c2\n\nbuild:\n  number: 0\n  script:\n    - export CARGO_NET_GIT_FETCH_WITH_CLI=true\n    - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml\n    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }} # used by Rust\n    - {{ compiler('rust') }}\n    - cargo-bundle-licenses\n  host:\n    - python\n    - pip\n    - maturin\n    - numpy\n  run:\n    - python\n    - numpy\n\ntest:\n  imports:\n    - kmedoids\n    - kmedoids.kmedoids\n  requires:\n    - pip\n    - pytest\n  source_files:\n    - tests\n  commands:\n    - pip check\n    - cd tests && python -m unittest discover\n\nabout:\n  home: https://github.com/kno10/python-kmedoids\n  summary: 'k-Medoids Clustering in Python with FasterPAM'\n  description:\n    This python package implements k-medoids clustering with PAM and\n    variants of clustering by direct optimization of the (Medoid) Silhouette.\n    It can be used with arbitrary dissimilarites, as it only requires\n    a dissimilarity matrix as input. A sklearn compatible API is included.\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file:\n    - THIRDPARTY.yml\n    - LICENSE\n  doc_url: https://python-kmedoids.readthedocs.io/\n  dev_url: https://github.com/kno10/python-kmedoids\n\nextra:\n  recipe-maintainers:\n    - kno10\n    - lale1009\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cargo-bundle-licenses",
   "maturin",
   "numpy",
   "pip",
   "python",
   "rust_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "maturin",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/kno10/python-kmedoids/archive/refs/tags/v0.4.1.tar.gz",
 "version": "0.4.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "This python package implements k-medoids clustering with PAM and variants of clustering by direct optimization of the (Medoid) Silhouette. It can be used with arbitrary dissimilarites, as it only requires a dissimilarity matrix as input. A sklearn compatible API is included.",
   "dev_url": "https://github.com/kno10/python-kmedoids",
   "doc_url": "https://python-kmedoids.readthedocs.io/",
   "home": "https://github.com/kno10/python-kmedoids",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": [
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE"
   ],
   "summary": "k-Medoids Clustering in Python with FasterPAM"
  },
  "build": {
   "number": "0",
   "script": [
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv",
    "export CARGO_NET_GIT_FETCH_WITH_CLI=true",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps --ignore-installed -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "kno10",
    "lale1009",
    "kno10",
    "lale1009",
    "kno10",
    "lale1009"
   ]
  },
  "package": {
   "name": "kmedoids",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy",
    "python",
    "pip",
    "maturin",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d334848ecc0d4b17c0e041b975f29b1963cd64e7c3743d9b9ec157ae5780e2c2",
   "url": "https://github.com/kno10/python-kmedoids/archive/refs/tags/v0.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover",
    "pip check",
    "cd tests && python -m unittest discover"
   ],
   "imports": [
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids",
    "kmedoids",
    "kmedoids.kmedoids"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 }
}