{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/424961556.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/657492107.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-unbalanced",
 "hash_type": "sha256",
 "name": "r-unbalanced",
 "new_version": "2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-unbalanced"
  ]
 },
 "pinning_version": "2021.05.29.05.58.58",
 "raw_meta_yaml": "{% set version = '2.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-unbalanced\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/unbalanced_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/unbalanced/unbalanced_{{ version }}.tar.gz\n  sha256: 9be32b1ce9d972f1abfff2fbe18f5bb5ba9c3f4fb1282063dc410b82ad4d1ea2\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-fnn\n    - r-rann\n    - r-doparallel\n    - r-foreach\n    - r-mlr\n  run:\n    - r-base\n    - r-fnn\n    - r-rann\n    - r-doparallel\n    - r-foreach\n    - r-mlr\n\ntest:\n  commands:\n    - $R -e \"library('unbalanced')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('unbalanced')\\\"\"  # [win]\n\nabout:\n  home: http://mlg.ulb.ac.be\n  license: GPL-3.0-or-later\n  summary: A dataset is said to be unbalanced when the class of interest (minority class) is\n    much rarer than normal behaviour (majority class). The cost of missing a minority\n    class is typically much higher that missing a majority class. Most learning systems\n    are not prepared to cope with unbalanced data and several techniques have been proposed.\n    This package implements some of most well-known techniques and propose a racing\n    algorithm to select adaptively the most appropriate strategy for a given unbalanced\n    task.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: unbalanced\n# Type: Package\n# Title: Racing for Unbalanced Methods Selection\n# Version: 2.0\n# Date: 2015-06-25\n# Author: Andrea Dal Pozzolo, Olivier Caelen and Gianluca Bontempi\n# Maintainer: Andrea Dal Pozzolo <adalpozz@ulb.ac.be>\n# Description: A dataset is said to be unbalanced when the class of interest (minority class) is much rarer than normal behaviour (majority class). The cost of missing a minority class is typically much higher that missing a majority class. Most learning systems are not prepared to cope with unbalanced data and several techniques have been proposed. This package implements some of most well-known techniques and propose a racing algorithm to select adaptively the most appropriate strategy for a given unbalanced task.\n# License: GPL (>= 3)\n# URL: http://mlg.ulb.ac.be\n# Depends: mlr, foreach, doParallel\n# Imports: FNN, RANN\n# Suggests: randomForest, ROCR\n# Packaged: 2015-06-26 09:54:30 UTC; Andrea\n# NeedsCompilation: no\n# Repository: CRAN\n# Date/Publication: 2015-06-26 13:34:37\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/unbalanced_2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/unbalanced/unbalanced_2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/unbalanced_2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/unbalanced/unbalanced_2.0.tar.gz"
 ],
 "version": "2.0"
}