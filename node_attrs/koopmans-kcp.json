{
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "koopmans-kcp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "koopmans-kcp is an implementation of Koopmans functionals in Quantum\nESPRESSO v4.1 with full orbital optimization. Instead of using this\nas a stand-alone code, it is strongly recommended you install and use\nthe larger koopmans package <https://koopmans-functionals.org>.\n",
   "dev_url": "https://github.com/epfl-theos/koopmans-kcp",
   "doc_url": "https://koopmans-functionals.org",
   "home": "https://github.com/epfl-theos/koopmans-kcp",
   "license": "GPL-2.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of Koopmans functionals with full orbital optimization in Quantum ESPRESSO v4.1"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "elinscott",
    "nscolonna"
   ]
  },
  "package": {
   "name": "koopmans-kcp",
   "version": "0.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "openmpi-mpifort",
    "make"
   ],
   "host": [
    "fftw",
    "libblas",
    "liblapack",
    "openmpi"
   ],
   "run": [
    "fftw",
    "openmpi"
   ]
  },
  "source": {
   "sha256": "e3740eca2ba2feadddafefbda5a56584227f051250f477f6028a3408a3fe4665",
   "url": "https://github.com/epfl-theos/koopmans-kcp/archive/v0.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/kcp.x"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "openmpi-mpifort"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "libblas",
    "liblapack",
    "openmpi"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "koopmans-kcp is an implementation of Koopmans functionals in Quantum\nESPRESSO v4.1 with full orbital optimization. Instead of using this\nas a stand-alone code, it is strongly recommended you install and use\nthe larger koopmans package <https://koopmans-functionals.org>.\n",
   "dev_url": "https://github.com/epfl-theos/koopmans-kcp",
   "doc_url": "https://koopmans-functionals.org",
   "home": "https://github.com/epfl-theos/koopmans-kcp",
   "license": "GPL-2.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of Koopmans functionals with full orbital optimization in Quantum ESPRESSO v4.1"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "elinscott",
    "nscolonna",
    "elinscott",
    "nscolonna"
   ]
  },
  "package": {
   "name": "koopmans-kcp",
   "version": "0.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "openmpi-mpifort",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "openmpi-mpifort",
    "make"
   ],
   "host": [
    "fftw",
    "libblas",
    "liblapack",
    "openmpi",
    "fftw",
    "libblas",
    "liblapack",
    "openmpi"
   ],
   "run": [
    "fftw",
    "openmpi",
    "fftw",
    "openmpi"
   ]
  },
  "source": {
   "sha256": "e3740eca2ba2feadddafefbda5a56584227f051250f477f6028a3408a3fe4665",
   "url": "https://github.com/epfl-theos/koopmans-kcp/archive/v0.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/kcp.x",
    "test -f ${PREFIX}/bin/kcp.x"
   ]
  }
 },
 "name": "koopmans-kcp",
 "new_version": "0.1.2",
 "osx_64_meta_yaml": {
  "about": {
   "description": "koopmans-kcp is an implementation of Koopmans functionals in Quantum\nESPRESSO v4.1 with full orbital optimization. Instead of using this\nas a stand-alone code, it is strongly recommended you install and use\nthe larger koopmans package <https://koopmans-functionals.org>.\n",
   "dev_url": "https://github.com/epfl-theos/koopmans-kcp",
   "doc_url": "https://koopmans-functionals.org",
   "home": "https://github.com/epfl-theos/koopmans-kcp",
   "license": "GPL-2.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of Koopmans functionals with full orbital optimization in Quantum ESPRESSO v4.1"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "elinscott",
    "nscolonna"
   ]
  },
  "package": {
   "name": "koopmans-kcp",
   "version": "0.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "openmpi-mpifort",
    "make"
   ],
   "host": [
    "fftw",
    "libblas",
    "liblapack",
    "openmpi"
   ],
   "run": [
    "fftw",
    "openmpi"
   ]
  },
  "source": {
   "sha256": "e3740eca2ba2feadddafefbda5a56584227f051250f477f6028a3408a3fe4665",
   "url": "https://github.com/epfl-theos/koopmans-kcp/archive/v0.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/kcp.x"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "openmpi-mpifort"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "libblas",
    "liblapack",
    "openmpi"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "koopmans-kcp"
  ]
 },
 "raw_meta_yaml": "{% set name = \"koopmans-kcp\" %}\n{% set version = \"0.1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/epfl-theos/koopmans-kcp/archive/v{{ version }}.tar.gz\n  sha256: e3740eca2ba2feadddafefbda5a56584227f051250f477f6028a3408a3fe4665\n\nbuild:\n  number: 0\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}\n    - openmpi-mpifort\n    - make\n  host:\n    - fftw\n    - libblas\n    - liblapack\n    - openmpi\n  run:\n    - fftw\n    - openmpi\n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/kcp.x\n\nabout:\n  home: https://github.com/epfl-theos/koopmans-kcp\n  summary: 'Implementation of Koopmans functionals with full orbital optimization in Quantum ESPRESSO v4.1'\n  description: |\n    koopmans-kcp is an implementation of Koopmans functionals in Quantum\n    ESPRESSO v4.1 with full orbital optimization. Instead of using this\n    as a stand-alone code, it is strongly recommended you install and use\n    the larger koopmans package <https://koopmans-functionals.org>.\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: LICENSE\n  doc_url: https://koopmans-functionals.org\n  dev_url: https://github.com/epfl-theos/koopmans-kcp\n\nextra:\n  recipe-maintainers:\n    - elinscott\n    - nscolonna\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "fftw",
   "fortran_compiler_stub",
   "libblas",
   "liblapack",
   "make",
   "openmpi",
   "openmpi-mpifort"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "openmpi-mpifort"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fftw",
    "fortran_compiler_stub",
    "libblas",
    "liblapack",
    "openmpi"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fftw",
    "fortran_compiler_stub",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "openmpi-mpifort"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "libblas",
    "liblapack",
    "openmpi"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "openmpi"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/epfl-theos/koopmans-kcp/archive/v0.1.2.tar.gz",
 "version": "0.1.2"
}