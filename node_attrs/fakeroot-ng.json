{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "fakeroot-ng",
 "hash_type": "sha256",
 "name": "fakeroot-ng",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fakeroot-ng"
  ]
 },
 "raw_meta_yaml": "{% set name = \"fakeroot-ng\" %}\n{% set version = \"0.18\" %}\n{% set sha256 = \"189eacda630752980d40e34b2c01ce23d839daab3d691a4706bb9eac79f7e144\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  # arhived versions url: https://sourceforge.net/projects/fakerootng/files/{{ name }}/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  url: https://sourceforge.net/projects/fakerootng/files/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: True  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make\n\ntest:\n  commands:\n    - conda inspect linkages -p $PREFIX {{ name }}  # [not win]\n    - fakeroot-ng -h\n\nabout:\n  home: https://fakeroot-ng.lingnu.com\n  license: LGPL-2.1-only\n  license_family: LGPL\n  license_file: COPYING\n  summary: 'Fakeroot-ng is a clean re-implementation of fakeroot'\n\n  description: |\n    Fakeroot-ng is a clean re-implementation of fakeroot. The core idea is\n    to run a program, but wrap all system calls that program performs so\n    that it thinks it is running as root, while it is, in practice, running\n    as an unprivileged user. When the program is trying to perform a privileged\n    operation (such as modifying a file's owner or creating a block device),\n    this operation is emulated, so that an unprivileged operation is actually\n    carried out, but the result of the privileged operation is reported to\n    the program whenever it attempts to query the result.\n  dev_url: https://sourceforge.net/projects/fakerootng/\n\nextra:\n  recipe-maintainers:\n    - scopatz\n",
 "strong_exports": false,
 "url": "https://sourceforge.net/projects/fakerootng/files/fakeroot-ng/fakeroot-ng-0.18.tar.gz",
 "version": "0.18"
}