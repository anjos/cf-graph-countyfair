{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/434323625.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/434730946.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.20.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "fakechroot",
 "hash_type": "sha256",
 "name": "fakechroot",
 "new_version": "2.20.1",
 "new_version_attempts": {
  "2.20": 1,
  "2.20.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fakechroot"
  ]
 },
 "pinning_version": "2020.06.15.11.48.40",
 "raw_meta_yaml": "{% set name = \"fakechroot\" %}\n{% set version = \"2.20.1\" %}\n{% set sha256 = \"7f9d60d0d48611969e195fadf84d05f6c74f71bbf8f41950ad8f5bf061773e18\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dex4er/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - libtool >=2.0\n    - automake >=1.10\n    - make\n\ntest:\n  commands:\n    - test -f \"${PREFIX}/bin/fakechroot\"\n\nabout:\n  home: http://github.com/dex4er/fakechroot\n  license: LGPL-2.1-only\n  license_family: LGPL\n  license_file: LICENSE\n  summary: fakechroot runs a command in an environment without requiring root privileges\n\n  description: |\n    fakechroot runs a command in an environment were is additional possibility\n    to use chroot(8) command without root privileges. This is useful for\n    allowing users to create own chrooted environment with possibility to\n    install another packages without need for root privileges.\n  dev_url: http://github.com/dex4er/fakechroot\n\nextra:\n  recipe-maintainers:\n    - scopatz\n",
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports": false,
 "url": "https://github.com/dex4er/fakechroot/archive/2.20.1.tar.gz",
 "version": "2.20.1"
}