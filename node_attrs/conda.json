{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/198512662.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199879136.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200280587.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200525067.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/204871659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/208060728.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/209871166.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/221629602.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/237519672.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.5.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/244908953.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/253953218.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/255249436.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/258968865.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/260827113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/265907294.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/266797464.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/267638941.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/269296461.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/271144675.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.13"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/271477637.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.6.14"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/279973290.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/283885541.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/286900025.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/288379804.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/289901919.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/291319231.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/296861429.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/297260956.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/298675447.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299057774.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/299475253.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/304877538.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/317029753.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.7.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/346447702.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/352498426.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356493790.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/366976725.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/388100665.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1bb7efd7-1414-449c-ac21-c4d7a74467d6.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/464611801.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/486783987.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.8.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/489568186.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503311219.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503558082.json"
   },
   "data": {
    "bot_rerun": 1602893625.295763,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505156727.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/510330859.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519093659.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "conda",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_linux-64",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_linux-aarch64",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_linux-ppc64le",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-aarch64",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_linux-ppc64le",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-arm64",
    "python",
    "cross-python_osx-arm64",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.bat",
    "test_conda.bat",
    "test_conda.bat",
    "test_conda.bat"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "name": "conda",
 "new_version": "4.9.2",
 "new_version_attempts": {
  "4.8.4": 3,
  "4.8.5": 1,
  "4.9.0": 2,
  "4.9.1": 1,
  "4.9.2": 1
 },
 "new_version_errors": {
  "4.8.4": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '4.8.4' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/conda/conda/archive/{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64",
    "python",
    "cross-python_osx-64"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh",
    "test_conda.sh"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_osx-64",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "bin/conda",
    "bin/activate",
    "bin/deactivate",
    "bin/conda",
    "bin/activate",
    "bin/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_osx-arm64",
    "python",
    "cross-python_osx-arm64"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.sh",
    "test_conda.sh"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "mock",
    "pytest",
    "pexpect",
    "responses"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_osx-arm64",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "conda"
  ]
 },
 "pinning_version": "2020.11.10.21.31.03",
 "raw_meta_yaml": "{% set on_win = SUBDIR in ('win-64', 'win-32') %}\n{% set version = \"4.9.2\" %}\n\npackage:\n  name: conda\n  version: {{ version }}\n\nsource:\n  fn: conda-{{ version }}.tar.gz\n  url: https://github.com/conda/conda/archive/{{ version }}.tar.gz\n  sha256: d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54\n  patches:\n    - gh9946_utf_16_replacement.patch\n\nbuild:\n  number: 0\n  # These are present when the new environment is created\n  # so we have to exempt them from the list of initial files\n  # for conda-build to realize they should be included.\n  always_include_files:\n    - bin/conda                    # [unix]\n    - bin/activate                 # [unix]\n    - bin/deactivate               # [unix]\n    - Scripts/activate.bat         # [win]\n    - Scripts/activate             # [win]\n    - Scripts/deactivate           # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - m2-filesystem                # [win]\n    - m2-bash                      # [win]\n    - m2-base                      # [win]\n\n  host:\n    - python\n    - conda-package-handling >=1.3.0\n    - enum34                       # [py<34]\n    - futures >=3.0.0              # [py<34]\n    - menuinst >=1.4.11,<2         # [win]\n    - pip\n    - ruamel_yaml >=0.11.14,<0.16\n    - setuptools >=31.0.1\n  run:\n    - python\n    - conda-package-handling >=1.3.0\n    - enum34                       # [py<34]\n    - futures >=3.0.0              # [py<34]\n    - menuinst >=1.4.11,<2         # [win]\n    - pycosat >=0.6.3\n    - pyopenssl >=16.2.0\n    - requests >=2.18.4,<3\n    - ruamel_yaml >=0.11.14,<0.16\n    - setuptools >=31.0.1\n  run_constrained:\n    - conda-build >=3\n    - conda-env >=2.6\n    - cytoolz >=0.8.1\n\ntest:\n  source_files:\n    - conftest.py\n    - tests\n    - setup.cfg\n  requires:\n    - mock\n    - pytest\n    - pexpect\n    - responses\n    - m2-filesystem  # [win]\n    - m2-bash        # [win]\n    - m2-base        # [win]\n  imports:\n    - conda\n    - conda_env\n  files:\n    - test_conda.bat                # [win]\n    - test_conda.sh                 # [unix]\n  downstreams:\n    - conda-smithy  # [py>=30 and py!=38 and python_impl == \"cpython\"]\n  commands:\n{% if on_win %}\n    - SET CONDA_SHLVL=\n    - CALL %PREFIX%\\condabin\\conda_hook.bat\n    - conda.bat activate base\n    - FOR /F \"delims=\" %%i IN ('python -c \"import sys; print(sys.version_info[0])\"') DO set \"PYTHON_MAJOR_VERSION=%%i\"\n    - SET TEST_PLATFORM=win\n    - FOR /F \"delims=\" %%i IN ('python -c \"import random as r; print(r.randint(0,4294967296))\"') DO set \"PYTHONHASHSEED=%%i\"\n    - SET\n    - where conda\n    - conda info\n    - conda create -y -p .\\built-conda-test-env\n    - conda.bat activate .\\built-conda-test-env\n    - ECHO %CONDA_PREFIX%\n    - IF NOT \"%CONDA_PREFIX%\"==\"%CD%\\built-conda-test-env\" EXIT /B 1\n    - conda.bat deactivate\n    - SET MSYSTEM=MINGW%ARCH%\n    - SET MSYS2_PATH_TYPE=inherit\n    - SET CHERE_INVOKING=1\n    - FOR /F \"delims=\" %%i IN ('cygpath.exe -u \"%PREFIX%\"') DO set \"PREFIXP=%%i\"\n    - bash -lc \"source %PREFIXP%/Scripts/activate\"\n    # - py.test tests -m \"not integration and not installed\" & exit 0\n{% else %}\n    - unset CONDA_SHLVL\n    - eval \"$(python -m conda shell.bash hook)\"\n    - conda activate base\n    - export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")\n    - export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")\n    - export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"\n    - env | sort\n    - conda info\n    - conda create -y -p ./built-conda-test-env\n    - conda activate ./built-conda-test-env\n    - echo $CONDA_PREFIX\n    - '[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1'\n    - conda deactivate\n    # - py.test tests -m \"not integration and not installed\" -vv || true\n{% endif %}\n\nabout:\n  home: https://conda.io\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: OS-agnostic, system-level binary package and environment manager.\n  description: >\n    Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n  doc_url: https://conda.io/projects/conda/en/latest/\n  dev_url: https://github.com/conda/conda\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - jakirkham\n    - jjhelmus\n    - kalefranz\n    - mcg1969\n    - mingwandroid\n    - msarahan\n    - mwcraig\n    - ocefpaf\n    - patricksnape\n    - pelson\n    - scopatz\n    - mbargull\n",
 "req": {
  "__set__": true,
  "elements": [
   "conda-package-handling",
   "cross-python_linux-64",
   "cross-python_linux-aarch64",
   "cross-python_linux-ppc64le",
   "cross-python_osx-64",
   "cross-python_osx-arm64",
   "cross-python_win-64",
   "m2-base",
   "m2-bash",
   "m2-filesystem",
   "menuinst",
   "pip",
   "pycosat",
   "pyopenssl",
   "python",
   "requests",
   "ruamel_yaml",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_linux-64",
    "cross-python_linux-aarch64",
    "cross-python_linux-ppc64le",
    "cross-python_osx-64",
    "cross-python_osx-arm64",
    "cross-python_win-64",
    "m2-base",
    "m2-bash",
    "m2-filesystem",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "cross-python",
    "menuinst",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "cross-python",
    "menuinst",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "m2-base",
    "m2-bash",
    "m2-filesystem",
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_linux-64",
    "cross-python_linux-aarch64",
    "cross-python_linux-ppc64le",
    "cross-python_osx-64",
    "cross-python_osx-arm64",
    "cross-python_win-64",
    "m2-base",
    "m2-bash",
    "m2-filesystem",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "python",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "python",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "m2-base",
    "m2-bash",
    "m2-filesystem",
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 },
 "url": "https://github.com/conda/conda/archive/4.7.11.tar.gz",
 "version": "4.9.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.\n",
   "dev_url": "https://github.com/conda/conda",
   "doc_url": "https://conda.io/projects/conda/en/latest/",
   "home": "https://conda.io",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "OS-agnostic, system-level binary package and environment manager."
  },
  "build": {
   "always_include_files": [
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate",
    "Scripts/activate.bat",
    "Scripts/activate",
    "Scripts/deactivate"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "kalefranz",
    "mcg1969",
    "mingwandroid",
    "msarahan",
    "mwcraig",
    "ocefpaf",
    "patricksnape",
    "pelson",
    "scopatz",
    "mbargull"
   ]
  },
  "package": {
   "name": "conda",
   "version": "4.9.2"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "python",
    "cross-python_win-64",
    "m2-filesystem",
    "m2-bash",
    "m2-base"
   ],
   "host": [
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pip",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run": [
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1",
    "python",
    "conda-package-handling >=1.3.0",
    "menuinst >=1.4.11,<2",
    "pycosat >=0.6.3",
    "pyopenssl >=16.2.0",
    "requests >=2.18.4,<3",
    "ruamel_yaml >=0.11.14,<0.16",
    "setuptools >=31.0.1"
   ],
   "run_constrained": [
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1",
    "conda-build >=3",
    "conda-env >=2.6",
    "cytoolz >=0.8.1"
   ]
  },
  "source": {
   "fn": "conda-4.9.2.tar.gz",
   "patches": [
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch",
    "gh9946_utf_16_replacement.patch"
   ],
   "sha256": "d7f946e5c770e45da8961323ca96399bf1a881eb68bbaecc7cb1e249f5c86d54",
   "url": "https://github.com/conda/conda/archive/4.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate",
    "unset CONDA_SHLVL",
    "eval \"$(python -m conda shell.bash hook)\"",
    "conda activate base",
    "export PYTHON_MAJOR_VERSION=$(python -c \"import sys; print(sys.version_info[0])\")",
    "export TEST_PLATFORM=$(python -c \"import sys; print('win' if sys.platform.startswith('win') else 'unix')\")",
    "export PYTHONHASHSEED=$(python -c \"import random as r; print(r.randint(0,4294967296))\") && echo \"PYTHONHASHSEED=$PYTHONHASHSEED\"",
    "env | sort",
    "conda info",
    "conda create -y -p ./built-conda-test-env",
    "conda activate ./built-conda-test-env",
    "echo $CONDA_PREFIX",
    "[ \"$CONDA_PREFIX\" = \"$PWD/built-conda-test-env\" ] || exit 1",
    "conda deactivate"
   ],
   "downstreams": null,
   "files": [
    "test_conda.bat",
    "test_conda.bat",
    "test_conda.bat",
    "test_conda.bat"
   ],
   "imports": [
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env",
    "conda",
    "conda_env"
   ],
   "requires": [
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base",
    "mock",
    "pytest",
    "pexpect",
    "responses",
    "m2-filesystem",
    "m2-bash",
    "m2-base"
   ],
   "source_files": [
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg",
    "conftest.py",
    "tests",
    "setup.cfg"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cross-python_win-64",
    "m2-base",
    "m2-bash",
    "m2-filesystem",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "menuinst",
    "pip",
    "python",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-package-handling",
    "menuinst",
    "pycosat",
    "pyopenssl",
    "python",
    "requests",
    "ruamel_yaml",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "m2-base",
    "m2-bash",
    "m2-filesystem",
    "mock",
    "pexpect",
    "pytest",
    "responses"
   ]
  }
 }
}