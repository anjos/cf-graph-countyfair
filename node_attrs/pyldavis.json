{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196746295.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/568825221.json"
   },
   "data": {
    "bot_rerun": 1616403346.2594926,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/569105504.json"
   },
   "data": {
    "bot_rerun": 1616403346.2597616,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/571549254.json"
   },
   "data": {
    "bot_rerun": 1616403346.2598784,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/576179882.json"
   },
   "data": {
    "bot_rerun": 1616403346.2599905,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/597816207.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/598212704.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/599767678.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pyldavis",
 "hash_type": "sha256",
 "name": "pyldavis",
 "new_version": "3.3.1",
 "new_version_attempts": {
  "3.0.0": 1,
  "3.1.0": 1,
  "3.2.0": 1,
  "3.2.1": 1,
  "3.2.2": 1,
  "3.3.0": 1,
  "3.3.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyldavis"
  ]
 },
 "pinning_version": "2021.03.23.17.55.38",
 "raw_meta_yaml": "{% set name = \"pyLDAvis\" %}\n{% set version = \"3.3.1\" %}\n{% set sha256 = \"f181b88401f6f8f17d5a99ab69ef99b2c496faa276919262f8ec246307b7050c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.7.0\n    - pip\n  run:\n    - python >=3.7.0\n    - numpy >=1.14.0\n    - scipy >=0.18.0\n    - pandas >=0.22.0\n    - joblib >=0.8.4\n    - jinja2 >=2.7.2\n    - numexpr\n    - future\n    - funcy\n\ntest:\n  imports:\n    - pyLDAvis\n\nabout:\n  home: https://github.com/bmabey/pyLDAvis\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python library for interactive topic model visualization\n\n  description: |\n    pyLDAvis is designed to help users interpret the topics in a topic \n    model that has been fit to a corpus of text data. The package extracts\n    information from a fitted LDA topic model to inform an interactive \n    web-based visualization.\n\n    The visualization is intended to be used within an IPython notebook\n    but can also be saved to a stand-alone HTML file for easy sharing.\n  doc_url: http://pyldavis.readthedocs.io/\n  dev_url: https://github.com/bmabey/pyLDAvis\n\nextra:\n  recipe-maintainers:\n    - sodre\n    - CurtLH\n    - thewchan\n",
 "smithy_version": "3.9.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pyLDAvis/pyLDAvis-3.3.1.tar.gz",
 "version": "3.3.1"
}