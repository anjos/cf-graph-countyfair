{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/320641781.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.18.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/370209602.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.19.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/461190846.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.20.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/506304498.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.21.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/546711611.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.22.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554818958.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.22.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/663054393.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.23.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/836118349.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/990558826.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/990757500.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mongomock",
 "hash_type": "sha256",
 "name": "mongomock",
 "new_version": "4.1.2",
 "new_version_attempts": {
  "3.20.0": 1,
  "3.21.0": 1,
  "3.22.0": 1,
  "3.22.1": 1,
  "3.23.0": 1,
  "4.0.0": 1,
  "4.1.1": 1,
  "4.1.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mongomock"
  ]
 },
 "pinning_version": "2022.07.06.01.52.02",
 "raw_meta_yaml": "{% set name = \"mongomock\" %}\n{% set version = \"4.0.0\" %}\n{% set sha256 = \"b1832c3748d47444c18867373e5cea754c2e6f644a0cfbfd667f178f68bdecfc\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - setuptools\n    - pbr\n  run:\n    - python >=3.6\n    - setuptools\n    - packaging\n    - six\n    - sentinels\n\ntest:\n  imports:\n    - mongomock\n\nabout:\n  home: https://github.com/mongomock/mongomock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Small library for mocking pymongo collection objects for testing purposes\n  description: |\n    Mongomock is a small library to help testing Python code that interacts with\n    MongoDB via Pymongo.\n\n    MongoDB is complex. This library aims at a reasonably complete mock of\n    MongoDB for testing purposes, not a perfect replica. This means some\n    features are not likely to make it in any time soon.\n\n    Also, since many corner cases are encountered along the way, our goal is to\n    try and TDD our way into completeness. This means that every time we\n    encounter a missing or broken (incompatible) feature, we write a test for\n    it and fix it. There are probably lots of such issues hiding around\n    lurking, so feel free to open issues and/or pull requests and help the\n    project out!\n\n    NOTE: We don't include pymongo functionality as \"stubs\" or \"placeholders\".\n    Since this library is used to validate production code, it is unacceptable\n    to behave differently than the real pymongo implementation. In such cases\n    it is better to throw NotImplementedError than implement a modified version\n    of the original behavior.\n  doc_url: https://github.com/mongomock/mongomock\n  dev_url: https://github.com/mongomock/mongomock\n\nextra:\n  recipe-maintainers:\n    - hajapy\n    - birnbaum\n    - mathiaseitz\n    - trendelkampschroer\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/m/mongomock/mongomock-4.0.0.tar.gz",
 "version": "4.0.0"
}