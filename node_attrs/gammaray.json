{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/759924252.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.11.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/958297593.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "qt515"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gammaray",
 "hash_type": "sha256",
 "name": "gammaray",
 "new_version": "2.11.3",
 "new_version_attempts": {
  "2.11.3": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gammaray"
  ]
 },
 "pinning_version": "2022.06.04.16.44.48",
 "raw_meta_yaml": "\n{% set name = \"gammaray\" %}\n{% set version = \"2.11.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/KDAB/GammaRay/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz\n    sha256: bba4f21a2bc81ec8ab50dce5218c7a375b92d64253c690490a6fcb384c2ff9f3\n\nbuild:\n  skip: True  # [win]\n  number: 0\n  rpaths:\n    - lib  # [osx]\n    - GammaRay.app/Contents/Frameworks  # [osx]\n  missing_dso_whitelist:  # [osx]\n    - /usr/lib/libbsm.0.dylib  # [osx]\n    - /usr/lib/libcups.2.dylib  # [osx]\n    - /usr/lib/libresolv.9.dylib  # [osx]\n    - /usr/lib/libsandbox.1.dylib  # [osx]\n    - '/System/Library/Frameworks/CoreLocation.framework/**'  # [osx]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('mesa-libegl-devel') }}     # [linux]\n    - {{ cdt('mesa-dri-drivers') }}      # [linux]\n    - {{ cdt('libselinux-devel') }}      # [linux]\n    - {{ cdt('libxext-devel') }}         # [linux]\n    - {{ cdt('libxdamage') }}            # [linux]\n    - {{ cdt('libxdamage-devel') }}      # [linux]\n    - {{ cdt('libxfixes') }}             # [linux]\n    - {{ cdt('libxfixes-devel') }}       # [linux]\n    - {{ cdt('libxxf86vm') }}            # [linux]\n    - {{ cdt('libxxf86vm-devel') }}      # [linux]\n  host:\n    - cmake\n    - qt\n  run:\n    - qt\n  run_constrained:                                            # [osx]\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.12\") }}  # [osx]\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libgammaray_client.so  # [linux]\n\nabout:\n  home: https://github.com/KDAB/GammaRay\n  license: GPL-3.0-or-later AND MIT\n  license_family: GPL\n  license_file: LICENSE.GPL.txt\n  summary: 'GammaRay is a tool to poke around in a Qt-application and also to manipulate the application to some extent.'\n  description: |\n    GammaRay is a software introspection tool for Qt applications developed by KDAB.\n    Leveraging the QObject introspection mechanism it allows you to observe and\n    manipulate your application at runtime. This works both locally on your\n    workstation and remotely on an embedded target.\n  dev_url: https://github.com/KDAB/GammaRay\n\nextra:\n  recipe-maintainers:\n    - andfoy\n    - ccordoba12\n    - steff456\n",
 "smithy_version": "3.20.0",
 "strong_exports": false,
 "url": "https://github.com/KDAB/GammaRay/releases/download/v2.11.2/gammaray-2.11.2.tar.gz",
 "version": "2.11.2"
}