{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/985442957.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "pytmd",
 "hash_type": "sha256",
 "name": "pytmd",
 "new_version": "1.0.7",
 "new_version_attempts": {
  "1.0.7": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytmd"
  ]
 },
 "pinning_version": "2022.07.01.13.48.55",
 "raw_meta_yaml": "{% set name = \"pyTMD\" %}\n{% set version = \"1.0.6\" %}\n{% set sha256 = \"146d38cdba4a0def9dff32d590f92f57912cc259a42d0b222d9bcd6669250b24\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script_env:\n    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools-scm\n    - setuptools\n  run:\n    - cartopy\n    - gdal\n    - h5py\n    - lxml\n    - matplotlib-base\n    - netcdf4\n    - numpy\n    - pyproj\n    - python >=3.6\n    - python-dateutil\n    - pyyaml\n    - scipy\n    - setuptools-scm\n    - setuptools\n\ntest:\n  imports:\n    - pyTMD\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/tsutterley/pyTMD\n  summary: Tide Model Driver to read OTIS, GOT and FES formatted tidal solutions and make tidal predictions\n  license: MIT\n  license_file: LICENSE\n  description: |\n    Python-based tidal prediction software that reads OTIS, GOT and FES formatted\n    tidal solutions for predicting ocean and load tides and can use IERS conventions\n    for calculating radial pole tide displacements\n  doc_url: https://pytmd.readthedocs.io/\n  dev_url: https://github.com/tsutterley/pyTMD\n\nextra:\n  recipe-maintainers:\n    - tsutterley\n    - mrsiegfried\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/pyTMD/pyTMD-1.0.6.tar.gz",
 "version": "1.0.6"
}