{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/198232267.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "6.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/216616991.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222630213.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/238896134.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "7.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/263060454.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "8.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/270242114.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335476497.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375719183.json"
   },
   "data": {
    "bot_rerun": 1581793713.1915872,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11-init"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/49de0114-8566-4f72-946f-907a1cf71a4d.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "head": {
     "ref": "<this_is_not_a_branch>"
    },
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/454859719.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "10.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/499580374.json"
   },
   "data": {
    "bot_rerun": 1602122433.1793563,
    "migrator_name": "MigrationYaml",
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501448616.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/503441299.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/549908203.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/574666109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "11.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/615642416.json"
   },
   "data": {
    "bot_rerun": 1620645502.3192935,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/644047895.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/686513889.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "12.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "clangdev",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\"",
      "test -f \"$PREFIX/lib/libclang.so.12\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "gcc_impl_linux-64",
      "clang-12"
     ],
     "run": [
      "gcc_impl_linux-64",
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make"
   ],
   "host": [
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-64",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "llvm",
    "llvmdev",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-64",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\"",
      "test -f \"$PREFIX/lib/libclang.so.12\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "gcc_impl_linux-aarch64",
      "clang-12"
     ],
     "run": [
      "gcc_impl_linux-aarch64",
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make"
   ],
   "host": [
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-aarch64",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "llvm",
    "llvmdev",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-aarch64",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\"",
      "test -f \"$PREFIX/lib/libclang.so.12\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "gcc_impl_linux-ppc64le",
      "clang-12"
     ],
     "run": [
      "gcc_impl_linux-ppc64le",
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make"
   ],
   "host": [
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-ppc64le",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "llvm",
    "llvmdev",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-ppc64le",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\"",
      "test -f \"$PREFIX/lib/libclang.so.12\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "gcc_impl_linux-64",
      "clang-12"
     ],
     "run": [
      "gcc_impl_linux-64",
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\"",
      "test -f \"$PREFIX/lib/libclang.so.12\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "gcc_impl_linux-aarch64",
      "clang-12"
     ],
     "run": [
      "gcc_impl_linux-aarch64",
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\"",
      "test -f \"$PREFIX/lib/libclang.so.12\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.12\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "gcc_impl_linux-ppc64le",
      "clang-12"
     ],
     "run": [
      "gcc_impl_linux-ppc64le",
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\"",
      "test -f \"$PREFIX/lib/libclang.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libcxx",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "clang-12"
     ],
     "run": [
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\"",
      "test -f \"$PREFIX/lib/libclang.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libcxx",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "clang-12"
     ],
     "run": [
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\clang/Config/config.h exit 1",
      "if not exist %LIBRARY_LIB%\\\\clangAST.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "run_exports": null,
     "skip": true,
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "test": {
     "commands": [
      "if exist %LIBRARY_BIN%\\\\libclang-cpp.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "zlib",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\libclang.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "zlib"
     ],
     "run": [],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.bat",
    "test": {
     "commands": [
      "clang-12 --version",
      "if exist %LIBRARY_BIN%\\\\clang.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cl.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cpp.exe exit 1",
      "if not exist %LIBRARY_LIB%\\\\clang\\\\12.0.1\\\\include\\\\stdatomic.h exit 1"
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "zlib",
      "clang-12"
     ],
     "run": [
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.bat",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "zlib",
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.bat",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "zlib"
     ],
     "run": [],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.bat",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "m2w64-xz",
    "python >3",
    "ninja"
   ],
   "host": [
    "llvmdev ==12.0.1",
    "llvmdev ==12.0.1",
    "llvmdev ==12.0.1",
    "libcxx *",
    "llvmdev ==12.0.1",
    "libcxx *",
    "llvmdev ==12.0.1",
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   },
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   },
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   },
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-Only-error-on-undefined-TARGET_OS_OSX.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   },
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   },
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "%LIBRARY_BIN%/clang -v -c mytest.c",
    "if not exist %LIBRARY_INC%\\\\clang\\\\Lex\\\\Lexer.h exit 1"
   ],
   "files": [
    "mytest.c",
    "mytest.c",
    "mytest.c",
    "mytest.c",
    "mytest.c",
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "name": "clang_packages",
 "new_version": "12.0.1",
 "new_version_attempts": {
  "10.0.1": 1,
  "11.0.0": 1,
  "11.0.1": 1,
  "11.1.0": 1,
  "12.0.0": 5,
  "12.0.1": 1
 },
 "new_version_errors": {
  "12.0.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '12.0.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/clang-tools-extra-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz'\n - could not hash URL template 'https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/clang-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\"",
      "test -f \"$PREFIX/lib/libclang.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libcxx",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "clang-12"
     ],
     "run": [
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make"
   ],
   "host": [
    "libcxx *",
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-Only-error-on-undefined-TARGET_OS_OSX.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvm",
    "llvmdev",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang-cpp12"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "clang"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\"",
      "test -f \"$PREFIX/lib/libclang.12.dylib\""
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "libcxx",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "libclang-cpp12"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12"
     ],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-12 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.12.dylib\"",
      "test -f \"$PREFIX/lib/clang/12.0.1/include/stdatomic.h\""
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "clang-12"
     ],
     "run": [
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "libcxx *",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": [
      "libcxx",
      "libclang-cpp12",
      "libclang 12.*"
     ],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "python >3",
    "make"
   ],
   "host": [
    "libcxx *",
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvm",
    "llvmdev",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "clang",
   "clang-12",
   "clang-tools",
   "clangdev",
   "clangxx",
   "libclang",
   "libclang-cpp",
   "libclang-cpp12",
   "python-clang"
  ]
 },
 "pinning_version": "2021.07.08.05.56.39",
 "raw_meta_yaml": "{% set version = \"12.0.1\" %}\n{% set major_version = version.split(\".\")[0] %}\n{% set build_number = 2 %}\n\n{% set minor_aware_ext = major_version %}\n{% set minor_int = version.split(\".\")[1] | int %}\n{% if minor_int > 0 %}\n{% set minor_aware_ext = major_version + \".\" + version.split(\".\")[1] %}\n{% endif %}\n\npackage:\n  name: clang_packages\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/clang-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n    sha256: 6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f\n    patches:\n      - patches/0001-Find-conda-gcc-installation.patch\n      - patches/0002-Fix-sysroot-detection-for-linux.patch\n      - patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch\n      - patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch\n      - patches/0005-Set-VERSION-in-osx-as-well.patch\n      - patches/0006-Fix-crosscompiling-LLVM-tools.patch\n      # Disable -Werror,-Wundef-prefix=TARGET_OS as they are not yet defined in the 10.9 SDK used for osx-64\n      # Only enable it for TARGET_OS_OSX.\n      - patches/0007-Only-error-on-undefined-TARGET_OS_OSX.patch  # [osx and x86_64]\n      #- patches/amd-roc-2.7.0.diff   # [variant != \"hcc\"]\n      #- patches/amd-roc-hcc-2.7.0.diff  # [variant == \"hcc\"]\n    folder: .\n  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/clang-tools-extra-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n    sha256: 65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5\n    folder: tools/extra\n\nbuild:\n  number: {{ build_number }}\n  skip: true  # [(win and vc<14) or variant==\"hcc\"]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake >=3.4.3\n    # Needed to unpack the source tarball\n    - m2w64-xz  # [win]\n    # \"compiling .pyc files\" fails without this\n    - python >3\n    # Building with ninja on windows for parallel builds\n    - ninja  # [win]\n    - make   # [unix]\n    - llvmdev =={{ version }}    # [build_platform != target_platform]\n  host:\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    - llvmdev =={{ version }}\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake >=3.4.3\n  files:\n    - mytest.c\n  commands:\n    - $PREFIX/bin/clang --version  # [unix]\n    - $PREFIX/bin/clang++ --version  # [unix]\n    - $PREFIX/bin/clang-check --version  # [unix]\n\n    - $PREFIX/bin/clang -v -c mytest.c      # [unix]\n    - '%LIBRARY_BIN%/clang -v -c mytest.c'  # [win]\n\n    - if not exist %LIBRARY_INC%\\\\clang\\\\Lex\\\\Lexer.h exit 1  # [win]\n    - test -f $PREFIX/include/clang/Lex/Lexer.h      # [unix]\n    - test -f $PREFIX/lib/libclangBasic.a            # [unix]\n\n\noutputs:\n  - name: clangdev\n    script: install_clangdev.sh  # [unix]\n    script: install_clangdev.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake >=3.4.3\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"clang-tools\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n      run:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"clang-tools\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n        - llvmdev =={{ version }}\n    test:\n      commands:\n        - test -f \"$PREFIX/include/clang/Config/config.h\"   # [unix]\n        - test -f \"$PREFIX/lib/libclangAST.a\"               # [unix]\n        - if not exist %LIBRARY_INC%\\\\clang/Config/config.h exit 1   # [win]\n        - if not exist %LIBRARY_LIB%\\\\clangAST.lib exit 1            # [win]\n\n  - name: libclang-cpp{{ minor_aware_ext }}\n    script: install_libclang_cpp.sh  # [unix]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        - {{ pin_subpackage(\"libclang-cpp\" + minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake >=3.4.3\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - llvm =={{ version }}\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n    test:\n      commands:\n        - test ! -f \"$PREFIX/lib/libclang-cpp.so\"                             # [linux]\n        - test -f \"$PREFIX/lib/libclang-cpp.so.{{ minor_aware_ext }}\"         # [linux]\n        - test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"                          # [osx]\n        - test -f \"$PREFIX/lib/libclang-cpp.{{ minor_aware_ext }}.dylib\"      # [osx]\n\n  - name: libclang-cpp\n    script: install_libclang_cpp.sh  # [unix]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      {% if not win %}\n      run_exports:   # [unix]\n        - {{ pin_subpackage(\"libclang-cpp\" + minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n      {% endif %}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake >=3.4.3\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - llvm =={{ version }}\n        - {{ pin_subpackage(\"libclang-cpp\" + minor_aware_ext, exact=True) }}  # [unix]\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n        - {{ pin_subpackage(\"libclang-cpp\" + minor_aware_ext, exact=True) }}  # [unix]\n    test:\n      commands:\n        - test -f \"$PREFIX/lib/libclang-cpp.so\"                     # [linux]\n        - test -f \"$PREFIX/lib/libclang-cpp.dylib\"                  # [osx]\n        - if exist %LIBRARY_BIN%\\\\libclang-cpp.dll exit 1           # [win]\n\n  - name: libclang\n    script: install_libclang.sh  # [unix]\n    script: install_libclang.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        - libclang {{ minor_aware_ext }}.*\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake >=3.4.3\n        - ninja                      # [win]\n        - make                       # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - libcxx {{ cxx_compiler_version }}             # [osx]\n        - llvmdev =={{ version }}\n        - llvm =={{ version }}\n        - zlib                                          # [win]\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n    test:\n      commands:\n        - test -f \"$PREFIX/lib/libclang.so\"                           # [linux]\n        - test -f \"$PREFIX/lib/libclang.so.{{ minor_aware_ext }}\"     # [linux]\n        {% if minor_aware_ext != major_version %}\n        - test ! -f \"$PREFIX/lib/libclang.so.{{ major_version }}\"     # [linux]\n        - test ! -f \"$PREFIX/lib/libclang.{{ major_version }}.dylib\"  # [osx]\n        {% endif %}\n        - test -f \"$PREFIX/lib/libclang.dylib\"                        # [osx]\n        - test -f \"$PREFIX/lib/libclang.{{ minor_aware_ext }}.dylib\"  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\libclang.dll exit 1             # [win]\n\n  - name: clang-{{ major_version }}\n    script: install_clang.sh  # [unix]\n    script: install_clang.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - libcxx                             # [osx]\n        - cmake >=3.4.3\n        - ninja                              # [win]\n        - make                               # [unix]\n        - llvmdev =={{ version }}            # [build_platform != target_platform]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - llvm =={{ version }}\n        - zlib                                                                # [win]\n        - {{ pin_compatible(\"libclang-cpp\" + minor_aware_ext, exact=True) }}  # [unix]\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}                        # [osx]\n        - {{ pin_compatible(\"libclang-cpp\" + minor_aware_ext, exact=True) }}  # [unix]\n      run_constrained:\n        - clangdev {{ version }}\n        - clangxx {{ version }}\n        - clang-tools {{ version }}\n        - llvm-tools {{ version }}\n    test:\n      commands:\n        - clang-{{ major_version }} --version\n        - test ! -f \"$PREFIX/bin/clang\"                                   # [unix]\n        - test ! -f \"$PREFIX/bin/clang-cl\"                                # [unix]\n        - test ! -f \"$PREFIX/bin/clang-cpp\"                               # [unix]\n        - if exist %LIBRARY_BIN%\\\\clang.exe exit 1                        # [win]\n        - if exist %LIBRARY_BIN%\\\\clang-cl.exe exit 1                     # [win]\n        - if exist %LIBRARY_BIN%\\\\clang-cpp.exe exit 1                    # [win]\n        - test ! -f \"$PREFIX/lib/libclang-cpp.so\"                         # [linux]\n        - test -f \"$PREFIX/lib/libclang-cpp.so.{{ minor_aware_ext }}\"     # [linux]\n        - test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"                      # [osx]\n        - test -f \"$PREFIX/lib/libclang-cpp.{{ minor_aware_ext }}.dylib\"  # [osx]\n        - test -f \"$PREFIX/lib/clang/{{ '.'.join(version.split('.')[:3]) }}/include/stdatomic.h\"                    # [unix]\n        - if not exist %LIBRARY_LIB%\\\\clang\\\\{{ '.'.join(version.split('.')[:3]) }}\\\\include\\\\stdatomic.h exit 1    # [win]\n\n  - name: clang\n    script: install_clang_symlinks.sh  # [unix]\n    script: install_clang_symlinks.bat  # [win]\n    requirements:\n      host:\n        - zlib                            # [win]\n        - gcc_impl_{{ target_platform }}  # [linux]\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n      run:\n        - gcc_impl_{{ target_platform }}  # [linux]\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n    test:\n      commands:\n        - clang --version\n        - clang-cl --version\n        - clang-cpp --version\n\n  - name: clangxx\n    script: install_clangxx.sh  # [unix]\n    script: install_clangxx.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    requirements:\n      host:\n        - zlib  # [win]\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n    test:\n      requires:\n        - {{ compiler(\"cxx\") }}\n      files:\n        - mytest.cxx\n      commands:\n        - clang++ --version\n        - clang++ -v -c mytest.cxx\n\n  - name: clang-tools\n    script: install_clang_tools.sh  # [unix]\n    script: install_clang_tools.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ compiler('cxx') }}\n        - cmake >=3.4.3\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - llvm =={{ version }}\n        - zlib                            # [win]\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n        - {{ pin_subpackage(\"libclang-cpp\" + minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n        - libclang {{ minor_aware_ext }}.*   # [unix]\n      run_constrained:\n        - clangdev {{ version }}\n    test:\n      commands:\n        - clang-check --version\n        - clang-tidy --version\n\n  - name: python-clang\n    build:\n      noarch: python\n      # Building this output using this recipe is only supported on unix\n      # It can still be installed on Windows as it is marked as `noarch: python`\n      skip: true  # [win or variant==\"hcc\" or (build_platform != target_platform)]\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    script: build_python_bindings.sh\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - libclang =={{ version }}\n    test:\n      requires:\n        - nose\n      source_files:\n        - bindings/python/tests\n        - bindings/python/examples/cindex\n      imports:\n        - clang\n        - clang.cindex\n      commands:\n        - cd bindings/python\n        - cp tests/cindex/util.py tests\n        - nosetests -v\n\nabout:\n  home: http://llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: LICENSE.TXT\n  license_family: Apache\n  summary: Development headers and libraries for Clang\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - isuruf\n    - jakirkham\n    - SylvainCorlay\n    - timsnyder\n    - chrisburr\n    - xhochy\n",
 "req": {
  "__set__": true,
  "elements": [
   "clang",
   "clang-12",
   "clang-tools",
   "clangxx",
   "cmake",
   "cxx_compiler_stub",
   "gcc_impl_linux-64",
   "gcc_impl_linux-aarch64",
   "gcc_impl_linux-ppc64le",
   "libclang",
   "libclang-cpp",
   "libclang-cpp12",
   "libcxx",
   "llvm",
   "llvmdev",
   "m2w64-xz",
   "make",
   "ninja",
   "python",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "m2w64-xz",
    "make",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "ctng-compilers",
    "cxx_compiler_stub",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvm",
    "llvmdev",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "ctng-compilers",
    "cxx_compiler_stub",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "libcxx",
    "m2w64-xz",
    "make",
    "ninja",
    "python >3"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "libclang",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx *",
    "llvm ==12.0.1",
    "llvmdev ==12.0.1",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "libclang",
    "libclang 12.*",
    "libclang ==12.0.1",
    "libclang-cpp",
    "libclang-cpp12",
    "libcxx",
    "llvmdev ==12.0.1",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 },
 "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz",
 "version": "12.0.1",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1"
     ]
    },
    "script": "install_clangdev.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\clang/Config/config.h exit 1",
      "if not exist %LIBRARY_LIB%\\\\clangAST.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "run_exports": null,
     "skip": true,
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1"
     ],
     "run": []
    },
    "test": {
     "commands": [
      "if exist %LIBRARY_BIN%\\\\libclang-cpp.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libclang 12.*"
     ],
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "zlib",
      "clang"
     ],
     "run": []
    },
    "script": "install_libclang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\libclang.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-12",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "zlib"
     ],
     "run": [],
     "run_constrained": [
      "clangdev 12.0.1",
      "clangxx 12.0.1",
      "clang-tools 12.0.1",
      "llvm-tools 12.0.1"
     ]
    },
    "script": "install_clang.bat",
    "test": {
     "commands": [
      "clang-12 --version",
      "if exist %LIBRARY_BIN%\\\\clang.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cl.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cpp.exe exit 1",
      "if not exist %LIBRARY_LIB%\\\\clang\\\\12.0.1\\\\include\\\\stdatomic.h exit 1"
     ]
    }
   },
   {
    "name": "clang",
    "requirements": {
     "host": [
      "zlib",
      "clang-12"
     ],
     "run": [
      "clang-12"
     ]
    },
    "script": "install_clang_symlinks.bat",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "zlib",
      "clang"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.bat",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake >=3.4.3",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvmdev ==12.0.1",
      "llvm ==12.0.1",
      "zlib"
     ],
     "run": [],
     "run_constrained": [
      "clangdev 12.0.1"
     ]
    },
    "script": "install_clang_tools.bat",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_2",
     "track_features": null
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libclang ==12.0.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd bindings/python",
      "cp tests/cindex/util.py tests",
      "nosetests -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "requires": [
      "nose"
     ],
     "source_files": [
      "bindings/python/tests",
      "bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "12.0.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake >=3.4.3",
    "m2w64-xz",
    "python >3",
    "ninja"
   ],
   "host": [
    "llvmdev ==12.0.1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0005-Set-VERSION-in-osx-as-well.patch",
     "patches/0006-Fix-crosscompiling-LLVM-tools.patch"
    ],
    "sha256": "6e912133bcf56e9cfe6a346fa7e5c52c2cde3e4e48b7a6cc6fcc7c75047da45f",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "65659efdf97dbed70ae0caee989936b731f249dddc46f1cb4225b2f49b232ae5",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-tools-extra-12.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "%LIBRARY_BIN%/clang -v -c mytest.c",
    "if not exist %LIBRARY_INC%\\\\clang\\\\Lex\\\\Lexer.h exit 1"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake >=3.4.3"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "m2w64-xz",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "llvm",
    "llvmdev",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-12",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "nose"
   ]
  }
 }
}