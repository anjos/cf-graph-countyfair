{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/260638565.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/362912597.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "django-mustache",
 "hash_type": "sha256",
 "name": "django-mustache",
 "new_version": "1.1.2",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "django-mustache"
  ]
 },
 "pinning_version": "2020.01.10",
 "raw_meta_yaml": "{% set version = \"1.1.2\" %}\n\n\npackage:\n  name: django-mustache\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/d/django-mustache/django-mustache-{{ version }}.tar.gz\n  sha256: 44d29f56e0cf4a52cb12e2e97d5a45fd6f1242eb5d5ae79af4750ab83083a8b4\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools_scm\n  run:\n    - python\n    - django >=1.8\n    - pystache\n    \ntest:\n  imports:\n    - django_mustache\n    \nabout:\n  home: https://github.com/wq/django-mustache\n  license: MIT\n  license_family: MIT\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'Mustache (Pystache) template engine for Django 1.8 and newer, with support for Django \n            context processors. Designed to support offline-capable web apps via progressive enhancement.'\n  description:  A straightforward Mustache-powered template engine for Django, extracted from wq.db \n                and updated to support the new template backend infrastructure in Django 1.8 and newer. \n                django-mustache facilitates progressive enhancement by allowing you to share the same \n                templates between Django and an offline-capable JavaScript web app. Combined with a shared \n                URL structure, this approach ensures that each page in your site can be selectively \n                rendered on the server or on the client as needed.  \n  doc_url: https://github.com/wq/django-mustache\n  dev_url: https://github.com/wq/django-mustache\n\nextra:\n  recipe-maintainers:\n    - cshaley\n    - sannykr\n",
 "smithy_version": "3.6.5",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/d/django-mustache/django-mustache-1.1.2.tar.gz",
 "version": "1.1.2"
}