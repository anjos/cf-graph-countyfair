{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/678321637.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda111_112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/678321717.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "cuda110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/707155623.json"
   },
   "data": {
    "bot_rerun": 1647232875.337773,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/829873761.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch110"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/878631879.json"
   },
   "data": {
    "bot_rerun": 1651555961.4903429,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/885207825.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch111"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/926259504.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/929217073.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.9.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1007756945.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pytorch112"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "fcos",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Fully convolutional one-stage object detection (FCOS) is a framework for\nper-pixel prediction of objects in images. FCOS doesn't rely on expensive\nanchor box calculations and their hyper-parameters, which is in contrast to\nstate-of-the-art object detectors like RetinaNet, YOLOv3, and Faster R-CNN.\nIt includes a Python API, & scripts for command line usage.\n",
   "dev_url": "https://github.com/best-of-acrv/fcos",
   "doc_url": "https://github.com/best-of-acrv/fcos",
   "home": "https://github.com/best-of-acrv/fcos",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "FCOS is a detector for efficiently predicting objects in images"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "fcos",
   "version": "0.9.8"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja"
   ],
   "host": [
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja"
   ],
   "run": [
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs"
   ],
   "run_constrained": [
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*"
   ]
  },
  "source": {
   "sha256": "1fe061baf2efcd77f78ac7ce8731deace99d6dad5a592387b2b8dab930a95d3a",
   "url": "https://pypi.io/packages/source/f/fcos/fcos-0.9.8.tar.gz"
  },
  "test": {
   "imports": [
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ninja",
    "numpy",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Fully convolutional one-stage object detection (FCOS) is a framework for\nper-pixel prediction of objects in images. FCOS doesn't rely on expensive\nanchor box calculations and their hyper-parameters, which is in contrast to\nstate-of-the-art object detectors like RetinaNet, YOLOv3, and Faster R-CNN.\nIt includes a Python API, & scripts for command line usage.\n",
   "dev_url": "https://github.com/best-of-acrv/fcos",
   "doc_url": "https://github.com/best-of-acrv/fcos",
   "home": "https://github.com/best-of-acrv/fcos",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.txt",
   "summary": "FCOS is a detector for efficiently predicting objects in images"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry",
    "btalb",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "fcos",
   "version": "0.9.8"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17",
    "ninja"
   ],
   "host": [
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*",
    "numpy",
    "ninja"
   ],
   "run": [
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs",
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs"
   ],
   "run_constrained": [
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*",
    "pytorch *=cuda*"
   ]
  },
  "source": {
   "sha256": "1fe061baf2efcd77f78ac7ce8731deace99d6dad5a592387b2b8dab930a95d3a",
   "url": "https://pypi.io/packages/source/f/fcos/fcos-0.9.8.tar.gz"
  },
  "test": {
   "imports": [
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos",
    "fcos"
   ]
  }
 },
 "name": "fcos",
 "new_version": "0.9.8",
 "new_version_attempts": {
  "0.9.7": 2,
  "0.9.8": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fcos"
  ]
 },
 "pinning_version": "2022.07.25.18.25.33",
 "pre_pr_migrator_attempts": {
  "pytorch113": 48
 },
 "pre_pr_migrator_status": {
  "pytorch113": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3858661793\">bot CI job</a>): main: ['linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.20python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.20python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides numpy-base 1.23.3 py310h375b286_0 needed by numpy-1.23.3-py310hac523dd_0\\n', 'linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.20python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.20python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n', 'linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.21python3.10.____cpython: Encountered problems while solving:\\n  - nothing provides cudatoolkit >=8.0,<8.1.0a0 needed by pytorch-1.0.1-cuda80py27ha8650f8_0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"fcos\" %}\n{% set version = \"0.9.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 1fe061baf2efcd77f78ac7ce8731deace99d6dad5a592387b2b8dab930a95d3a\n\nbuild:\n  number: 0\n  skip: true  # [cuda_compiler_version == \"None\" or cuda_compiler_version == \"10.2\" or not linux]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 ==2.17\n    - ninja\n  host:\n    - pip\n    - python\n    - pytorch\n    - pytorch *=cuda*\n    - numpy\n    - ninja\n  run:\n    - acrv_datasets\n    - {{ pin_compatible('numpy') }}\n    - py-opencv\n    - pycocotools\n    - python\n    - torchvision\n    - yacs\n  run_constrained:\n    - pytorch *=cuda*\n\ntest:\n  imports:\n    - fcos\n\nabout:\n  home: https://github.com/best-of-acrv/{{ name }}\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: FCOS is a detector for efficiently predicting objects in images\n  description: |\n    Fully convolutional one-stage object detection (FCOS) is a framework for\n    per-pixel prediction of objects in images. FCOS doesn't rely on expensive\n    anchor box calculations and their hyper-parameters, which is in contrast to\n    state-of-the-art object detectors like RetinaNet, YOLOv3, and Faster R-CNN.\n    It includes a Python API, & scripts for command line usage.\n  doc_url: https://github.com/best-of-acrv/{{ name }}\n  dev_url: https://github.com/best-of-acrv/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - btalb\n    - mikemhenry\n",
 "req": {
  "__set__": true,
  "elements": [
   "acrv_datasets",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "ninja",
   "numpy",
   "pip",
   "py-opencv",
   "pycocotools",
   "python",
   "pytorch",
   "sysroot_linux-64",
   "torchvision",
   "yacs"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "numpy",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "acrv_datasets",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "sysroot_linux-64 ==2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ninja",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "pytorch *=cuda*"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "acrv_datasets",
    "numpy",
    "py-opencv",
    "pycocotools",
    "python",
    "torchvision",
    "yacs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/f/fcos/fcos-0.9.8.tar.gz",
 "version": "0.9.8"
}