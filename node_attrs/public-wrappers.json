{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/220520012.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335850347.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/05426818-8c9a-4674-8b39-6178f917a2fd.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501972308.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/552212441.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682097929.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775047513.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/910631826.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "public-wrappers",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "public-wrappers provides a means to wrap selected public programs from conda\nenvironments, so they may be invoked directly by users without having to\nexplicitly activate the environment.  It makes use of exec-wrappers to do the\nwrapping.\n",
   "dev_url": "https://github.com/tesujimath/public-wrappers",
   "doc_url": "http://public-wrappers.readthedocs.io/",
   "home": "https://github.com/tesujimath/public-wrappers",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Wrap selected public programs from conda/virtualenv environments"
  },
  "build": {
   "entry_points": [
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main"
   ],
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath"
   ]
  },
  "package": {
   "name": "public-wrappers",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ],
   "run": [
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1"
   ]
  },
  "source": {
   "sha256": "19a5313fbfa2739b2b37cbed0b8e91578b866d63c418a83180b3d243b65f869e",
   "url": "https://files.pythonhosted.org/packages/source/p/public-wrappers/public-wrappers-0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help"
   ],
   "imports": [
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "exec-wrappers",
    "future",
    "python",
    "pytoml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "public-wrappers provides a means to wrap selected public programs from conda\nenvironments, so they may be invoked directly by users without having to\nexplicitly activate the environment.  It makes use of exec-wrappers to do the\nwrapping.\n",
   "dev_url": "https://github.com/tesujimath/public-wrappers",
   "doc_url": "http://public-wrappers.readthedocs.io/",
   "home": "https://github.com/tesujimath/public-wrappers",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Wrap selected public programs from conda/virtualenv environments"
  },
  "build": {
   "entry_points": [
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main"
   ],
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath"
   ]
  },
  "package": {
   "name": "public-wrappers",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ],
   "run": [
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1"
   ]
  },
  "source": {
   "sha256": "19a5313fbfa2739b2b37cbed0b8e91578b866d63c418a83180b3d243b65f869e",
   "url": "https://files.pythonhosted.org/packages/source/p/public-wrappers/public-wrappers-0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help"
   ],
   "imports": [
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers"
   ]
  }
 },
 "name": "public-wrappers",
 "new_version": false,
 "osx_64_meta_yaml": {
  "about": {
   "description": "public-wrappers provides a means to wrap selected public programs from conda\nenvironments, so they may be invoked directly by users without having to\nexplicitly activate the environment.  It makes use of exec-wrappers to do the\nwrapping.\n",
   "dev_url": "https://github.com/tesujimath/public-wrappers",
   "doc_url": "http://public-wrappers.readthedocs.io/",
   "home": "https://github.com/tesujimath/public-wrappers",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Wrap selected public programs from conda/virtualenv environments"
  },
  "build": {
   "entry_points": [
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main",
    "configure-public-wrappers = public_wrappers.__main__:main"
   ],
   "number": "1003",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath",
    "tesujimath"
   ]
  },
  "package": {
   "name": "public-wrappers",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ],
   "run": [
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1",
    "python",
    "future",
    "pytoml",
    "exec-wrappers >=1.1.1"
   ]
  },
  "source": {
   "sha256": "19a5313fbfa2739b2b37cbed0b8e91578b866d63c418a83180b3d243b65f869e",
   "url": "https://files.pythonhosted.org/packages/source/p/public-wrappers/public-wrappers-0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help",
    "configure-public-wrappers --help"
   ],
   "imports": [
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers",
    "public_wrappers"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "exec-wrappers",
    "future",
    "python",
    "pytoml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "public-wrappers"
  ]
 },
 "pinning_version": "2022.04.14.17.26.44",
 "raw_meta_yaml": "{% set name = \"public-wrappers\" %}\n{% set version = \"0.4.0\" %}\n{% set sha256 = \"19a5313fbfa2739b2b37cbed0b8e91578b866d63c418a83180b3d243b65f869e\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://files.pythonhosted.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  skip: True  # [win]\n  number: 1003\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - configure-public-wrappers = public_wrappers.__main__:main\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools\n    - setuptools_scm\n    - setuptools_scm_git_archive\n\n  run:\n    - python\n    - future\n    - pytoml\n    - exec-wrappers >=1.1.1\n\ntest:\n  imports:\n    - public_wrappers\n  commands:\n    - configure-public-wrappers --help\n\nabout:\n  home: https://github.com/tesujimath/public-wrappers\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Wrap selected public programs from conda/virtualenv environments'\n  description: |\n    public-wrappers provides a means to wrap selected public programs from conda\n    environments, so they may be invoked directly by users without having to\n    explicitly activate the environment.  It makes use of exec-wrappers to do the\n    wrapping.\n  doc_url: http://public-wrappers.readthedocs.io/\n  dev_url: https://github.com/tesujimath/public-wrappers\n\nextra:\n  recipe-maintainers:\n    - tesujimath\n",
 "req": {
  "__set__": true,
  "elements": [
   "exec-wrappers",
   "future",
   "pip",
   "python",
   "pytoml",
   "setuptools",
   "setuptools_scm",
   "setuptools_scm_git_archive"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "exec-wrappers",
    "future",
    "python",
    "pytoml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "exec-wrappers >=1.1.1",
    "future",
    "python",
    "pytoml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://files.pythonhosted.org/packages/source/p/public-wrappers/public-wrappers-0.4.0.tar.gz",
 "version": "0.4.0"
}