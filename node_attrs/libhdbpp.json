{
 "archived": false,
 "bad": "make_graph: render error cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 246, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 192, in parse_meta_yaml\n    raise RuntimeError(\nRuntimeError: cond build error: NameError(\"name 'fp_w' is not defined\")\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 180, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 233, in _parse_meta_yaml_impl\n    fp_w.write(fp_r.read())\nNameError: name 'fp_w' is not defined\n\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libhdbpp",
 "hash_type": "sha256",
 "name": "libhdbpp",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libhdbpp"
  ]
 },
 "raw_meta_yaml": "{% set name = \"libhdbpp\" %}\n{% set version = \"2.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/tango-controls/hdbpp/libhdbpp/-/archive/{{ version }}/libhdbpp-{{ version }}.tar.gz\n  sha256: 250ac1c03086e1da6e1bd6b6bf4184cba288d99c0ef5bd5ee47b9ca5ceab609f\n\nbuild:\n  number: 0\n  skip: true  # [not linux]\n  # Library doesn't link against cpptango (only headers used)\n  ignore_run_exports:\n    - cpptango\n  run_exports:\n    - {{ pin_subpackage('libhdbpp', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - make\n    - {{ compiler('cxx') }}\n    - libtool\n    - pkg-config\n  host:\n    - cppzmq\n    - cpptango\n    - omniorb\n    - omniorb-libs\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libhdb++${SHLIB_EXT}\n    - test -f ${PREFIX}/lib/libhdb++${SHLIB_EXT}.${PKG_VERSION}\n    - test -f ${PREFIX}/include/hdb++/AbstractDB.h\n    - test -f ${PREFIX}/lib/cmake/libhdbpp/libhdbppConfig.cmake\n\nabout:\n  home: https://www.tango-controls.org\n  license: LGPL-3.0-or-later\n  license_file: LICENSE\n  summary: Interface library for HDB++ archiving system.\n  description: |\n    HDB++ is an archiving system for Tango-Controls.\n    libhdbpp provides an abstract means to archive data events to a Cassandra database,\n    MySQL database, or potentially other database backends.\n  dev_url: https://gitlab.com/tango-controls/hdbpp/libhdbpp\n  doc_url: https://tango-controls.readthedocs.io/en/latest/tools-and-extensions/archiving/HDB++.html\n\nextra:\n  recipe-maintainers:\n    - beenje\n",
 "strong_exports": false,
 "url": "https://gitlab.com/tango-controls/hdbpp/libhdbpp/-/archive/2.1.0/libhdbpp-2.1.0.tar.gz",
 "version": "2.1.0"
}