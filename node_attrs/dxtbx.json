{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/847988456.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/848094758.json"
   },
   "data": {
    "bot_rerun": 1645581986.882702,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/848174548.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/860847946.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.8.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/861758226.json"
   },
   "data": {
    "bot_rerun": 1646589758.6449811,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/872532927.json"
   },
   "data": {
    "bot_rerun": 1647352142.3921933,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/879658609.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/880763150.json"
   },
   "data": {
    "bot_rerun": 1648733455.078773,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/896597154.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/931354223.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.9.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/963289385.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995028629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/995936420.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1015527904.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.10.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1026047831.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1035943757.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1045210026.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.11.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1056566748.json"
   },
   "data": {
    "bot_rerun": 1670426793.0495443,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 3,
    "migrator_version": 0,
    "name": "boost1780"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1068951971.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.11.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1107339141.json"
   },
   "data": {
    "bot_rerun": 1670426793.0497913,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.12.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1150213130.json"
   },
   "data": {
    "bot_rerun": 1670426793.0499015,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1151838690.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.12.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "dxtbx",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
   "dev_url": "https://github.com/cctbx/dxtbx",
   "doc_url": "https://dials.github.io/documentation/index.html",
   "home": "https://github.com/cctbx/dxtbx",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "dxtbx/LICENSE.txt",
   "summary": "Diffraction Experiment Toolbox"
  },
  "build": {
   "entry_points": [
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp"
   ]
  },
  "package": {
   "name": "dxtbx",
   "version": "3.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ],
   "run": [
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm"
   ]
  },
  "source": {
   "folder": "dxtbx",
   "patches": null,
   "sha256": "bd2d68328ba6e3091e037c0785f154b26471cdc195d4df9c0cee2a53b3328140",
   "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check"
   ],
   "imports": [
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext"
   ],
   "requires": [
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip"
   ],
   "source_files": [
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "h5py",
    "hdf5",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil",
    "scipy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dials-data",
    "pip",
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
   "dev_url": "https://github.com/cctbx/dxtbx",
   "doc_url": "https://dials.github.io/documentation/index.html",
   "home": "https://github.com/cctbx/dxtbx",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "dxtbx/LICENSE.txt",
   "summary": "Diffraction Experiment Toolbox"
  },
  "build": {
   "entry_points": [
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp"
   ]
  },
  "package": {
   "name": "dxtbx",
   "version": "3.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ],
   "run": [
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm"
   ]
  },
  "source": {
   "folder": "dxtbx",
   "patches": [
    "patch_windows_entrypoint.diff",
    "patch_nxmx_xfail.diff",
    "patch_nxmx_get_raw_data_single_panel_xfail.diff",
    "patch_windows_entrypoint.diff",
    "patch_nxmx_xfail.diff",
    "patch_nxmx_get_raw_data_single_panel_xfail.diff",
    "patch_windows_entrypoint.diff",
    "patch_nxmx_xfail.diff",
    "patch_nxmx_get_raw_data_single_panel_xfail.diff"
   ],
   "sha256": "bd2d68328ba6e3091e037c0785f154b26471cdc195d4df9c0cee2a53b3328140",
   "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest %SRC_DIR%/dxtbx/tests --regression",
    "pip check",
    "pytest %SRC_DIR%/dxtbx/tests --regression",
    "pip check",
    "pytest %SRC_DIR%/dxtbx/tests --regression",
    "pip check"
   ],
   "imports": [
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext"
   ],
   "requires": [
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip"
   ],
   "source_files": [
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py"
   ]
  }
 },
 "name": "dxtbx",
 "new_version": "3.12.1",
 "new_version_attempts": {
  "3.10.0": 1,
  "3.10.1": 1,
  "3.10.2": 1,
  "3.10.3": 1,
  "3.11.0": 1,
  "3.11.1": 1,
  "3.11.2": 0,
  "3.12.0": 1,
  "3.12.1": 2,
  "3.8.3": 1,
  "3.9.0": 1,
  "3.9.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
   "dev_url": "https://github.com/cctbx/dxtbx",
   "doc_url": "https://dials.github.io/documentation/index.html",
   "home": "https://github.com/cctbx/dxtbx",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "dxtbx/LICENSE.txt",
   "summary": "Diffraction Experiment Toolbox"
  },
  "build": {
   "entry_points": [
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp"
   ]
  },
  "package": {
   "name": "dxtbx",
   "version": "3.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ],
   "run": [
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm"
   ]
  },
  "source": {
   "folder": "dxtbx",
   "patches": null,
   "sha256": "bd2d68328ba6e3091e037c0785f154b26471cdc195d4df9c0cee2a53b3328140",
   "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check"
   ],
   "imports": [
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext"
   ],
   "requires": [
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip"
   ],
   "source_files": [
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "h5py",
    "hdf5",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil",
    "scipy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dials-data",
    "pip",
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
   "dev_url": "https://github.com/cctbx/dxtbx",
   "doc_url": "https://dials.github.io/documentation/index.html",
   "home": "https://github.com/cctbx/dxtbx",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "dxtbx/LICENSE.txt",
   "summary": "Diffraction Experiment Toolbox"
  },
  "build": {
   "entry_points": [
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp"
   ]
  },
  "package": {
   "name": "dxtbx",
   "version": "3.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ],
   "run": [
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm"
   ]
  },
  "source": {
   "folder": "dxtbx",
   "patches": null,
   "sha256": "bd2d68328ba6e3091e037c0785f154b26471cdc195d4df9c0cee2a53b3328140",
   "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check",
    "pytest $SRC_DIR/dxtbx/tests --regression",
    "pip check"
   ],
   "imports": [
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext"
   ],
   "requires": [
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip"
   ],
   "source_files": [
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "h5py",
    "hdf5",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil",
    "scipy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dials-data",
    "pip",
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dxtbx"
  ]
 },
 "pinning_version": "2022.12.07.11.35.54",
 "pre_pr_migrator_attempts": {
  "python311": 18
 },
 "pre_pr_migrator_status": {
  "python311": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3763460351\">bot CI job</a>): main: ['linux_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package pytest-3.2.1-py27h98000ae_1 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'osx_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package pytest-3.2.1-py27h173df03_1 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n', 'osx_arm64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - package pytest-6.2.3-py38hca03da5_2 requires python >=3.8,<3.9.0a0, but none of the providers can be installed\\n', 'win_64_numpy1.23python3.11.____cpython: Encountered problems while solving:\\n  - nothing provides vc 10.* needed by python-3.4.5-0\\n']"
 },
 "raw_meta_yaml": "{% set name = \"dxtbx\" %}\n{% set version = \"3.12.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cctbx/dxtbx/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: bd2d68328ba6e3091e037c0785f154b26471cdc195d4df9c0cee2a53b3328140\n  folder: dxtbx\n  patches:\n    - patch_windows_entrypoint.diff  # [win]\n    - patch_nxmx_xfail.diff  # [win]\n    - patch_nxmx_get_raw_data_single_panel_xfail.diff  # [win]\n\nbuild:\n  skip: true  # [py<38]\n  number: 0\n  entry_points:\n    - cxi.image2pickle = dxtbx.command_line.image2pickle:run\n    - cxi.image_average = dxtbx.command_line.image_average:run\n    - dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run\n    - dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run\n    - dxtbx.depends_on = dxtbx.command_line.depends_on:run\n    - dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run\n    - dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run\n    - dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run\n    - dxtbx.image2pickle = dxtbx.command_line.image2pickle:run\n    - dxtbx.image_average = dxtbx.command_line.image_average:run\n    - dxtbx.install_format = dxtbx.command_line.install_format:run\n    - dxtbx.overload = dxtbx.command_line.overload:run\n    - dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run\n    - dxtbx.print_header = dxtbx.command_line.print_header:run\n    - dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run\n    - dxtbx.radial_average = dxtbx.command_line.radial_average:run\n    - dxtbx.saturation = dxtbx.command_line.saturation:run\n    - dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run\n    - dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run\n    - dxtbx.show_registry = dxtbx.command_line.show_registry:run\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost\n    - cctbx-base >=2022.5\n    - hdf5\n    - numpy\n    - pip\n    - pybind11\n    - python\n  run:\n    - {{ pin_compatible('boost') }}\n    - {{ pin_compatible('cctbx-base') }}\n    - {{ pin_compatible('hdf5') }}\n    - h5py\n    - hdf5plugin\n    - matplotlib-base\n    - {{ pin_compatible('numpy') }}\n    - pint\n    - procrunner\n    - pycbf\n    - python\n    - python-dateutil >=2.7.0\n    - scipy\n    - tqdm\n\ntest:\n  source_files:\n    - dxtbx/tests\n    - dxtbx/conftest.py\n  requires:\n    - dials-data\n    - pytest <7\n    - pytest-mock\n    - pip\n  imports:\n    - dxtbx.ext\n  commands:\n    - pytest $SRC_DIR/dxtbx/tests --regression  # [not win]\n    - pytest %SRC_DIR%/dxtbx/tests --regression  # [win]\n    - pip check\n\nabout:\n  home: https://github.com/cctbx/dxtbx\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: dxtbx/LICENSE.txt\n  summary: Diffraction Experiment Toolbox\n  description: |\n    A cctbx-style toolbox to describe single-crystal diffraction experiments,\n    where a monochromatic beam is used to illuminate a sample which is rotated\n    during the exposure and diffraction recorded on a flat area detector.\n  doc_url: https://dials.github.io/documentation/index.html\n  dev_url: https://github.com/cctbx/dxtbx\n\nextra:\n  recipe-maintainers:\n    - ndevenish\n    - rjgildea\n    - anthchirp\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost",
   "cctbx-base",
   "cmake",
   "cxx_compiler_stub",
   "h5py",
   "hdf5",
   "hdf5plugin",
   "matplotlib-base",
   "ninja",
   "numpy",
   "pint",
   "pip",
   "procrunner",
   "pybind11",
   "pycbf",
   "python",
   "python-dateutil",
   "scipy",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "cxx_compiler_stub",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "cxx_compiler_stub",
    "h5py",
    "hdf5",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil",
    "scipy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dials-data",
    "pip",
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "h5py",
    "hdf5",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dials-data",
    "pip",
    "pytest <7",
    "pytest-mock"
   ]
  }
 },
 "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.12.1.tar.gz",
 "version": "3.12.1",
 "win_64_meta_yaml": {
  "about": {
   "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
   "dev_url": "https://github.com/cctbx/dxtbx",
   "doc_url": "https://dials.github.io/documentation/index.html",
   "home": "https://github.com/cctbx/dxtbx",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "dxtbx/LICENSE.txt",
   "summary": "Diffraction Experiment Toolbox"
  },
  "build": {
   "entry_points": [
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run",
    "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
    "cxi.image_average = dxtbx.command_line.image_average:run",
    "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
    "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
    "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
    "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
    "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
    "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
    "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
    "dxtbx.image_average = dxtbx.command_line.image_average:run",
    "dxtbx.install_format = dxtbx.command_line.install_format:run",
    "dxtbx.overload = dxtbx.command_line.overload:run",
    "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
    "dxtbx.print_header = dxtbx.command_line.print_header:run",
    "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
    "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
    "dxtbx.saturation = dxtbx.command_line.saturation:run",
    "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
    "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
    "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp",
    "ndevenish",
    "rjgildea",
    "anthchirp"
   ]
  },
  "package": {
   "name": "dxtbx",
   "version": "3.12.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "boost",
    "cctbx-base >=2022.5",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ],
   "run": [
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm",
    "boost",
    "cctbx-base",
    "hdf5",
    "h5py",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil >=2.7.0",
    "scipy",
    "tqdm"
   ]
  },
  "source": {
   "folder": "dxtbx",
   "patches": [
    "patch_windows_entrypoint.diff",
    "patch_nxmx_xfail.diff",
    "patch_nxmx_get_raw_data_single_panel_xfail.diff",
    "patch_windows_entrypoint.diff",
    "patch_nxmx_xfail.diff",
    "patch_nxmx_get_raw_data_single_panel_xfail.diff",
    "patch_windows_entrypoint.diff",
    "patch_nxmx_xfail.diff",
    "patch_nxmx_get_raw_data_single_panel_xfail.diff"
   ],
   "sha256": "bd2d68328ba6e3091e037c0785f154b26471cdc195d4df9c0cee2a53b3328140",
   "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest %SRC_DIR%/dxtbx/tests --regression",
    "pip check",
    "pytest %SRC_DIR%/dxtbx/tests --regression",
    "pip check",
    "pytest %SRC_DIR%/dxtbx/tests --regression",
    "pip check"
   ],
   "imports": [
    "dxtbx.ext",
    "dxtbx.ext",
    "dxtbx.ext"
   ],
   "requires": [
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip",
    "dials-data",
    "pytest <7",
    "pytest-mock",
    "pip"
   ],
   "source_files": [
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py",
    "dxtbx/tests",
    "dxtbx/conftest.py"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "hdf5",
    "numpy",
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "boost",
    "cctbx-base",
    "h5py",
    "hdf5",
    "hdf5plugin",
    "matplotlib-base",
    "numpy",
    "pint",
    "procrunner",
    "pycbf",
    "python",
    "python-dateutil",
    "scipy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dials-data",
    "pip",
    "pytest",
    "pytest-mock"
   ]
  }
 }
}