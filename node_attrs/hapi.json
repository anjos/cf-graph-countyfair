{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/613159633.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/859995441.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/888988624.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/924810430.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "hapi",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This module builds Distributed Hydrological model.\n",
   "dev_url": "https://github.com/MAfarrag/HAPI",
   "doc_source_url": "https://github.com/MAfarrag/HAPI/master/README.md",
   "doc_url": "https://hapi-hm.readthedocs.io/",
   "home": "https://github.com/MAfarrag/HAPI",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Distributed Hydrological model"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "MAfarrag"
   ]
  },
  "package": {
   "name": "hapi",
   "version": "1.5.0"
  },
  "requirements": {
   "host": [
    "python >=3.9,<3.11",
    "pip >=22.3.1"
   ],
   "run": [
    "python >=3.9,<3.11",
    "numpy >=1.23.5",
    "pip >=22.3.1",
    "PyYAML >=0.6.0",
    "pathlib >=1.0.1",
    "gdal >=3.5.3",
    "pandas >=1.4.4",
    "geopandas >=0.12.2",
    "matplotlib >=3.5.3",
    "scipy >=1.9.1",
    "statsmodels >=0.13.2",
    "rasterio >=1.3.2",
    "rasterstats >=0.17.0",
    "Fiona >=1.8.21",
    "geostatista >=0.1.5",
    "statista >=0.1.7",
    "pyramids >=0.2.11",
    "earth2observe >=0.1.7",
    "Oasis >=1.0.2",
    "digitalearth >=0.1.10",
    "joblib >=1.2.0",
    "loguru >=0.6.0",
    "requests >=2.28.1",
    "pytest >=7.2.0",
    "pytest-cov ==4.0.0"
   ]
  },
  "source": {
   "sha256": "e6e9c4f25a4754453065e30dee4ba342e5551503b29f09ed265fa35cfd67ce1b",
   "url": "https://github.com/MAfarrag/Hapi/archive/1.5.0.tar.gz"
  },
  "test": {
   "imports": [
    "Hapi"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "digitalearth",
    "earth2observe",
    "fiona",
    "gdal",
    "geopandas",
    "geostatista",
    "joblib",
    "loguru",
    "matplotlib",
    "numpy",
    "oasis",
    "pandas",
    "pathlib",
    "pip",
    "pyramids",
    "pytest",
    "pytest-cov",
    "python",
    "pyyaml",
    "rasterio",
    "rasterstats",
    "requests",
    "scipy",
    "statista",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This module builds Distributed Hydrological model.\n",
   "dev_url": "https://github.com/MAfarrag/HAPI",
   "doc_source_url": "https://github.com/MAfarrag/HAPI/master/README.md",
   "doc_url": "https://hapi-hm.readthedocs.io/",
   "home": "https://github.com/MAfarrag/HAPI",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Distributed Hydrological model"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "MAfarrag"
   ]
  },
  "package": {
   "name": "hapi",
   "version": "1.5.0"
  },
  "requirements": {
   "host": [
    "python >=3.9,<3.11",
    "pip >=22.3.1"
   ],
   "run": [
    "python >=3.9,<3.11",
    "numpy >=1.23.5",
    "pip >=22.3.1",
    "PyYAML >=0.6.0",
    "pathlib >=1.0.1",
    "gdal >=3.5.3",
    "pandas >=1.4.4",
    "geopandas >=0.12.2",
    "matplotlib >=3.5.3",
    "scipy >=1.9.1",
    "statsmodels >=0.13.2",
    "rasterio >=1.3.2",
    "rasterstats >=0.17.0",
    "Fiona >=1.8.21",
    "geostatista >=0.1.5",
    "statista >=0.1.7",
    "pyramids >=0.2.11",
    "earth2observe >=0.1.7",
    "Oasis >=1.0.2",
    "digitalearth >=0.1.10",
    "joblib >=1.2.0",
    "loguru >=0.6.0",
    "requests >=2.28.1",
    "pytest >=7.2.0",
    "pytest-cov ==4.0.0"
   ]
  },
  "source": {
   "sha256": "e6e9c4f25a4754453065e30dee4ba342e5551503b29f09ed265fa35cfd67ce1b",
   "url": "https://github.com/MAfarrag/Hapi/archive/1.5.0.tar.gz"
  },
  "test": {
   "imports": [
    "Hapi"
   ]
  }
 },
 "name": "hapi",
 "new_version": "1.4.0",
 "new_version_attempts": {
  "1.1.0": 1,
  "1.1.1": 1,
  "1.1.2": 1,
  "1.2.0": 3,
  "1.3.0": 67,
  "1.3.1": 25
 },
 "new_version_errors": {
  "1.2.0": "We found a problem parsing the recipe for version '1.2.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 54, column 3:\n      home: https://github.com/MAfarra ... \n      ^ (line: 54), 'found duplicate key \"license_file\" with value \"LICENSE.md\" (original value: \"LICENSE.md\")',   in \"<unicode string>\", line 58, column 3:\n      license_file: LICENSE.md\n      ^ (line: 58), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.3.0": "We found a problem parsing the recipe for version '1.3.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 54, column 3:\n      home: https://github.com/MAfarra ... \n      ^ (line: 54), 'found duplicate key \"license_file\" with value \"LICENSE.md\" (original value: \"LICENSE.md\")',   in \"<unicode string>\", line 58, column 3:\n      license_file: LICENSE.md\n      ^ (line: 58), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "1.3.1": "We found a problem parsing the recipe for version '1.3.1': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 43, column 3:\n      home: https://github.com/MAfarra ... \n      ^ (line: 43), 'found duplicate key \"license_file\" with value \"LICENSE.md\" (original value: \"LICENSE.md\")',   in \"<unicode string>\", line 47, column 3:\n      license_file: LICENSE.md\n      ^ (line: 47), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 513, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "hapi"
  ]
 },
 "pinning_version": "2022.04.29.16.52.03",
 "raw_meta_yaml": "{% set name = \"Hapi\" %}\n{% set version = \"1.5.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MAfarrag/Hapi/archive/{{ version }}.tar.gz\n  sha256: e6e9c4f25a4754453065e30dee4ba342e5551503b29f09ed265fa35cfd67ce1b\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n\n  host:\n    - python >=3.9,<3.11\n    - pip >=22.3.1\n  run:\n    - python >=3.9,<3.11\n    - numpy >=1.23.5\n    - pip >=22.3.1\n    - PyYAML >=0.6.0\n    - pathlib >=1.0.1\n    - gdal >=3.5.3\n    - pandas >=1.4.4\n    - geopandas >=0.12.2\n    - matplotlib >=3.5.3\n    - scipy >=1.9.1\n    - statsmodels >=0.13.2\n    - rasterio >=1.3.2\n    - rasterstats >=0.17.0\n    - Fiona >=1.8.21\n    - geostatista >=0.1.5\n    - statista >=0.1.7\n    - pyramids >=0.2.11\n    - earth2observe >=0.1.7\n    - Oasis >=1.0.2\n    - digitalearth >=0.1.10\n    - joblib >=1.2.0\n    - loguru >=0.6.0\n    - requests >=2.28.1\n    - pytest >=7.2.0\n    - pytest-cov ==4.0.0\n\n    \ntest:\n  imports:\n    - Hapi\n\nabout:\n  home: https://github.com/MAfarrag/HAPI\n  license: BSD-3-Clause\n  license_file: LICENSE.md\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: Distributed Hydrological model\n  description: |\n    This module builds Distributed Hydrological model.\n  dev_url: https://github.com/MAfarrag/HAPI\n  doc_url: https://hapi-hm.readthedocs.io/\n  doc_source_url: https://github.com/MAfarrag/HAPI/master/README.md\n\nextra:\n  recipe-maintainers:\n    - MAfarrag\n",
 "req": {
  "__set__": true,
  "elements": [
   "digitalearth",
   "earth2observe",
   "fiona",
   "gdal",
   "geopandas",
   "geostatista",
   "joblib",
   "loguru",
   "matplotlib",
   "numpy",
   "oasis",
   "pandas",
   "pathlib",
   "pip",
   "pyramids",
   "pytest",
   "pytest-cov",
   "python",
   "pyyaml",
   "rasterio",
   "rasterstats",
   "requests",
   "scipy",
   "statista",
   "statsmodels"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "digitalearth",
    "earth2observe",
    "fiona",
    "gdal",
    "geopandas",
    "geostatista",
    "joblib",
    "loguru",
    "matplotlib",
    "numpy",
    "oasis",
    "pandas",
    "pathlib",
    "pip",
    "pyramids",
    "pytest",
    "pytest-cov",
    "python",
    "pyyaml",
    "rasterio",
    "rasterstats",
    "requests",
    "scipy",
    "statista",
    "statsmodels"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip >=22.3.1",
    "python >=3.9,<3.11"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "Fiona >=1.8.21",
    "Oasis >=1.0.2",
    "PyYAML >=0.6.0",
    "digitalearth >=0.1.10",
    "earth2observe >=0.1.7",
    "gdal >=3.5.3",
    "geopandas >=0.12.2",
    "geostatista >=0.1.5",
    "joblib >=1.2.0",
    "loguru >=0.6.0",
    "matplotlib >=3.5.3",
    "numpy >=1.23.5",
    "pandas >=1.4.4",
    "pathlib >=1.0.1",
    "pip >=22.3.1",
    "pyramids >=0.2.11",
    "pytest >=7.2.0",
    "pytest-cov ==4.0.0",
    "python >=3.9,<3.11",
    "rasterio >=1.3.2",
    "rasterstats >=0.17.0",
    "requests >=2.28.1",
    "scipy >=1.9.1",
    "statista >=0.1.7",
    "statsmodels >=0.13.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/MAfarrag/Hapi/archive/1.5.0.tar.gz",
 "version": "1.5.0"
}