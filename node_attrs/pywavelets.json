{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/203979396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/212457920.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/217867226.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222584744.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/256128153.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268765711.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/329888526.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/330001379.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/335227067.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336076583.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392211822.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501427292.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/533247849.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553815991.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/682810064.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774818212.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/776226117.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/877719507.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905160623.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_ppc64le",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "pywavelets",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name": "pywavelets",
 "new_version": "1.4.1",
 "new_version_attempts": {
  "1.2.0": 1,
  "1.3.0": 1,
  "1.4.0": 4,
  "1.4.1": 6
 },
 "new_version_errors": {
  "1.4.0": "We found a problem parsing the recipe for version '1.4.0': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "1.4.1": "We found a problem parsing the recipe for version '1.4.1': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 476, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 117, in _parse_jinja2_variables\n    assert False, jinja2_data\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pywavelets"
  ]
 },
 "pinning_version": "2022.04.09.19.01.16",
 "pre_pr_migrator_attempts": {
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package numpy-1.19.1-py36h5510c5b_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set label = \"'full'\" %}\n{% set tests = \"['pywt']\" %}\n{% set name = \"PyWavelets\" %}\n{% set version = \"1.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  requires:\n    - pytest\n  imports:\n    - pywt\n  commands:\n    {% set label = \"'full'\" %}\n    {% set tests = \"['pywt']\" %}\n    - python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label={{ label }}, tests={{ tests }}, extra_argv=['--durations=50']))\"\n\nabout:\n  home: https://github.com/PyWavelets/pywt\n  license: MIT\n  license_file: LICENSE\n  summary: Discrete Wavelet Transforms in Python\n\nextra:\n  recipe-maintainers:\n    - grlee77\n    - jakirkham\n    - ocefpaf\n    - rgommers\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz",
 "version": "1.3.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/PyWavelets/pywt",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Discrete Wavelet Transforms in Python"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers",
    "grlee77",
    "jakirkham",
    "ocefpaf",
    "rgommers"
   ]
  },
  "package": {
   "name": "pywavelets",
   "version": "1.3.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "cbaa9d62052d9daf8da765fc8e7c30c38ea2b8e9e1c18841913dfb4aec671ee5",
   "url": "https://pypi.io/packages/source/P/PyWavelets/PyWavelets-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\"",
    "python -c \"import sys; import pywt; sys.exit(not pywt.test(verbose=2, label='full', tests=['pywt'], extra_argv=['--durations=50']))\""
   ],
   "imports": [
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt",
    "pywt"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}