{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/475a8076-5e55-4931-9c55-658f9f27f288.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/392774502.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501895908.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/554228247.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683046150.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/774954029.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/909642806.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "shtns",
 "hash_type": "sha256",
 "name": "shtns",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "shtns"
  ]
 },
 "pinning_version": "2022.04.13.14.53.36",
 "raw_meta_yaml": "{% set name = \"shtns\" %}\n{% set version = \"3.4.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://www.bitbucket.org/nschaeff/{{ name }}/downloads/{{ name }}-{{ version }}.tar.gz\n    sha256: fd856ce6c57d7df4c403c1654b99da9a89ead93276b30dd48ba2c72acf463eaf\n    folder: src\n\nbuild:\n  number: 2\n  skip: true  # [win]\n\nrequirements:\n\n  build:\n    - {{ compiler('c') }}\n    - make\n  host:\n    - fftw\n    - numpy\n    - python\n  run:\n    - fftw\n    - {{ pin_compatible('numpy') }}\n    - python\n\ntest:\n  imports:\n    - shtns\n\nabout:\n  home: https://nschaeff.bitbucket.io/shtns/\n  license: CeCILL2.1\n  license_file: LICENSE.txt\n  summary: 'Fast spherical harmonic transform library aimed at high performance numerical simulations in spherical geometries.'\n\n  description: |\n    SHTns is a high performance library for Spherical\n    Harmonic Transform written in C, aimed at numerical\n    simulation (fluid flows, mhd, ...) in spherical\n    geometries.\n\n  doc_url: https://nschaeff.bitbucket.io/shtns/\n  dev_url: https://nschaeff.bitbucket.io/shtns/\n\nextra:\n  recipe-maintainers:\n    - peterspackman\n",
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "url": "https://www.bitbucket.org/nschaeff/shtns/downloads/shtns-3.4.2.tar.gz",
 "version": "3.4.2"
}