{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1012322986.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1014472093.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.6.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "beaker-py",
 "hash_type": "sha256",
 "name": "beaker-py",
 "new_version": "1.6.9",
 "new_version_attempts": {
  "1.6.8": 1,
  "1.6.9": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "beaker-py"
  ]
 },
 "pinning_version": "2022.08.01.12.11.42",
 "raw_meta_yaml": "{% set version = \"1.6.9\" %}\n\npackage:\n  name: beaker-py\n  version: {{ version }}\n\nsource:\n  url: https://github.com/allenai/beaker-py/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: fe6e6d6a4fe74e1fdcc1955dea1c18cc29ff99653e9d7dcd94f326c2e92bdc51\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - docker-py >=5.0,<6\n    - packaging\n    - pydantic >=1.8.2,<1.10\n    - pyyaml\n    - requests\n    - rich >=12.3,<12.6\n\ntest:\n  requires:\n    - pip\n    # - pytest\n  imports:\n    - beaker\n  # basically all tests require a token we don't have. Perhaps\n  # we'll get a special setup accommodated by upstream, see\n  # https://github.com/conda-forge/staged-recipes/pull/19771#issuecomment-1194356768\n  # source_files:\n  #   - tests/\n  #   - test_fixtures/\n  commands:\n    - pip check\n    # - pytest -v tests/\n\nabout:\n  home: https://github.com/allenai/beaker-py\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: A Beaker client for Python\n  dev_url: https://github.com/allenai/beaker-py\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n",
 "smithy_version": "3.21.1",
 "strong_exports": false,
 "url": "https://github.com/allenai/beaker-py/archive/refs/tags/v1.6.9.tar.gz",
 "version": "1.6.9"
}