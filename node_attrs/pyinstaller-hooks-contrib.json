{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/485711729.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.8"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/496769944.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/512144684.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.10"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543329898.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/678306974.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "pyinstaller-hooks-contrib",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A \"hook\" file extends PyInstaller to adapt it to the special needs and\nmethods used by a Python package. The word \"hook\" is used for two kinds of\nfiles. A runtime hook helps the bootloader to launch an app, setting up the\nenvironment. A package hook (there are several types of those) tells\nPyInstaller what to include in the final app - such as the data files and\n(hidden) imports mentioned above.\n",
   "dev_url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib",
   "doc_url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib/wiki",
   "home": "https://github.com/pyinstaller/pyinstaller-hooks-contrib",
   "license": "Apache-2.0 OR GPL-2.0-or-later",
   "license_file": [
    "LICENSE.GPL.txt",
    "LICENSE.APL.txt"
   ],
   "summary": "Community maintained hooks for PyInstaller"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "pyinstaller-hooks-contrib",
   "version": "2020.11"
  },
  "requirements": {
   "host": [
    "python >=3",
    "pip"
   ],
   "run": [
    "python >=3"
   ]
  },
  "source": {
   "sha256": "10075d6cd33988327a1d1140129ab770f56b550584b4e2c17a27c3525aefb3ee",
   "url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib/archive/v2020.11.tar.gz"
  },
  "test": {
   "imports": [
    "_pyinstaller_hooks_contrib",
    "_pyinstaller_hooks_contrib.hooks"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A \"hook\" file extends PyInstaller to adapt it to the special needs and\nmethods used by a Python package. The word \"hook\" is used for two kinds of\nfiles. A runtime hook helps the bootloader to launch an app, setting up the\nenvironment. A package hook (there are several types of those) tells\nPyInstaller what to include in the final app - such as the data files and\n(hidden) imports mentioned above.\n",
   "dev_url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib",
   "doc_url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib/wiki",
   "home": "https://github.com/pyinstaller/pyinstaller-hooks-contrib",
   "license": "Apache-2.0 OR GPL-2.0-or-later",
   "license_file": [
    "LICENSE.GPL.txt",
    "LICENSE.APL.txt"
   ],
   "summary": "Community maintained hooks for PyInstaller"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "pyinstaller-hooks-contrib",
   "version": "2020.11"
  },
  "requirements": {
   "host": [
    "python >=3",
    "pip"
   ],
   "run": [
    "python >=3"
   ]
  },
  "source": {
   "sha256": "10075d6cd33988327a1d1140129ab770f56b550584b4e2c17a27c3525aefb3ee",
   "url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib/archive/v2020.11.tar.gz"
  },
  "test": {
   "imports": [
    "_pyinstaller_hooks_contrib",
    "_pyinstaller_hooks_contrib.hooks"
   ]
  }
 },
 "name": "pyinstaller-hooks-contrib",
 "new_version": "2021.2",
 "new_version_attempts": {
  "2020.10": 1,
  "2020.11": 1,
  "2020.8": 1,
  "2020.9": 1,
  "2021.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyinstaller-hooks-contrib"
  ]
 },
 "pinning_version": "2021.06.25.19.28.53",
 "raw_meta_yaml": "{% set name = \"pyinstaller-hooks-contrib\" %}\n{% set version = \"2020.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pyinstaller/pyinstaller-hooks-contrib/archive/v{{ version }}.tar.gz\n  sha256: 10075d6cd33988327a1d1140129ab770f56b550584b4e2c17a27c3525aefb3ee\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n  run:\n    - python >=3\n\ntest:\n  imports:\n    - _pyinstaller_hooks_contrib\n    - _pyinstaller_hooks_contrib.hooks\n\nabout:\n  home: https://github.com/pyinstaller/pyinstaller-hooks-contrib\n  summary: Community maintained hooks for PyInstaller\n  license: Apache-2.0 OR GPL-2.0-or-later\n  license_file:\n    - LICENSE.GPL.txt\n    - LICENSE.APL.txt\n  description: |\n    A \"hook\" file extends PyInstaller to adapt it to the special needs and\n    methods used by a Python package. The word \"hook\" is used for two kinds of\n    files. A runtime hook helps the bootloader to launch an app, setting up the\n    environment. A package hook (there are several types of those) tells\n    PyInstaller what to include in the final app - such as the data files and\n    (hidden) imports mentioned above.\n  doc_url: https://github.com/pyinstaller/pyinstaller-hooks-contrib/wiki\n  dev_url: https://github.com/pyinstaller/pyinstaller-hooks-contrib\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.3",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/pyinstaller/pyinstaller-hooks-contrib/archive/v2020.11.tar.gz",
 "version": "2020.11"
}