{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/328997180.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/514304484.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "tapi",
 "hash_type": "sha256",
 "name": "tapi",
 "new_version": false,
 "outputs_names": {
  "__set__": true,
  "elements": [
   "tapi"
  ]
 },
 "pinning_version": "2020.11.02.18.49.03",
 "raw_meta_yaml": "{% set name = \"tapi\" %}\n{% set version = \"1100.0.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/tpoechtrager/apple-libtapi/archive/bce16c61862464b3544b5b1b55103315ca2fa64f.tar.gz\n    sha256: 673ab783a1b14613abc58dca5bf3fcb05f0ddabd35c587c949661f8c499b8523\n\nbuild:\n  number: 0\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - libcxx                  # [osx]\n{% if cxx_compiler_version is defined %}\n  run:\n    - libcxx >={{ cxx_compiler_version }}.0.0.a0  # [osx]\n{% endif %}\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libtapi${SHLIB_EXT}\n    - test -f $PREFIX/include/tapi/tapi.h\n\nabout:\n  home: https://opensource.apple.com/source/tapi\n  license: NCSA\n  license_family: MIT\n  license_file:\n    - LICENSE.APPLE-LIBTAPI.txt\n    - LICENSE.LLVM.txt\n  summary: 'TAPI is a Text-based Application Programming Interface'\n  doc_url: https://opensource.apple.com/source/tapi/tapi-{{ version }}/Readme.md\n  dev_url: https://github.com/ributzka/tapi\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "smithy_version": "3.8.4",
 "strong_exports": false,
 "url": "https://github.com/tpoechtrager/apple-libtapi/archive/bce16c61862464b3544b5b1b55103315ca2fa64f.tar.gz",
 "version": "1100.0.11"
}