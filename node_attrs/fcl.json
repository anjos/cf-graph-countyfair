{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/379332131.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "boost172"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/380434021.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.6.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485596606.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "boost_cpp1740"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495051187.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/614355109.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/731181007.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.7.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "fcl",
 "hash_type": "sha256",
 "name": "fcl",
 "new_version": "0.7.0",
 "new_version_attempts": {
  "0.7.0": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fcl"
  ]
 },
 "pinning_version": "2021.09.09.18.37.58",
 "raw_meta_yaml": "{% set name = \"fcl\" %}\n{% set version = \"0.7.0\" %}\n{% set sha256 = \"90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/flexible-collision-library/fcl/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - win2017_support.patch\n    - 553.patch\n\nbuild:\n  number: 1\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n  host:\n    - boost-cpp\n    - flann\n    - libode\n    - libccd-double\n    - eigen\n    - octomap\n  run:\n    - boost-cpp\n    - flann\n    - octomap\n\ntest:\n  commands:\n    - test -f $PREFIX/include/fcl/geometry/shape/cylinder.h  # [unix]\n    - test -f $PREFIX/lib/pkgconfig/fcl.pc  # [unix]\n    - test -f $PREFIX/lib/libfcl${SHLIB_EXT}  # [unix]\n\nabout:\n  home: https://github.com/flexible-collision-library/fcl\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: The flexible collision library (FCL) is a library for performing proximity queries.\n  description: |\n    FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n    - Collision detection: detecting whether the two models overlap, and\n      optionally, all of the triangles that overlap.\n    - Distance computation: computing the minimum distance between a pair of\n      models, i.e., the distance between the closest pair of points.\n    - Tolerance verification: determining whether two models are closer or\n      farther than a tolerance distance.\n    - Continuous collision detection: detecting whether the two moving\n      models overlap during the movement, and optionally, the time of\n      contact.\n    - Contact information: for collision detection and continuous collision\n      detection, the contact information (including contact normals and\n      contact points) can be returned optionally.\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - traversaro\n",
 "smithy_version": "3.12",
 "strong_exports": false,
 "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz",
 "version": "0.7.0"
}