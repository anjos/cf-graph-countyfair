{
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "nestle",
 "hash_type": "sha256",
 "name": "nestle",
 "new_version": "0.2.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nestle"
  ]
 },
 "raw_meta_yaml": "{% set name = \"nestle\" %}\n{% set version = \"0.2.0\" %}\n{% set sha256 = \"5de798feebbc122b3680e2a1c916ec09934e3afc6171d220de2914ca31c3246d\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n  noarch: python\n  \nrequirements:\n  build:\n    - python\n    - pip\n\n  run:\n    - numpy\n    - python\n\ntest:\n\n  imports:\n    - nestle\n\n\nabout:\n  home: https://github.com/kbarbary/nestle\n\n  license: MIT\n\n  license_family: MIT\n\n  license_file: LICENSE.txt\n  summary: 'Pure Python, MIT-licensed implementation of nested sampling algorithms for evaluating Bayesian evidence.'\n\n\n  description: | \n    Nested Sampling is a computational approach for integrating\n    posterior probability in order to compare models in Bayesian\n    statistics. It is similar to Markov Chain Monte Carlo (MCMC)\n    in that it generates samples that can be used to estimate the\n    posterior probability distribution. Unlike MCMC, the nature\n    of the sampling also allows one to calculate the integral of\n    the distribution. It also happens to be a pretty good method\n    for robustly finding global maxima.\n    \n  doc_url: http://kbarbary.github.io/nestle\n  dev_url: https://github.com/kbarbary/nestle\n\nextra:\n  recipe-maintainers:\n    - grburgess\n",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/n/nestle/nestle-0.2.0.tar.gz",
 "version": "0.2.0"
}