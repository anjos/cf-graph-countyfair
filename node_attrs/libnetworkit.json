{
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {},
 "feedstock_name": "libnetworkit",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "NetworKit is a growing open-source toolkit for large-scale network analysis. Its aim is to provide tools for the analysis of large networks in the size range from thousands to billions of edges. For this purpose, it implements efficient graph algorithms, many of them parallel to utilize multicore architectures. These are meant to compute standard measures of network analysis, such as degree sequences, clustering coefficients, and centrality measures. In this respect, NetworKit is comparable to packages such as NetworkX, albeit with a focus on parallelism and scalability. NetworKit is also a testbed for algorithm engineering and contains novel algorithms from recently published research (see list of Publications).\n",
   "dev_url": "https://github.com/networkit/networkit",
   "doc_url": "https://networkit.github.io/",
   "home": "https://github.com/networkit/networkit",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "License.txt",
   "summary": "NetworKit is a growing open-source toolkit for large-scale network analysis."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libnetworkit",
   "version": "9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake  >=3.6",
    "make",
    "libtlx"
   ],
   "host": [
    "_openmp_mutex"
   ]
  },
  "source": [
   {
    "sha256": "c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c",
    "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/include/networkit/Globals.hpp",
    "test -f $PREFIX/lib/pkgconfig/networkit.pc",
    "test -f $PREFIX/lib/libnetworkit.so",
    "conda inspect linkages -p $PREFIX $PKG_NAME"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libtlx",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "NetworKit is a growing open-source toolkit for large-scale network analysis. Its aim is to provide tools for the analysis of large networks in the size range from thousands to billions of edges. For this purpose, it implements efficient graph algorithms, many of them parallel to utilize multicore architectures. These are meant to compute standard measures of network analysis, such as degree sequences, clustering coefficients, and centrality measures. In this respect, NetworKit is comparable to packages such as NetworkX, albeit with a focus on parallelism and scalability. NetworKit is also a testbed for algorithm engineering and contains novel algorithms from recently published research (see list of Publications).\n",
   "dev_url": "https://github.com/networkit/networkit",
   "doc_url": "https://networkit.github.io/",
   "home": "https://github.com/networkit/networkit",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "License.txt",
   "summary": "NetworKit is a growing open-source toolkit for large-scale network analysis."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu",
    "angriman",
    "avdgrinten",
    "fabratu",
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libnetworkit",
   "version": "9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake  >=3.6",
    "make",
    "libtlx",
    "cxx_compiler_stub",
    "cmake  >=3.6",
    "make",
    "llvm-openmp",
    "libtlx",
    "cxx_compiler_stub",
    "cmake  >=3.6",
    "make",
    "libtlx"
   ],
   "host": [
    "_openmp_mutex"
   ]
  },
  "source": [
   {
    "sha256": "c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c",
    "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz"
   },
   {
    "sha256": "c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c",
    "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz"
   },
   {
    "sha256": "c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c",
    "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/include/networkit/Globals.hpp",
    "test -f $PREFIX/lib/pkgconfig/networkit.pc",
    "test -f $PREFIX/lib/libnetworkit.so",
    "conda inspect linkages -p $PREFIX $PKG_NAME",
    "test -f $PREFIX/include/networkit/Globals.hpp",
    "test -f $PREFIX/lib/pkgconfig/networkit.pc",
    "test -f $PREFIX/lib/libnetworkit.dylib",
    "conda inspect linkages -p $PREFIX $PKG_NAME",
    "conda inspect objects -p $PREFIX $PKG_NAME",
    "test -f %LIBRARY_PREFIX%\\include\\networkit\\Globals.hpp",
    "test -f %LIBRARY_PREFIX%\\lib\\pkgconfig\\networkit.pc",
    "test -f %LIBRARY_PREFIX%\\lib\\networkit.lib",
    "test -f %LIBRARY_PREFIX%\\lib\\networkit\\networkit_state.dll"
   ]
  }
 },
 "name": "libnetworkit",
 "new_version": "9.0",
 "new_version_attempts": {
  "7.0": 40,
  "8.0": 3,
  "8.1": 7,
  "9.0": 6
 },
 "new_version_errors": {
  "7.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 4, column 1:\n    package:\n    ^ (line: 4)\nfound duplicate key \"package\" with value \"ordereddict([('name', '<{ name|lower }}'), ('version', '<{ version }}')])\" (original value: \"ordereddict([('name', '<{ name|lower }}'), ('version', '<{ version }}')])\")\n  in \"<unicode string>\", line 12, column 1:\n    package:\n    ^ (line: 12)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "8.0": "We found a problem parsing the recipe: \n\nwhile constructing a mapping\n  in \"<unicode string>\", line 4, column 1:\n    package:\n    ^ (line: 4)\nfound duplicate key \"package\" with value \"ordereddict([('name', '<{ name|lower }}'), ('version', '<{ version }}')])\" (original value: \"ordereddict([('name', '<{ name|lower }}'), ('version', '<{ version }}')])\")\n  in \"<unicode string>\", line 12, column 1:\n    package:\n    ^ (line: 12)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "8.1": "We found a problem parsing the recipe for version '8.1': \n\nDuplicateKeyError('while constructing a mapping', <ruamel.yaml.error.StringMark object at 0x7fe29ce536d0>, 'found duplicate key \"package\" with value \"ordereddict([(\\'name\\', \\'<{ name|lower }}\\'), (\\'version\\', \\'<{ version }}\\')])\" (original value: \"ordereddict([(\\'name\\', \\'<{ name|lower }}\\'), (\\'version\\', \\'<{ version }}\\')])\")', <ruamel.yaml.error.StringMark object at 0x7fe2adb6a9e0>, '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
  "9.0": "We found a problem parsing the recipe for version '9.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 4, column 1:\n    package:\n    ^ (line: 4), 'found duplicate key \"package\" with value \"ordereddict([(\\'name\\', \\'<{ name|lower }}\\'), (\\'version\\', \\'<{ version }}\\')])\" (original value: \"ordereddict([(\\'name\\', \\'<{ name|lower }}\\'), (\\'version\\', \\'<{ version }}\\')])\")',   in \"<unicode string>\", line 12, column 1:\n    package:\n    ^ (line: 12), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 502, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 122, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 132, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1617, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1501, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "description": "NetworKit is a growing open-source toolkit for large-scale network analysis. Its aim is to provide tools for the analysis of large networks in the size range from thousands to billions of edges. For this purpose, it implements efficient graph algorithms, many of them parallel to utilize multicore architectures. These are meant to compute standard measures of network analysis, such as degree sequences, clustering coefficients, and centrality measures. In this respect, NetworKit is comparable to packages such as NetworkX, albeit with a focus on parallelism and scalability. NetworKit is also a testbed for algorithm engineering and contains novel algorithms from recently published research (see list of Publications).\n",
   "dev_url": "https://github.com/networkit/networkit",
   "doc_url": "https://networkit.github.io/",
   "home": "https://github.com/networkit/networkit",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "License.txt",
   "summary": "NetworKit is a growing open-source toolkit for large-scale network analysis."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libnetworkit",
   "version": "9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake  >=3.6",
    "make",
    "llvm-openmp",
    "libtlx"
   ],
   "host": []
  },
  "source": [
   {
    "sha256": "c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c",
    "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/include/networkit/Globals.hpp",
    "test -f $PREFIX/lib/pkgconfig/networkit.pc",
    "test -f $PREFIX/lib/libnetworkit.dylib",
    "conda inspect linkages -p $PREFIX $PKG_NAME",
    "conda inspect objects -p $PREFIX $PKG_NAME"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libtlx",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libnetworkit"
  ]
 },
 "raw_meta_yaml": "{% set name = \"libnetworkit\" %}\n{% set version = \"9.0\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  - url: 'https://github.com/networkit/networkit/archive/{{ version }}.tar.gz'\n    {{ hash_type }}: {{ hash_value }}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake  >=3.6\n    - make\n    - llvm-openmp  # [osx]\n    - libtlx\n  host:\n    - _openmp_mutex  # [linux]\n\ntest:\n  commands:\n    # Verify headers are present\n    - test -f $PREFIX/include/networkit/Globals.hpp  # [unix]\n    - test -f %LIBRARY_PREFIX%\\include\\networkit\\Globals.hpp  # [win]\n\n    # Verify pkg-config file is present\n    - test -f $PREFIX/lib/pkgconfig/networkit.pc  # [unix]\n    - test -f %LIBRARY_PREFIX%\\lib\\pkgconfig\\networkit.pc  # [win]\n\n    # Verify shared library is present\n    - test -f $PREFIX/lib/libnetworkit.so  # [linux]\n    - test -f $PREFIX/lib/libnetworkit.dylib  # [osx]\n    - test -f %LIBRARY_PREFIX%\\lib\\networkit.lib  # [win]\n    - test -f %LIBRARY_PREFIX%\\lib\\networkit\\networkit_state.dll  # [win]\n\n    # conda tools\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n\nabout:\n  home: https://github.com/networkit/networkit\n  license: MIT\n  license_family: MIT\n  license_file: License.txt\n  summary: 'NetworKit is a growing open-source toolkit for large-scale network analysis.'\n  description: |\n           NetworKit is a growing open-source toolkit for large-scale network analysis. Its aim is to provide tools for the analysis of large networks in the size range from thousands to billions of edges. For this purpose, it implements efficient graph algorithms, many of them parallel to utilize multicore architectures. These are meant to compute standard measures of network analysis, such as degree sequences, clustering coefficients, and centrality measures. In this respect, NetworKit is comparable to packages such as NetworkX, albeit with a focus on parallelism and scalability. NetworKit is also a testbed for algorithm engineering and contains novel algorithms from recently published research (see list of Publications).\n  doc_url: https://networkit.github.io/\n  dev_url: https://github.com/networkit/networkit\n\nextra:\n  recipe-maintainers:\n    - angriman\n    - avdgrinten\n    - fabratu\n",
 "req": {
  "__set__": true,
  "elements": [
   "_openmp_mutex",
   "cmake",
   "cxx_compiler_stub",
   "libtlx",
   "llvm-openmp",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libtlx",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ctng-compilers",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake  >=3.6",
    "cxx_compiler_stub",
    "libtlx",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz",
 "version": "9.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "NetworKit is a growing open-source toolkit for large-scale network analysis. Its aim is to provide tools for the analysis of large networks in the size range from thousands to billions of edges. For this purpose, it implements efficient graph algorithms, many of them parallel to utilize multicore architectures. These are meant to compute standard measures of network analysis, such as degree sequences, clustering coefficients, and centrality measures. In this respect, NetworKit is comparable to packages such as NetworkX, albeit with a focus on parallelism and scalability. NetworKit is also a testbed for algorithm engineering and contains novel algorithms from recently published research (see list of Publications).\n",
   "dev_url": "https://github.com/networkit/networkit",
   "doc_url": "https://networkit.github.io/",
   "home": "https://github.com/networkit/networkit",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "License.txt",
   "summary": "NetworKit is a growing open-source toolkit for large-scale network analysis."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "angriman",
    "avdgrinten",
    "fabratu"
   ]
  },
  "package": {
   "name": "libnetworkit",
   "version": "9.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake  >=3.6",
    "make",
    "libtlx"
   ],
   "host": []
  },
  "source": [
   {
    "sha256": "c574473bc7d86934f0f4b3049c0eeb9c4444cfa873e5fecda194ee5b1930f82c",
    "url": "https://github.com/networkit/networkit/archive/9.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -f %LIBRARY_PREFIX%\\include\\networkit\\Globals.hpp",
    "test -f %LIBRARY_PREFIX%\\lib\\pkgconfig\\networkit.pc",
    "test -f %LIBRARY_PREFIX%\\lib\\networkit.lib",
    "test -f %LIBRARY_PREFIX%\\lib\\networkit\\networkit_state.dll"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libtlx",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}