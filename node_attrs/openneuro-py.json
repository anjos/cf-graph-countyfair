{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/539096858.json"
   },
   "data": {
    "bot_rerun": 1607935739.8575687,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539097875.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/539280333.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/541178503.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/544759400.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545046960.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/545740535.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555118335.json"
   },
   "data": {
    "bot_rerun": 1621251656.7498336,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/558134764.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/558242040.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/558356104.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/645828318.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/646654242.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/647172737.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2021.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "openneuro-py",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/hoechenberger/openneuro-py",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python client for OpenNeuro."
  },
  "build": {
   "entry_points": [
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger"
   ]
  },
  "package": {
   "name": "openneuro-py",
   "version": "2021.4"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click"
   ]
  },
  "source": {
   "sha256": "217e1e703505b8cdcc2a9328f56cbff9fa53cdf36393bc57754abb2d66a984b5",
   "url": "https://pypi.io/packages/source/o/openneuro-py/openneuro-py-2021.4.tar.gz"
  },
  "test": {
   "commands": [
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0"
   ],
   "imports": [
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "click",
    "httpx",
    "python",
    "requests",
    "sgqlc",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/hoechenberger/openneuro-py",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python client for OpenNeuro."
  },
  "build": {
   "entry_points": [
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger"
   ]
  },
  "package": {
   "name": "openneuro-py",
   "version": "2021.4"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click"
   ]
  },
  "source": {
   "sha256": "217e1e703505b8cdcc2a9328f56cbff9fa53cdf36393bc57754abb2d66a984b5",
   "url": "https://pypi.io/packages/source/o/openneuro-py/openneuro-py-2021.4.tar.gz"
  },
  "test": {
   "commands": [
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0"
   ],
   "imports": [
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro"
   ]
  }
 },
 "name": "openneuro-py",
 "new_version": "2021.5",
 "new_version_attempts": {
  "2020.4": 1,
  "2020.5.1": 1,
  "2020.6": 1,
  "2020.7": 1,
  "2021.0": 1,
  "2021.1": 1,
  "2021.2": 1,
  "2021.4": 1,
  "2021.5": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/hoechenberger/openneuro-py",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python client for OpenNeuro."
  },
  "build": {
   "entry_points": [
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger"
   ]
  },
  "package": {
   "name": "openneuro-py",
   "version": "2021.4"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click"
   ]
  },
  "source": {
   "sha256": "217e1e703505b8cdcc2a9328f56cbff9fa53cdf36393bc57754abb2d66a984b5",
   "url": "https://pypi.io/packages/source/o/openneuro-py/openneuro-py-2021.4.tar.gz"
  },
  "test": {
   "commands": [
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0"
   ],
   "imports": [
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "click",
    "httpx",
    "python",
    "requests",
    "sgqlc",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openneuro-py"
  ]
 },
 "pinning_version": "2021.05.18.06.34.34",
 "raw_meta_yaml": "{% set name = \"openneuro-py\" %}\n{% set version = \"2021.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 217e1e703505b8cdcc2a9328f56cbff9fa53cdf36393bc57754abb2d66a984b5\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - openneuro-py = openneuro.openneuro:cli\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - aiofiles\n    - httpx >=0.15\n    - sgqlc\n    - requests\n    - tqdm\n    - click\n    - importlib-metadata  # [py <38]\n    - typing-extensions   # [py <38]\n    - async_generator     # [py ==36]\n\ntest:\n  imports:\n    - openneuro\n  commands:\n     # Test the entry point.\n    - openneuro-py --version\n    - openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0\n\nabout:\n  home: https://github.com/hoechenberger/openneuro-py\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  summary: A Python client for OpenNeuro.\n\nextra:\n  recipe-maintainers:\n    - hoechenberger\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiofiles",
   "click",
   "httpx",
   "pip",
   "python",
   "requests",
   "sgqlc",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "click",
    "httpx",
    "python",
    "requests",
    "sgqlc",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "click",
    "httpx >=0.15",
    "python",
    "requests",
    "sgqlc",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/o/openneuro-py/openneuro-py-2021.4.tar.gz",
 "version": "2021.4",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/hoechenberger/openneuro-py",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python client for OpenNeuro."
  },
  "build": {
   "entry_points": [
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli",
    "openneuro-py = openneuro.openneuro:cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "hoechenberger",
    "hoechenberger",
    "hoechenberger",
    "hoechenberger"
   ]
  },
  "package": {
   "name": "openneuro-py",
   "version": "2021.4"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click",
    "python",
    "aiofiles",
    "httpx >=0.15",
    "sgqlc",
    "requests",
    "tqdm",
    "click"
   ]
  },
  "source": {
   "sha256": "217e1e703505b8cdcc2a9328f56cbff9fa53cdf36393bc57754abb2d66a984b5",
   "url": "https://pypi.io/packages/source/o/openneuro-py/openneuro-py-2021.4.tar.gz"
  },
  "test": {
   "commands": [
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0",
    "openneuro-py --version",
    "openneuro-py download --dataset=ds000248 --include=CHANGES --verify_size=0"
   ],
   "imports": [
    "openneuro",
    "openneuro",
    "openneuro",
    "openneuro"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiofiles",
    "click",
    "httpx",
    "python",
    "requests",
    "sgqlc",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}