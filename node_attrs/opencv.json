{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/196997350.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199653283.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/211748382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231727358.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/239285665.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/240751778.json"
   },
   "data": {
    "bot_rerun": 1579272528.0979571,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/241367422.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262271937.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268233135.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/273673374.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "qt-5.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285620251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "hdf5-1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/301412331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/305698857.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "qt-5.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326705928.json"
   },
   "data": {
    "bot_rerun": 1579272528.0983808,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/327878403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg41"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/328785463.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336076898.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/342799427.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libtiff-4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356493907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400897022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404042561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg42"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404114838.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444465113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg43"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501424092.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/520312225.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543681955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "master",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "opencv",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "number": "4",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py37_4"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.5.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib"
   ],
   "run": [
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python",
    "qt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "qt"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "number": "4",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py39_4"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.5.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "number": "4",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py36_4"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.5.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "number": "4",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py36_4"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.5.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype"
   ],
   "run": [
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "qt 5.12",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "qt 5.12",
    "freetype",
    "qt 5.12",
    "freetype",
    "qt 5.12",
    "freetype",
    "qt 5.12",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "qt 5.12.1",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  }
 },
 "name": "libopencv",
 "new_version": "4.5.1",
 "new_version_attempts": {
  "4.3.0": 796,
  "4.5.0": 16,
  "4.5.0-openvino": 23,
  "4.5.1": 51
 },
 "new_version_errors": {
  "4.3.0": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 101, column 5:\n        requires:\n        ^ (line: 101)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 119, column 20:\n                \"aruco\",\n                       ^ (line: 119)",
  "4.5.0": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 97, column 5:\n        requires:\n        ^ (line: 97)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 115, column 20:\n                \"aruco\",\n                       ^ (line: 115)",
  "4.5.0-openvino": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 93, column 5:\n        requires:\n        ^ (line: 93)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 111, column 20:\n                \"aruco\",\n                       ^ (line: 111)",
  "4.5.1": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 97, column 5:\n        requires:\n        ^ (line: 97)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 115, column 20:\n                \"aruco\",\n                       ^ (line: 115)"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "number": "4",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py38_4"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null,
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.5.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib",
    "python",
    "numpy",
    "hdf5",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg",
    "liblapacke",
    "freetype",
    "glib"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libopencv",
   "opencv",
   "py-opencv"
  ]
 },
 "pinning_version": "2020.12.21.13.42.08",
 "pre_pr_migrator_status": {
  "aarch64andppc64leaddition": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1008, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 187, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/arch.py\", line 123, in migrate\n    y = safe_load(f)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 996, in safe_load\n    return load(stream, SafeLoader, version)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 951, in load\n    return loader._constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 723, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 440, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 257, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"conda-forge.yml\", line 1, column 1\nfound duplicate key \"provider\" with value \"{}\" (original value: \"{}\")\n  in \"conda-forge.yml\", line 4, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n\n",
  "glib2646": "not solvable: master: ['linux_64_numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: cannot install both liblapack-3.9.0-0_h6e990d7_netlib and liblapack-3.8.0-4_mkl\\n', 'linux_64_numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.18python3.6.____73_pypy: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n']",
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package numpy-1.19.1-py36h5510c5b_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "# This recipe creates 3 packages\n# libopencv, py-opencv, opencv\n#\n# libopencv actually contains all the files, including the site-packages\n# file needed to run opencv with python.\n#     opencv-dnn seems to change on every patch version, therefore, we pin\n#     to the patch version x.x.x\n#\n# py-opencv is a meta package that constrains the python dependencies\n#     This one is pinned to the minor version. x.x\n#\n# opencv is a backward compatible package, with no pinnings\n#\n# This approach is different than the one in defaults. Default's package\n# seperates well the files generated with python dependencies, from those\n# generated without. Unfortunately, this isn't entirely supported by\n# upstream. Their hacks are quite elaborate, making it seem difficult to\n# maintain as opencv has been changing their build system recently.\n#\n# By putting all the generated files in 1 package, this makes the build process\n# much easier, at the expense of a few MBs in the 'lib' package.\n{% set version = \"4.5.0\" %}\n{% set PY_VER_MAJOR = PY_VER[0] %}\n{% set PY_VER_MINOR = PY_VER[2] %}\n\npackage:\n  name: libopencv\n  version: {{ version }}\n\nsource:\n  - url: https://codeload.github.com/opencv/opencv/tar.gz/{{ version }}\n    fn: opencv-{{ version }}.tar.gz\n    sha256: dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907\n  - url: https://codeload.github.com/opencv/opencv_contrib/tar.gz/{{ version }}\n    fn: opencv_contrib-{{ version }}.tar.gz\n    sha256: a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda\n    folder: opencv_contrib\n  # FFMPEG builds only supported on unix platforms\n  - fn: test.avi  # [unix]\n    url: https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi  # [unix]\n    sha256: 78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310  # [unix]\n\nbuild:\n  number: 4\n  string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}_{{ PKG_BUILDNUM }}\n  run_exports:\n    # https://abi-laboratory.pro/index.php?view=timeline&l=opencv\n    # Things seem to change every patch versions, mostly the dnn module\n    - {{ pin_subpackage('libopencv', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    # Required to find ffpmeg\n    - pkg-config                     # [not win]\n    - m2-patch                       # [win]\n    - cmake\n    - ninja\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-libegl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}        # [linux]\n    - {{ cdt('libxdamage') }}        # [linux]\n    - {{ cdt('libxfixes') }}         # [linux]\n    - {{ cdt('libxxf86vm') }}        # [linux]\n  host:\n    - python\n    - numpy\n    - hdf5                           # [unix]\n    - eigen 3.3.*\n    - jasper\n    - zlib\n    - jpeg\n    - libtiff\n    - libwebp\n    - harfbuzz                       # [unix]\n    - libpng\n    - ffmpeg                         # [not win]\n    - qt 5.12.1                      # [not osx and not aarch64 and not ppc64le]\n    - liblapacke\n    - freetype\n    - glib                           # [unix]\n  run:\n    # https://github.com/conda-forge/harfbuzz-feedstock/pull/52\n    - harfbuzz                       # [unix]\n    # Don't depend on python in the run section\n    # py-opencv will depend on python\n    - qt 5.12                        # [not osx and not aarch64 and not ppc64le]\n    # https://github.com/conda-forge/opencv-feedstock/issues/174\n    # Seems like the OSX ABI has changed between 2.9 and 2.10???\n    # That or a dependency wasn't merged in\n    # Since we don't know the cause, we are choosing this pinning on all platforms.\n    - {{ pin_compatible('freetype', min_pin='x.x') }}\n\ntest:\n    requires:\n      - {{ compiler('c') }}\n      - {{ compiler('cxx') }}\n      - pkg-config                    # [not win]\n      # Test with the two currently supported lapack implementatons\n      # One test done on different versions of python on each platform\n      - liblapack * *openblas         # [py==36]\n      - liblapack * *mkl              # [py==37 and linux64]\n      - cmake\n      - ninja\n      - qt 5.12.1                     # [linux64]\n    files:\n      - CMakeLists.txt\n      - test.cpp\n    commands:\n        # Verify dynamic libraries on all systems\n        {% set win_ver_lib = version|replace(\".\", \"\") %}\n        {% set opencv_libs = [\n            \"aruco\",\n            \"bgsegm\",\n            \"calib3d\",\n            \"ccalib\",\n            \"core\",\n            \"datasets\",\n            \"dnn\",\n            \"dpm\",\n            \"face\",\n            \"features2d\",\n            \"flann\",\n            \"fuzzy\",\n            \"highgui\",\n            \"imgcodecs\",\n            \"imgproc\",\n            \"line_descriptor\",\n            \"ml\",\n            \"objdetect\",\n            \"optflow\",\n            \"phase_unwrapping\",\n            \"photo\",\n            \"plot\",\n            \"reg\",\n            \"rgbd\",\n            \"saliency\",\n            \"shape\",\n            \"stereo\",\n            \"stitching\",\n            \"structured_light\",\n            \"superres\",\n            \"surface_matching\",\n            \"text\",\n            \"tracking\",\n            \"video\",\n            \"videoio\",\n            \"videostab\",\n            \"xfeatures2d\",\n            \"ximgproc\",\n            \"xobjdetect\",\n            \"xphoto\"\n        ] %}\n        - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}       # [osx]\n        - export CONDA_BUILD_SYSROOT={{ CONDA_BUILD_SYSROOT }}                 # [osx]\n        - OPENCV_FLAGS=`pkg-config --cflags opencv4`  # [unix]\n        - $CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test   # [unix]\n        - if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi                # [unix]\n        {% for each_opencv_lib in opencv_libs %}\n        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}${SHLIB_EXT}                  # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_{{ each_opencv_lib }}{{ win_ver_lib }}.dll exit 1  # [win]\n        {% endfor %}\n        - test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}          # [unix]\n        - test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}     # [unix]\n        - mkdir -p cmake_build_test && pushd cmake_build_test\n        - cmake -G \"Ninja\" ..\n        - cmake --build . --config Release\n        - popd\n\noutputs:\n  - name: libopencv\n  - name: opencv\n    requirements:\n      run:\n        - {{ pin_subpackage('libopencv', exact=True) }}\n        - {{ pin_subpackage('py-opencv', exact=True) }}\n\n  - name: py-opencv\n    build:\n      run_exports:\n        # Should we even have this???\n        # don't pin the python version so hard.\n        # Actually, I have found pretty good compatibility in the python\n        # package\n        - {{ pin_subpackage('py-opencv') }}\n    requirements:\n      # There is no build script, but I just want it to think\n      # that it needs python and numpy at build time\n      host:\n        - python\n        - numpy\n      run:\n        - python\n        - {{ pin_compatible('numpy') }}\n        - {{ pin_subpackage('libopencv', exact=True) }}\n    test:\n      requires:\n        # Test with the two currently supported lapack implementatons\n        # One test done on different versions of python on each platform\n        - liblapack * *openblas         # [py==36]\n        - liblapack * *mkl              # [py==37 and linux64]\n      imports:\n        - cv2\n        - cv2.xfeatures2d\n      files:\n        - run_py_test.py\n        - color_palette_alpha.png\n        - test_1_c1.jpg\n      source_files:  # [unix]\n        - test.avi   # [unix]\n      commands:\n        - python run_py_test.py\n        - if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi  # [unix]\n        - python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"  # [linux]\n        - python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"\n\n\nabout:\n  home: http://opencv.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Computer vision and machine learning software library.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - msarahan\n    - patricksnape\n    - zym1010\n    - hajapy\n    - ocefpaf\n    - hmaarrfk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "ffmpeg",
   "freetype",
   "glib",
   "harfbuzz",
   "hdf5",
   "jasper",
   "jpeg",
   "liblapacke",
   "libopencv",
   "libpng",
   "libtiff",
   "libwebp",
   "m2-patch",
   "ninja",
   "numpy",
   "pkg-config",
   "py-opencv",
   "python",
   "qt",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "m2-patch",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python",
    "qt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "qt"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "m2-patch",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen 3.3.*",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt 5.12.1",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python",
    "qt 5.12"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "qt 5.12.1"
   ]
  }
 },
 "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0",
 "version": "4.5.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "number": "4",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py36_4"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   },
   {
    "name": "libopencv"
   },
   {
    "name": "opencv",
    "requirements": {
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ]
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\""
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d"
     ],
     "requires": null
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.5.0"
  },
  "requirements": {
   "build": [
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype",
    "python",
    "numpy",
    "eigen 3.3.*",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "libpng",
    "qt 5.12.1",
    "liblapacke",
    "freetype"
   ],
   "run": [
    "qt 5.12",
    "freetype",
    "qt 5.12",
    "freetype",
    "qt 5.12",
    "freetype",
    "qt 5.12",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   },
   {
    "fn": "opencv-4.5.0.tar.gz",
    "sha256": "dde4bf8d6639a5d3fe34d5515eab4a15669ded609a1d622350c7ff20dace1907",
    "url": "https://codeload.github.com/opencv/opencv/tar.gz/4.5.0"
   },
   {
    "fn": "opencv_contrib-4.5.0.tar.gz",
    "folder": "opencv_contrib",
    "sha256": "a65f1f0b98b2c720abbf122c502044d11f427a43212d85d8d2402d7a6339edda",
    "url": "https://codeload.github.com/opencv/opencv_contrib/tar.gz/4.5.0"
   }
  ],
  "test": {
   "commands": [
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect450.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto450.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "m2-patch",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "freetype",
    "jasper",
    "jpeg",
    "liblapacke",
    "libpng",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "libopencv",
    "numpy",
    "py-opencv",
    "python",
    "qt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  }
 }
}